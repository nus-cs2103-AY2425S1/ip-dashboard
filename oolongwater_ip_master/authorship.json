[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"oolongwater"},"content":"# Giorgo project template","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oolongwater"},"content":"3. After that, locate the `src/main/java/Giorgo.java` file, right-click it, and choose `Run Giorgo.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"oolongwater":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oolongwater"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter-api:5.5.1\u0027","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oolongwater"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter-engine:5.5.1\u0027","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oolongwater"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter-params:5.5.1\u0027","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oolongwater"},"content":"    implementation \u0027org.junit.platform:junit-platform-launcher:1.5.1\u0027","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oolongwater"},"content":"    implementation \u0027org.junit.platform:junit-platform-runner:1.5.1\u0027","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oolongwater"},"content":"    implementation \u0027org.junit.platform:junit-platform-suite-api:1.5.1\u0027","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oolongwater"},"content":"sourceSets.main.java.srcDirs \u003d [\u0027src\u0027]","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"oolongwater"},"content":"    mainClass.set(\u0027giorgo.giorgo\u0027)","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"oolongwater"},"content":"    archiveBaseName \u003d \"giorgo\"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"oolongwater":10,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"oolongwater"},"content":"# Giorgo User Guide","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"oolongwater":1,"-":29}},{"path":"src/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oolongwater"},"content":"package command;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oolongwater"},"content":"/**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oolongwater"},"content":" * Enum representing the various commands that can be issued in the Giorgo application.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oolongwater"},"content":" */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oolongwater"},"content":"public enum Command {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oolongwater"},"content":"    LIST,","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oolongwater"},"content":"    MARK,","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oolongwater"},"content":"    UNMARK,","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oolongwater"},"content":"    TODO,","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oolongwater"},"content":"    DEADLINE,","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oolongwater"},"content":"    EVENT,","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oolongwater"},"content":"    DELETE,","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oolongwater"},"content":"    BYE,","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oolongwater"},"content":"    UNKNOWN,","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oolongwater"},"content":"    DATE,","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oolongwater"},"content":"    FIND;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oolongwater"},"content":"     * Converts a string to a corresponding Command enum value.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oolongwater"},"content":"     * If the string does not match any command, returns UNKNOWN.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oolongwater"},"content":"     * @param commandString the string representation of the command","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"oolongwater"},"content":"     * @return the corresponding Command enum value, or UNKNOWN if no match is found","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"oolongwater"},"content":"    public static Command fromString(String commandString) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"oolongwater"},"content":"        for (Command command : Command.values()) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"oolongwater"},"content":"            if (command.name().equalsIgnoreCase(commandString)) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"oolongwater"},"content":"                return command;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"oolongwater"},"content":"            }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"oolongwater"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"oolongwater"},"content":"        return UNKNOWN;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"oolongwater"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"oolongwater":34}},{"path":"src/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oolongwater"},"content":"package command;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oolongwater"},"content":"import exception.InvalidInputException;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oolongwater"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oolongwater"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oolongwater"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oolongwater"},"content":"/**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oolongwater"},"content":" * Parses user input into commands and arguments for the Giorgo application.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oolongwater"},"content":" */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oolongwater"},"content":"public class Parser {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oolongwater"},"content":"     * Parses the command from the user input.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oolongwater"},"content":"     * @param userInput the input string from the user","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oolongwater"},"content":"     * @return the corresponding Command enum value","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oolongwater"},"content":"    public Command parseCommand(String userInput) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oolongwater"},"content":"        String[] parts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oolongwater"},"content":"        return Command.fromString(parts[0]);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"oolongwater"},"content":"     * Parses the argument from the user input.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"oolongwater"},"content":"     * @param userInput the input string from the user","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"oolongwater"},"content":"     * @return the argument part of the input string","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"oolongwater"},"content":"    public String parseArgument(String userInput) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"oolongwater"},"content":"        String[] parts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"oolongwater"},"content":"        return parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"oolongwater"},"content":"     * Parses the arguments for a deadline command.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"oolongwater"},"content":"     * @param argument the argument string for the deadline command","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"oolongwater"},"content":"     * @return an array containing the description and date/time","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"oolongwater"},"content":"     * @throws InvalidInputException if the format is invalid","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"oolongwater"},"content":"    public String[] parseDeadlineArguments(String argument) throws InvalidInputException {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"oolongwater"},"content":"        String[] parts \u003d argument.split(\"/by \");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"oolongwater"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"oolongwater"},"content":"            throw new InvalidInputException(\"Invalid deadline format. Use: deadline \u003cdescription\u003e /by \u003cdate/time\u003e\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"oolongwater"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"oolongwater"},"content":"        return parts;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"oolongwater"},"content":"     * Parses the arguments for an event command.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"oolongwater"},"content":"     * @param argument the argument string for the event command","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"oolongwater"},"content":"     * @return an array containing the description, start, and end times","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"oolongwater"},"content":"     * @throws InvalidInputException if the format is invalid","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"oolongwater"},"content":"    public String[] parseEventArguments(String argument) throws InvalidInputException {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"oolongwater"},"content":"        String[] parts \u003d argument.split(\"/from |/to \");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"oolongwater"},"content":"        if (parts.length !\u003d 3) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"oolongwater"},"content":"            throw new InvalidInputException(\"Invalid event format. Use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"oolongwater"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"oolongwater"},"content":"        return parts;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"oolongwater"},"content":"     * Parses a date string into a LocalDate object.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"oolongwater"},"content":"     * @param date the date string in the format d/M/yyyy","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"oolongwater"},"content":"     * @return the corresponding LocalDate object","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"oolongwater"},"content":"     * @throws InvalidInputException if the date format is invalid","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"oolongwater"},"content":"    public LocalDate parseDate(String date) throws InvalidInputException {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"oolongwater"},"content":"        try {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"oolongwater"},"content":"            return LocalDate.parse(date, DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"oolongwater"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"oolongwater"},"content":"            throw new InvalidInputException(\"Invalid date format. Use: d/M/yyyy\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"oolongwater"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"oolongwater"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"oolongwater":79}},{"path":"src/command/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oolongwater"},"content":"package command;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oolongwater"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oolongwater"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oolongwater"},"content":"import exception.InvalidInputException;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oolongwater"},"content":"/**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oolongwater"},"content":" * Unit tests for the Parser class.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oolongwater"},"content":" */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oolongwater"},"content":"public class ParserTest {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oolongwater"},"content":"    private final Parser parser \u003d new Parser();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oolongwater"},"content":"     * Tests the parseCommand method to ensure it correctly parses commands.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oolongwater"},"content":"    @Test","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oolongwater"},"content":"    public void testParseCommand() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oolongwater"},"content":"        assertEquals(Command.LIST, parser.parseCommand(\"list\"));","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oolongwater"},"content":"        assertEquals(Command.TODO, parser.parseCommand(\"todo read book\"));","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"oolongwater"},"content":"     * Tests the parseDeadlineArguments method to ensure it correctly parses deadline arguments.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"oolongwater"},"content":"     * Expects an InvalidInputException for invalid formats.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"oolongwater"},"content":"     * @throws InvalidInputException if the input format is invalid","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"oolongwater"},"content":"    @Test","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"oolongwater"},"content":"    public void testParseDeadlineArguments() throws InvalidInputException {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"oolongwater"},"content":"        assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"oolongwater"},"content":"            parser.parseDeadlineArguments(\"deadline read book\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"oolongwater"},"content":"        });","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"oolongwater"},"content":"        String[] result \u003d parser.parseDeadlineArguments(\"read book /by 12/12/2023\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"oolongwater"},"content":"        assertEquals(\"read book\", result[0].trim());","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"oolongwater"},"content":"        assertEquals(\"12/12/2023\", result[1].trim());","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"oolongwater"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"oolongwater":39}},{"path":"src/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oolongwater"},"content":"package exception;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oolongwater"},"content":"/**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oolongwater"},"content":" * Exception thrown when user input is invalid in the Giorgo application.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oolongwater"},"content":" */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oolongwater"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oolongwater"},"content":"     * Constructs a new InvalidInputException with the specified detail message.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oolongwater"},"content":"     * @param message the detail message","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oolongwater"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oolongwater"},"content":"        super(message);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oolongwater"},"content":"        System.out.println(\"ERROR\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oolongwater"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"oolongwater":17}},{"path":"src/giorgo/giorgo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oolongwater"},"content":"package giorgo;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oolongwater"},"content":"import command.Command;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oolongwater"},"content":"import storage.Storage;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oolongwater"},"content":"import task.task;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oolongwater"},"content":"import ui.ui;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oolongwater"},"content":"import exception.InvalidInputException;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oolongwater"},"content":"import task.Deadline;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oolongwater"},"content":"import task.Event;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oolongwater"},"content":"import task.Todo;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oolongwater"},"content":"import command.Parser;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oolongwater"},"content":"import java.io.*;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oolongwater"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oolongwater"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oolongwater"},"content":"/**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oolongwater"},"content":" * Main class for the Giorgo application.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oolongwater"},"content":" * Handles the initialization and running of the application.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oolongwater"},"content":" */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oolongwater"},"content":"public class giorgo {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oolongwater"},"content":"    private static final String DIRECTORY_PATH \u003d System.getProperty(\"user.home\") + File.separator + \"chatbot_tasks\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oolongwater"},"content":"    private static final String FILE_PATH \u003d DIRECTORY_PATH + File.separator + \"tasks.txt\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"oolongwater"},"content":"    private ui ui;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"oolongwater"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"oolongwater"},"content":"    private ArrayList\u003ctask\u003e tasks;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"oolongwater"},"content":"    private Parser parser;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"oolongwater"},"content":"     * Constructor for the Giorgo class.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"oolongwater"},"content":"     * Initializes the UI, storage, tasks, and parser.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"oolongwater"},"content":"    public giorgo() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"oolongwater"},"content":"        createDirectoryIfNotExists();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"oolongwater"},"content":"        ui \u003d new ui();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"oolongwater"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"oolongwater"},"content":"        tasks \u003d new ArrayList\u003c\u003e(storage.load());","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"oolongwater"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"oolongwater"},"content":"     * Ensures the directory for storing tasks exists.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"oolongwater"},"content":"     * Creates the directory if it does not exist.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"oolongwater"},"content":"    private void createDirectoryIfNotExists() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"oolongwater"},"content":"        File directory \u003d new File(DIRECTORY_PATH);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"oolongwater"},"content":"        if (!directory.exists()){","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"oolongwater"},"content":"            directory.mkdirs();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"oolongwater"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"oolongwater"},"content":"     * Runs the main loop of the Giorgo application.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"oolongwater"},"content":"     * Handles user input and executes corresponding commands.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"oolongwater"},"content":"    public void run() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"oolongwater"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"oolongwater"},"content":"        String input;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"oolongwater"},"content":"        do {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"oolongwater"},"content":"            input \u003d ui.readCommand();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"oolongwater"},"content":"            Command command \u003d parser.parseCommand(input);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"oolongwater"},"content":"            String argument \u003d parser.parseArgument(input);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"oolongwater"},"content":"            try {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"oolongwater"},"content":"                switch (command) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"oolongwater"},"content":"                    case LIST:","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"oolongwater"},"content":"                        ui.showTaskList(tasks);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"oolongwater"},"content":"                        break;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"oolongwater"},"content":"                    case MARK:","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"oolongwater"},"content":"                        task taskToMark \u003d tasks.get(Integer.parseInt(argument) - 1);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"oolongwater"},"content":"                        taskToMark.isDone \u003d true;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"oolongwater"},"content":"                        storage.save(tasks);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"oolongwater"},"content":"                        ui.showTaskMarked(taskToMark);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"oolongwater"},"content":"                        break;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"oolongwater"},"content":"                    case UNMARK:","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"oolongwater"},"content":"                        task taskToUnmark \u003d tasks.get(Integer.parseInt(argument) - 1);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"oolongwater"},"content":"                        taskToUnmark.isDone \u003d false;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"oolongwater"},"content":"                        storage.save(tasks);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"oolongwater"},"content":"                        ui.showTaskUnmarked(taskToUnmark);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"oolongwater"},"content":"                        break;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"oolongwater"},"content":"                    case TODO:","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"oolongwater"},"content":"                        if (argument.isEmpty()) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"oolongwater"},"content":"                            throw new InvalidInputException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"oolongwater"},"content":"                        } else {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"oolongwater"},"content":"                            task todo \u003d new Todo(argument);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"oolongwater"},"content":"                            tasks.add(todo);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"oolongwater"},"content":"                            storage.save(tasks);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"oolongwater"},"content":"                            ui.showTaskAdded(todo, tasks.size());","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"oolongwater"},"content":"                        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"oolongwater"},"content":"                        break;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"oolongwater"},"content":"                    case DEADLINE:","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"oolongwater"},"content":"                        String[] deadlineParts \u003d parser.parseDeadlineArguments(argument);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"oolongwater"},"content":"                        task deadline \u003d new Deadline(deadlineParts[0].trim(), deadlineParts[1].trim());","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"oolongwater"},"content":"                        tasks.add(deadline);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"oolongwater"},"content":"                        storage.save(tasks);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"oolongwater"},"content":"                        ui.showTaskAdded(deadline, tasks.size());","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"oolongwater"},"content":"                        break;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"oolongwater"},"content":"                    case EVENT:","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"oolongwater"},"content":"                        String[] eventParts \u003d parser.parseEventArguments(argument);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"oolongwater"},"content":"                        task event \u003d new Event(eventParts[0].trim(), eventParts[1].trim(), eventParts[2].trim());","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"oolongwater"},"content":"                        tasks.add(event);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"oolongwater"},"content":"                        storage.save(tasks);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"oolongwater"},"content":"                        ui.showTaskAdded(event, tasks.size());","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"oolongwater"},"content":"                        break;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"oolongwater"},"content":"                    case DELETE:","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"oolongwater"},"content":"                        try {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"oolongwater"},"content":"                            int indexToDelete \u003d Integer.parseInt(argument) - 1;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"oolongwater"},"content":"                            if (indexToDelete \u003e\u003d 0 \u0026\u0026 indexToDelete \u003c tasks.size()) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"oolongwater"},"content":"                                task taskToDelete \u003d tasks.remove(indexToDelete);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"oolongwater"},"content":"                                storage.save(tasks);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"oolongwater"},"content":"                                ui.showTaskDeleted(taskToDelete, tasks.size());","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"oolongwater"},"content":"                            } else {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"oolongwater"},"content":"                                throw new InvalidInputException(\"OOPS!!! The task index is out of bounds.\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"oolongwater"},"content":"                            }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"oolongwater"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"oolongwater"},"content":"                            throw new InvalidInputException(\"OOPS!!! The task index must be a number.\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"oolongwater"},"content":"                        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"oolongwater"},"content":"                        break;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"oolongwater"},"content":"                    case DATE:","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"oolongwater"},"content":"                        LocalDate date \u003d parser.parseDate(argument);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"oolongwater"},"content":"                        ui.listTasksOnDate(String.valueOf(date), tasks);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"oolongwater"},"content":"                        break;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"oolongwater"},"content":"                    case FIND:","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"oolongwater"},"content":"                        System.out.println(\"find command\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"oolongwater"},"content":"                        ui.showMatchingTasks(argument, tasks);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"oolongwater"},"content":"                        break;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"oolongwater"},"content":"                    case BYE:","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"oolongwater"},"content":"                        ui.showGoodbye();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"oolongwater"},"content":"                        break;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"oolongwater"},"content":"                    default:","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"oolongwater"},"content":"                        throw new InvalidInputException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"oolongwater"},"content":"                }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"oolongwater"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"oolongwater"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"oolongwater"},"content":"            }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"oolongwater"},"content":"        } while (!input.equalsIgnoreCase(\"bye\"));","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"oolongwater"},"content":"     * Main method to start the Giorgo application.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"oolongwater"},"content":"     * @param args Command line arguments","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"oolongwater"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"oolongwater"},"content":"        new giorgo().run();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"oolongwater"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"oolongwater":150}},{"path":"src/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oolongwater"},"content":"package storage;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oolongwater"},"content":"import task.task;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oolongwater"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oolongwater"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oolongwater"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oolongwater"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oolongwater"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oolongwater"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oolongwater"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oolongwater"},"content":"import java.util.List;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oolongwater"},"content":"import task.Deadline;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oolongwater"},"content":"import task.Event;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oolongwater"},"content":"import task.Todo;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oolongwater"},"content":"/**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oolongwater"},"content":" * Handles the storage of tasks to and from a file.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oolongwater"},"content":" */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oolongwater"},"content":"public class Storage {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oolongwater"},"content":"    private String filePath;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"oolongwater"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"oolongwater"},"content":"     * @param filePath the path to the file where tasks are stored","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"oolongwater"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"oolongwater"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"oolongwater"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"oolongwater"},"content":"     * @return a list of tasks loaded from the file","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"oolongwater"},"content":"    public List\u003ctask\u003e load() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"oolongwater"},"content":"        List\u003ctask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"oolongwater"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"oolongwater"},"content":"        try {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"oolongwater"},"content":"            if (!Files.exists(path)) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"oolongwater"},"content":"                Files.createDirectories(path.getParent());","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"oolongwater"},"content":"                Files.createFile(path);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"oolongwater"},"content":"                return tasks;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"oolongwater"},"content":"            }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"oolongwater"},"content":"            BufferedReader reader \u003d Files.newBufferedReader(path);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"oolongwater"},"content":"            String line;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"oolongwater"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"oolongwater"},"content":"                String taskType \u003d line.split(\" \\\\| \")[0];","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"oolongwater"},"content":"                task task \u003d null;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"oolongwater"},"content":"                switch (taskType) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"oolongwater"},"content":"                    case \"T\":","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"oolongwater"},"content":"                        task \u003d Todo.fromFileFormat(line);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"oolongwater"},"content":"                        break;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"oolongwater"},"content":"                    case \"D\":","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"oolongwater"},"content":"                        task \u003d Deadline.fromFileFormat(line);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"oolongwater"},"content":"                        break;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"oolongwater"},"content":"                    case \"E\":","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"oolongwater"},"content":"                        task \u003d Event.fromFileFormat(line);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"oolongwater"},"content":"                        break;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"oolongwater"},"content":"                }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"oolongwater"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"oolongwater"},"content":"                    tasks.add(task);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"oolongwater"},"content":"                }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"oolongwater"},"content":"            }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"oolongwater"},"content":"            reader.close();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"oolongwater"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"oolongwater"},"content":"            System.out.println(\"An error occurred while loading tasks.\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"oolongwater"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"oolongwater"},"content":"        return tasks;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"oolongwater"},"content":"     * Saves the list of tasks to the file.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"oolongwater"},"content":"     * @param tasks the list of tasks to be saved","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"oolongwater"},"content":"    public void save(List\u003ctask\u003e tasks) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"oolongwater"},"content":"        try {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"oolongwater"},"content":"            BufferedWriter writer \u003d Files.newBufferedWriter(Paths.get(filePath));","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"oolongwater"},"content":"            for (task task : tasks) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"oolongwater"},"content":"                writer.write(task.toFileFormat());","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"oolongwater"},"content":"                writer.newLine();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"oolongwater"},"content":"            }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"oolongwater"},"content":"            writer.close();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"oolongwater"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"oolongwater"},"content":"            System.out.println(\"An error occurred while saving tasks.\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"oolongwater"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"oolongwater"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"oolongwater":94}},{"path":"src/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oolongwater"},"content":"package task;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oolongwater"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oolongwater"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oolongwater"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oolongwater"},"content":"/**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oolongwater"},"content":" * Represents a task with a deadline in the Giorgo application.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oolongwater"},"content":" */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oolongwater"},"content":"public class Deadline extends task {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oolongwater"},"content":"    public LocalDateTime by;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oolongwater"},"content":"     * Constructs a Deadline task with the specified description and deadline date/time.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oolongwater"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oolongwater"},"content":"     * @param by the deadline date/time in the format d/M/yyyy HHmm","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oolongwater"},"content":"     * @throws DateTimeParseException if the date format is invalid","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oolongwater"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oolongwater"},"content":"        super(description);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oolongwater"},"content":"        try {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oolongwater"},"content":"            this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"oolongwater"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"oolongwater"},"content":"            System.out.println(\"Invalid date format. Use: d/M/yyyy HHmm\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"oolongwater"},"content":"            throw e;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"oolongwater"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"oolongwater"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"oolongwater"},"content":"     * @return a string representation of the Deadline task","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"oolongwater"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"oolongwater"},"content":"    public String toString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"oolongwater"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\")) + \")\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"oolongwater"},"content":"     * Returns the file format representation of the Deadline task.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"oolongwater"},"content":"     * @return the file format representation of the Deadline task","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"oolongwater"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"oolongwater"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"oolongwater"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by.format(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"oolongwater"},"content":"     * Creates a Deadline task from its file format representation.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"oolongwater"},"content":"     * @param line the file format representation of the Deadline task","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"oolongwater"},"content":"     * @return the Deadline task, or null if the format is invalid","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"oolongwater"},"content":"    public static Deadline fromFileFormat(String line) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"oolongwater"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"oolongwater"},"content":"        if (parts.length !\u003d 4 || !parts[0].equals(\"D\")) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"oolongwater"},"content":"            return null;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"oolongwater"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"oolongwater"},"content":"        Deadline deadline \u003d null;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"oolongwater"},"content":"        try {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"oolongwater"},"content":"            deadline \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"oolongwater"},"content":"            deadline.isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"oolongwater"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"oolongwater"},"content":"            System.out.println(\"Invalid date format. Use: d/M/yyyy HHmm\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"oolongwater"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"oolongwater"},"content":"        return deadline;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"oolongwater"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"oolongwater":71}},{"path":"src/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oolongwater"},"content":"package task;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oolongwater"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oolongwater"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oolongwater"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oolongwater"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oolongwater"},"content":"/**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oolongwater"},"content":" * Unit tests for the Deadline class.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oolongwater"},"content":" */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oolongwater"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oolongwater"},"content":"     * Tests the Deadline constructor to ensure it correctly parses valid dates","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oolongwater"},"content":"     * and throws an exception for invalid dates.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oolongwater"},"content":"    @Test","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oolongwater"},"content":"    public void testDeadlineConstructor() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oolongwater"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oolongwater"},"content":"            new Deadline(\"submit report\", \"invalid date\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oolongwater"},"content":"        });","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"oolongwater"},"content":"        Deadline deadline \u003d new Deadline(\"submit report\", \"12/12/2023 1800\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"oolongwater"},"content":"        assertEquals(\"submit report\", deadline.description);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"oolongwater"},"content":"        assertEquals(\"Dec 12 2023, 6:00PM\", deadline.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\")));","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"oolongwater"},"content":"     * Tests the toString method to ensure it returns the correct string representation","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"oolongwater"},"content":"     * of the Deadline task.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"oolongwater"},"content":"    @Test","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"oolongwater"},"content":"    public void testToString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"oolongwater"},"content":"        Deadline deadline \u003d new Deadline(\"submit report\", \"12/12/2023 1800\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"oolongwater"},"content":"        assertEquals(\"[D][ ] submit report (by: Dec 12 2023, 6:00PM)\", deadline.toString());","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"oolongwater"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"oolongwater":38}},{"path":"src/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oolongwater"},"content":"package task;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oolongwater"},"content":"/**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oolongwater"},"content":" * Represents an event task in the Giorgo application.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oolongwater"},"content":" */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oolongwater"},"content":"public class Event extends task {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oolongwater"},"content":"    public String from;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oolongwater"},"content":"    protected String to;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oolongwater"},"content":"     * Constructs an Event task with the specified description, start time, and end time.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oolongwater"},"content":"     * @param description the description of the event","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oolongwater"},"content":"     * @param from the start time of the event","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oolongwater"},"content":"     * @param to the end time of the event","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oolongwater"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oolongwater"},"content":"        super(description);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oolongwater"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oolongwater"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"oolongwater"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"oolongwater"},"content":"     * @return a string representation of the Event task","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"oolongwater"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"oolongwater"},"content":"    public String toString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"oolongwater"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"oolongwater"},"content":"     * Returns the file format representation of the Event task.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"oolongwater"},"content":"     * @return the file format representation of the Event task","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"oolongwater"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"oolongwater"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"oolongwater"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + from + \" | \" + to;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"oolongwater"},"content":"     * Creates an Event task from its file format representation.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"oolongwater"},"content":"     * @param line the file format representation of the Event task","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"oolongwater"},"content":"     * @return the Event task, or null if the format is invalid","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"oolongwater"},"content":"    public static Event fromFileFormat(String line) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"oolongwater"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"oolongwater"},"content":"        if (parts.length !\u003d 5 || !parts[0].equals(\"E\")) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"oolongwater"},"content":"            return null;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"oolongwater"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"oolongwater"},"content":"        Event event \u003d new Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"oolongwater"},"content":"        event.isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"oolongwater"},"content":"        return event;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"oolongwater"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"oolongwater":59}},{"path":"src/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oolongwater"},"content":"package task;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oolongwater"},"content":"import exception.InvalidInputException;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oolongwater"},"content":"/**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oolongwater"},"content":" * Represents a to-do task in the Giorgo application.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oolongwater"},"content":" */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oolongwater"},"content":"public class Todo extends task {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oolongwater"},"content":"     * Constructs a Todo task with the specified description.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oolongwater"},"content":"     * @param description the description of the to-do task","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oolongwater"},"content":"     * @throws InvalidInputException if the description is invalid","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oolongwater"},"content":"    public Todo(String description) throws InvalidInputException {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oolongwater"},"content":"        super(description);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oolongwater"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oolongwater"},"content":"     * @return a string representation of the Todo task","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"oolongwater"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"oolongwater"},"content":"    public String toString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"oolongwater"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"oolongwater"},"content":"     * Returns the file format representation of the Todo task.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"oolongwater"},"content":"     * @return the file format representation of the Todo task","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"oolongwater"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"oolongwater"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"oolongwater"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"oolongwater"},"content":"     * Creates a Todo task from its file format representation.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"oolongwater"},"content":"     * @param line the file format representation of the Todo task","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"oolongwater"},"content":"     * @return the Todo task, or null if the format is invalid","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"oolongwater"},"content":"    public static Todo fromFileFormat(String line) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"oolongwater"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"oolongwater"},"content":"        if (parts.length !\u003d 3 || !parts[0].equals(\"T\")) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"oolongwater"},"content":"            return null;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"oolongwater"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"oolongwater"},"content":"        Todo todo \u003d null;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"oolongwater"},"content":"        try {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"oolongwater"},"content":"            todo \u003d new Todo(parts[2]);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"oolongwater"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"oolongwater"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"oolongwater"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"oolongwater"},"content":"        todo.isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"oolongwater"},"content":"        return todo;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"oolongwater"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"oolongwater":61}},{"path":"src/task/task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oolongwater"},"content":"package task;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oolongwater"},"content":"/**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oolongwater"},"content":" * Represents an abstract task in the Giorgo application.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oolongwater"},"content":" */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oolongwater"},"content":"public abstract class task {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oolongwater"},"content":"    public String description;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oolongwater"},"content":"    public boolean isDone;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oolongwater"},"content":"     * Constructs a task with the specified description.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oolongwater"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oolongwater"},"content":"    public task(String description) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oolongwater"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oolongwater"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oolongwater"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oolongwater"},"content":"     * @return \"X\" if the task is done, otherwise \" \"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"oolongwater"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"oolongwater"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"oolongwater"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"oolongwater"},"content":"     * @return a string representation of the task","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"oolongwater"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"oolongwater"},"content":"    public String toString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"oolongwater"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"oolongwater"},"content":"     * Returns the file format representation of the task.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"oolongwater"},"content":"     * @return the file format representation of the task","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"oolongwater"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"oolongwater"},"content":"     * Creates a task from its file format representation.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"oolongwater"},"content":"     * @param line the file format representation of the task","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"oolongwater"},"content":"     * @return the task, or null if the format is invalid","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"oolongwater"},"content":"    public static task fromFileFormat(String line) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"oolongwater"},"content":"        return null;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"oolongwater"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"oolongwater":58}},{"path":"src/ui/ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oolongwater"},"content":"package ui;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oolongwater"},"content":"import task.Deadline;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oolongwater"},"content":"import task.task;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oolongwater"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oolongwater"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oolongwater"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oolongwater"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oolongwater"},"content":"import task.Event;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oolongwater"},"content":"/**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oolongwater"},"content":" * Handles user interactions in the Giorgo application.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oolongwater"},"content":" */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oolongwater"},"content":"public class ui {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oolongwater"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oolongwater"},"content":"     * Constructs a new UI instance.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oolongwater"},"content":"    public ui() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oolongwater"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"oolongwater"},"content":"     * Displays the welcome message.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"oolongwater"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"oolongwater"},"content":"        String logo \u003d \"Giorgo\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"oolongwater"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"oolongwater"},"content":"                \" Hello! I\u0027m \" + logo + \"\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"oolongwater"},"content":"                \" What can I do for you?\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"oolongwater"},"content":"                \"____________________________________________________________\\n\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"oolongwater"},"content":"     * Displays the goodbye message.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"oolongwater"},"content":"    public void showGoodbye() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"oolongwater"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"oolongwater"},"content":"                \" Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"oolongwater"},"content":"                \"____________________________________________________________\\n\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"oolongwater"},"content":"     * Displays a line separator.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"oolongwater"},"content":"    public void showLine() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"oolongwater"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"oolongwater"},"content":"     * Displays an error message.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"oolongwater"},"content":"     * @param message the error message to display","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"oolongwater"},"content":"    public void showError(String message) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"oolongwater"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"oolongwater"},"content":"                message + \"\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"oolongwater"},"content":"                \"____________________________________________________________\\n\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"oolongwater"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"oolongwater"},"content":"     * @param tasks the list of tasks to display","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"oolongwater"},"content":"    public void showTaskList(ArrayList\u003ctask\u003e tasks) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"oolongwater"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"oolongwater"},"content":"            System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"oolongwater"},"content":"                    \" No tasks yet.\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"oolongwater"},"content":"                    \"____________________________________________________________\\n\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"oolongwater"},"content":"        } else {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"oolongwater"},"content":"            System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"oolongwater"},"content":"                    \" Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"oolongwater"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"oolongwater"},"content":"                System.out.println((i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"oolongwater"},"content":"            }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"oolongwater"},"content":"            System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"oolongwater"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"oolongwater"},"content":"     * Displays the tasks on a specified date.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"oolongwater"},"content":"     * @param date the date to filter tasks by","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"oolongwater"},"content":"     * @param tasks the list of tasks to filter","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"oolongwater"},"content":"    public static void listTasksOnDate(String date, ArrayList\u003ctask\u003e tasks) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"oolongwater"},"content":"        LocalDate specifiedDate \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"oolongwater"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"oolongwater"},"content":"                \" Here are the tasks on \" + specifiedDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \":\\n\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"oolongwater"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"oolongwater"},"content":"            task task \u003d tasks.get(i);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"oolongwater"},"content":"            if (task instanceof Deadline \u0026\u0026 ((Deadline) task).by.toLocalDate().equals(specifiedDate)) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"oolongwater"},"content":"                System.out.println((i + 1) + \".\" + task.toString());","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"oolongwater"},"content":"            } else if (task instanceof Event \u0026\u0026 LocalDate.parse(((Event) task).from, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\")).equals(specifiedDate)) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"oolongwater"},"content":"                System.out.println((i + 1) + \".\" + task.toString());","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"oolongwater"},"content":"            }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"oolongwater"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"oolongwater"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"oolongwater"},"content":"     * Displays a message indicating a task has been added.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"oolongwater"},"content":"     * @param task the task that was added","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"oolongwater"},"content":"     * @param size the new size of the task list","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"oolongwater"},"content":"    public void showTaskAdded(task task, int size) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"oolongwater"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"oolongwater"},"content":"                \" Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"oolongwater"},"content":"                \"    \" + task + \"\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"oolongwater"},"content":"                \" Now you have \" + size + \" tasks in the list.\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"oolongwater"},"content":"                \"____________________________________________________________\\n\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"oolongwater"},"content":"     * Displays a message indicating a task has been deleted.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"oolongwater"},"content":"     * @param task the task that was deleted","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"oolongwater"},"content":"     * @param size the new size of the task list","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"oolongwater"},"content":"    public void showTaskDeleted(task task, int size) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"oolongwater"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"oolongwater"},"content":"                \" Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"oolongwater"},"content":"                \"    \" + task + \"\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"oolongwater"},"content":"                \" Now you have \" + size + \" tasks in the list.\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"oolongwater"},"content":"                \"____________________________________________________________\\n\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"oolongwater"},"content":"     * Displays a message indicating a task has been marked as done.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"oolongwater"},"content":"     * @param task the task that was marked as done","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"oolongwater"},"content":"    public void showTaskMarked(task task) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"oolongwater"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"oolongwater"},"content":"                \" Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"oolongwater"},"content":"                \"    [\" + task.getStatusIcon() + \"] \" + task.description + \"\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"oolongwater"},"content":"                \"____________________________________________________________\\n\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"oolongwater"},"content":"     * Displays a message indicating a task has been marked as not done.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"oolongwater"},"content":"     * @param task the task that was marked as not done","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"oolongwater"},"content":"    public void showTaskUnmarked(task task) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"oolongwater"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"oolongwater"},"content":"                \" OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"oolongwater"},"content":"                \"    [\" + task.getStatusIcon() + \"] \" + task.description + \"\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"oolongwater"},"content":"                \"____________________________________________________________\\n\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"oolongwater"},"content":"     * Reads a command from the user.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"oolongwater"},"content":"     * @return the command entered by the user","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"oolongwater"},"content":"    public String readCommand() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"oolongwater"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"oolongwater"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"oolongwater"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"oolongwater"},"content":"     * Displays the tasks that match the given keyword.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"oolongwater"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"oolongwater"},"content":"     * @param keyword the keyword to search for","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"oolongwater"},"content":"     * @param tasks the list of tasks to search","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"oolongwater"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"oolongwater"},"content":"    public void showMatchingTasks(String keyword, ArrayList\u003ctask\u003e tasks) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"oolongwater"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"oolongwater"},"content":"                \" Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"oolongwater"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"oolongwater"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"oolongwater"},"content":"            task task \u003d tasks.get(i);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"oolongwater"},"content":"            if (task.description.contains(keyword)) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"oolongwater"},"content":"                System.out.println((count + 1) + \".\" + task.toString());","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"oolongwater"},"content":"                count++;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"oolongwater"},"content":"            }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"oolongwater"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"oolongwater"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"oolongwater"},"content":"            System.out.println(\" No matching tasks found.\\n\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"oolongwater"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"oolongwater"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"oolongwater"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"oolongwater"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"oolongwater":186}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"oolongwater"},"content":"todo Buy groceries","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oolongwater"},"content":"deadline Finish presentation /by Aug 25 2024","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oolongwater"},"content":"event Attend workshop /from Aug 22 2024 10am /to 12pm","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oolongwater"},"content":"todo Call mom","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oolongwater"},"content":"list","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oolongwater"},"content":"mark 3","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oolongwater"},"content":"unmark 2","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oolongwater"},"content":"list","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oolongwater"},"content":"bye","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"oolongwater":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oolongwater"},"content":"java -classpath ..\\bin Giorgo \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"oolongwater":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oolongwater"},"content":"java -classpath ../bin Giorgo \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"oolongwater":1,"-":37}}]
