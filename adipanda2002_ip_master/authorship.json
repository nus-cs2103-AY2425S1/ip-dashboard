[{"path":"data/PandaBot.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"adipanda2002":1}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adipanda2002"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adipanda2002"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adipanda2002"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adipanda2002"},"content":" * Represents a Deadline task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adipanda2002"},"content":" * A Deadline task is a task with a description and a specific due date or time by which it should be completed.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adipanda2002"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adipanda2002"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adipanda2002"},"content":"    /** The due date or time of the deadline. */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adipanda2002"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adipanda2002"},"content":"     * Constructs a new Deadline task with the given description and due date.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adipanda2002"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adipanda2002"},"content":"     * @param description the description of the Deadline task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adipanda2002"},"content":"     * @param by the due date or time by which the task should be completed.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adipanda2002"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adipanda2002"},"content":"        super(description);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adipanda2002"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adipanda2002"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adipanda2002"},"content":"     * Creates a Deadline task from the given input string.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adipanda2002"},"content":"     * The input string must start with the command \"deadline\" followed by the task description and the due date.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adipanda2002"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adipanda2002"},"content":"     * @param input the input string containing the task details.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adipanda2002"},"content":"     * @return the created Deadline task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adipanda2002"},"content":"     * @throws InputException if the input format is incorrect or if the description is missing.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adipanda2002"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adipanda2002"},"content":"    public Task createTask(String input) throws InputException{","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adipanda2002"},"content":"        if (input.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adipanda2002"},"content":"            throw new InputException(\"To add a Deadline task, use the following format: deadline \u003ctask description\u003e /by \u003cDD/MM/YYYY HHmm\u003e\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adipanda2002"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adipanda2002"},"content":"        String[] details \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adipanda2002"},"content":"        if (details.length \u003d\u003d 2) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adipanda2002"},"content":"            String description \u003d details[0].trim();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adipanda2002"},"content":"            LocalDateTime by \u003d parseDateTime(details[1].trim());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adipanda2002"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adipanda2002"},"content":"                throw new InputException(\"You need to describe your Deadline!\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adipanda2002"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adipanda2002"},"content":"            return new Deadline(description, by);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adipanda2002"},"content":"        } else {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adipanda2002"},"content":"            throw new InputException(\"Invalid format. Use: deadline \u003cdescription\u003e /by \u003cDD/MM/YYYY HHmm\u003e\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adipanda2002"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adipanda2002"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adipanda2002"},"content":"     * Parses a datetime string into a LocalDateTime Object.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adipanda2002"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adipanda2002"},"content":"     * @param dateTimeString the string containing the datetime","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adipanda2002"},"content":"     * @return the LocalDateTime Object.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adipanda2002"},"content":"     * @throws InputException if the datetime format is invalid","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adipanda2002"},"content":"    private LocalDateTime parseDateTime(String dateTimeString) throws InputException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adipanda2002"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adipanda2002"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adipanda2002"},"content":"            return LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adipanda2002"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adipanda2002"},"content":"            throw new InputException(\"Invalid date/time format. Use: DD/MM/YYYY HHmm (e.g. \u002712/11/2002 1800\u0027)\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adipanda2002"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adipanda2002"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adipanda2002"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adipanda2002"},"content":"     * The string includes a \"[D]\" prefix to indicate that it is a Deadline task, followed by the task status, description, and due date.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adipanda2002"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adipanda2002"},"content":"     * @return a string representing the Deadline task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adipanda2002"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adipanda2002"},"content":"    public String toString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adipanda2002"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adipanda2002"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adipanda2002"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adipanda2002"},"content":"     * Returns a string representation of a Deadline when saving to file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adipanda2002"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adipanda2002"},"content":"     * @return a string representation of the Deadline.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"adipanda2002"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adipanda2002"},"content":"    public String encode() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"adipanda2002"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"adipanda2002"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by.format(formatter);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"adipanda2002"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"adipanda2002"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"adipanda2002":88}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adipanda2002"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adipanda2002"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adipanda2002"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adipanda2002"},"content":" * Represents an Event task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adipanda2002"},"content":" * An Event task is a task that has a specific start and end time, in addition to a description.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adipanda2002"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adipanda2002"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adipanda2002"},"content":"    /** The start time of the event. */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adipanda2002"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adipanda2002"},"content":"    /** The end time of the event. */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adipanda2002"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adipanda2002"},"content":"     * Constructs a new Event task with the given description, start time, and end time.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adipanda2002"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adipanda2002"},"content":"     * @param description the description of the Event task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adipanda2002"},"content":"     * @param from the start time of the event.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adipanda2002"},"content":"     * @param to the end time of the event.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adipanda2002"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adipanda2002"},"content":"        super(description);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adipanda2002"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adipanda2002"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adipanda2002"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adipanda2002"},"content":"     * Creates an Event task from the given input string.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adipanda2002"},"content":"     * The input string must start with the command \"event\" followed by the task description,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adipanda2002"},"content":"     * the start time, and the end time.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adipanda2002"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adipanda2002"},"content":"     * @param input the input string containing the task details.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adipanda2002"},"content":"     * @return the created Event task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adipanda2002"},"content":"     * @throws InputException if the input format is incorrect or if the description is missing.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adipanda2002"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adipanda2002"},"content":"    public Task createTask(String input) throws InputException{","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adipanda2002"},"content":"        if (input.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adipanda2002"},"content":"            throw new InputException(\"To add an Event, use: event \u003cdescription\u003e /from \u003cDD/MM/YYYY HHmm\u003e /to \u003cDD/MM/YYYY HHmm\u003e\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adipanda2002"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adipanda2002"},"content":"        String[] details \u003d input.substring(6).split(\" /from | /to \");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adipanda2002"},"content":"        if (details.length \u003d\u003d 3) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adipanda2002"},"content":"            String description \u003d details[0].trim();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adipanda2002"},"content":"            LocalDateTime from \u003d parseDateTime(details[1].trim());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adipanda2002"},"content":"            LocalDateTime to \u003d parseDateTime(details[2].trim());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adipanda2002"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adipanda2002"},"content":"                throw new InputException(\"You need to describe your Event!\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adipanda2002"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adipanda2002"},"content":"            return new Event(description, from, to);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adipanda2002"},"content":"        } else {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adipanda2002"},"content":"            throw new InputException(\"Invalid format. Use: event \u003cdescription\u003e /from \u003cDD/MM/YYYY HHmm\u003e /to \u003cDD/MM/YYYY HHmm\u003e\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adipanda2002"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adipanda2002"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adipanda2002"},"content":"     * Parses a datetime string into a LocalDateTime Object.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adipanda2002"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adipanda2002"},"content":"     * @param dateTimeString the string containing the datetime","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adipanda2002"},"content":"     * @return the LocalDateTime Object.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adipanda2002"},"content":"     * @throws InputException if the datetime format is invalid","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adipanda2002"},"content":"    private LocalDateTime parseDateTime(String dateTimeString) throws InputException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adipanda2002"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adipanda2002"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adipanda2002"},"content":"            return LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adipanda2002"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adipanda2002"},"content":"            throw new InputException(\"Invalid date/time format. Use: DD/MM/YYYY HHmm (e.g. \u002712/11/2002 1800\u0027)\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adipanda2002"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adipanda2002"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adipanda2002"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adipanda2002"},"content":"     * The string includes a \"[E]\" prefix to indicate that it is an Event task, followed by the task status,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adipanda2002"},"content":"     * description, start time, and end time.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adipanda2002"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adipanda2002"},"content":"     * @return a string representing the Event task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adipanda2002"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adipanda2002"},"content":"    public String toString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"adipanda2002"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adipanda2002"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(formatter) + \" to: \" + to.format(formatter) + \")\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"adipanda2002"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"adipanda2002"},"content":"     * Returns a string representation of an Event when saving to file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"adipanda2002"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"adipanda2002"},"content":"     * @return a string representation of the Event.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"adipanda2002"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"adipanda2002"},"content":"    public String encode() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"adipanda2002"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"adipanda2002"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + from.format(formatter) + \" | \" + to.format(formatter);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"adipanda2002"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"adipanda2002"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"adipanda2002":97}},{"path":"src/main/java/InputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adipanda2002"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adipanda2002"},"content":" * Represents an exception that is thrown when there is an issue with the user\u0027s input.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adipanda2002"},"content":" * This exception can be used to indicate errors such as invalid format or missing information in the input.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adipanda2002"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adipanda2002"},"content":"public class InputException extends Exception{","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adipanda2002"},"content":"     * Constructs a new InputException with no detail message.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adipanda2002"},"content":"     * This can be used when the exception needs to be thrown without a specific error message.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adipanda2002"},"content":"    public InputException() {}","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adipanda2002"},"content":"     * Constructs a new InputException with the specified detail message.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adipanda2002"},"content":"     * This can be used to provide a specific error message when the exception is thrown.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adipanda2002"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adipanda2002"},"content":"     * @param message the detail message providing more information about the error.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adipanda2002"},"content":"    public InputException(String message) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adipanda2002"},"content":"        super(message);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adipanda2002"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adipanda2002"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"adipanda2002":22}},{"path":"src/main/java/PandaBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adipanda2002"},"content":"import java.io.*;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adipanda2002"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adipanda2002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adipanda2002"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adipanda2002"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adipanda2002"},"content":" * PandaBot is a simple task management bot that allows users to add, list, mark, unmark,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adipanda2002"},"content":" * and delete tasks. It supports different types of tasks including ToDos, Deadlines, and Events.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adipanda2002"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adipanda2002"},"content":"public class PandaBot {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adipanda2002"},"content":"    private static final String FILE_PATH \u003d \"./data/PandaBot.txt\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adipanda2002"},"content":"     * Prints a line separator for visual clarity in the console output.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adipanda2002"},"content":"    private static void printLine() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adipanda2002"},"content":"        String line \u003d \"_________________________________________\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adipanda2002"},"content":"        System.out.println(line);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adipanda2002"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adipanda2002"},"content":"     * The main method to run the PandaBot application.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adipanda2002"},"content":"     * This method continuously reads user input, processes commands, and manages the task list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adipanda2002"},"content":"     * until the user inputs \"bye\" to exit the program.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adipanda2002"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adipanda2002"},"content":"     * @param args command-line arguments (not used in this application).","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adipanda2002"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adipanda2002"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adipanda2002"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adipanda2002"},"content":"        loadTaskList(taskList);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adipanda2002"},"content":"        // Greet the user","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adipanda2002"},"content":"        printLine();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adipanda2002"},"content":"        System.out.println(\"Hello! I\u0027m PandaBot.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adipanda2002"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adipanda2002"},"content":"        printLine();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adipanda2002"},"content":"        // Main Loop","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adipanda2002"},"content":"        while (true) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adipanda2002"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adipanda2002"},"content":"            // Exit command","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adipanda2002"},"content":"            if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adipanda2002"},"content":"                printLine();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adipanda2002"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adipanda2002"},"content":"                printLine();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adipanda2002"},"content":"                break;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adipanda2002"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adipanda2002"},"content":"            // List tasks","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adipanda2002"},"content":"            else if (input.equalsIgnoreCase(\"list\")){","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adipanda2002"},"content":"                if (taskList.isEmpty()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adipanda2002"},"content":"                    System.out.println(\"There are currently no items in the list.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adipanda2002"},"content":"                    continue;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adipanda2002"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adipanda2002"},"content":"                printLine();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adipanda2002"},"content":"                for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adipanda2002"},"content":"                    System.out.println((i + 1) + \". \" + taskList.get(i));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adipanda2002"},"content":"                }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adipanda2002"},"content":"                printLine();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adipanda2002"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adipanda2002"},"content":"            // Mark a task as done","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adipanda2002"},"content":"            else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adipanda2002"},"content":"                if (input.equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adipanda2002"},"content":"                    System.out.println(\"Please specify which Task number to mark.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adipanda2002"},"content":"                    continue;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adipanda2002"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adipanda2002"},"content":"                int taskNum \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adipanda2002"},"content":"                if (taskNum \u003e\u003d 0 \u0026\u0026 taskNum \u003c taskList.size()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adipanda2002"},"content":"                    taskList.get(taskNum).markAsDone();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adipanda2002"},"content":"                    saveTaskList(taskList);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adipanda2002"},"content":"                    printLine();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adipanda2002"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adipanda2002"},"content":"                    System.out.println(taskList.get(taskNum));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adipanda2002"},"content":"                    printLine();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adipanda2002"},"content":"                } else {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adipanda2002"},"content":"                    System.out.println(\"The specified task does not exist.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adipanda2002"},"content":"                }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adipanda2002"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adipanda2002"},"content":"            // Unmark a task","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"adipanda2002"},"content":"            else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adipanda2002"},"content":"                if (input.equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"adipanda2002"},"content":"                    System.out.println(\"Please specify which Task number to unmark.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"adipanda2002"},"content":"                    continue;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"adipanda2002"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"adipanda2002"},"content":"                int taskNum \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"adipanda2002"},"content":"                if (taskNum \u003e\u003d 0 \u0026\u0026 taskNum \u003c taskList.size()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"adipanda2002"},"content":"                    taskList.get(taskNum).unmark();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"adipanda2002"},"content":"                    saveTaskList(taskList);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"adipanda2002"},"content":"                    printLine();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"adipanda2002"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"adipanda2002"},"content":"                    System.out.println(taskList.get(taskNum));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"adipanda2002"},"content":"                    printLine();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"adipanda2002"},"content":"                } else {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"adipanda2002"},"content":"                    System.out.println(\"The specified task does not exist.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"adipanda2002"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"adipanda2002"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"adipanda2002"},"content":"            // Delete a task","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"adipanda2002"},"content":"            else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"adipanda2002"},"content":"                if (input.equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"adipanda2002"},"content":"                    System.out.println(\"Please specify which Task number to delete.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"adipanda2002"},"content":"                    continue;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"adipanda2002"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"adipanda2002"},"content":"                int taskNum \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"adipanda2002"},"content":"                if (taskNum \u003e\u003d 0 \u0026\u0026 taskNum \u003c taskList.size()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"adipanda2002"},"content":"                    printLine();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"adipanda2002"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"adipanda2002"},"content":"                    System.out.println(taskList.remove(taskNum));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"adipanda2002"},"content":"                    saveTaskList(taskList);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"adipanda2002"},"content":"                    System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"adipanda2002"},"content":"                    printLine();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"adipanda2002"},"content":"                } else {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"adipanda2002"},"content":"                    System.out.println(\"The specified task does not exist.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"adipanda2002"},"content":"                }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"adipanda2002"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"adipanda2002"},"content":"            // Display help","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"adipanda2002"},"content":"            else if (input.equalsIgnoreCase(\"help\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"adipanda2002"},"content":"                printLine();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"adipanda2002"},"content":"                System.out.println(\"PandaBot Commands:\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"adipanda2002"},"content":"                System.out.println(\"1. todo \u003cdescription\u003e : Adds a new Todo task.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"adipanda2002"},"content":"                System.out.println(\"2. deadline \u003cdescription\u003e /by \u003cDD/MM/YYYY HHmm\u003e : Adds a new Deadline task.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"adipanda2002"},"content":"                System.out.println(\"3. event \u003ctask description\u003e /from \u003cDD/MM/YYYY HHmm\u003e /to \u003cDD/MM/YYYY HHmm\u003e : Adds a new Event task.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"adipanda2002"},"content":"                System.out.println(\"4. list : Lists all tasks.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"adipanda2002"},"content":"                System.out.println(\"5. mark \u003ctask number\u003e : Marks the specified task as done.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"adipanda2002"},"content":"                System.out.println(\"6. unmark \u003ctask number\u003e : Unmarks the specified task.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"adipanda2002"},"content":"                System.out.println(\"7. delete \u003ctask number\u003e : Deletes the specified task.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"adipanda2002"},"content":"                System.out.println(\"8. help : Displays this help message.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"adipanda2002"},"content":"                System.out.println(\"9. bye : Exits the PandaBot.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"adipanda2002"},"content":"                printLine();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"adipanda2002"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"adipanda2002"},"content":"            // Add a new task (ToDo. Deadline, or Event)","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"adipanda2002"},"content":"            else {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"adipanda2002"},"content":"                Task task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"adipanda2002"},"content":"                try {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"adipanda2002"},"content":"                    if (input.startsWith(\"todo\")) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"adipanda2002"},"content":"                        task \u003d new ToDo(\"\").createTask(input);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"adipanda2002"},"content":"                    } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"adipanda2002"},"content":"                        task \u003d new Deadline(\"\", LocalDateTime.now()).createTask(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"adipanda2002"},"content":"                    } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"adipanda2002"},"content":"                        task \u003d new Event(\"\", LocalDateTime.now(), LocalDateTime.now()).createTask(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"adipanda2002"},"content":"                    } else {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"adipanda2002"},"content":"                        System.out.println(\"Invalid command. Type \u0027help\u0027 for assistance.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"adipanda2002"},"content":"                        continue;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"adipanda2002"},"content":"                    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"adipanda2002"},"content":"                    taskList.add(task);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"adipanda2002"},"content":"                    saveTaskList(taskList);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"adipanda2002"},"content":"                    printLine();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"adipanda2002"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"adipanda2002"},"content":"                    System.out.println(taskList.get(taskList.size() - 1));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"adipanda2002"},"content":"                    System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"adipanda2002"},"content":"                    printLine();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"adipanda2002"},"content":"                } catch (InputException e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"adipanda2002"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"adipanda2002"},"content":"                }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"adipanda2002"},"content":"            }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"adipanda2002"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"adipanda2002"},"content":"        scanner.close();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"adipanda2002"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"adipanda2002"},"content":"     * Loads the list of tasks from a file","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"adipanda2002"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"adipanda2002"},"content":"     * @param taskList the list to populate with tasks.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"adipanda2002"},"content":"    private static void loadTaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"adipanda2002"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"adipanda2002"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"adipanda2002"},"content":"            return;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"adipanda2002"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"adipanda2002"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH))) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"adipanda2002"},"content":"            String line;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"adipanda2002"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"adipanda2002"},"content":"                Task task \u003d parseTask(line);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"adipanda2002"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"adipanda2002"},"content":"                    taskList.add(task);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"adipanda2002"},"content":"                }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"adipanda2002"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"adipanda2002"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"adipanda2002"},"content":"            System.out.println(\"Error occurred while loading tasks: \" + e.getMessage());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"adipanda2002"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"adipanda2002"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"adipanda2002"},"content":"     * Parses a line from the file to create that task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"adipanda2002"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"adipanda2002"},"content":"     * @param line the selected line from the file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"adipanda2002"},"content":"     * @return the created task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"adipanda2002"},"content":"    private static Task parseTask(String line) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"adipanda2002"},"content":"        String[] details \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"adipanda2002"},"content":"        if (details.length \u003c 3) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"adipanda2002"},"content":"            return null;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"adipanda2002"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"adipanda2002"},"content":"        return Task.parse(details);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"adipanda2002"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"adipanda2002"},"content":"     * Saves the current task list to a file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"adipanda2002"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"adipanda2002"},"content":"     * @param taskList the list of tasks to save.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"adipanda2002"},"content":"    private static void saveTaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"adipanda2002"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"adipanda2002"},"content":"            // Ensure the directory exists","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"adipanda2002"},"content":"            File directory \u003d new File(\"./data\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"adipanda2002"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"adipanda2002"},"content":"                directory.mkdirs();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"adipanda2002"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"adipanda2002"},"content":"            try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"adipanda2002"},"content":"                for (Task task : taskList) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"adipanda2002"},"content":"                    writer.write(task.encode() + System.lineSeparator());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"adipanda2002"},"content":"                }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"adipanda2002"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"adipanda2002"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"adipanda2002"},"content":"            System.out.println(\"Error occurred while saving tasks: \" + e.getMessage());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"adipanda2002"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"adipanda2002"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"adipanda2002"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"adipanda2002":222}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adipanda2002"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adipanda2002"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adipanda2002"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adipanda2002"},"content":" * Abstract class representing a generic Task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adipanda2002"},"content":" * This class provides basic functionalities for a task,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adipanda2002"},"content":" * such as marking the task as done, unmarking it, and displaying its status.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adipanda2002"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adipanda2002"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adipanda2002"},"content":"    /** The description of the task. */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adipanda2002"},"content":"    protected String description;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adipanda2002"},"content":"    /** The status of the task: true if done, false otherwise. */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adipanda2002"},"content":"    protected Boolean isDone;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adipanda2002"},"content":"    /** The formatter for parsing and formatting dates in this application. */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adipanda2002"},"content":"    protected static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adipanda2002"},"content":"     * Constructs a new Task with the given description.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adipanda2002"},"content":"     * The task is initially not marked as done.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adipanda2002"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adipanda2002"},"content":"     * @param description the description of the task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adipanda2002"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adipanda2002"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adipanda2002"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adipanda2002"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adipanda2002"},"content":"     * Abstract method for creating a specific type of task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adipanda2002"},"content":"     * This method must be implemented by any subclass.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adipanda2002"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adipanda2002"},"content":"     * @param input the input string containing the task details.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adipanda2002"},"content":"     * @return the created Task object.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adipanda2002"},"content":"     * @throws InputException if the input is invalid or incomplete.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adipanda2002"},"content":"    public abstract Task createTask(String input) throws InputException;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adipanda2002"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adipanda2002"},"content":"     * \u0027X\u0027 indicates the task is done, while a space indicates it is not done.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adipanda2002"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adipanda2002"},"content":"     * @return a string containing the status icon.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adipanda2002"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adipanda2002"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adipanda2002"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adipanda2002"},"content":"     * Marks the task as done by setting isDone to true.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adipanda2002"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adipanda2002"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adipanda2002"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adipanda2002"},"content":"     * Unmarks the task by setting isDone to false.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adipanda2002"},"content":"    public void unmark() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adipanda2002"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adipanda2002"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adipanda2002"},"content":"     * Creates a Task object from a string representation.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adipanda2002"},"content":"     * This is an abstract method to be implemented by subclasses.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adipanda2002"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adipanda2002"},"content":"     * @param details an array of string details parsed from the file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adipanda2002"},"content":"     * @return the created Task object.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adipanda2002"},"content":"    public static Task parse(String[] details) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adipanda2002"},"content":"        String type \u003d details[0];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adipanda2002"},"content":"        boolean isDone \u003d details[1].equals(\"1\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adipanda2002"},"content":"        String description \u003d details[2];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adipanda2002"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adipanda2002"},"content":"        switch (type) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adipanda2002"},"content":"        case \"T\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adipanda2002"},"content":"            task \u003d new ToDo(description);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adipanda2002"},"content":"            break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"adipanda2002"},"content":"        case \"D\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adipanda2002"},"content":"            if (details.length \u003c 4) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"adipanda2002"},"content":"                return null;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"adipanda2002"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"adipanda2002"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(details[3], formatter);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"adipanda2002"},"content":"            task \u003d new Deadline(description, by);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"adipanda2002"},"content":"            break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"adipanda2002"},"content":"        case \"E\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"adipanda2002"},"content":"            if (details.length \u003c 5) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"adipanda2002"},"content":"                return null;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"adipanda2002"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"adipanda2002"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(details[3], formatter);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"adipanda2002"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(details[4], formatter);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"adipanda2002"},"content":"            task \u003d new Event(description, from, to);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"adipanda2002"},"content":"            break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"adipanda2002"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"adipanda2002"},"content":"        if (task !\u003d null \u0026\u0026 isDone) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"adipanda2002"},"content":"            task.markAsDone();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"adipanda2002"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"adipanda2002"},"content":"        return task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"adipanda2002"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"adipanda2002"},"content":"     * Returns a string representation of a task when saving to file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"adipanda2002"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"adipanda2002"},"content":"     * @return a string representation of the task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"adipanda2002"},"content":"    public abstract String encode();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"adipanda2002"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"adipanda2002"},"content":"     * The string includes the status icon and the task description.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"adipanda2002"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"adipanda2002"},"content":"     * @return a string representing the task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"adipanda2002"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"adipanda2002"},"content":"    public String toString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"adipanda2002"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"adipanda2002"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"adipanda2002"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"adipanda2002":124}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adipanda2002"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adipanda2002"},"content":" * Represents a ToDo task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adipanda2002"},"content":" * A ToDo task is a simple task with a description but without any associated date or time.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adipanda2002"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adipanda2002"},"content":"public class ToDo extends Task{","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adipanda2002"},"content":"     * Constructs a new ToDo task with the given description.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adipanda2002"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adipanda2002"},"content":"     * @param description the description of the ToDo task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adipanda2002"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adipanda2002"},"content":"        super(description);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adipanda2002"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adipanda2002"},"content":"     * Creates a ToDo task from the given input string.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adipanda2002"},"content":"     * The input string must start with the command \"todo\" followed by the task description.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adipanda2002"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adipanda2002"},"content":"     * @param input the input string containing the task details.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adipanda2002"},"content":"     * @return the created ToDo task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adipanda2002"},"content":"     * @throws InputException if the input format is incorrect or if the description is missing.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adipanda2002"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adipanda2002"},"content":"    public Task createTask(String input) throws InputException{","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adipanda2002"},"content":"        if (input.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adipanda2002"},"content":"            throw new InputException(\"To add a ToDo task, use the following format: todo \u003ctask description\u003e\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adipanda2002"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adipanda2002"},"content":"        String description \u003d input.substring(5).trim();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adipanda2002"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adipanda2002"},"content":"            throw new InputException(\"You need to describe your Todo!\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adipanda2002"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adipanda2002"},"content":"        return new ToDo(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adipanda2002"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adipanda2002"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adipanda2002"},"content":"     * The string includes a \"[T]\" prefix to indicate that it is a ToDo task, followed by the task status and description.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adipanda2002"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adipanda2002"},"content":"     * @return a string representing the ToDo task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adipanda2002"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adipanda2002"},"content":"    public String toString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adipanda2002"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adipanda2002"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adipanda2002"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adipanda2002"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adipanda2002"},"content":"     * Returns a string representation of a ToDo when saving to file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adipanda2002"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adipanda2002"},"content":"     * @return a string representation of the ToDo.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adipanda2002"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adipanda2002"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adipanda2002"},"content":"    public String encode() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adipanda2002"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adipanda2002"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adipanda2002"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"adipanda2002":56}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"adipanda2002"},"content":"todo read book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adipanda2002"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adipanda2002"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adipanda2002"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adipanda2002"},"content":"mark 1","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adipanda2002"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adipanda2002"},"content":"unmark 1","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adipanda2002"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adipanda2002"},"content":"delete 1","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adipanda2002"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adipanda2002"},"content":"bye","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"adipanda2002":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adipanda2002"},"content":"java -classpath ../bin PandaBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"adipanda2002":1,"-":37}}]
