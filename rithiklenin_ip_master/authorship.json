[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"rithiklenin":1,"-":41}},{"path":"data/optimus.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"E | 0 | eat help | 25/12/2022 16:00 | 25/12/2022 17:00","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"T | 0 | borrow book","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"E | 0 | meeting | 2024-09-10 14:00 | 2024-09-10 16:00","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":"E | 1 | meeting | 2024-09-10 14:00 | 2024-09-10 16:00","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"rithiklenin":4}},{"path":"src/Test/java/optimus/DeadlinesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":"class DeadlinesTest {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"    private Deadlines deadline;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"    @BeforeEach","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"    public void setUp() throws OptimusException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"        deadline \u003d new Deadlines(\"Test deadline\", \"1/09/2024 12:00\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":"    public void testParseStringValidFormat1() throws OptimusException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"        String dateTimeInput \u003d \"15/09/2024 15:30\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"        LocalDateTime expectedDateTime \u003d LocalDateTime.of(2024, 9, 15, 15, 30);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"        assertEquals(expectedDateTime, deadline.parseStringDeadline(dateTimeInput));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithiklenin"},"content":"    public void testParseStringValidFormat2() throws OptimusException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithiklenin"},"content":"        String dateTimeInput \u003d \"2024-09-15 15:30\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithiklenin"},"content":"        LocalDateTime expectedDateTime \u003d LocalDateTime.of(2024, 9, 15, 15, 30);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithiklenin"},"content":"        assertEquals(expectedDateTime, deadline.parseStringDeadline(dateTimeInput));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithiklenin"},"content":"    public void testParseStringValidFormat3() throws OptimusException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithiklenin"},"content":"        String dateTimeInput \u003d \"15-09-2024 15:30\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithiklenin"},"content":"        LocalDateTime expectedDateTime \u003d LocalDateTime.of(2024, 9, 15, 15, 30);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithiklenin"},"content":"        assertEquals(expectedDateTime, deadline.parseStringDeadline(dateTimeInput));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithiklenin"},"content":"    public void testParseStringValidFormat4() throws OptimusException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithiklenin"},"content":"        String dateTimeInput \u003d \"2024/09/15 15:30\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithiklenin"},"content":"        LocalDateTime expectedDateTime \u003d LocalDateTime.of(2024, 9, 15, 15, 30);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithiklenin"},"content":"        assertEquals(expectedDateTime, deadline.parseStringDeadline(dateTimeInput));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithiklenin"},"content":"    public void testParseStringNullInput() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithiklenin"},"content":"        assertThrows(OptimusException.class, () -\u003e {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithiklenin"},"content":"            deadline.parseStringDeadline(null);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithiklenin"},"content":"        });","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithiklenin"},"content":"    public void testParseStringEmptyInput() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithiklenin"},"content":"        assertThrows(OptimusException.class, () -\u003e {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rithiklenin"},"content":"            deadline.parseStringDeadline(\"  \");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rithiklenin"},"content":"        });","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rithiklenin"},"content":"    public void testParseStringInvalidFormat() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rithiklenin"},"content":"        String invalidDateTimeInput \u003d \"invalid date\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rithiklenin"},"content":"        assertThrows(OptimusException.class, () -\u003e {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rithiklenin"},"content":"            deadline.parseStringDeadline(invalidDateTimeInput);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rithiklenin"},"content":"        });","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rithiklenin"},"content":"    public void testParseStringInvalidDateFormat() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rithiklenin"},"content":"        String invalidDateTimeInput \u003d \"32/13/2024 12:00\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rithiklenin"},"content":"        assertThrows(OptimusException.class, () -\u003e {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rithiklenin"},"content":"            deadline.parseStringDeadline(invalidDateTimeInput);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rithiklenin"},"content":"        });","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"rithiklenin":76}},{"path":"src/Test/java/optimus/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":"class EventsTest {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"    private Events event;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"    @BeforeEach","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"    public void setUp() throws OptimusException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"        event \u003d new Events(\"Test event\", \"1/09/2024 12:00\", \"1/09/2024 14:00\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":"    public void testParseStringValidFormat1() throws OptimusException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"        String dateTimeInput \u003d \"15/09/2024 15:30\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"        LocalDateTime expectedDateTime \u003d LocalDateTime.of(2024, 9, 15, 15, 30);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"        assertEquals(expectedDateTime, event.parseStringEvent(dateTimeInput));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithiklenin"},"content":"    public void testParseStringValidFormat2() throws OptimusException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithiklenin"},"content":"        String dateTimeInput \u003d \"2024-09-15 15:30\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithiklenin"},"content":"        LocalDateTime expectedDateTime \u003d LocalDateTime.of(2024, 9, 15, 15, 30);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithiklenin"},"content":"        assertEquals(expectedDateTime, event.parseStringEvent(dateTimeInput));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithiklenin"},"content":"    public void testParseStringValidFormat3() throws OptimusException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithiklenin"},"content":"        String dateTimeInput \u003d \"15-09-2024 15:30\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithiklenin"},"content":"        LocalDateTime expectedDateTime \u003d LocalDateTime.of(2024, 9, 15, 15, 30);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithiklenin"},"content":"        assertEquals(expectedDateTime, event.parseStringEvent(dateTimeInput));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithiklenin"},"content":"    public void testParseStringValidFormat4() throws OptimusException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithiklenin"},"content":"        String dateTimeInput \u003d \"2024/09/15 15:30\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithiklenin"},"content":"        LocalDateTime expectedDateTime \u003d LocalDateTime.of(2024, 9, 15, 15, 30);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithiklenin"},"content":"        assertEquals(expectedDateTime, event.parseStringEvent(dateTimeInput));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithiklenin"},"content":"    public void testParseStringNullInput() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithiklenin"},"content":"        assertThrows(OptimusException.class, () -\u003e {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithiklenin"},"content":"            event.parseStringEvent(null);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithiklenin"},"content":"        });","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithiklenin"},"content":"    public void testParseStringEmptyInput() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithiklenin"},"content":"        assertThrows(OptimusException.class, () -\u003e {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rithiklenin"},"content":"            event.parseStringEvent(\"  \");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rithiklenin"},"content":"        });","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rithiklenin"},"content":"    public void testParseStringInvalidFormat() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rithiklenin"},"content":"        String invalidDateTimeInput \u003d \"invalid date\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rithiklenin"},"content":"        assertThrows(OptimusException.class, () -\u003e {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rithiklenin"},"content":"            event.parseStringEvent(invalidDateTimeInput);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rithiklenin"},"content":"        });","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rithiklenin"},"content":"    public void testParseStringInvalidDateFormat() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rithiklenin"},"content":"        String invalidDateTimeInput \u003d \"32/13/2024 12:00\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rithiklenin"},"content":"        assertThrows(OptimusException.class, () -\u003e {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rithiklenin"},"content":"            event.parseStringEvent(invalidDateTimeInput);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rithiklenin"},"content":"        });","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"rithiklenin":76}},{"path":"src/main/java/optimus/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":" * Represents a deadline task with a specific due date and time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":" * A {@code Deadlines} object stores the task description, due date, and time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"    private String by;  // The string representation of the due date and time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"    private LocalDateTime dateTime;  // The parsed LocalDateTime object representing the due date and time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"     * Constructs a {@code Deadlines} object with the specified task description and due date/time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":"     * @param description the description of the deadline task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":"     * @param by the string representation of the due date and time in specific formats.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"     * @throws OptimusException if the date-time string cannot be parsed or is null/empty.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"    public Deadlines(String description, String by) throws OptimusException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithiklenin"},"content":"        super(description);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithiklenin"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithiklenin"},"content":"        this.dateTime \u003d parseStringDeadline(by);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithiklenin"},"content":"     * Parses the provided date-time string into a {@code LocalDateTime} object.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithiklenin"},"content":"     * The method checks if the input string matches one of the supported date-time formats.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithiklenin"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithiklenin"},"content":"     * Supported formats:","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithiklenin"},"content":"     * \u003cul\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithiklenin"},"content":"     * \u003cli\u003ed/MM/yyyy HH:mm\u003c/li\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithiklenin"},"content":"     * \u003cli\u003eyyyy-MM-dd HH:mm\u003c/li\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithiklenin"},"content":"     * \u003cli\u003ed-MM-yyyy HH:mm\u003c/li\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithiklenin"},"content":"     * \u003cli\u003eyyyy/MM/d HH:mm\u003c/li\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithiklenin"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithiklenin"},"content":"     * @param dateTime the string representation of the due date and time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithiklenin"},"content":"     * @return the {@code LocalDateTime} object.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithiklenin"},"content":"     * @throws OptimusException if the date-time string is null or empty, or does not match any of the supported formats required.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithiklenin"},"content":"    LocalDateTime parseStringDeadline(String dateTime) throws OptimusException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithiklenin"},"content":"        if (dateTime \u003d\u003d null || dateTime.trim().isEmpty()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithiklenin"},"content":"            throw new OptimusException(\"Date-time string cannot be null or empty.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithiklenin"},"content":"        DateTimeFormatter[] formats \u003d {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithiklenin"},"content":"                DateTimeFormatter.ofPattern(\"d/MM/yyyy HH:mm\"),","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithiklenin"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"),","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithiklenin"},"content":"                DateTimeFormatter.ofPattern(\"d-MM-yyyy HH:mm\"),","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithiklenin"},"content":"                DateTimeFormatter.ofPattern(\"yyyy/MM/d HH:mm\")","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithiklenin"},"content":"                // Different acceptable formats to be parsed","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithiklenin"},"content":"        };","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rithiklenin"},"content":"        for (DateTimeFormatter diffFormat : formats) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rithiklenin"},"content":"            try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rithiklenin"},"content":"                return LocalDateTime.parse(dateTime, diffFormat);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rithiklenin"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rithiklenin"},"content":"                // Continue to the next format if parsing fails","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rithiklenin"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rithiklenin"},"content":"        throw new OptimusException(\"Invalid date-time format. Please use one of the following formats: \" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rithiklenin"},"content":"                \"d/MM/yyyy HH:mm, yyyy-MM-dd HH:mm, d-MM-yyyy HH:mm, yyyy/MM/d HH:mm.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rithiklenin"},"content":"     * Returns the string representation of the deadline task, including its status, description, and due date/time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rithiklenin"},"content":"     * @return the string representation of the deadline task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rithiklenin"},"content":"    @Override","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rithiklenin"},"content":"    public String toString() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rithiklenin"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mma\")) + \")\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rithiklenin"},"content":"     * Returns the string representation of the deadline task formatted for saving to a file.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rithiklenin"},"content":"     * @return the formatted string for saving the deadline task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rithiklenin"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rithiklenin"},"content":"    public String toSaveString() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rithiklenin"},"content":"        return \"D | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getDescription() + \" | \" + by;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-08-24","isFullCredit":false}],"authorContributionMap":{"rithiklenin":87}},{"path":"src/main/java/optimus/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":" * Represents an event task with a specific start and end date/time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":" * An {@code Events} object stores the task description, start time, and end time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"public class Events extends Task {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"    private String from;  // The string representation of the event start time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"    private String to;  // The string representation of the event end time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"    private LocalDateTime fromStr;  // The parsed LocalDateTime object representing the start time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"    private LocalDateTime toStr;  // The parsed LocalDateTime object representing the end time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":"     * Constructs an {@code Events} object with the specified task description, start time, and end time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"     * @param description the description of the event task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"     * @param from the string representation of the event start time in specific formats.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"     * @param to the string representation of the event end time in specific formats.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithiklenin"},"content":"     * @throws OptimusException if the date-time strings cannot be parsed or are null/empty.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithiklenin"},"content":"    public Events(String description, String from, String to) throws OptimusException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithiklenin"},"content":"        super(description);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithiklenin"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithiklenin"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithiklenin"},"content":"        this.fromStr \u003d parseStringEvent(from);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithiklenin"},"content":"        this.toStr \u003d parseStringEvent(to);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithiklenin"},"content":"     * Parses the provided date-time string into a {@code LocalDateTime} object.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithiklenin"},"content":"     * The method checks if the input string matches one of the supported date-time formats.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithiklenin"},"content":"     * Supported formats:","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithiklenin"},"content":"     * \u003cul\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithiklenin"},"content":"     * \u003cli\u003ed/MM/yyyy HH:mm\u003c/li\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithiklenin"},"content":"     * \u003cli\u003eyyyy-MM-dd HH:mm\u003c/li\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithiklenin"},"content":"     * \u003cli\u003ed-MM-yyyy HH:mm\u003c/li\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithiklenin"},"content":"     * \u003cli\u003eyyyy/MM/d HH:mm\u003c/li\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithiklenin"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithiklenin"},"content":"     * @param dateTime the string representation of the event start or end time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithiklenin"},"content":"     * @return the parsed {@code LocalDateTime} object.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithiklenin"},"content":"     * @throws OptimusException if the date-time string is null, empty, or does not match any of the supported formats.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithiklenin"},"content":"    public LocalDateTime parseStringEvent(String dateTime) throws OptimusException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithiklenin"},"content":"        if (dateTime \u003d\u003d null || dateTime.trim().isEmpty()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithiklenin"},"content":"            throw new OptimusException(\"Date-time string cannot be null or empty.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithiklenin"},"content":"        dateTime \u003d dateTime.trim();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rithiklenin"},"content":"        DateTimeFormatter[] formats \u003d {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rithiklenin"},"content":"                DateTimeFormatter.ofPattern(\"d/MM/yyyy HH:mm\"),","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rithiklenin"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"),","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rithiklenin"},"content":"                DateTimeFormatter.ofPattern(\"d-MM-yyyy HH:mm\"),","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rithiklenin"},"content":"                DateTimeFormatter.ofPattern(\"yyyy/MM/d HH:mm\"),","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rithiklenin"},"content":"        };","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rithiklenin"},"content":"        for (DateTimeFormatter diffFormat : formats) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rithiklenin"},"content":"            try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rithiklenin"},"content":"                return LocalDateTime.parse(dateTime, diffFormat);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rithiklenin"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rithiklenin"},"content":"                // Continue to the next format if parsing fails","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rithiklenin"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rithiklenin"},"content":"        throw new OptimusException(\"Invalid date-time format. Please use one of the following formats: \" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rithiklenin"},"content":"                \"d/MM/yyyy HH:mm, yyyy-MM-dd HH:mm, d-MM-yyyy HH:mm, yyyy/MM/d HH:mm.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rithiklenin"},"content":"     * Returns the string representation of the event task, including its status, description, and start/end times.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rithiklenin"},"content":"     * @return the string representation of the event task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rithiklenin"},"content":"    @Override","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rithiklenin"},"content":"    public String toString() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rithiklenin"},"content":"        return \"[E]\" + super.toString() + \" (on: \" + fromStr.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mma\"))","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rithiklenin"},"content":"                + \" - \" + toStr.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mma\")) + \")\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rithiklenin"},"content":"     * Returns the string representation of the event task formatted for saving to a file.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rithiklenin"},"content":"     * @return the formatted string for saving the event task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rithiklenin"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rithiklenin"},"content":"    public String toSaveString() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rithiklenin"},"content":"        return \"E | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getDescription() + \" | \" + from + \" | \" + to;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-08-24","isFullCredit":false}],"authorContributionMap":{"rithiklenin":95}},{"path":"src/main/java/optimus/Optimus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":" * The main class for the Optimus task management application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":" * The {@code Optimus} class initializes the necessary components and runs the application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":"public class Optimus {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"    private static final String FILE_PATH \u003d \"./data/optimus.txt\";  // Default file path for storing tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"    private Storage storage;  // Handles storage-related operations like loading and saving tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"    private TaskList tasks;  // Manages the list of tasks in the application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"    private Ui ui;  // Handles user interaction, including input and output.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"     * Constructs an {@code Optimus} object with the specified file path for storing tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":"     * @param filePath the file path for storing tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"    public Optimus(String filePath) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithiklenin"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithiklenin"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithiklenin"},"content":"            tasks \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithiklenin"},"content":"        } catch (FileNotFoundException | OptimusException e) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithiklenin"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithiklenin"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithiklenin"},"content":"     * Starts the main loop of the Optimus application, reading and processing user commands.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithiklenin"},"content":"    public void run() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithiklenin"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithiklenin"},"content":"        while (true) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithiklenin"},"content":"            String command \u003d ui.readCommand();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithiklenin"},"content":"            try {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithiklenin"},"content":"                Task task \u003d Parser.parseCommand(command, tasks, ui, storage);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithiklenin"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithiklenin"},"content":"                    tasks.addTask(task);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithiklenin"},"content":"                    ui.TaskAdded(task, tasks.sizeOfRecord());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithiklenin"},"content":"                }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithiklenin"},"content":"            } catch (OptimusException | IOException e) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithiklenin"},"content":"                ui.printError(e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithiklenin"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithiklenin"},"content":"     * The entry point for the Optimus application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithiklenin"},"content":"     * Initializes and runs the application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithiklenin"},"content":"     * @param args command-line arguments (not used).","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rithiklenin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rithiklenin"},"content":"        new Optimus(FILE_PATH).run();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-08-24","isFullCredit":false}],"authorContributionMap":{"rithiklenin":61}},{"path":"src/main/java/optimus/OptimusException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":" * Custom exception class for handling errors specific to the Optimus application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":" * {@code OptimusException} is used to indicate application-specific issues that need to be","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":" * reported to the user.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":"public class OptimusException extends Exception {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"     * Constructs a new {@code OptimusException} with the specified detail message.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"     * @param message the detail message, saved for later retrieval by the {@link #getMessage()} method.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"    public OptimusException(String message) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"        super(message);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"rithiklenin":18}},{"path":"src/main/java/optimus/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"import java.util.List;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":"public class Parser {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":"    public static Task parseCommand(String text, TaskList record, Ui ui, Storage storage) throws OptimusException, IOException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":"        text \u003d text.trim();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":"        if (text.equals(\"bye\")) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":"            storage.saveToFile(record.getTasks());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"            ui.showGoodbye();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"            System.exit(0);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"        } else if (text.startsWith(\"find \")) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"            String keyword \u003d text.substring(5).trim();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"            if (keyword.isEmpty()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"                throw new OptimusException(\"The keyword provided is empty\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"            }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"            record.findTasks(keyword, ui);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":"        } else if (text.equals(\"list\")) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":"            ui.listTasks(record);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"        } else if (text.startsWith(\"delete\")) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"            String[] parts \u003d text.split(\" \");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"            if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithiklenin"},"content":"                throw new OptimusException(\"The task number provided is empty.\" +","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithiklenin"},"content":"                        \" Please provide a valid task number.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithiklenin"},"content":"            }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithiklenin"},"content":"            int taskNumber \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithiklenin"},"content":"            if (taskNumber \u003c 0 || taskNumber \u003e\u003d record.sizeOfRecord()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithiklenin"},"content":"                throw new OptimusException(\"The task number provided is out of range. \" +","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithiklenin"},"content":"                        \"Please provide a valid task number.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithiklenin"},"content":"            }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithiklenin"},"content":"            Task taskToDelete \u003d record.getTask(taskNumber);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithiklenin"},"content":"            record.deleteTask(taskNumber);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithiklenin"},"content":"            ui.TaskDeleted(taskToDelete, record.sizeOfRecord());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithiklenin"},"content":"        } else if (text.startsWith(\"mark\")) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithiklenin"},"content":"            String[] parts \u003d text.split(\" \");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithiklenin"},"content":"            if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithiklenin"},"content":"                throw new OptimusException(\"The task number provided is empty.\" +","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithiklenin"},"content":"                        \" Please provide a valid task number.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithiklenin"},"content":"            }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithiklenin"},"content":"            int taskNumber \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithiklenin"},"content":"            if (taskNumber \u003c 0 || taskNumber \u003e\u003d record.sizeOfRecord()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithiklenin"},"content":"                throw new OptimusException(\"The task number provided is out of range. \" +","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithiklenin"},"content":"                        \"Please provide a valid task number.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithiklenin"},"content":"            }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithiklenin"},"content":"            Task taskToMark \u003d record.getTask(taskNumber);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithiklenin"},"content":"            taskToMark.setDone();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithiklenin"},"content":"            ui.TaskMarked(taskToMark);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithiklenin"},"content":"        } else if (text.startsWith(\"unmark\")) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithiklenin"},"content":"            String[] parts \u003d text.split(\" \");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithiklenin"},"content":"            if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithiklenin"},"content":"                throw new OptimusException(\"The task number provided is empty.\" +","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithiklenin"},"content":"                        \" Please provide a valid task number.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithiklenin"},"content":"            }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithiklenin"},"content":"            int taskNumber \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithiklenin"},"content":"            if (taskNumber \u003c 0 || taskNumber \u003e\u003d record.sizeOfRecord()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rithiklenin"},"content":"                throw new OptimusException(\"The task number provided is out of range. \" +","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rithiklenin"},"content":"                        \"Please provide a valid task number.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rithiklenin"},"content":"            }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rithiklenin"},"content":"            Task taskToUnmark \u003d record.getTask(taskNumber);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rithiklenin"},"content":"            taskToUnmark.setNotDone();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rithiklenin"},"content":"            ui.TaskUnmarked(taskToUnmark);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rithiklenin"},"content":"        } else if (text.startsWith(\"todo \")) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rithiklenin"},"content":"            String description \u003d text.substring(5).trim();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rithiklenin"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rithiklenin"},"content":"                throw new OptimusException(\"The description of a todo cannot be empty. \" +","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rithiklenin"},"content":"                        \"Please provide a task description.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rithiklenin"},"content":"            }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rithiklenin"},"content":"            return new ToDos(description);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rithiklenin"},"content":"        } else if (text.startsWith(\"deadline \")) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rithiklenin"},"content":"            String[] parts \u003d text.split(\" /by \");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rithiklenin"},"content":"            if (parts.length \u003c 2) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rithiklenin"},"content":"                throw new OptimusException(\"The deadline format is incorrect. \" +","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rithiklenin"},"content":"                        \"Please provide a description and a deadline (e.g., deadline return book /by 2024-09-10).\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rithiklenin"},"content":"            }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rithiklenin"},"content":"            String description \u003d parts[0].substring(9).trim();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rithiklenin"},"content":"            String by \u003d parts[1].trim();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rithiklenin"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rithiklenin"},"content":"                throw new OptimusException(\"The description of a deadline cannot be empty. \" +","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rithiklenin"},"content":"                        \"Please provide a task description.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rithiklenin"},"content":"            }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rithiklenin"},"content":"            return new Deadlines(description, by);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rithiklenin"},"content":"        } else if (text.startsWith(\"event \")) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rithiklenin"},"content":"            String[] parts \u003d text.split(\" /from | /to \");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rithiklenin"},"content":"            if (parts.length \u003c 3) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rithiklenin"},"content":"                throw new OptimusException(\"The event time format is incorrect. \" +","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rithiklenin"},"content":"                        \"Please provide both \u0027from\u0027 and \u0027to\u0027 times (e.g., event meeting /from 2024-  \" +","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rithiklenin"},"content":"                        \"2024-09-10 14:00 /to 2024-09-10 16:00).\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rithiklenin"},"content":"            }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rithiklenin"},"content":"            String description \u003d parts[0].substring(6).trim();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rithiklenin"},"content":"            String from \u003d parts[1].trim();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rithiklenin"},"content":"            String to \u003d parts[2].trim();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rithiklenin"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rithiklenin"},"content":"                throw new OptimusException(\"The description of an event cannot be empty. \" +","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rithiklenin"},"content":"                        \"Please provide a task description.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rithiklenin"},"content":"            }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rithiklenin"},"content":"            return new Events(description, from, to);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rithiklenin"},"content":"        } else {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rithiklenin"},"content":"            throw new OptimusException(\"I don\u0027t understand that command. \" +","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rithiklenin"},"content":"                    \"Please try again with a valid command (e.g., todo, deadline, event, delete, list, bye, mark, unmark).\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rithiklenin"},"content":"        return null;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"rithiklenin":104}},{"path":"src/main/java/optimus/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"import java.io.File;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":"import java.util.List;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"public class Storage {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"    private String filepath;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"    List\u003cTask\u003e loadFile() throws FileNotFoundException, OptimusException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":"        File f \u003d new File(filepath);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":"        List\u003cTask\u003e record \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"        if (!f.exists()) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"            System.out.println(\"No existing data file found in given directory. A new record will be established\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"            return record;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithiklenin"},"content":"        Scanner s \u003d new Scanner(f); // Taken from notes","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithiklenin"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithiklenin"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithiklenin"},"content":"            String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithiklenin"},"content":"            String taskType \u003d parts[0];","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithiklenin"},"content":"            boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithiklenin"},"content":"            String description \u003d parts[2];","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithiklenin"},"content":"            Task task \u003d null;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithiklenin"},"content":"            switch (taskType) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithiklenin"},"content":"                case \"T\":","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithiklenin"},"content":"                    task \u003d new ToDos(description);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithiklenin"},"content":"                    break;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithiklenin"},"content":"                case \"D\":","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithiklenin"},"content":"                    String by \u003d parts.length \u003e 3 ? parts[3] : \"\";","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithiklenin"},"content":"                    task \u003d new Deadlines(description, by);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithiklenin"},"content":"                    break;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithiklenin"},"content":"                case \"E\":","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithiklenin"},"content":"                    String from \u003d parts.length \u003e 3 ? parts[3] : \"\";","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithiklenin"},"content":"                    String to \u003d parts.length \u003e 4 ? parts[4] : \"\";","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithiklenin"},"content":"                    task \u003d new Events(description, from, to);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithiklenin"},"content":"                    break;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithiklenin"},"content":"            }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithiklenin"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithiklenin"},"content":"                if (isDone) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithiklenin"},"content":"                    task.setDone();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithiklenin"},"content":"                }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithiklenin"},"content":"                record.add(task);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithiklenin"},"content":"            }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithiklenin"},"content":"        s.close();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rithiklenin"},"content":"        return record;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rithiklenin"},"content":"    public void saveToFile(List\u003cTask\u003e record) throws IOException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rithiklenin"},"content":"        FileWriter fW \u003d new FileWriter(filepath);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rithiklenin"},"content":"        for (Task task : record) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rithiklenin"},"content":"            fW.write(task.toSaveString() + System.lineSeparator()); // Found on StackOverflow","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rithiklenin"},"content":"        fW.close();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"rithiklenin":67}},{"path":"src/main/java/optimus/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":" * Abstract class representing a task in the Optimus application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":" * A {@code Task} has a description and a status indicating whether it is done.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":" * Subclasses of {@code Task} must implement the {@code toSaveString} method for saving the task\u0027s data.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":"    protected String description;  // The description of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"    protected boolean isDone;  // The status of the task, indicating whether it is completed.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"     * Constructs a new {@code Task} with the specified description.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"     * The task is initially not done.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"     * @param description the description of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithiklenin"},"content":"     * Returns a status icon representing the completion status of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithiklenin"},"content":"     * \"X\" indicates that the task is done, and \" \" (space) indicates that it is not done.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithiklenin"},"content":"     * @return the status icon of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithiklenin"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithiklenin"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithiklenin"},"content":"     * Marks the task as done by setting its status to true.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithiklenin"},"content":"    public void setDone() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithiklenin"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithiklenin"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithiklenin"},"content":"     * @return {@code true} if the task is done; {@code false} otherwise.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithiklenin"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithiklenin"},"content":"        return isDone;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithiklenin"},"content":"     * Marks the task as not done by setting its status to false.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithiklenin"},"content":"    public void setNotDone() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithiklenin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rithiklenin"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rithiklenin"},"content":"     * @return the description of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rithiklenin"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rithiklenin"},"content":"        return description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rithiklenin"},"content":"     * Returns a string representation of the task, including its status and description.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rithiklenin"},"content":"     * @return the string representation of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rithiklenin"},"content":"    @Override","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rithiklenin"},"content":"    public String toString() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rithiklenin"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rithiklenin"},"content":"     * Abstract method to be implemented by subclasses to return a formatted string","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rithiklenin"},"content":"     * for saving the task\u0027s data to a file.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rithiklenin"},"content":"     * @return the formatted string for saving the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rithiklenin"},"content":"    public abstract String toSaveString();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"rithiklenin":83}},{"path":"src/main/java/optimus/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"import java.util.List;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":"public class TaskList {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":"    private List\u003cTask\u003e record;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":"    public TaskList() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":"        this.record \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"        this.record \u003d tasks;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"        record.add(task);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"        record.remove(index);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithiklenin"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithiklenin"},"content":"        return record.get(index);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithiklenin"},"content":"    public int sizeOfRecord() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithiklenin"},"content":"        return record.size();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithiklenin"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithiklenin"},"content":"        return record;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithiklenin"},"content":"    public void findTasks(String keyword, Ui ui) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithiklenin"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithiklenin"},"content":"        for (Task task : record) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithiklenin"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithiklenin"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithiklenin"},"content":"            }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithiklenin"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithiklenin"},"content":"            ui.printError(\"No matching tasks found. Try again\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithiklenin"},"content":"        } else {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithiklenin"},"content":"            ui.listFoundTasks(matchingTasks);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"rithiklenin":50}},{"path":"src/main/java/optimus/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":" * Represents a to-do task in the Optimus application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":" * A {@code ToDos} task is a specific type of {@code Task} that does not have any associated date or time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":"public class ToDos extends Task {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":"     * Constructs a new {@code ToDos} task with the specified description.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"     * @param description the description of the to-do task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"    public ToDos(String description) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"        super(description);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":"     * Returns a string representation of the to-do task, including its status and description.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"     * @return the string representation of the to-do task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"    @Override","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithiklenin"},"content":"    public String toString() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithiklenin"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithiklenin"},"content":"     * Returns a formatted string for saving the to-do task\u0027s data to a file.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithiklenin"},"content":"     * The string includes the task type, completion status, and description.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithiklenin"},"content":"     * @return the formatted string for saving the to-do task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithiklenin"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithiklenin"},"content":"    public String toSaveString() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithiklenin"},"content":"        return \"T | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getDescription();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-08-24","isFullCredit":false}],"authorContributionMap":{"rithiklenin":38}},{"path":"src/main/java/optimus/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"import java.util.List;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":" * Represents the user interface for the Optimus application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":" * The {@code Ui} class handles interactions with the user, including displaying messages","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":" * and reading input commands.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"public class Ui {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"    private Scanner scanner;  // Scanner for reading user input.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"     * Constructs a new {@code Ui} object that initializes the scanner for user input.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"    public Ui() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithiklenin"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithiklenin"},"content":"        System.out.println(\"Hello! I\u0027m optimus.Optimus\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithiklenin"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithiklenin"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithiklenin"},"content":"    public void showGoodbye() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithiklenin"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithiklenin"},"content":"     * Reads a command input from the user.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithiklenin"},"content":"     * @return the command input as a string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithiklenin"},"content":"    public String readCommand() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithiklenin"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithiklenin"},"content":"     * Displays a message indicating that a task has been added to the list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithiklenin"},"content":"     * @param task the task that has been added.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithiklenin"},"content":"     * @param size the current number of tasks in the list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithiklenin"},"content":"    public void TaskAdded(Task task, int size) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithiklenin"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithiklenin"},"content":"        System.out.println(\"  \" + task.toString());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithiklenin"},"content":"        System.out.println(\"Now you have \" + size + (size \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rithiklenin"},"content":"     * Displays a message indicating that a task has been deleted from the list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rithiklenin"},"content":"     * @param task the task that has been removed.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rithiklenin"},"content":"     * @param size the current number of tasks in the list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rithiklenin"},"content":"    public void TaskDeleted(Task task, int size) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rithiklenin"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rithiklenin"},"content":"        System.out.println(\"  \" + task.toString());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rithiklenin"},"content":"        System.out.println(\"Now you have \" + size + (size \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rithiklenin"},"content":"     * Displays a list of tasks currently in the user\u0027s task list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rithiklenin"},"content":"     * @param tasks the list of tasks to display.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rithiklenin"},"content":"    public void listTasks(TaskList tasks) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rithiklenin"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rithiklenin"},"content":"        for (int i \u003d 0; i \u003c tasks.sizeOfRecord(); i++) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rithiklenin"},"content":"            System.out.println((i + 1) + \". \" + tasks.getTask(i).toString());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rithiklenin"},"content":"     * Displays a message indicating that a task has been marked as done.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rithiklenin"},"content":"     * @param task the task that has been marked as done.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rithiklenin"},"content":"    public void TaskMarked(Task task) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rithiklenin"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rithiklenin"},"content":"        System.out.println(\"  \" + task.toString());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rithiklenin"},"content":"     * Displays a message indicating that a task has been marked as not done.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rithiklenin"},"content":"     * @param task the task that has been marked as not done.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rithiklenin"},"content":"    public void TaskUnmarked(Task task) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rithiklenin"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rithiklenin"},"content":"        System.out.println(\"  \" + task.toString());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rithiklenin"},"content":"     * Displays a list of tasks that match the search keyword.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rithiklenin"},"content":"     * @param tasks the list of tasks to display.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rithiklenin"},"content":"    public void listFoundTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rithiklenin"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rithiklenin"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rithiklenin"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i).toString());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rithiklenin"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rithiklenin"},"content":"     * @param message the error message to display.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rithiklenin"},"content":"    public void printError(String message) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rithiklenin"},"content":"        System.out.println(message);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"rithiklenin":121}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"todo read book","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":"list","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":"mark 1","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":"unmark 1","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":"mark 4","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":"unmark 4","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":"bye","lastModifiedDate":"2024-08-24","isFullCredit":false}],"authorContributionMap":{"rithiklenin":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"java -classpath ../bin Optimus \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"rithiklenin":1,"-":37}}]
