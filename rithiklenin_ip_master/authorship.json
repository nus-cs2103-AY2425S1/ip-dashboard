[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithiklenin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithiklenin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithiklenin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithiklenin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithiklenin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithiklenin"},"content":"    mainClass.set(\"optimus.Launcher\")","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithiklenin"},"content":"    archiveBaseName \u003d \"Optimus\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithiklenin"},"content":"    mainClassName \u003d \u0027optimus.Optimus\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithiklenin"},"content":"    archiveFileName \u003d \u0027Optimus.jar\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"rithiklenin":21,"-":39}},{"path":"data/optimus.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"T | 0 | eat","lastModifiedDate":"2024-09-21","isFullCredit":false}],"authorContributionMap":{"rithiklenin":1}},{"path":"src/Test/java/optimus/DeadlinesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":"class DeadlinesTest {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"    private Deadlines deadline;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"    @BeforeEach","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"    public void setUp() throws OptimusException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"        deadline \u003d new Deadlines(\"Test deadline\", \"1/09/2024 12:00\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":"    public void testParseStringValidFormat1() throws OptimusException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"        String dateTimeInput \u003d \"15/09/2024 15:30\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"        LocalDateTime expectedDateTime \u003d LocalDateTime.of(2024, 9, 15, 15, 30);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"        assertEquals(expectedDateTime, deadline.parseStringDeadline(dateTimeInput));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithiklenin"},"content":"    public void testParseStringValidFormat2() throws OptimusException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithiklenin"},"content":"        String dateTimeInput \u003d \"2024-09-15 15:30\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithiklenin"},"content":"        LocalDateTime expectedDateTime \u003d LocalDateTime.of(2024, 9, 15, 15, 30);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithiklenin"},"content":"        assertEquals(expectedDateTime, deadline.parseStringDeadline(dateTimeInput));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithiklenin"},"content":"    public void testParseStringValidFormat3() throws OptimusException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithiklenin"},"content":"        String dateTimeInput \u003d \"15-09-2024 15:30\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithiklenin"},"content":"        LocalDateTime expectedDateTime \u003d LocalDateTime.of(2024, 9, 15, 15, 30);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithiklenin"},"content":"        assertEquals(expectedDateTime, deadline.parseStringDeadline(dateTimeInput));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithiklenin"},"content":"    public void testParseStringValidFormat4() throws OptimusException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithiklenin"},"content":"        String dateTimeInput \u003d \"2024/09/15 15:30\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithiklenin"},"content":"        LocalDateTime expectedDateTime \u003d LocalDateTime.of(2024, 9, 15, 15, 30);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithiklenin"},"content":"        assertEquals(expectedDateTime, deadline.parseStringDeadline(dateTimeInput));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"rithiklenin":46}},{"path":"src/Test/java/optimus/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":"class EventsTest {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"    private Events event;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"    @BeforeEach","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"    public void setUp() throws OptimusException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"        event \u003d new Events(\"Test event\", \"1/09/2024 12:00\", \"1/09/2024 14:00\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":"    public void testParseStringValidFormat1() throws OptimusException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"        String dateTimeInput \u003d \"15/09/2024 15:30\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"        LocalDateTime expectedDateTime \u003d LocalDateTime.of(2024, 9, 15, 15, 30);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"        assertEquals(expectedDateTime, event.parseStringEvent(dateTimeInput));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithiklenin"},"content":"    public void testParseStringValidFormat2() throws OptimusException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithiklenin"},"content":"        String dateTimeInput \u003d \"2024-09-15 15:30\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithiklenin"},"content":"        LocalDateTime expectedDateTime \u003d LocalDateTime.of(2024, 9, 15, 15, 30);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithiklenin"},"content":"        assertEquals(expectedDateTime, event.parseStringEvent(dateTimeInput));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithiklenin"},"content":"    public void testParseStringValidFormat3() throws OptimusException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithiklenin"},"content":"        String dateTimeInput \u003d \"15-09-2024 15:30\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithiklenin"},"content":"        LocalDateTime expectedDateTime \u003d LocalDateTime.of(2024, 9, 15, 15, 30);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithiklenin"},"content":"        assertEquals(expectedDateTime, event.parseStringEvent(dateTimeInput));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithiklenin"},"content":"    public void testParseStringValidFormat4() throws OptimusException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithiklenin"},"content":"        String dateTimeInput \u003d \"2024/09/15 15:30\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithiklenin"},"content":"        LocalDateTime expectedDateTime \u003d LocalDateTime.of(2024, 9, 15, 15, 30);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithiklenin"},"content":"        assertEquals(expectedDateTime, event.parseStringEvent(dateTimeInput));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"rithiklenin":46}},{"path":"src/Test/java/optimus/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":"public class TaskListTest {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"    private Ui ui;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"    @BeforeEach","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"    public void setUp() throws OptimusException {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"        // Set up a TaskList with some tasks for testing","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"        taskList \u003d new TaskList(Arrays.asList(","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"                new ToDos(\"Buy groceries\"),","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"                new Deadlines(\"Submit assignment\", \"2024-10-10 16:00\"),","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":"                new Events(\"Project meeting\", \"2024-09-20 16:00\", \"2024-09-21 17:00\")","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":"        ));","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"        ui \u003d new Ui(); // Assuming Ui class exists","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithiklenin"},"content":"    public void testFindTasks_NoMatch() {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithiklenin"},"content":"        String result \u003d taskList.findTasks(\"nonexistent\", ui);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithiklenin"},"content":"        assertEquals(\"No matching tasks found. Try again\", result);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithiklenin"},"content":"    public void testFindTasks_SingleMatch() {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithiklenin"},"content":"        String result \u003d taskList.findTasks(\"Buy\", ui);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithiklenin"},"content":"        String expected \u003d \"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithiklenin"},"content":"                + \"1. [T][ ] Buy groceries\\n\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithiklenin"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithiklenin"},"content":"    public void testFindTasks_MultipleMatches() {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithiklenin"},"content":"        String result \u003d taskList.findTasks(\"Submit\", ui);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithiklenin"},"content":"        String expected \u003d \"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithiklenin"},"content":"                + \"1. [D][ ] Submit assignment (by: Oct 10 2024, 4:00pm)\\n\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithiklenin"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithiklenin"},"content":"    public void testFindTasks_CaseInsensitive() {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithiklenin"},"content":"        String result \u003d taskList.findTasks(\"BUY\", ui);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithiklenin"},"content":"        String expected \u003d \"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithiklenin"},"content":"                + \"1. [T][ ] Buy groceries\\n\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithiklenin"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithiklenin"},"content":"    @Test","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithiklenin"},"content":"    public void testFindTasks_MultipleKeywords() {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithiklenin"},"content":"        String result \u003d taskList.findTasks(\"project meeting\", ui);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rithiklenin"},"content":"        String expected \u003d \"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rithiklenin"},"content":"                + \"1. [E][ ] Project meeting (on: Sep 20 2024, 4:00pm - Sep 21 2024, 5:00pm)\\n\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rithiklenin"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false}],"authorContributionMap":{"rithiklenin":63}},{"path":"src/main/java/optimus/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":" * Represents a deadline task with a specific due date and time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"    private String by;  // The string representation of the due date and time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"    private LocalDateTime dateTime;  // The parsed LocalDateTime object representing the due date and time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"     * Constructs a {@code Deadlines} object with the specified task description and due date/time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"     * @throws OptimusException if the date-time string cannot be parsed or is null/empty.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":"    public Deadlines(String description, String by) throws OptimusException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":"        super(description);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"        this.dateTime \u003d parseStringDeadline(by);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithiklenin"},"content":"     * Parses the provided date-time string into a {@code LocalDateTime} object.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithiklenin"},"content":"     * The method checks if the input string matches one of the supported date-time formats.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithiklenin"},"content":"    LocalDateTime parseStringDeadline(String dateTime) throws OptimusException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithiklenin"},"content":"        if (dateTime \u003d\u003d null || dateTime.trim().isEmpty()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithiklenin"},"content":"            throw new OptimusException(\"Date-time string cannot be null or empty.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithiklenin"},"content":"        DateTimeFormatter[] formats \u003d {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithiklenin"},"content":"                DateTimeFormatter.ofPattern(\"d/MM/yyyy HH:mm\"),","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithiklenin"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"),","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithiklenin"},"content":"                DateTimeFormatter.ofPattern(\"d-MM-yyyy HH:mm\"),","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithiklenin"},"content":"                DateTimeFormatter.ofPattern(\"yyyy/MM/d HH:mm\")","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithiklenin"},"content":"                // Different acceptable formats to be parsed","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithiklenin"},"content":"        };","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithiklenin"},"content":"        for (DateTimeFormatter diffFormat : formats) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithiklenin"},"content":"            try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithiklenin"},"content":"                return LocalDateTime.parse(dateTime, diffFormat);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithiklenin"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithiklenin"},"content":"                // Continue to the next format if parsing fails","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithiklenin"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithiklenin"},"content":"        throw new OptimusException(\"Invalid date-time format. Please use one of the following formats: \" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithiklenin"},"content":"                \"d/MM/yyyy HH:mm, yyyy-MM-dd HH:mm, d-MM-yyyy HH:mm, yyyy/MM/d HH:mm.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithiklenin"},"content":"     * Returns the string representation of the deadline task, including its status, description, and due date/time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithiklenin"},"content":"    @Override","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithiklenin"},"content":"    public String toString() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rithiklenin"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mma\")) + \")\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rithiklenin"},"content":"     * Returns the string representation of the deadline task formatted for saving to a file.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rithiklenin"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rithiklenin"},"content":"    public String toSaveString() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rithiklenin"},"content":"        return \"D | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getDescription() + \" | \" + by;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-08-24","isFullCredit":false}],"authorContributionMap":{"rithiklenin":67}},{"path":"src/main/java/optimus/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"/**","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":" */","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"    @FXML","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithiklenin"},"content":"    @FXML","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithiklenin"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithiklenin"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithiklenin"},"content":"        try {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithiklenin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithiklenin"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithiklenin"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithiklenin"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithiklenin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithiklenin"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithiklenin"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithiklenin"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithiklenin"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithiklenin"},"content":"    private void flip() {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithiklenin"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithiklenin"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithiklenin"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithiklenin"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithiklenin"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithiklenin"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithiklenin"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithiklenin"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rithiklenin"},"content":"        db.flip();","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rithiklenin"},"content":"        return db;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false}],"authorContributionMap":{"rithiklenin":61}},{"path":"src/main/java/optimus/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":" * Represents an event task with a specific start and end date/time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":"public class Events extends Task {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"    private String from;  // The string representation of the event start time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"    private String to;  // The string representation of the event end time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"    private LocalDateTime fromStr;  // The parsed LocalDateTime object representing the start time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"    private LocalDateTime toStr;  // The parsed LocalDateTime object representing the end time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"     * Constructs an {@code Events} object with the specified task description, start time, and end time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":"     * @param description the description of the event task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"     * @param from the string representation of the event start time in specific formats.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"     * @param to the string representation of the event end time in specific formats.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"     * @throws OptimusException if the date-time strings cannot be parsed or are null/empty.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithiklenin"},"content":"    public Events(String description, String from, String to) throws OptimusException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithiklenin"},"content":"        super(description);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithiklenin"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithiklenin"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithiklenin"},"content":"        this.fromStr \u003d parseStringEvent(from);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithiklenin"},"content":"        this.toStr \u003d parseStringEvent(to);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithiklenin"},"content":"     * The method checks if the input string matches one of the supported date-time formats.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithiklenin"},"content":"     * @throws OptimusException if the date-time string is null, empty, or does not match any of the supported formats.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithiklenin"},"content":"    public LocalDateTime parseStringEvent(String dateTime) throws OptimusException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithiklenin"},"content":"        if (dateTime \u003d\u003d null || dateTime.trim().isEmpty()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithiklenin"},"content":"            throw new OptimusException(\"Date-time string cannot be null or empty.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithiklenin"},"content":"        dateTime \u003d dateTime.trim();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithiklenin"},"content":"        DateTimeFormatter[] formats \u003d {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithiklenin"},"content":"                DateTimeFormatter.ofPattern(\"d/MM/yyyy HH:mm\"),","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithiklenin"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"),","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithiklenin"},"content":"                DateTimeFormatter.ofPattern(\"d-MM-yyyy HH:mm\"),","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithiklenin"},"content":"                DateTimeFormatter.ofPattern(\"yyyy/MM/d HH:mm\"),","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithiklenin"},"content":"        };","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithiklenin"},"content":"        for (DateTimeFormatter diffFormat : formats) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithiklenin"},"content":"            try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithiklenin"},"content":"                return LocalDateTime.parse(dateTime, diffFormat);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithiklenin"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithiklenin"},"content":"                // Continue to the next format if parsing fails","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithiklenin"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rithiklenin"},"content":"        throw new OptimusException(\"Invalid date-time format. Please use one of the following formats: \" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rithiklenin"},"content":"                \"d/MM/yyyy HH:mm, yyyy-MM-dd HH:mm, d-MM-yyyy HH:mm, yyyy/MM/d HH:mm.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rithiklenin"},"content":"     * Returns the string representation of the event task, including its status, description, and start/end times.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rithiklenin"},"content":"    @Override","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rithiklenin"},"content":"    public String toString() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rithiklenin"},"content":"        return \"[E]\" + super.toString() + \" (on: \" + fromStr.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mma\"))","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rithiklenin"},"content":"                + \" - \" + toStr.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mma\")) + \")\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rithiklenin"},"content":"     * Returns the string representation of the event task formatted for saving to a file.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rithiklenin"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rithiklenin"},"content":"    public String toSaveString() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rithiklenin"},"content":"        return \"E | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getDescription() + \" | \" + from + \" | \" + to;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-08-24","isFullCredit":false}],"authorContributionMap":{"rithiklenin":78}},{"path":"src/main/java/optimus/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":"/**","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":" */","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":"public class Launcher {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-09-09","isFullCredit":false}],"authorContributionMap":{"rithiklenin":12}},{"path":"src/main/java/optimus/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"/**","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":" */","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"public class Main extends Application {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"    String FILE_PATH \u003d \"./data/optimus.txt\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"    private Optimus optimus \u003d new Optimus(FILE_PATH);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":"    @Override","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"        try {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithiklenin"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithiklenin"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithiklenin"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithiklenin"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithiklenin"},"content":"            stage.setMaxWidth(417);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithiklenin"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setOptimus(optimus);  // inject the Duke instance","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithiklenin"},"content":"            stage.show();","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithiklenin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithiklenin"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-09-09","isFullCredit":false}],"authorContributionMap":{"rithiklenin":35}},{"path":"src/main/java/optimus/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":"/**","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":" * Controller for the main GUI.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":" */","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"    @FXML","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"    @FXML","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"    @FXML","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":"    @FXML","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"    private Optimus optimus;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithiklenin"},"content":"    private Ui ui;","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithiklenin"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/images.png\"));","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithiklenin"},"content":"    private Image optimusImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/350px-Optimusg1.png\"));","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithiklenin"},"content":"    @FXML","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithiklenin"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithiklenin"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithiklenin"},"content":"    /** Injects the Duke instance */","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithiklenin"},"content":"    public void setOptimus(Optimus d) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithiklenin"},"content":"        optimus \u003d d;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithiklenin"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithiklenin"},"content":"                DialogBox.getDukeDialog(optimus.getUi().showWelcome(), optimusImage)","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithiklenin"},"content":"        );","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithiklenin"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithiklenin"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithiklenin"},"content":"    @FXML","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithiklenin"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithiklenin"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithiklenin"},"content":"        String response \u003d optimus.getResponse(input);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithiklenin"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithiklenin"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithiklenin"},"content":"                DialogBox.getDukeDialog(response, optimusImage)","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithiklenin"},"content":"        );","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithiklenin"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-09-09","isFullCredit":false}],"authorContributionMap":{"rithiklenin":56}},{"path":"src/main/java/optimus/Optimus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":" * The main class for the Optimus task management application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":" * The Optimus class initializes the necessary components and runs the application.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":"public class Optimus {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"    private static final String FILE_PATH \u003d \"./data/optimus.txt\";  // Default file path for storing tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"    private Storage storage;  // Handles loading and saving tasks.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"    private TaskList tasks;  // Manages the list of tasks.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"    private Ui ui;  // Handles user interaction.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":"     * Constructs an object with the specified file path for storing tasks.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"    public Optimus(String filePath) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithiklenin"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithiklenin"},"content":"            tasks \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithiklenin"},"content":"        } catch (FileNotFoundException | OptimusException e) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithiklenin"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithiklenin"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithiklenin"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithiklenin"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithiklenin"},"content":"     * Starts the main loop of the Optimus application, reading and processing user commands.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithiklenin"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithiklenin"},"content":"        try {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithiklenin"},"content":"            // Parse the user\u0027s input command and get the response string","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithiklenin"},"content":"            return Parser.parseCommand(input, tasks, ui, storage);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithiklenin"},"content":"        } catch (OptimusException | IOException e) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithiklenin"},"content":"            // Return the error message if an exception occurs","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithiklenin"},"content":"            return e.getMessage();","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithiklenin"},"content":"    public Ui getUi () {","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithiklenin"},"content":"        return ui;","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-08-24","isFullCredit":false}],"authorContributionMap":{"rithiklenin":52}},{"path":"src/main/java/optimus/OptimusException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":" * Custom exception class for handling errors specific to the Optimus application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":"public class OptimusException extends Exception {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":"     * Constructs a new exception with the specified detail message.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"    public OptimusException(String message) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"        super(message);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"rithiklenin":14}},{"path":"src/main/java/optimus/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":"public class Parser {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":"    public static String parseCommand(String text, TaskList record, Ui ui, Storage storage) throws OptimusException, IOException {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"        assert text !\u003d null : \"Input text should not be null\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"        text \u003d text.trim();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"        if (text.equals(\"\")) {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"            return \"Input text should not be empty\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"        assert !text.isEmpty() : \"Input text should not be empty\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"        if (text.equals(\"bye\")) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"            return handleByeCommand(record, ui, storage);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":"        } else if (text.startsWith(\"find\")) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":"            return handleFindCommand(text, record, ui);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"        } else if (text.equals(\"list\")) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"            return handleListCommand(record, ui);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"        } else if (text.startsWith(\"delete\")) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithiklenin"},"content":"            return handleDeleteCommand(text, record, ui);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithiklenin"},"content":"        } else if (text.startsWith(\"mark\")) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithiklenin"},"content":"            return handleMarkCommand(text, record, ui);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithiklenin"},"content":"        } else if (text.startsWith(\"unmark\")) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithiklenin"},"content":"            return handleUnmarkCommand(text, record, ui);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithiklenin"},"content":"        } else if (text.startsWith(\"todo\")) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithiklenin"},"content":"            return handleTodoCommand(text, record, ui);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithiklenin"},"content":"        } else if (text.startsWith(\"deadline\")) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithiklenin"},"content":"            return handleDeadlineCommand(text, record, ui);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithiklenin"},"content":"        } else if (text.startsWith(\"event\")) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithiklenin"},"content":"            return handleEventCommand(text, record, ui);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithiklenin"},"content":"        } else {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithiklenin"},"content":"            throw new OptimusException(\"I don\u0027t understand that command. Please try again with a valid command (\" +","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithiklenin"},"content":"                    \"List of commands: bye, find, list, delete, mark, unmark, todo, deadline \u0026 event).\");","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithiklenin"},"content":"    private static String handleByeCommand(TaskList record, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithiklenin"},"content":"        storage.saveToFile(record.getTasks());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithiklenin"},"content":"        PauseTransition pause \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithiklenin"},"content":"        pause.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithiklenin"},"content":"        pause.play();","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithiklenin"},"content":"        return ui.showGoodbye();","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithiklenin"},"content":"    private static String handleFindCommand(String text, TaskList record, Ui ui) throws OptimusException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithiklenin"},"content":"        if (text.trim().length() \u003c\u003d 4 || text.substring(4).trim().isEmpty()) {","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithiklenin"},"content":"            throw new OptimusException(\"The keyword provided is empty. Please provide a valid search keyword.\");","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithiklenin"},"content":"        String keyword \u003d text.substring(5).trim();","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithiklenin"},"content":"        return record.findTasks(keyword, ui);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rithiklenin"},"content":"    private static String handleListCommand(TaskList record, Ui ui) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rithiklenin"},"content":"        return ui.listTasks(record);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rithiklenin"},"content":"    private static String handleDeleteCommand(String text, TaskList record, Ui ui) throws OptimusException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rithiklenin"},"content":"        String[] parts \u003d text.split(\" \");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rithiklenin"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rithiklenin"},"content":"            throw new OptimusException(\"The task number provided is empty. Please provide a valid task number.\");","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rithiklenin"},"content":"        int taskNumber \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rithiklenin"},"content":"        if (taskNumber \u003c 0 || taskNumber \u003e\u003d record.sizeOfRecord()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rithiklenin"},"content":"            throw new OptimusException(\"The task number provided is out of range. Please provide a valid task number.\");","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rithiklenin"},"content":"        Task taskToDelete \u003d record.getTask(taskNumber);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rithiklenin"},"content":"        record.deleteTask(taskNumber);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rithiklenin"},"content":"        return ui.TaskDeleted(taskToDelete, record.sizeOfRecord());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rithiklenin"},"content":"    private static String handleMarkCommand(String text, TaskList record, Ui ui) throws OptimusException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rithiklenin"},"content":"        String[] parts \u003d text.split(\" \");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rithiklenin"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rithiklenin"},"content":"            throw new OptimusException(\"The task number provided is empty. Please provide a valid task number.\");","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rithiklenin"},"content":"        int taskNumber \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rithiklenin"},"content":"        if (taskNumber \u003c 0 || taskNumber \u003e\u003d record.sizeOfRecord()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rithiklenin"},"content":"            throw new OptimusException(\"The task number provided is out of range. Please provide a valid task number.\");","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rithiklenin"},"content":"        Task taskToMark \u003d record.getTask(taskNumber);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rithiklenin"},"content":"        taskToMark.setDone();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rithiklenin"},"content":"        return ui.TaskMarked(taskToMark);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rithiklenin"},"content":"    private static String handleUnmarkCommand(String text, TaskList record, Ui ui) throws OptimusException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rithiklenin"},"content":"        String[] parts \u003d text.split(\" \");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rithiklenin"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rithiklenin"},"content":"            throw new OptimusException(\"The task number provided is empty. Please provide a valid task number.\");","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rithiklenin"},"content":"        int taskNumber \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rithiklenin"},"content":"        if (taskNumber \u003c 0 || taskNumber \u003e\u003d record.sizeOfRecord()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rithiklenin"},"content":"            throw new OptimusException(\"The task number provided is out of range. Please provide a valid task number.\");","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rithiklenin"},"content":"        Task taskToUnmark \u003d record.getTask(taskNumber);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rithiklenin"},"content":"        taskToUnmark.setNotDone();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rithiklenin"},"content":"        return ui.TaskUnmarked(taskToUnmark);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rithiklenin"},"content":"    private static String handleTodoCommand(String text, TaskList record, Ui ui) throws OptimusException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rithiklenin"},"content":"        if (text.trim().length() \u003c\u003d 4 || text.substring(4).trim().isEmpty()) {","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rithiklenin"},"content":"            throw new OptimusException(\"The description of a todo cannot be empty. Please provide a task description.\");","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rithiklenin"},"content":"        String description \u003d text.substring(5).trim();","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rithiklenin"},"content":"        Task newTask \u003d new ToDos(description);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rithiklenin"},"content":"        record.addTask(newTask);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rithiklenin"},"content":"        return ui.taskAdded(newTask, record.sizeOfRecord());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rithiklenin"},"content":"    private static String handleDeadlineCommand(String text, TaskList record, Ui ui) throws OptimusException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rithiklenin"},"content":"        String[] parts \u003d text.split(\" /by \");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rithiklenin"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rithiklenin"},"content":"            throw new OptimusException(\"The deadline format is incorrect. Please provide a description and a deadline \" +","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rithiklenin"},"content":"                    \"(eg. deadline desc /by date-time).\");","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rithiklenin"},"content":"        String description \u003d parts[0].substring(9).trim();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"rithiklenin"},"content":"        String by \u003d parts[1].trim();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"rithiklenin"},"content":"        Task newTask \u003d new Deadlines(description, by);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"rithiklenin"},"content":"        record.addTask(newTask);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"rithiklenin"},"content":"        return ui.taskAdded(newTask, record.sizeOfRecord());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rithiklenin"},"content":"    private static String handleEventCommand(String text, TaskList record, Ui ui) throws OptimusException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"rithiklenin"},"content":"        String[] parts \u003d text.split(\" /from | /to \");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"rithiklenin"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"rithiklenin"},"content":"            throw new OptimusException(\"The event time format is incorrect. Please provide both \u0027from\u0027 and \u0027to\u0027 times with\" +","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"rithiklenin"},"content":"                    \"the description (eg. event desc /from from /to to).\");","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"rithiklenin"},"content":"        String description \u003d parts[0].substring(6).trim();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"rithiklenin"},"content":"        String from \u003d parts[1].trim();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"rithiklenin"},"content":"        String to \u003d parts[2].trim();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"rithiklenin"},"content":"        Task newTask \u003d new Events(description, from, to);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"rithiklenin"},"content":"        record.addTask(newTask);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"rithiklenin"},"content":"        return ui.taskAdded(newTask, record.sizeOfRecord());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"rithiklenin":139}},{"path":"src/main/java/optimus/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"import java.io.File;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":"import java.util.List;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"public class Storage {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"    private String filepath;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"    List\u003cTask\u003e loadFile() throws FileNotFoundException, OptimusException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":"        File f \u003d new File(filepath);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":"        List\u003cTask\u003e record \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"        if (!f.exists()) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"            System.out.println(\"No existing data file found in the given directory. A new record will be established.\");","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithiklenin"},"content":"            return record;","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithiklenin"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithiklenin"},"content":"        processFileLines(s, record);","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithiklenin"},"content":"        s.close();","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithiklenin"},"content":"        return record;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithiklenin"},"content":"    private void processFileLines(Scanner s, List\u003cTask\u003e record) throws OptimusException {","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithiklenin"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithiklenin"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithiklenin"},"content":"            String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithiklenin"},"content":"            String taskType \u003d parts[0];","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithiklenin"},"content":"            boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithiklenin"},"content":"            String description \u003d parts[2];","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithiklenin"},"content":"            Task task \u003d createTask(taskType, description, parts);","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithiklenin"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithiklenin"},"content":"                if (isDone) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithiklenin"},"content":"                    task.setDone();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithiklenin"},"content":"                }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithiklenin"},"content":"                record.add(task);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithiklenin"},"content":"            }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithiklenin"},"content":"    private Task createTask(String taskType, String description, String[] parts) throws OptimusException {","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithiklenin"},"content":"        switch (taskType) {","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithiklenin"},"content":"            case \"T\":","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithiklenin"},"content":"                return new ToDos(description);","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rithiklenin"},"content":"            case \"D\":","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rithiklenin"},"content":"                String by \u003d parts.length \u003e 3 ? parts[3] : \"\";","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rithiklenin"},"content":"                return new Deadlines(description, by);","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rithiklenin"},"content":"            case \"E\":","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rithiklenin"},"content":"                String from \u003d parts.length \u003e 3 ? parts[3] : \"\";","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rithiklenin"},"content":"                String to \u003d parts.length \u003e 4 ? parts[4] : \"\";","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rithiklenin"},"content":"                return new Events(description, from, to);","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rithiklenin"},"content":"            default:","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rithiklenin"},"content":"                return null;","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rithiklenin"},"content":"    public void saveToFile(List\u003cTask\u003e record) throws IOException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rithiklenin"},"content":"        FileWriter fw \u003d new FileWriter(filepath);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rithiklenin"},"content":"        for (Task task : record) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rithiklenin"},"content":"            fw.write(task.toSaveString() + System.lineSeparator());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rithiklenin"},"content":"        fw.close();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"rithiklenin":80}},{"path":"src/main/java/optimus/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":" * Abstract class representing a task in the Optimus application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":" * Subclasses of Task must implement the toSaveString method for saving the task\u0027s data.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":"    protected String description;  // The description of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":"    protected boolean isDone;  // The status of the task, indicating whether it is completed.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"     * Constructs a new Task with the specified description.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"     * The task is initially not done.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"     * Returns a symbol representing the completion status of the task.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"     * \"X\" indicates that the task is done, and \" \" indicates that it is not done.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithiklenin"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithiklenin"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithiklenin"},"content":"    public void setDone() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithiklenin"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithiklenin"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithiklenin"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithiklenin"},"content":"        return isDone;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithiklenin"},"content":"     * Marks the task as not done by setting its status to false.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithiklenin"},"content":"    public void setNotDone() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithiklenin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithiklenin"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithiklenin"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithiklenin"},"content":"        return description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithiklenin"},"content":"     * Returns a string representation of the task, including its status and description.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rithiklenin"},"content":"    @Override","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rithiklenin"},"content":"    public String toString() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rithiklenin"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rithiklenin"},"content":"     * Abstract method to be implemented by subclasses to return a formatted string","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rithiklenin"},"content":"     * for saving the task\u0027s data to a file.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rithiklenin"},"content":"    public abstract String toSaveString();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"rithiklenin":67}},{"path":"src/main/java/optimus/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"import java.util.List;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":"public class TaskList {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":"    private List\u003cTask\u003e record;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":"    public TaskList() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":"        this.record \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"        this.record \u003d tasks;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"        record.add(task);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"        record.remove(index);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithiklenin"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithiklenin"},"content":"        return record.get(index);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithiklenin"},"content":"    public int sizeOfRecord() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithiklenin"},"content":"        return record.size();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithiklenin"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithiklenin"},"content":"        return record;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithiklenin"},"content":"    public String findTasks(String keyword, Ui ui) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithiklenin"},"content":"        String[] keywords \u003d keyword.split(\"\\\\s+\");","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithiklenin"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithiklenin"},"content":"        for (Task task : record) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithiklenin"},"content":"            boolean isMatch \u003d true;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithiklenin"},"content":"            String description \u003d task.getDescription().toLowerCase();","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithiklenin"},"content":"            for (String kw : keywords) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithiklenin"},"content":"                if (!description.contains(kw.toLowerCase())) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithiklenin"},"content":"                    isMatch \u003d false;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithiklenin"},"content":"                    break;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithiklenin"},"content":"                }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithiklenin"},"content":"            }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithiklenin"},"content":"            if (isMatch) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithiklenin"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithiklenin"},"content":"            }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithiklenin"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithiklenin"},"content":"            return ui.printError(\"No matching tasks found. Try again\");","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithiklenin"},"content":"        } else {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rithiklenin"},"content":"            return ui.listFoundTasks(matchingTasks);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"rithiklenin":60}},{"path":"src/main/java/optimus/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":" * Represents a to-do task in the Optimus application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":"public class ToDos extends Task {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":"     * Constructs a new ToDo task with the specified description.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"    public ToDos(String description) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"        super(description);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"     * Returns a string representation of the to-do task, including its status and description.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"    @Override","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":"    public String toString() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithiklenin"},"content":"     * Returns a formatted string for saving the to-do task\u0027s data to a file.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithiklenin"},"content":"     * The string includes the task type, completion status, and description.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithiklenin"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithiklenin"},"content":"    public String toSaveString() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithiklenin"},"content":"        return \"T | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getDescription();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-08-24","isFullCredit":false}],"authorContributionMap":{"rithiklenin":31}},{"path":"src/main/java/optimus/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"package optimus;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"import java.util.List;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":" * Represents the user interface for the Optimus application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":" * The {@code Ui} class handles interactions with the user, including displaying messages","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":" * and reading input commands.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"public class Ui {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"    private Scanner scanner;  // Scanner for reading user input.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"     * Constructs a new {@code Ui} object that initializes the scanner for user input.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"    public Ui() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithiklenin"},"content":"    public String showWelcome() {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithiklenin"},"content":"        return \"Hello! I\u0027m Optimus\\nWhat can I do for you?\";","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithiklenin"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithiklenin"},"content":"    public String showGoodbye() {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithiklenin"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithiklenin"},"content":"     * Reads a command input from the user.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithiklenin"},"content":"     * @return the command input as a string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithiklenin"},"content":"    public String readCommand() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithiklenin"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithiklenin"},"content":"     * Displays a message indicating that a task has been added to the list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithiklenin"},"content":"     * @param task the task that has been added.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithiklenin"},"content":"     * @param size the current number of tasks in the list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithiklenin"},"content":"    public String taskAdded(Task task, int size) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithiklenin"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + task.toString() +","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithiklenin"},"content":"                \"\\nNow you have \" + size + (size \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\";","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithiklenin"},"content":"     * Displays a message indicating that a task has been deleted from the list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rithiklenin"},"content":"     * @param task the task that has been removed.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rithiklenin"},"content":"     * @param size the current number of tasks in the list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rithiklenin"},"content":"    public String TaskDeleted(Task task, int size) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rithiklenin"},"content":"        return \"Noted. I\u0027ve removed this task:\\n  \" + task.toString() +","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rithiklenin"},"content":"                \"\\nNow you have \" + size + (size \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\";","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rithiklenin"},"content":"     * Displays a list of tasks currently in the user\u0027s task list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rithiklenin"},"content":"     * @param tasks the list of tasks to display.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rithiklenin"},"content":"    public String listTasks(TaskList tasks) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rithiklenin"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rithiklenin"},"content":"        for (int i \u003d 0; i \u003c tasks.sizeOfRecord(); i++) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rithiklenin"},"content":"            response.append((i + 1)).append(\". \").append(tasks.getTask(i).toString()).append(\"\\n\");","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rithiklenin"},"content":"        return response.toString();","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rithiklenin"},"content":"     * Displays a message indicating that a task has been marked as done.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rithiklenin"},"content":"     * @param task the task that has been marked as done.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rithiklenin"},"content":"    public String TaskMarked(Task task) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rithiklenin"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n  \" + task.toString();","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rithiklenin"},"content":"     * Displays a message indicating that a task has been marked as not done.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rithiklenin"},"content":"     * @param task the task that has been marked as not done.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rithiklenin"},"content":"    public String TaskUnmarked(Task task) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rithiklenin"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n  \" + task.toString();","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rithiklenin"},"content":"     * Displays a list of tasks that match the search keyword.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rithiklenin"},"content":"     * @param tasks the list of tasks to display.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rithiklenin"},"content":"    public String listFoundTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rithiklenin"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rithiklenin"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rithiklenin"},"content":"            response.append((i + 1)).append(\". \").append(tasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rithiklenin"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rithiklenin"},"content":"        return response.toString();","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rithiklenin"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rithiklenin"},"content":"     * @param message the error message to display.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rithiklenin"},"content":"    public String printError(String message) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rithiklenin"},"content":"        return message;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rithiklenin"},"content":"    /**","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"rithiklenin"},"content":"     * Returns a response message to display in the GUI.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"rithiklenin"},"content":"     *","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"rithiklenin"},"content":"     * @param response the response message to display.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"rithiklenin"},"content":"     * @return the response message as a string.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"rithiklenin"},"content":"     */","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"rithiklenin"},"content":"    public String printResponse(String response) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rithiklenin"},"content":"        return response;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"rithiklenin"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"rithiklenin"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"rithiklenin":128}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false}],"authorContributionMap":{"rithiklenin":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithiklenin"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithiklenin"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithiklenin"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithiklenin"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithiklenin"},"content":"            fx:controller\u003d\"optimus.MainWindow\"\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithiklenin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithiklenin"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithiklenin"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithiklenin"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithiklenin"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithiklenin"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithiklenin"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithiklenin"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithiklenin"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithiklenin"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithiklenin"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithiklenin"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithiklenin"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithiklenin"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithiklenin"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithiklenin"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithiklenin"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithiklenin"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithiklenin"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithiklenin"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithiklenin"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithiklenin"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithiklenin"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithiklenin"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithiklenin"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithiklenin"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithiklenin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithiklenin"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithiklenin"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false}],"authorContributionMap":{"rithiklenin":44}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rithiklenin"},"content":"todo read book","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithiklenin"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithiklenin"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithiklenin"},"content":"list","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithiklenin"},"content":"mark 1","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithiklenin"},"content":"unmark 1","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithiklenin"},"content":"mark 4","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithiklenin"},"content":"unmark 4","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithiklenin"},"content":"bye","lastModifiedDate":"2024-08-24","isFullCredit":false}],"authorContributionMap":{"rithiklenin":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithiklenin"},"content":"java -classpath ../bin Optimus \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"rithiklenin":1,"-":37}}]
