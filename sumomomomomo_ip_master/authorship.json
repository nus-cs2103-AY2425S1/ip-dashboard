[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sumomomomomo"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sumomomomomo"},"content":"checkstyle {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sumomomomomo"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sumomomomomo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sumomomomomo"},"content":"    mainClass.set(\"joeduck.JoeDuck\")","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sumomomomomo"},"content":"    archiveBaseName \u003d \"joeduck\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sumomomomomo"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"sumomomomomo":8,"-":39}},{"path":"src/main/java/joeduck/JoeDuck.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sumomomomomo"},"content":"package joeduck;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sumomomomomo"},"content":"import joeduck.command.Command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sumomomomomo"},"content":"import joeduck.exception.InvalidCommandException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sumomomomomo"},"content":"import joeduck.exception.JoeDuckException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sumomomomomo"},"content":"import joeduck.exception.RegexMatchFailureException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sumomomomomo"},"content":"import joeduck.exception.StorageLoadException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sumomomomomo"},"content":"import joeduck.parser.Parser;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sumomomomomo"},"content":"import joeduck.storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sumomomomomo"},"content":"import joeduck.task.*;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sumomomomomo"},"content":"import joeduck.ui.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sumomomomomo"},"content":"import joeduck.utils.Utils;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sumomomomomo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sumomomomomo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sumomomomomo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sumomomomomo"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sumomomomomo"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sumomomomomo"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sumomomomomo"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sumomomomomo"},"content":" * Main class. Interactive chatbot.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sumomomomomo"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sumomomomomo"},"content":"public class JoeDuck {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sumomomomomo"},"content":"    private final Ui ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sumomomomomo"},"content":"    private final Storage storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sumomomomomo"},"content":"    private final TaskList tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sumomomomomo"},"content":"    private final Parser parser;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sumomomomomo"},"content":"    private JoeDuck() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sumomomomomo"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sumomomomomo"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sumomomomomo"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sumomomomomo"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sumomomomomo"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sumomomomomo"},"content":"            tasks.setTaskList(storage.getTasksFromFile());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sumomomomomo"},"content":"        } catch (StorageLoadException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sumomomomomo"},"content":"            // cry","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sumomomomomo"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sumomomomomo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sumomomomomo"},"content":"    private boolean executeCommand(Command currCommand) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sumomomomomo"},"content":"        try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sumomomomomo"},"content":"            switch (currCommand.command()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sumomomomomo"},"content":"                case \"bye\", \"exit\":","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sumomomomomo"},"content":"                    return true;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sumomomomomo"},"content":"                case \"list\":","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sumomomomomo"},"content":"                    ui.printResponse(Utils.inputsToString(tasks.getTaskList(), true));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sumomomomomo"},"content":"                    break;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sumomomomomo"},"content":"                case \"mark\": {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sumomomomomo"},"content":"                    String targetIndexStr \u003d currCommand.args();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sumomomomomo"},"content":"                    int targetIndex \u003d Integer.parseInt(targetIndexStr) - 1;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sumomomomomo"},"content":"                    Task targetTask \u003d tasks.getTask(targetIndex);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sumomomomomo"},"content":"                    targetTask.setDoneStatus(true);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sumomomomomo"},"content":"                    ui.printResponse(\"Marked \" + targetTask);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sumomomomomo"},"content":"                    storage.writeList(tasks.getTaskList());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sumomomomomo"},"content":"                    break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sumomomomomo"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sumomomomomo"},"content":"                case \"unmark\": {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sumomomomomo"},"content":"                    String targetIndexStr \u003d currCommand.args();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sumomomomomo"},"content":"                    int targetIndex \u003d Integer.parseInt(targetIndexStr) - 1;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sumomomomomo"},"content":"                    Task targetTask \u003d tasks.getTask(targetIndex);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sumomomomomo"},"content":"                    targetTask.setDoneStatus(false);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"sumomomomomo"},"content":"                    ui.printResponse(\"Unmarked \" + targetTask);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"sumomomomomo"},"content":"                    storage.writeList(tasks.getTaskList());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"sumomomomomo"},"content":"                    break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"sumomomomomo"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"sumomomomomo"},"content":"                case \"delete\", \"remove\": {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"sumomomomomo"},"content":"                    String targetIndexStr \u003d currCommand.args();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"sumomomomomo"},"content":"                    int targetIndex \u003d Integer.parseInt(targetIndexStr) - 1;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"sumomomomomo"},"content":"                    Task targetTask \u003d tasks.getTask(targetIndex);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"sumomomomomo"},"content":"                    tasks.removeTask(targetIndex);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"sumomomomomo"},"content":"                    ui.printResponse(\"Removed \" + targetTask);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"sumomomomomo"},"content":"                    storage.writeList(tasks.getTaskList());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"sumomomomomo"},"content":"                    break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"sumomomomomo"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"sumomomomomo"},"content":"                case \"find\": {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"sumomomomomo"},"content":"                    String keyword \u003d currCommand.args();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"sumomomomomo"},"content":"                    ui.printResponse(tasks.findTask(keyword));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"sumomomomomo"},"content":"                    break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"sumomomomomo"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"sumomomomomo"},"content":"                case \"todo\":","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"sumomomomomo"},"content":"                    String todoString \u003d currCommand.args();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"sumomomomomo"},"content":"                    if (todoString.isEmpty()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"sumomomomomo"},"content":"                        throw new InvalidCommandException(\"Todo requires a description.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"sumomomomomo"},"content":"                    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"sumomomomomo"},"content":"                    Todo t \u003d new Todo(todoString);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"sumomomomomo"},"content":"                    tasks.addTask(t);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"sumomomomomo"},"content":"                    ui.printResponse(\"Added Todo:\\n\" + t);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"sumomomomomo"},"content":"                    storage.writeList(tasks.getTaskList());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"sumomomomomo"},"content":"                    break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"sumomomomomo"},"content":"                case \"deadline\": {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"sumomomomomo"},"content":"                    String deadlineString \u003d currCommand.args();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"sumomomomomo"},"content":"                    String pattern \u003d \"(.+) /by (\\\\d{4}-\\\\d{2}-\\\\d{2}+) (\\\\d{2}:\\\\d{2})\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"sumomomomomo"},"content":"                    Pattern pd \u003d Pattern.compile(pattern);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"sumomomomomo"},"content":"                    Deadline d \u003d getDeadline(pd, deadlineString);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"sumomomomomo"},"content":"                    tasks.addTask(d);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"sumomomomomo"},"content":"                    ui.printResponse(\"Added Deadline:\\n\" + d);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"sumomomomomo"},"content":"                    storage.writeList(tasks.getTaskList());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"sumomomomomo"},"content":"                    break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"sumomomomomo"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"sumomomomomo"},"content":"                case \"event\": {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"sumomomomomo"},"content":"                    String deadlineString \u003d currCommand.args();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"sumomomomomo"},"content":"                    String pattern \u003d \"(.+) /from (\\\\d{4}-\\\\d{2}-\\\\d{2}) (\\\\d{2}:\\\\d{2}) \" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"sumomomomomo"},"content":"                            \"/to (\\\\d{4}-\\\\d{2}-\\\\d{2}) (\\\\d{2}:\\\\d{2})\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"sumomomomomo"},"content":"                    Pattern pe \u003d Pattern.compile(pattern);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"sumomomomomo"},"content":"                    Event e \u003d getEvent(pe, deadlineString);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"sumomomomomo"},"content":"                    tasks.addTask(e);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"sumomomomomo"},"content":"                    ui.printResponse(\"Added Event:\\n\" + e);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"sumomomomomo"},"content":"                    storage.writeList(tasks.getTaskList());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"sumomomomomo"},"content":"                    break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"sumomomomomo"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"sumomomomomo"},"content":"                default:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"sumomomomomo"},"content":"                    throw new InvalidCommandException(\"Invalid command!\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"sumomomomomo"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"sumomomomomo"},"content":"        } catch (JoeDuckException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"sumomomomomo"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"sumomomomomo"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"sumomomomomo"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"sumomomomomo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"sumomomomomo"},"content":"        return false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"sumomomomomo"},"content":"    private static Event getEvent(Pattern pe, String deadlineString) throws RegexMatchFailureException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"sumomomomomo"},"content":"        Matcher me \u003d pe.matcher(deadlineString);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"sumomomomomo"},"content":"        if (!me.find()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"sumomomomomo"},"content":"            throw new RegexMatchFailureException(\"Arguments for creating event is incorrect\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"sumomomomomo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"sumomomomomo"},"content":"        String desc \u003d me.group(1);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"sumomomomomo"},"content":"        String startDate \u003d me.group(2);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"sumomomomomo"},"content":"        LocalDate d1 \u003d LocalDate.parse(startDate);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"sumomomomomo"},"content":"        String startTime \u003d me.group(3);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"sumomomomomo"},"content":"        LocalTime t1 \u003d LocalTime.parse(startTime);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"sumomomomomo"},"content":"        String endDate \u003d me.group(4);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"sumomomomomo"},"content":"        LocalDate d2 \u003d LocalDate.parse(endDate);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"sumomomomomo"},"content":"        String endTime \u003d me.group(5);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"sumomomomomo"},"content":"        LocalTime t2 \u003d LocalTime.parse(endTime);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"sumomomomomo"},"content":"        LocalDateTime startDt \u003d LocalDateTime.of(d1, t1);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"sumomomomomo"},"content":"        LocalDateTime endDt \u003d LocalDateTime.of(d2, t2);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"sumomomomomo"},"content":"        Event e \u003d new Event(desc, startDt, endDt);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"sumomomomomo"},"content":"        return e;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"sumomomomomo"},"content":"    private static Deadline getDeadline(Pattern pd, String deadlineString) throws RegexMatchFailureException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"sumomomomomo"},"content":"        Matcher md \u003d pd.matcher(deadlineString);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"sumomomomomo"},"content":"        if (!md.find()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"sumomomomomo"},"content":"            throw new RegexMatchFailureException(\"Arguments for creating deadline is incorrect\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"sumomomomomo"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"sumomomomomo"},"content":"        String desc \u003d md.group(1);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"sumomomomomo"},"content":"        String date \u003d md.group(2);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"sumomomomomo"},"content":"        LocalDate localDate \u003d LocalDate.parse(date);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"sumomomomomo"},"content":"        String time \u003d md.group(3);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"sumomomomomo"},"content":"        LocalTime localTime \u003d LocalTime.parse(time);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"sumomomomomo"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.of(localDate, localTime);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"sumomomomomo"},"content":"        Deadline d \u003d new Deadline(desc, localDateTime);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"sumomomomomo"},"content":"        return d;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"sumomomomomo"},"content":"    private void run() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"sumomomomomo"},"content":"        ui.onStart();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"sumomomomomo"},"content":"        boolean endSession \u003d false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"sumomomomomo"},"content":"        while (!endSession \u0026\u0026 ui.scannerHasNextLine()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"sumomomomomo"},"content":"            try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"sumomomomomo"},"content":"                Command currCommand \u003d parser.parseUserInput(ui.scannerNextLine());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"sumomomomomo"},"content":"                endSession \u003d executeCommand(currCommand);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"sumomomomomo"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"sumomomomomo"},"content":"                ui.printError(e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"sumomomomomo"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"sumomomomomo"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"sumomomomomo"},"content":"        ui.onExit();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"sumomomomomo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"sumomomomomo"},"content":"        new JoeDuck().run();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"sumomomomomo"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"sumomomomomo":182}},{"path":"src/main/java/joeduck/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sumomomomomo"},"content":"package joeduck.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sumomomomomo"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sumomomomomo"},"content":" * Helper record returned by Parser.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sumomomomomo"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sumomomomomo"},"content":"public record Command(String command, String args) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sumomomomomo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"sumomomomomo":7}},{"path":"src/main/java/joeduck/exception/EmptyTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sumomomomomo"},"content":"package joeduck.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sumomomomomo"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sumomomomomo"},"content":" * Exception for when a Todo is attempted to be created with no description.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sumomomomomo"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sumomomomomo"},"content":"public class EmptyTodoException extends JoeDuckException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sumomomomomo"},"content":"    public EmptyTodoException(String msg) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sumomomomomo"},"content":"        super(msg);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sumomomomomo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"sumomomomomo":10}},{"path":"src/main/java/joeduck/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sumomomomomo"},"content":"package joeduck.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sumomomomomo"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sumomomomomo"},"content":" * Exception for when user inputs an unrecognized command.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sumomomomomo"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sumomomomomo"},"content":"public class InvalidCommandException extends JoeDuckException {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sumomomomomo"},"content":"    public InvalidCommandException(String msg) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sumomomomomo"},"content":"        super(msg);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sumomomomomo"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"sumomomomomo":10}},{"path":"src/main/java/joeduck/exception/InvalidTaskTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sumomomomomo"},"content":"package joeduck.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sumomomomomo"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sumomomomomo"},"content":" * Exception when Parser sees an unrecognized task type.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sumomomomomo"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sumomomomomo"},"content":"public class InvalidTaskTypeException extends JoeDuckException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sumomomomomo"},"content":"    public InvalidTaskTypeException(String msg) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sumomomomomo"},"content":"        super(msg);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sumomomomomo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"sumomomomomo":10}},{"path":"src/main/java/joeduck/exception/JoeDuckException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sumomomomomo"},"content":"package joeduck.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sumomomomomo"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sumomomomomo"},"content":" * Exceptions specific to JoeDuck.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sumomomomomo"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sumomomomomo"},"content":"public class JoeDuckException extends Exception{","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sumomomomomo"},"content":"    public JoeDuckException(String msg) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sumomomomomo"},"content":"        super(msg);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sumomomomomo"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"sumomomomomo":10}},{"path":"src/main/java/joeduck/exception/RegexMatchFailureException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sumomomomomo"},"content":"package joeduck.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sumomomomomo"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sumomomomomo"},"content":" * Exception thrown when Regex matching fails. Normally associated","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sumomomomomo"},"content":" * with inputs involving dates, such as Event and Deadline.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sumomomomomo"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sumomomomomo"},"content":"public class RegexMatchFailureException extends JoeDuckException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sumomomomomo"},"content":"    public RegexMatchFailureException(String msg) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sumomomomomo"},"content":"        super(msg);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sumomomomomo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"sumomomomomo":11}},{"path":"src/main/java/joeduck/exception/StorageLoadException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sumomomomomo"},"content":"package joeduck.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sumomomomomo"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sumomomomomo"},"content":" * Exception thrown when Storage fails to load.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sumomomomomo"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sumomomomomo"},"content":"public class StorageLoadException extends JoeDuckException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sumomomomomo"},"content":"    public StorageLoadException(String msg) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sumomomomomo"},"content":"        super(msg);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sumomomomomo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"sumomomomomo":10}},{"path":"src/main/java/joeduck/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sumomomomomo"},"content":"package joeduck.parser;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sumomomomomo"},"content":"import joeduck.command.Command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sumomomomomo"},"content":"import joeduck.exception.InvalidCommandException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sumomomomomo"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sumomomomomo"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sumomomomomo"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sumomomomomo"},"content":" * Handles raw input from the user.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sumomomomomo"},"content":" * Transforms raw input into a Command.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sumomomomomo"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sumomomomomo"},"content":"public class Parser {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sumomomomomo"},"content":"    private final static Pattern COMMAND_PATTERN \u003d Pattern.compile(\"([a-zA-Z]+)\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sumomomomomo"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sumomomomomo"},"content":"     * Parses a single line of raw user input.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sumomomomomo"},"content":"     * @param input String of the user\u0027s raw input.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sumomomomomo"},"content":"     * @return Command, representing the user\u0027s command and arguments.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sumomomomomo"},"content":"     * @throws InvalidCommandException Thrown when a non-alphabetical sequence is the first sequence.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sumomomomomo"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sumomomomomo"},"content":"    public Command parseUserInput(String input) throws InvalidCommandException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sumomomomomo"},"content":"        String currInput \u003d input.trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sumomomomomo"},"content":"        String currCommand \u003d \"\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sumomomomomo"},"content":"        Matcher mm \u003d COMMAND_PATTERN.matcher(currInput);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sumomomomomo"},"content":"        if (mm.find()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sumomomomomo"},"content":"            currCommand \u003d mm.group(1);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sumomomomomo"},"content":"            String args \u003d \"\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sumomomomomo"},"content":"            if (currCommand.length() \u003c currInput.length()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sumomomomomo"},"content":"                args \u003d currInput.substring(currCommand.length() + 1);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sumomomomomo"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sumomomomomo"},"content":"            return new Command(currCommand, args);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sumomomomomo"},"content":"        } else {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sumomomomomo"},"content":"            throw new InvalidCommandException(\"Invalid command!\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sumomomomomo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sumomomomomo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"sumomomomomo":37}},{"path":"src/main/java/joeduck/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sumomomomomo"},"content":"package joeduck.storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sumomomomomo"},"content":"import joeduck.exception.InvalidTaskTypeException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sumomomomomo"},"content":"import joeduck.exception.RegexMatchFailureException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sumomomomomo"},"content":"import joeduck.exception.StorageLoadException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sumomomomomo"},"content":"import joeduck.task.Deadline;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sumomomomomo"},"content":"import joeduck.task.Event;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sumomomomomo"},"content":"import joeduck.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sumomomomomo"},"content":"import joeduck.task.Todo;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sumomomomomo"},"content":"import joeduck.utils.Utils;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sumomomomomo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sumomomomomo"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sumomomomomo"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sumomomomomo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sumomomomomo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sumomomomomo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sumomomomomo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sumomomomomo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sumomomomomo"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sumomomomomo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sumomomomomo"},"content":"import java.util.List;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sumomomomomo"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sumomomomomo"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sumomomomomo"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sumomomomomo"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sumomomomomo"},"content":" * Handles I/O to a file for persistence of the list of tasks.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sumomomomomo"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sumomomomomo"},"content":"public class Storage {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sumomomomomo"},"content":"    private static final String FILE_NAME \u003d \"ip_data\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sumomomomomo"},"content":"    private static final String LOAD_REGEX_PATTERN \u003d \"^\\\\[(.)]\\\\[([ |X])] (.+)$\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sumomomomomo"},"content":"    private final Path dataFolderPath;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sumomomomomo"},"content":"    private final Path dataFilePath;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sumomomomomo"},"content":"    private final Pattern loadRegexPattern;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sumomomomomo"},"content":"    public Storage() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sumomomomomo"},"content":"        String homePath \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sumomomomomo"},"content":"        dataFolderPath \u003d Paths.get(homePath, FILE_NAME);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sumomomomomo"},"content":"        dataFilePath \u003d Paths.get(homePath, \"ip_data\", \"tasks.txt\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sumomomomomo"},"content":"        loadRegexPattern \u003d Pattern.compile(LOAD_REGEX_PATTERN);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sumomomomomo"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sumomomomomo"},"content":"     * Parses a single line from tasks.txt, and returns the Task it represents.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sumomomomomo"},"content":"     * Made public for easier testing.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sumomomomomo"},"content":"     * @param currLine String of the single line.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sumomomomomo"},"content":"     * @return The Task it represents. Currently, they are: Todo, Deadline, Event","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sumomomomomo"},"content":"     * @throws InvalidTaskTypeException Thrown when the line\u0027s task type is unrecognized.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sumomomomomo"},"content":"     * @throws RegexMatchFailureException Thrown when regex fails when parsing Deadline or Event.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sumomomomomo"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sumomomomomo"},"content":"    public Task getTaskFromLine(String currLine) throws InvalidTaskTypeException, RegexMatchFailureException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sumomomomomo"},"content":"        // TODO make some kind of class to hold regex patterns","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sumomomomomo"},"content":"        Matcher m \u003d loadRegexPattern.matcher(currLine);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sumomomomomo"},"content":"        if (!m.find()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sumomomomomo"},"content":"            throw new RegexMatchFailureException(\"Error while parsing line: \" + currLine);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sumomomomomo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sumomomomomo"},"content":"        String type \u003d m.group(1);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sumomomomomo"},"content":"        String done \u003d m.group(2);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sumomomomomo"},"content":"        boolean doneStatus \u003d done.equals(Task.DONE_ICON);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sumomomomomo"},"content":"        String descAndMisc \u003d m.group(3);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sumomomomomo"},"content":"        switch (type) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"sumomomomomo"},"content":"            case \"T\":","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"sumomomomomo"},"content":"                Todo currTodo \u003d new Todo(descAndMisc);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"sumomomomomo"},"content":"                currTodo.setDoneStatus(doneStatus);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"sumomomomomo"},"content":"                return currTodo;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"sumomomomomo"},"content":"            case \"D\":","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"sumomomomomo"},"content":"                Pattern pd \u003d Pattern.compile(Deadline.DESC_REGEX_PATTERN);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"sumomomomomo"},"content":"                return getDeadline(pd, descAndMisc, doneStatus);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"sumomomomomo"},"content":"            case \"E\":","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"sumomomomomo"},"content":"                Pattern pe \u003d Pattern.compile(Event.DESC_REGEX_PATTERN);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"sumomomomomo"},"content":"                return getEvent(pe, descAndMisc, doneStatus);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"sumomomomomo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"sumomomomomo"},"content":"        throw new InvalidTaskTypeException(\"Unrecognized task type: \" + type);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"sumomomomomo"},"content":"    private static Deadline getDeadline(Pattern pd, String descAndMisc, boolean doneStatus) throws RegexMatchFailureException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"sumomomomomo"},"content":"        Matcher md \u003d pd.matcher(descAndMisc);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"sumomomomomo"},"content":"        if (!md.find()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"sumomomomomo"},"content":"            throw new RegexMatchFailureException(\"Error while parsing deadline: \" + descAndMisc);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"sumomomomomo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"sumomomomomo"},"content":"        String desc \u003d md.group(1);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"sumomomomomo"},"content":"        String date \u003d md.group(2);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"sumomomomomo"},"content":"        LocalDate localDate \u003d LocalDate.parse(date);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"sumomomomomo"},"content":"        String time \u003d md.group(3);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"sumomomomomo"},"content":"        LocalTime localTime \u003d LocalTime.parse(time);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"sumomomomomo"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.of(localDate, localTime);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"sumomomomomo"},"content":"        Deadline currDeadline \u003d new Deadline(desc, localDateTime);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"sumomomomomo"},"content":"        currDeadline.setDoneStatus(doneStatus);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"sumomomomomo"},"content":"        return currDeadline;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"sumomomomomo"},"content":"    private static Event getEvent(Pattern pe, String descAndMisc, boolean doneStatus) throws RegexMatchFailureException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"sumomomomomo"},"content":"        Matcher me \u003d pe.matcher(descAndMisc);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"sumomomomomo"},"content":"        if (!me.find()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"sumomomomomo"},"content":"            throw new RegexMatchFailureException(\"Error while parsing event: \" + descAndMisc);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"sumomomomomo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"sumomomomomo"},"content":"        String descE \u003d me.group(1);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"sumomomomomo"},"content":"        String startDate \u003d me.group(2);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"sumomomomomo"},"content":"        LocalDate d1 \u003d LocalDate.parse(startDate);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"sumomomomomo"},"content":"        String startTime \u003d me.group(3);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"sumomomomomo"},"content":"        LocalTime t1 \u003d LocalTime.parse(startTime);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"sumomomomomo"},"content":"        String endDate \u003d me.group(4);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"sumomomomomo"},"content":"        LocalDate d2 \u003d LocalDate.parse(endDate);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"sumomomomomo"},"content":"        String endTime \u003d me.group(5);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"sumomomomomo"},"content":"        LocalTime t2 \u003d LocalTime.parse(endTime);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"sumomomomomo"},"content":"        LocalDateTime startDt \u003d LocalDateTime.of(d1, t1);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"sumomomomomo"},"content":"        LocalDateTime endDt \u003d LocalDateTime.of(d2, t2);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"sumomomomomo"},"content":"        Event currEvent \u003d new Event(descE, startDt, endDt);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"sumomomomomo"},"content":"        currEvent.setDoneStatus(doneStatus);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"sumomomomomo"},"content":"        return currEvent;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"sumomomomomo"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"sumomomomomo"},"content":"     * Reads tasks.txt, and returns a List of the tasks contained inside.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"sumomomomomo"},"content":"     * If tasks.txt does not exist, creates it and necessary directories.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"sumomomomomo"},"content":"     * @return A List of Task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"sumomomomomo"},"content":"     * @throws StorageLoadException Thrown when tasks.txt does not exist, and creation fails.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"sumomomomomo"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"sumomomomomo"},"content":"    public List\u003cTask\u003e getTasksFromFile() throws StorageLoadException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"sumomomomomo"},"content":"        List\u003cTask\u003e inputs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"sumomomomomo"},"content":"        if (!Files.exists(dataFolderPath)) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"sumomomomomo"},"content":"            dataFolderPath.toFile().mkdirs();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"sumomomomomo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"sumomomomomo"},"content":"        if (Files.exists(dataFilePath)) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"sumomomomomo"},"content":"            try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"sumomomomomo"},"content":"                Scanner s \u003d new Scanner(dataFilePath.toFile());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"sumomomomomo"},"content":"                while (s.hasNextLine()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"sumomomomomo"},"content":"                    String currLine \u003d s.nextLine().trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"sumomomomomo"},"content":"                    inputs.add(getTaskFromLine(currLine));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"sumomomomomo"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"sumomomomomo"},"content":"                s.close();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"sumomomomomo"},"content":"            } catch (FileNotFoundException | InvalidTaskTypeException |","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"sumomomomomo"},"content":"                     RegexMatchFailureException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"sumomomomomo"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"sumomomomomo"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"sumomomomomo"},"content":"        } else {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"sumomomomomo"},"content":"            try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"sumomomomomo"},"content":"                if (!dataFilePath.toFile().createNewFile()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"sumomomomomo"},"content":"                    throw new IOException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"sumomomomomo"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"sumomomomomo"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"sumomomomomo"},"content":"                throw new StorageLoadException(\"Failed to create a file for saving/loading.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"sumomomomomo"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"sumomomomomo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"sumomomomomo"},"content":"        return inputs;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"sumomomomomo"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"sumomomomomo"},"content":"     * Overrides tasks.txt with a given List of Task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"sumomomomomo"},"content":"     * @param list List of Task to override tasks.txt with.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"sumomomomomo"},"content":"     * @throws FileNotFoundException Thrown when tasks.txt is not found.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"sumomomomomo"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"sumomomomomo"},"content":"    public void writeList(List\u003cTask\u003e list) throws FileNotFoundException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"sumomomomomo"},"content":"        try (PrintWriter out \u003d new PrintWriter(dataFilePath.toString())) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"sumomomomomo"},"content":"            out.println(Utils.inputsToString(list, false));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"sumomomomomo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"sumomomomomo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"sumomomomomo":168}},{"path":"src/main/java/joeduck/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sumomomomomo"},"content":"package joeduck.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sumomomomomo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sumomomomomo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sumomomomomo"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sumomomomomo"},"content":" * Represents a task with a single deadline.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sumomomomomo"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sumomomomomo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sumomomomomo"},"content":"    private final LocalDateTime dueDate;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sumomomomomo"},"content":"    public static final String DESC_REGEX_PATTERN \u003d \"^(.+) \\\\(by: (\\\\d{4}-\\\\d{2}-\\\\d{2}+) (\\\\d{2}:\\\\d{2})\\\\)$\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sumomomomomo"},"content":"    public Deadline(String description, LocalDateTime dueDate) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sumomomomomo"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sumomomomomo"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sumomomomomo"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sumomomomomo"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sumomomomomo"},"content":"        return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sumomomomomo"},"content":"                dueDate.format(DateTimeFormatter.ofPattern(DATE_TIME_PATTERN_PRINT)) + \")\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sumomomomomo"},"content":"    public String toStringWrite() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sumomomomomo"},"content":"        return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sumomomomomo"},"content":"                dueDate.format(DateTimeFormatter.ofPattern(DATE_TIME_PATTERN_WRITE)) + \")\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sumomomomomo"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"sumomomomomo":29}},{"path":"src/main/java/joeduck/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sumomomomomo"},"content":"package joeduck.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sumomomomomo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sumomomomomo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sumomomomomo"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sumomomomomo"},"content":" * Represents a task that takes place within a certain period of time.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sumomomomomo"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sumomomomomo"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sumomomomomo"},"content":"    private final LocalDateTime startDate;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sumomomomomo"},"content":"    private final LocalDateTime endDate;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sumomomomomo"},"content":"    public static final String DESC_REGEX_PATTERN \u003d \"(.+) \\\\(from: (\\\\d{4}-\\\\d{2}-\\\\d{2}) (\\\\d{2}:\\\\d{2}) \" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sumomomomomo"},"content":"            \"to: (\\\\d{4}-\\\\d{2}-\\\\d{2}) (\\\\d{2}:\\\\d{2})\\\\)\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sumomomomomo"},"content":"    public Event(String description, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sumomomomomo"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sumomomomomo"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sumomomomomo"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sumomomomomo"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sumomomomomo"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sumomomomomo"},"content":"        return \"[E]\" + super.toString() + \" (from: \" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sumomomomomo"},"content":"                startDate.format(DateTimeFormatter.ofPattern(DATE_TIME_PATTERN_PRINT)) + \" to: \" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sumomomomomo"},"content":"                endDate.format(DateTimeFormatter.ofPattern(DATE_TIME_PATTERN_PRINT)) + \")\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sumomomomomo"},"content":"    public String toStringWrite() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sumomomomomo"},"content":"        return \"[E]\" + super.toString() + \" (from: \" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sumomomomomo"},"content":"                startDate.format(DateTimeFormatter.ofPattern(DATE_TIME_PATTERN_WRITE)) + \" to: \" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sumomomomomo"},"content":"                endDate.format(DateTimeFormatter.ofPattern(DATE_TIME_PATTERN_WRITE)) + \")\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sumomomomomo"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"sumomomomomo":33}},{"path":"src/main/java/joeduck/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sumomomomomo"},"content":"package joeduck.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sumomomomomo"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sumomomomomo"},"content":" * Represents any task to be done by the user.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sumomomomomo"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sumomomomomo"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sumomomomomo"},"content":"    public static final String DONE_ICON \u003d \"X\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sumomomomomo"},"content":"    public static final String DATE_TIME_PATTERN_PRINT \u003d \"MMM d yyyy HH:mm\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sumomomomomo"},"content":"    public static final String DATE_TIME_PATTERN_WRITE \u003d \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sumomomomomo"},"content":"    protected String description;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sumomomomomo"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sumomomomomo"},"content":"    protected Task(String description) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sumomomomomo"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sumomomomomo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sumomomomomo"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sumomomomomo"},"content":"     * Sets the internal done boolean.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sumomomomomo"},"content":"     * @param s Doneness.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sumomomomomo"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sumomomomomo"},"content":"    public void setDoneStatus(boolean s) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sumomomomomo"},"content":"        this.isDone \u003d s;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sumomomomomo"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sumomomomomo"},"content":"     * Gets the string representing doneness if done, or a single space if not.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sumomomomomo"},"content":"     * @return String representing doneness.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sumomomomomo"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sumomomomomo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sumomomomomo"},"content":"        return (isDone ? DONE_ICON : \" \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sumomomomomo"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sumomomomomo"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sumomomomomo"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sumomomomomo"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sumomomomomo"},"content":"     * Used for writing to tasks.txt.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sumomomomomo"},"content":"     * @return String representation of the Task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sumomomomomo"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sumomomomomo"},"content":"    public abstract String toStringWrite();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sumomomomomo"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"sumomomomomo":44}},{"path":"src/main/java/joeduck/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sumomomomomo"},"content":"package joeduck.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sumomomomomo"},"content":"import java.util.List;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sumomomomomo"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sumomomomomo"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sumomomomomo"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sumomomomomo"},"content":" * Handles adding/removing of tasks to an internal List of Task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sumomomomomo"},"content":" * @author Matthew Ho","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sumomomomomo"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sumomomomomo"},"content":"public class TaskList {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sumomomomomo"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sumomomomomo"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sumomomomomo"},"content":"     * Overrides the current List of Task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sumomomomomo"},"content":"     * @param tasks New List of Task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sumomomomomo"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sumomomomomo"},"content":"    public void setTaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sumomomomomo"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sumomomomomo"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sumomomomomo"},"content":"     * Gets the current List of Task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sumomomomomo"},"content":"     * @return Current List of Task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sumomomomomo"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sumomomomomo"},"content":"    public List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sumomomomomo"},"content":"        return tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sumomomomomo"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sumomomomomo"},"content":"     * Gets a certain Task by index.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sumomomomomo"},"content":"     * @param index Index of the Task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sumomomomomo"},"content":"     * @return The Task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sumomomomomo"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sumomomomomo"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sumomomomomo"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sumomomomomo"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sumomomomomo"},"content":"     * Adds a Task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sumomomomomo"},"content":"     * @param task The Task to be added.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sumomomomomo"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sumomomomomo"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sumomomomomo"},"content":"        tasks.add(task);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sumomomomomo"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sumomomomomo"},"content":"     * Removes a Task by index.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sumomomomomo"},"content":"     * @param index Index of the Task to be removed.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sumomomomomo"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sumomomomomo"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sumomomomomo"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sumomomomomo"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sumomomomomo"},"content":"     * Returns a String of all tasks that match a given String keyword.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sumomomomomo"},"content":"     * @param keyword Keyword to search.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sumomomomomo"},"content":"     * @return String of each task, prepended with index, separated by newline.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sumomomomomo"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sumomomomomo"},"content":"    public String findTask(String keyword) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sumomomomomo"},"content":"        Pattern p \u003d Pattern.compile(\"(\" + keyword + \")\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sumomomomomo"},"content":"        StringBuilder ans \u003d new StringBuilder();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sumomomomomo"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sumomomomomo"},"content":"            Task currTask \u003d tasks.get(i);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"sumomomomomo"},"content":"            Matcher m \u003d p.matcher(currTask.toString());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"sumomomomomo"},"content":"            if (m.find()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"sumomomomomo"},"content":"                ans.append(i + 1).append(\". \").append(currTask).append(\"\\n\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"sumomomomomo"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"sumomomomomo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"sumomomomomo"},"content":"        return ans.toString().trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"sumomomomomo"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"sumomomomomo"},"content":"     * Removes a Task by the Task itself.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"sumomomomomo"},"content":"     * @param task Task to be removed.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"sumomomomomo"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"sumomomomomo"},"content":"    public void removeTask(Task task) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"sumomomomomo"},"content":"        tasks.remove(task);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"sumomomomomo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"sumomomomomo":80}},{"path":"src/main/java/joeduck/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sumomomomomo"},"content":"package joeduck.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sumomomomomo"},"content":"import joeduck.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sumomomomomo"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sumomomomomo"},"content":" * Represents a task with no fixed deadline or associated time period.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sumomomomomo"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sumomomomomo"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sumomomomomo"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sumomomomomo"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sumomomomomo"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sumomomomomo"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sumomomomomo"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sumomomomomo"},"content":"    public String toStringWrite() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sumomomomomo"},"content":"        return toString();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sumomomomomo"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"sumomomomomo":21}},{"path":"src/main/java/joeduck/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sumomomomomo"},"content":"package joeduck.ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sumomomomomo"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sumomomomomo"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sumomomomomo"},"content":" * Handles user input/output.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sumomomomomo"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sumomomomomo"},"content":"public class Ui {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sumomomomomo"},"content":"    private static final String LINE_DIVIDER \u003d \"---\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sumomomomomo"},"content":"    private static final String MOTD \u003d \"Welcome to Joe Duck\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sumomomomomo"},"content":"    private static final String EXIT_MESSAGE \u003d \"Goodbye from Joe Duck\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sumomomomomo"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sumomomomomo"},"content":"     * Scanner to be used with Singleton Ui instance in JoeDuck.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sumomomomomo"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sumomomomomo"},"content":"    public final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sumomomomomo"},"content":"    public void printResponse(String res) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sumomomomomo"},"content":"        System.out.println(LINE_DIVIDER);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sumomomomomo"},"content":"        System.out.println(res);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sumomomomomo"},"content":"        System.out.println(LINE_DIVIDER);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sumomomomomo"},"content":"    public void printError(String msg) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sumomomomomo"},"content":"        printResponse(\"Error: \" + msg);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sumomomomomo"},"content":"    public boolean scannerHasNextLine() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sumomomomomo"},"content":"        return scanner.hasNextLine();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sumomomomomo"},"content":"    public String scannerNextLine() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sumomomomomo"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sumomomomomo"},"content":"    public void onStart() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sumomomomomo"},"content":"        printResponse(MOTD);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sumomomomomo"},"content":"    public void onExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sumomomomomo"},"content":"        printResponse(EXIT_MESSAGE);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sumomomomomo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"sumomomomomo":43}},{"path":"src/main/java/joeduck/utils/Utils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sumomomomomo"},"content":"package joeduck.utils;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sumomomomomo"},"content":"import joeduck.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sumomomomomo"},"content":"import java.util.List;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sumomomomomo"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sumomomomomo"},"content":" * Helper functions not specific to any other class.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sumomomomomo"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sumomomomomo"},"content":"public class Utils {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sumomomomomo"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sumomomomomo"},"content":"     * Gets the string representation of a List of Task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sumomomomomo"},"content":"     * If forPrinting is true, will get the equivalent representation meant for writing to tasks.txt.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sumomomomomo"},"content":"     * Else, will get the representation meant for printing to the user.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sumomomomomo"},"content":"     * @param list List of Task to be converted to String.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sumomomomomo"},"content":"     * @param forPrinting Boolean representing if the String is for showing to the user.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sumomomomomo"},"content":"     * @return String representation of the List of Task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sumomomomomo"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sumomomomomo"},"content":"    public static String inputsToString(List\u003cTask\u003e list, boolean forPrinting) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sumomomomomo"},"content":"        StringBuilder ans \u003d new StringBuilder();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sumomomomomo"},"content":"        int count \u003d 1;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sumomomomomo"},"content":"        for (Task s : list) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sumomomomomo"},"content":"            if (forPrinting) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sumomomomomo"},"content":"                ans.append(count).append(\". \").append(s.toString());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sumomomomomo"},"content":"            } else {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sumomomomomo"},"content":"                ans.append(s.toStringWrite());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sumomomomomo"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sumomomomomo"},"content":"            if (count \u003c list.size()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sumomomomomo"},"content":"                ans.append(\"\\n\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sumomomomomo"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sumomomomomo"},"content":"            count++;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sumomomomomo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sumomomomomo"},"content":"        return ans.toString();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sumomomomomo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"sumomomomomo":36}},{"path":"src/test/java/joeduck/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sumomomomomo"},"content":"package joeduck.parser;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sumomomomomo"},"content":"import joeduck.command.Command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sumomomomomo"},"content":"import joeduck.exception.InvalidCommandException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sumomomomomo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sumomomomomo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sumomomomomo"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sumomomomomo"},"content":"public class ParserTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sumomomomomo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sumomomomomo"},"content":"    public void parseUserInput_validTodo_success() throws InvalidCommandException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sumomomomomo"},"content":"        String testInput \u003d \"todo asdf\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sumomomomomo"},"content":"        Command res \u003d new Parser().parseUserInput(testInput);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sumomomomomo"},"content":"        assertEquals(\"todo\", res.command());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sumomomomomo"},"content":"        assertEquals(\"asdf\", res.args());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sumomomomomo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sumomomomomo"},"content":"    public void parseUserInput_emptyTodo_success() throws InvalidCommandException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sumomomomomo"},"content":"        String testInput \u003d \"todo\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sumomomomomo"},"content":"        Command res \u003d new Parser().parseUserInput(testInput);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sumomomomomo"},"content":"        assertEquals(\"todo\", res.command());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sumomomomomo"},"content":"        assertEquals(\"\", res.args());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sumomomomomo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sumomomomomo"},"content":"    public void parseUserInput_numberInput_throwsException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sumomomomomo"},"content":"        String testInput \u003d \"123123\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sumomomomomo"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sumomomomomo"},"content":"            Command res \u003d new Parser().parseUserInput(testInput);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sumomomomomo"},"content":"            fail();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sumomomomomo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sumomomomomo"},"content":"            assertEquals(\"Invalid command!\", e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sumomomomomo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sumomomomomo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sumomomomomo"},"content":"    public void parseUserInput_whitespaceInput_throwsException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sumomomomomo"},"content":"        String testInput \u003d \"    \";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sumomomomomo"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sumomomomomo"},"content":"            Command res \u003d new Parser().parseUserInput(testInput);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sumomomomomo"},"content":"            fail();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sumomomomomo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sumomomomomo"},"content":"            assertEquals(\"Invalid command!\", e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sumomomomomo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sumomomomomo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"sumomomomomo":48}},{"path":"src/test/java/joeduck/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sumomomomomo"},"content":"package joeduck.storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sumomomomomo"},"content":"import joeduck.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sumomomomomo"},"content":"import joeduck.exception.InvalidTaskTypeException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sumomomomomo"},"content":"import joeduck.exception.RegexMatchFailureException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sumomomomomo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sumomomomomo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sumomomomomo"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sumomomomomo"},"content":"public class StorageTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sumomomomomo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sumomomomomo"},"content":"    public void getTaskFromLine_validTodo_success() throws RegexMatchFailureException, InvalidTaskTypeException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sumomomomomo"},"content":"        String testInput \u003d \"[T][X] hi\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sumomomomomo"},"content":"        Task res \u003d new Storage().getTaskFromLine(testInput);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sumomomomomo"},"content":"        assertEquals(\"[T][X] hi\", res.toString());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sumomomomomo"},"content":"        assertEquals(\"X\", res.getStatusIcon());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sumomomomomo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sumomomomomo"},"content":"    public void getTaskFromLine_emptyTodo_throwsException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sumomomomomo"},"content":"        String testInput \u003d \"[T][X]\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sumomomomomo"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sumomomomomo"},"content":"            Task res \u003d new Storage().getTaskFromLine(testInput);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sumomomomomo"},"content":"            fail();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sumomomomomo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sumomomomomo"},"content":"            assertEquals(\"Error while parsing line: [T][X]\", e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sumomomomomo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sumomomomomo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sumomomomomo"},"content":"    public void getTaskFromLine_validDeadline_success() throws RegexMatchFailureException, InvalidTaskTypeException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sumomomomomo"},"content":"        String testInput \u003d \"[D][X] deasdfasdf (by: 2024-01-01 10:10)\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sumomomomomo"},"content":"        Task res \u003d new Storage().getTaskFromLine(testInput);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sumomomomomo"},"content":"        assertEquals(\"[D][X] deasdfasdf (by: Jan 1 2024 10:10)\", res.toString());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sumomomomomo"},"content":"        assertEquals(\"X\", res.getStatusIcon());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sumomomomomo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sumomomomomo"},"content":"    public void getTaskFromLine_deadlineDateOverLimit_throwsException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sumomomomomo"},"content":"        String testInput \u003d \"[D][X] deasdfasdf (by: 2024-13-13 10:10)\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sumomomomomo"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sumomomomomo"},"content":"            Task res \u003d new Storage().getTaskFromLine(testInput);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sumomomomomo"},"content":"            fail();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sumomomomomo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sumomomomomo"},"content":"            assertEquals(\"Text \u00272024-13-13\u0027 could not be parsed: Invalid value for MonthOfYear\" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sumomomomomo"},"content":"                    \" (valid values 1 - 12): 13\", e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sumomomomomo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sumomomomomo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sumomomomomo"},"content":"    public void getTaskFromLine_deadlineDateWrongFormat_throwsException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sumomomomomo"},"content":"        String testInput \u003d \"[D][X] deasdfasdf (by: 2024-1-1 10:10)\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sumomomomomo"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sumomomomomo"},"content":"            Task res \u003d new Storage().getTaskFromLine(testInput);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sumomomomomo"},"content":"            fail();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sumomomomomo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sumomomomomo"},"content":"            assertEquals(\"Error while parsing deadline: deasdfasdf (by: 2024-1-1 10:10)\" , e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sumomomomomo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sumomomomomo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sumomomomomo"},"content":"    public void getTaskFromLine_deadlineTimeOverLimit_throwsException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"sumomomomomo"},"content":"        String testInput \u003d \"[D][X] deasdfasdf (by: 2024-01-01 24:01)\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"sumomomomomo"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"sumomomomomo"},"content":"            Task res \u003d new Storage().getTaskFromLine(testInput);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"sumomomomomo"},"content":"            fail();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"sumomomomomo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"sumomomomomo"},"content":"            assertEquals(\"Text \u002724:01\u0027 could not be parsed: Invalid value for HourOfDay \" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"sumomomomomo"},"content":"                    \"(valid values 0 - 23): 24\" , e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"sumomomomomo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"sumomomomomo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"sumomomomomo"},"content":"    public void getTaskFromLine_deadlineTimeWrongFormat_throwsException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"sumomomomomo"},"content":"        String testInput \u003d \"[D][X] deasdfasdf (by: 2024-01-01 1232)\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"sumomomomomo"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"sumomomomomo"},"content":"            Task res \u003d new Storage().getTaskFromLine(testInput);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"sumomomomomo"},"content":"            fail();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"sumomomomomo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"sumomomomomo"},"content":"            assertEquals(\"Error while parsing deadline: deasdfasdf (by: 2024-01-01 1232)\" , e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"sumomomomomo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"sumomomomomo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"sumomomomomo"},"content":"    public void getTaskFromLine_validEvent_success() throws RegexMatchFailureException, InvalidTaskTypeException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"sumomomomomo"},"content":"        String testInput \u003d \"[E][ ] my event (from: 2024-01-01 10:00 to: 2024-10-10 01:01)\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"sumomomomomo"},"content":"        Task res \u003d new Storage().getTaskFromLine(testInput);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"sumomomomomo"},"content":"        assertEquals(res.toStringWrite(), testInput);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"sumomomomomo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"sumomomomomo"},"content":"    public void getTaskFromLine_eventBeginTimeWrongFormat_throwsException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"sumomomomomo"},"content":"        String testInput \u003d \"[E][ ] my event (from: 2024-01-01 1000 to: 2024-10-10 01:01)\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"sumomomomomo"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"sumomomomomo"},"content":"            Task res \u003d new Storage().getTaskFromLine(testInput);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"sumomomomomo"},"content":"            fail();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"sumomomomomo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"sumomomomomo"},"content":"            assertEquals(\"Error while parsing event: my event (from: 2024-01-01 1000 to: 2024-10-10 01:01)\",","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"sumomomomomo"},"content":"                    e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"sumomomomomo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"sumomomomomo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"sumomomomomo"},"content":"    public void getTaskFromLine_eventEndTimeWrongFormat_throwsException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"sumomomomomo"},"content":"        String testInput \u003d \"[E][ ] my event (from: 2024-01-01 10:00 to: 2024-10-10 0101)\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"sumomomomomo"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"sumomomomomo"},"content":"            Task res \u003d new Storage().getTaskFromLine(testInput);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"sumomomomomo"},"content":"            fail();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"sumomomomomo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"sumomomomomo"},"content":"            assertEquals(\"Error while parsing event: my event (from: 2024-01-01 10:00 to: 2024-10-10 0101)\",","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"sumomomomomo"},"content":"                    e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"sumomomomomo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"sumomomomomo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"sumomomomomo"},"content":"    public void getTaskFromLine_eventEndTimeWrongValue_throwsException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"sumomomomomo"},"content":"        String testInput \u003d \"[E][ ] my event (from: 2024-01-01 10:00 to: 2024-10-10 91:01)\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"sumomomomomo"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"sumomomomomo"},"content":"            Task res \u003d new Storage().getTaskFromLine(testInput);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"sumomomomomo"},"content":"            fail();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"sumomomomomo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"sumomomomomo"},"content":"            assertEquals(\"Text \u002791:01\u0027 could not be parsed: Invalid value\" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"sumomomomomo"},"content":"                            \" for HourOfDay (valid values 0 - 23): 91\", e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"sumomomomomo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"sumomomomomo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"sumomomomomo"},"content":"    public void getTaskFromLine_eventStartTimeWrongValue_throwsException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"sumomomomomo"},"content":"        String testInput \u003d \"[E][ ] my event (from: 2024-01-01 90:00 to: 2024-10-10 11:01)\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"sumomomomomo"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"sumomomomomo"},"content":"            Task res \u003d new Storage().getTaskFromLine(testInput);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"sumomomomomo"},"content":"            fail();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"sumomomomomo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"sumomomomomo"},"content":"            assertEquals(\"Text \u002790:00\u0027 could not be parsed: Invalid value\" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"sumomomomomo"},"content":"                    \" for HourOfDay (valid values 0 - 23): 90\", e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"sumomomomomo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"sumomomomomo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"sumomomomomo"},"content":"    public void getTaskFromLine_eventStartDateWrongFormat_throwsException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"sumomomomomo"},"content":"        String testInput \u003d \"[E][ ] my event (from: 2024-1-01 90:00 to: 2024-10-10 11:01)\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"sumomomomomo"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"sumomomomomo"},"content":"            Task res \u003d new Storage().getTaskFromLine(testInput);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"sumomomomomo"},"content":"            fail();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"sumomomomomo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"sumomomomomo"},"content":"            assertEquals(\"Error while parsing event: my event (from: 2024-1-01 90:00 to:\" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"sumomomomomo"},"content":"                    \" 2024-10-10 11:01)\", e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"sumomomomomo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"sumomomomomo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"sumomomomomo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"sumomomomomo":152}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sumomomomomo"},"content":"todo this by today","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sumomomomomo"},"content":"akjslfdjaskfd","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sumomomomomo"},"content":"todo","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sumomomomomo"},"content":"todo ","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sumomomomomo"},"content":"deadline that /by now","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sumomomomomo"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sumomomomomo"},"content":"event event desc from /from from /to to","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sumomomomomo"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sumomomomomo"},"content":"delete 1","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sumomomomomo"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"sumomomomomo":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sumomomomomo"},"content":"java -classpath ..\\bin joeduck.JoeDuck \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sumomomomomo"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sumomomomomo"},"content":"pause","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"sumomomomomo":3,"-":20}}]
