[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"checkstyle {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dominic-Khoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dominic-Khoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dominic-Khoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dominic-Khoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dominic-Khoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dominic-Khoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Dominic-Khoo"},"content":"    mainClass.set(\"Launcher\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Dominic-Khoo"},"content":"    archiveBaseName \u003d \"downy\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Dominic-Khoo"},"content":"    archiveFileName \u003d \"downy.jar\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":23,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"# Downy User Guide","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":1,"-":29}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dominic-Khoo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dominic-Khoo"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dominic-Khoo"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dominic-Khoo"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dominic-Khoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dominic-Khoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dominic-Khoo"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dominic-Khoo"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dominic-Khoo"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Dominic-Khoo"},"content":"    private void flip() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Dominic-Khoo"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Dominic-Khoo"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Dominic-Khoo"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Dominic-Khoo"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Dominic-Khoo"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Dominic-Khoo"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Dominic-Khoo"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Dominic-Khoo"},"content":"    public static DialogBox getDownyDialog(String text, Image img) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Dominic-Khoo"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Dominic-Khoo"},"content":"        db.flip();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Dominic-Khoo"},"content":"        return db;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":59}},{"path":"src/main/java/Downy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"import commands.Command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"import exceptions.DownyException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"import parser.Parser;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"import storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"import ui.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":" * The {@code Downy} class is the main class for the task management application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":" * It initializes the necessary components, such as storage, task list, and user interface,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":" * and manages the application\u0027s run loop, processing user commands until the user exits the application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":"public class Downy {","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"    /** The storage handler for saving and loading tasks. */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"    /** The list of tasks currently managed by the application. */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"    /** The user interface handler for interacting with the user. */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"    private Ui ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":"     * Constructs a new {@code Downy} application instance with the specified file path for task storage.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param filePath The file path where tasks are stored.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dominic-Khoo"},"content":"    public Downy(String filePath) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dominic-Khoo"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dominic-Khoo"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dominic-Khoo"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dominic-Khoo"},"content":"        this.tasks.loadTasks(storage);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dominic-Khoo"},"content":"     * Runs the application, displaying the welcome message, processing user commands,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dominic-Khoo"},"content":"     * and continuing until the user issues an exit command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dominic-Khoo"},"content":"    public String executeCommand(String fullCommand) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Dominic-Khoo"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Dominic-Khoo"},"content":"            Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Dominic-Khoo"},"content":"            assert storage !\u003d null : \"Storage cannot be null.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Dominic-Khoo"},"content":"            assert tasks !\u003d null : \"TaskList cannot be null.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Dominic-Khoo"},"content":"            assert ui !\u003d null : \"Ui cannot be null.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Dominic-Khoo"},"content":"            return c.execute(this.storage, this.tasks, this.ui);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Dominic-Khoo"},"content":"        } catch (DownyException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Dominic-Khoo"},"content":"            return Ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-17","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":52}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"public class Launcher {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":" * A GUI for Downy using FXML.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":"public class Main extends Application {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"    private static Stage primaryStage; // Reference to the primary stage","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"    private Downy downy \u003d new Downy(\"data/tasks.txt\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"    @Override","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"            primaryStage \u003d stage; // Set primary stage reference","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":"            stage.setTitle(\"Downy\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDowny(downy);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dominic-Khoo"},"content":"            stage.show();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dominic-Khoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dominic-Khoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dominic-Khoo"},"content":"    // Method to exit the application","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dominic-Khoo"},"content":"    public static void exitApp() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dominic-Khoo"},"content":"        primaryStage.close();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":37}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":"import ui.Ui;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":" * Controller for the main GUI.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":"    private Downy downy;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dominic-Khoo"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dominic-Khoo"},"content":"    private Image downyImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Downy.png\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dominic-Khoo"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dominic-Khoo"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dominic-Khoo"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dominic-Khoo"},"content":"    /** Injects the Downy instance */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dominic-Khoo"},"content":"    public void setDowny(Downy d) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dominic-Khoo"},"content":"        downy \u003d d;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dominic-Khoo"},"content":"        String welcomeMessage \u003d Ui.showWelcome();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dominic-Khoo"},"content":"        dialogContainer.getChildren().add(DialogBox.getDownyDialog(welcomeMessage, downyImage));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Dominic-Khoo"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Downy\u0027s reply and then appends them to","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Dominic-Khoo"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Dominic-Khoo"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Dominic-Khoo"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Dominic-Khoo"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Dominic-Khoo"},"content":"        String response \u003d downy.executeCommand(input);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Dominic-Khoo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Dominic-Khoo"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Dominic-Khoo"},"content":"                DialogBox.getDownyDialog(response, downyImage)","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Dominic-Khoo"},"content":"        );","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Dominic-Khoo"},"content":"        // Check if the command is the exit command (e.g., \"bye\")","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Dominic-Khoo"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Dominic-Khoo"},"content":"            // Show the goodbye message and then close the app after a delay","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Dominic-Khoo"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Dominic-Khoo"},"content":"            delay.setOnFinished(event -\u003e Main.exitApp());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Dominic-Khoo"},"content":"            delay.play();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Dominic-Khoo"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":64}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package commands;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"import storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"import ui.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":" * The {@code ByeCommand} class represents a command that, when executed, signals the termination","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":" * of the application. It implements the {@code Command} interface.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"     * Executes the Bye command. This implementation does not modify any data or interact with","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"     * storage, task list, or UI, as the command simply signals the end of the application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param storage The storage handler used for saving and retrieving tasks. Not used in this implementation.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param tasks   The list of tasks currently in memory. Not used in this implementation.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param ui      The UI handler used for interacting with the user. Not used in this implementation.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"    public String execute(Storage storage, TaskList tasks, Ui ui) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"        return ui.showExitMessage();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":26}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package commands;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"import exceptions.DownyException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"import storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"import ui.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":" * The {@code Command} interface represents a command that can be executed within the application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":" * Implementing classes define specific actions that the application can perform, such as adding tasks,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":" * marking tasks as complete, or exiting the application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":"public interface Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"     * Executes the command with the given context.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param storage The storage handler used for saving and retrieving tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param tasks   The list of tasks currently in memory.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param ui      The UI handler used for interacting with the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"     * @throws DownyException If an error occurs during the execution of the command. The specific exceptions","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"     *                        will depend on the command\u0027s implementation.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":"    public String execute(Storage storage, TaskList tasks, Ui ui) throws DownyException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":26}},{"path":"src/main/java/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package commands;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"import exceptions.DownyException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"import storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"import ui.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":" * The {@code DeadlineCommand} class represents a command that, when executed, adds a new","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":" * deadline task to the task list. The command stores the task\u0027s description and its due date and time.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":" *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"    private final String taskDescription;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"    private final LocalDateTime time;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"     * Constructs a new {@code DeadlineCommand} with the specified task description and due date.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param taskDescription The description of the task to be added.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param time The due date and time of the deadline task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":"    public DeadlineCommand(String taskDescription, LocalDateTime time) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dominic-Khoo"},"content":"        assert taskDescription !\u003d null : \"Task description cannot be null.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dominic-Khoo"},"content":"        assert time !\u003d null : \"Task deadline cannot be null.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dominic-Khoo"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dominic-Khoo"},"content":"        this.time \u003d time;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dominic-Khoo"},"content":"     * Executes the Deadline command, adding a new deadline task to the task list,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dominic-Khoo"},"content":"     * saving it to storage, and displaying the added task via the user interface.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param storage The storage handler used for saving the new deadline task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param tasks   The list of tasks currently in memory.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param ui      The UI handler used for interacting with the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Dominic-Khoo"},"content":"     * @throws DownyException If an error occurs during the execution of the command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Dominic-Khoo"},"content":"    public String execute(Storage storage, TaskList tasks, Ui ui) throws DownyException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Dominic-Khoo"},"content":"        Deadline d \u003d tasks.addDeadline(this.taskDescription, this.time);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Dominic-Khoo"},"content":"        storage.writeDeadlineToFile(d);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Dominic-Khoo"},"content":"        return ui.displayTaskAdded(d, tasks.getSize());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Dominic-Khoo"},"content":"     * Returns the description of the deadline task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return The task description.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Dominic-Khoo"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Dominic-Khoo"},"content":"        return this.taskDescription;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Dominic-Khoo"},"content":"     * Returns the due date and time of the deadline task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return The due date and time of the deadline task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Dominic-Khoo"},"content":"    public LocalDateTime getDueDate() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Dominic-Khoo"},"content":"        return this.time;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":67}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package commands;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"import exceptions.DownyException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"import storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"import ui.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":" * The {@code DeleteCommand} class represents a command that, when executed, deletes a task","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":" * from the task list based on a specified task number. The command also updates the storage","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":" * and user interface to reflect the deletion.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"    public final String taskNumber;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"     * Constructs a new {@code DeleteCommand} with the specified task number.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param taskNumber The task number to be deleted, as a string.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":"    public DeleteCommand(String taskNumber) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dominic-Khoo"},"content":"     * Executes the Delete command by deleting the specified task from the task list,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dominic-Khoo"},"content":"     * removing it from storage, and displaying the deletion via the user interface.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param storage The storage handler used for deleting the task from persistent storage.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param tasks   The list of tasks currently in memory.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param ui      The UI handler used for interacting with the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dominic-Khoo"},"content":"     * @throws DownyException If an error occurs during the execution of the command, such as","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dominic-Khoo"},"content":"     *                        an invalid task number format or a task number that does not exist.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dominic-Khoo"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dominic-Khoo"},"content":"    public String execute(Storage storage, TaskList tasks, Ui ui) throws DownyException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dominic-Khoo"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Dominic-Khoo"},"content":"            int taskNum \u003d Integer.parseInt(this.taskNumber);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Dominic-Khoo"},"content":"            Task t \u003d tasks.deleteTaskInList(taskNum);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Dominic-Khoo"},"content":"            storage.deleteTask(t);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Dominic-Khoo"},"content":"            return ui.displayDeletedTask(t);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Dominic-Khoo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Dominic-Khoo"},"content":"            throw new InvalidFormatException(\"Task number has to be a positive integer.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Dominic-Khoo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Dominic-Khoo"},"content":"            throw new InvalidFormatException(\"Task number does not exist.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Dominic-Khoo"},"content":"     * Returns the task number associated with this command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return The task number to be deleted, as a string.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Dominic-Khoo"},"content":"    public String getTaskNumber() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Dominic-Khoo"},"content":"        return this.taskNumber;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":61}},{"path":"src/main/java/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package commands;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"import exceptions.DownyException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"import storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.Event;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"import ui.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":" * The {@code EventCommand} class represents a command that, when executed, adds a new event task","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":" * to the task list. The event includes a description, a start time, and an end time.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"    private final String taskDescription;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"     * Constructs a new {@code EventCommand} with the specified task description, start time,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"     * and end time.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param taskDescription The description of the event task to be added.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param startTime The start time of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param endTime The end time of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dominic-Khoo"},"content":"    public EventCommand(String taskDescription, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dominic-Khoo"},"content":"        assert taskDescription !\u003d null : \"Task description cannot be null.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dominic-Khoo"},"content":"        assert startTime !\u003d null : \"Task startTime cannot be null.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dominic-Khoo"},"content":"        assert endTime !\u003d null : \"Task endTime cannot be null.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dominic-Khoo"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dominic-Khoo"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dominic-Khoo"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dominic-Khoo"},"content":"     * Executes the Event command, adding a new event task to the task list, saving it to storage,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Dominic-Khoo"},"content":"     * and displaying the added task via the user interface.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param storage The storage handler used for saving the new event task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param tasks   The list of tasks currently in memory.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param ui      The UI handler used for interacting with the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Dominic-Khoo"},"content":"     * @throws DownyException If an error occurs during the execution of the command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Dominic-Khoo"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Dominic-Khoo"},"content":"    public String execute(Storage storage, TaskList tasks, Ui ui) throws DownyException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Dominic-Khoo"},"content":"        Event e \u003d tasks.addEvent(this.taskDescription, this.startTime, this.endTime);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Dominic-Khoo"},"content":"        storage.writeEventToFile(e);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Dominic-Khoo"},"content":"        return ui.displayTaskAdded(e, tasks.getSize());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Dominic-Khoo"},"content":"     * Returns the description of the event task associated with this command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return The event task description.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Dominic-Khoo"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Dominic-Khoo"},"content":"        return this.taskDescription;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Dominic-Khoo"},"content":"     * Returns the start time of the event associated with this command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return The start time of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Dominic-Khoo"},"content":"    public LocalDateTime getStartTime() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Dominic-Khoo"},"content":"        return this.startTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Dominic-Khoo"},"content":"     * Returns the end time of the event associated with this command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return The end time of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Dominic-Khoo"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Dominic-Khoo"},"content":"        return this.endTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":81}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package commands;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"import exceptions.DownyException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"import storage.Storage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"import ui.Ui;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":" * The {@code FindCommand} class represents a command that searches for tasks in the task list","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":" * that contain a specified keyword. The search is case-insensitive.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"    private final String keyword;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"     * Constructs a new {@code FindCommand} with the specified keyword.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param keyword The keyword to search for in the task names.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":"     * Executes the find command by loading tasks from storage and displaying","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dominic-Khoo"},"content":"     * tasks that contain the specified keyword. The search is case-insensitive.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param storage The storage handler used for loading tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param tasks   The list of tasks to search through.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param ui      The UI handler used to display the matching tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dominic-Khoo"},"content":"     * @throws DownyException If an error occurs during the execution of the command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dominic-Khoo"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dominic-Khoo"},"content":"    public String execute(Storage storage, TaskList tasks, Ui ui) throws DownyException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dominic-Khoo"},"content":"        tasks.loadTasks(storage);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dominic-Khoo"},"content":"        return ui.displayMatchingTasks(tasks, keyword);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":39}},{"path":"src/main/java/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package commands;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"import storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"import ui.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":" * The {@code HelpCommand} class represents a command that, when executed, displays a list of","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":" * available commands and their descriptions to the user. This command is used to assist the user","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":" * in understanding how to interact with the application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":"public class HelpCommand implements Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"     * Executes the Help command by displaying the list of available commands and their","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"     * descriptions via the user interface.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param storage The storage handler. Not used in this implementation.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param tasks   The list of tasks currently in memory. Not used in this implementation.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param ui      The UI handler used for interacting with the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"    public String execute(Storage storage, TaskList tasks, Ui ui) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":"        return ui.displayHelp();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":26}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package commands;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"import exceptions.DownyException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"import storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"import ui.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":" * The {@code ListCommand} class represents a command that, when executed, loads the tasks","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":" * from storage and displays them to the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"     * Executes the List command by loading tasks from storage into the task list and","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"     * displaying them to the user. If the task list is empty, it displays a message","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"     * indicating that there are no tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param storage The storage handler used for loading tasks from persistent storage.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param tasks   The list of tasks currently in memory.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param ui      The UI handler used for interacting with the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"     * @throws DownyException If an error occurs during the loading of tasks from storage.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":"    public String execute(Storage storage, TaskList tasks, Ui ui) throws DownyException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":"        tasks.loadTasks(storage);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dominic-Khoo"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dominic-Khoo"},"content":"            return Ui.showMessage(\"There are no tasks!\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dominic-Khoo"},"content":"        return ui.displayTasks(tasks);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":32}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package commands;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"import exceptions.DownyException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"import storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"import ui.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":" * The {@code MarkCommand} class represents a command that, when executed, marks a task as","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":" * complete in the task list. The task is identified by its task number, which is provided","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":" * during the command\u0027s creation.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"    public final String taskNumber;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"     * Constructs a new {@code MarkCommand} with the specified task number.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param taskNumber The task number to be marked as complete, as a string.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":"    public MarkCommand(String taskNumber) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":"        assert taskNumber !\u003d null : \"Task number cannot be null.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dominic-Khoo"},"content":"     * Executes the Mark command by marking the specified task as complete in the task list,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dominic-Khoo"},"content":"     * updating the storage, and displaying the completion via the user interface.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param storage The storage handler used for saving the updated task state.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param tasks   The list of tasks currently in memory.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param ui      The UI handler used for interacting with the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dominic-Khoo"},"content":"     * @throws DownyException If an error occurs during the execution of the command, such as","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dominic-Khoo"},"content":"     *                        an invalid task number format or a task number that does not exist.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dominic-Khoo"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dominic-Khoo"},"content":"    public String execute(Storage storage, TaskList tasks, Ui ui) throws DownyException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Dominic-Khoo"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Dominic-Khoo"},"content":"            int taskNum \u003d Integer.parseInt(this.taskNumber);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Dominic-Khoo"},"content":"            tasks.completeTaskInList(taskNum);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Dominic-Khoo"},"content":"            Task t \u003d tasks.getTask(taskNum - 1);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Dominic-Khoo"},"content":"            storage.markComplete(t);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Dominic-Khoo"},"content":"            return ui.displayCompletedTask(t);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Dominic-Khoo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Dominic-Khoo"},"content":"            throw new InvalidFormatException(\"Task number has to be a positive integer.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Dominic-Khoo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Dominic-Khoo"},"content":"            throw new InvalidFormatException(\"Task number does not exist.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Dominic-Khoo"},"content":"     * Returns the task number associated with this command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return The task number to be marked as complete, as a string.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Dominic-Khoo"},"content":"    public String getTaskNumber() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Dominic-Khoo"},"content":"        return this.taskNumber;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":62}},{"path":"src/main/java/commands/NoteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package commands;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"import exceptions.DownyException;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"import storage.Storage;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"import ui.Ui;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":" * The {@code NoteCommand} class represents a command that, when executed, either lists all notes or adds a new note","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":" * to the note list. The command also updates the storage and user interface to reflect the addition of the new note","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":" * or display the list of notes.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":"public class NoteCommand implements Command {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"    private final String action;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"    private final String noteContent;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"    private final int noteNumber;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"     * Constructs a new {@code NoteCommand} with the specified action and note content.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"     * If the action is \"list\", the content is ignored.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param action The action to be performed, either \"list\" or \"entry\".","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param noteContent The content of the note to be added (if action is \"entry\").","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":"    public NoteCommand(String action, String noteContent) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dominic-Khoo"},"content":"        assert action !\u003d null : \"Action cannot be null.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dominic-Khoo"},"content":"        this.action \u003d action;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dominic-Khoo"},"content":"        this.noteContent \u003d noteContent;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dominic-Khoo"},"content":"        this.noteNumber \u003d -1;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dominic-Khoo"},"content":"     * Constructs a new {@code NoteCommand} with the specified action only.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dominic-Khoo"},"content":"     * This constructor is used for actions like \"list\" where no content is provided.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param action The action to be performed, such as \"list\".","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dominic-Khoo"},"content":"    public NoteCommand(String action) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dominic-Khoo"},"content":"        assert action !\u003d null : \"Action cannot be null.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Dominic-Khoo"},"content":"        this.action \u003d action;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Dominic-Khoo"},"content":"        this.noteContent \u003d null;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Dominic-Khoo"},"content":"        this.noteNumber \u003d -1;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Dominic-Khoo"},"content":"     * Constructs a new {@code NoteCommand} for deleting a note by its number.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param action The action to be performed (\"delete\").","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param noteNumber The number of the note to be deleted.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Dominic-Khoo"},"content":"    public NoteCommand(String action, int noteNumber) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Dominic-Khoo"},"content":"        assert action !\u003d null : \"Action cannot be null.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Dominic-Khoo"},"content":"        assert noteNumber \u003e 0 : \"Note number must be positive.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Dominic-Khoo"},"content":"        this.action \u003d action;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Dominic-Khoo"},"content":"        this.noteNumber \u003d noteNumber;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Dominic-Khoo"},"content":"        this.noteContent \u003d null;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Dominic-Khoo"},"content":"     * Executes the Note command by either listing all notes or adding a new note to the storage, and displaying the","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Dominic-Khoo"},"content":"     * results via the user interface.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param storage The storage handler used for saving the new note or retrieving existing notes.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param tasks   The task list (not used for this command but required by the interface).","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param ui      The UI handler used for interacting with the user.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return A message indicating the result of the command (either notes listed or note added).","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Dominic-Khoo"},"content":"     * @throws DownyException If an error occurs during the execution of the command.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Dominic-Khoo"},"content":"    @Override","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Dominic-Khoo"},"content":"    public String execute(Storage storage, TaskList tasks, Ui ui) throws DownyException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Dominic-Khoo"},"content":"        switch (action) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Dominic-Khoo"},"content":"        case \"list\" -\u003e {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Dominic-Khoo"},"content":"            return ui.displayNotes(storage.loadNotes());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Dominic-Khoo"},"content":"        case \"entry\" -\u003e {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Dominic-Khoo"},"content":"            assert noteContent !\u003d null : \"Note content cannot be null when adding a note.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Dominic-Khoo"},"content":"            storage.writeNoteToFile(noteContent);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Dominic-Khoo"},"content":"            return ui.displayNoteAdded(noteContent);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Dominic-Khoo"},"content":"        case \"delete\" -\u003e {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Dominic-Khoo"},"content":"            storage.deleteNoteFromFile(noteNumber);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Dominic-Khoo"},"content":"            return ui.displayNoteDeleted(noteNumber);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Dominic-Khoo"},"content":"        default -\u003e {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Dominic-Khoo"},"content":"            throw new DownyException(\"Unknown action for NoteCommand: \" + action); //Should never reach here","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Dominic-Khoo"},"content":"     * Returns the action associated with this command.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return The action, either \"list\" or \"entry\".","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Dominic-Khoo"},"content":"    public String getAction() {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Dominic-Khoo"},"content":"        return this.action;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Dominic-Khoo"},"content":"     * Returns the content of the note (if applicable).","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return The note content or null if not applicable.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Dominic-Khoo"},"content":"    public String getNoteContent() {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Dominic-Khoo"},"content":"        return this.noteContent;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-09-11","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":108}},{"path":"src/main/java/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package commands;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"import exceptions.DownyException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"import storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.Todo;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"import ui.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":" * The {@code TodoCommand} class represents a command that, when executed, adds a new","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":" * Todo task to the task list. The command also updates the storage and user interface","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":" * to reflect the addition of the new task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"public class TodoCommand implements Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"    private final String taskDescription;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"     * Constructs a new {@code TodoCommand} with the specified task description.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param taskDescription The description of the task to be added.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"    public TodoCommand(String taskDescription) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":"        assert taskDescription !\u003d null : \"Task description cannot be null.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dominic-Khoo"},"content":"     * Executes the Todo command by adding a new Todo task to the task list, saving it","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dominic-Khoo"},"content":"     * to storage, and displaying the added task via the user interface.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param storage The storage handler used for saving the new Todo task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param tasks   The list of tasks currently in memory.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param ui      The UI handler used for interacting with the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dominic-Khoo"},"content":"     * @throws DownyException If an error occurs during the execution of the command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dominic-Khoo"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dominic-Khoo"},"content":"    public String execute(Storage storage, TaskList tasks, Ui ui) throws DownyException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dominic-Khoo"},"content":"        Todo t \u003d tasks.addTodo(taskDescription);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dominic-Khoo"},"content":"        storage.writeTodoToFile(t);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Dominic-Khoo"},"content":"        return ui.displayTaskAdded(t, tasks.getSize());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Dominic-Khoo"},"content":"     * Returns the description of the task associated with this command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return The task description.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Dominic-Khoo"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Dominic-Khoo"},"content":"        return this.taskDescription;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":52}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package commands;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"import exceptions.DownyException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"import storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"import ui.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":" * The {@code UnmarkCommand} class represents a command that, when executed, marks a task as","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":" * incomplete in the task list. The task is identified by its task number, which is provided","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":" * during the command\u0027s creation.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"    public final String taskNumber;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"     * Constructs a new {@code UnmarkCommand} with the specified task number.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param taskNumber The task number to be marked as incomplete, as a string.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":"    public UnmarkCommand(String taskNumber) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":"        assert taskNumber !\u003d null : \"Task number cannot be null.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dominic-Khoo"},"content":"     * Executes the Unmark command by marking the specified task as incomplete in the task list,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dominic-Khoo"},"content":"     * updating the storage, and displaying the updated task state via the user interface.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param storage The storage handler used for updating the task state in persistent storage.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param tasks   The list of tasks currently in memory.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param ui      The UI handler used for interacting with the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dominic-Khoo"},"content":"     * @throws DownyException If an error occurs during the execution of the command, such as","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dominic-Khoo"},"content":"     *                        an invalid task number format or a task number that does not exist.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dominic-Khoo"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dominic-Khoo"},"content":"    public String execute(Storage storage, TaskList tasks, Ui ui) throws DownyException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Dominic-Khoo"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Dominic-Khoo"},"content":"            int taskNum \u003d Integer.parseInt(this.taskNumber);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Dominic-Khoo"},"content":"            tasks.unmarkTaskInList(taskNum);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Dominic-Khoo"},"content":"            Task t \u003d tasks.getTask(taskNum - 1);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Dominic-Khoo"},"content":"            storage.markIncomplete(t);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Dominic-Khoo"},"content":"            return ui.displayIncompleteTask(t);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Dominic-Khoo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Dominic-Khoo"},"content":"            throw new InvalidFormatException(\"Task number has to be a positive integer.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Dominic-Khoo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Dominic-Khoo"},"content":"            throw new InvalidFormatException(\"Task number does not exist.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Dominic-Khoo"},"content":"     * Returns the task number associated with this command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return The task number to be marked as incomplete, as a string.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Dominic-Khoo"},"content":"    public String getTaskNumber() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Dominic-Khoo"},"content":"        return this.taskNumber;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":62}},{"path":"src/main/java/exceptions/DownyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package exceptions;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":" * The {@code DownyException} class represents a custom exception that is thrown","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":" * in the application when an error specific to the application\u0027s logic occurs.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":" * It extends the {@code Exception} class, allowing it to be used as a checked exception.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"public class DownyException extends Exception {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":"     * Constructs a new {@code DownyException} with the specified detail message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param message The detail message, which provides more information about the error that occurred.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"    public DownyException(String message) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"        super(message);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":19}},{"path":"src/main/java/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package exceptions;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":" * The {@code InvalidCommandException} class represents an exception that is thrown","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":" * when an invalid command is entered by the user. This exception extends","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":" * {@code DownyException}.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"public class InvalidCommandException extends DownyException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":"     * Constructs a new {@code InvalidCommandException} with a default error message","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":"     * indicating that an invalid command was entered.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"        super(\"Invalid command entered\");","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":17}},{"path":"src/main/java/exceptions/InvalidFileFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package exceptions;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":" * The {@code InvalidFileFormatException} class represents a custom exception that is thrown","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":" * in the application when the file is unable to be read properly.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":" * It extends the {@code Exception} class, allowing it to be used as a checked exception.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"public class InvalidFileFormatException extends Exception {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":"     * Constructs a new {@code InvalidFileFormatException} with the specified detail message.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param message The detail message, which provides more information about the error that occurred.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"    public InvalidFileFormatException(String message) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"        super(message);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-09-10","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":19}},{"path":"src/main/java/exceptions/InvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package exceptions;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":" * The {@code InvalidFormatException} class represents an exception that is thrown","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":" * when an input provided by the user does not adhere to the expected format.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":" * This exception extends {@code DownyException}.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"public class InvalidFormatException extends DownyException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":"     * Constructs a new {@code InvalidFormatException} with the specified detail message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param message The detail message, which provides more information about","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"     *                the format error that occurred.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"    public InvalidFormatException(String message) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"        super(message);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":19}},{"path":"src/main/java/exceptions/MissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package exceptions;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":" * The {@code MissingArgumentException} class represents an exception that is thrown","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":" * when a required argument is missing from a command input provided by the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":" * This exception extends {@code DownyException}.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"public class MissingArgumentException extends DownyException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":"     * Constructs a new {@code MissingArgumentException} with the specified detail message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param message The detail message, which provides more information about","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"     *                the missing argument error that occurred.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"    public MissingArgumentException(String message) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"        super(message);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":19}},{"path":"src/main/java/parser/DateTimeHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package parser;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":" * The {@code DateTimeHandler} class provides utility methods for converting and formatting","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":" * date and time values. It includes methods to convert a date-time string into a {@code LocalDateTime}","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":" * object and to format a {@code LocalDateTime} object into a specific string pattern.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"public class DateTimeHandler {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"     * Converts a date-time string into a {@code LocalDateTime} object. The input string should be in the","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"     * format \"YYYY/MM/DD HHMM\". If the time part is not provided, it defaults to midnight (00:00).","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param input The date-time string to be converted.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return The corresponding {@code LocalDateTime} object.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":"     * @throws NumberFormatException If the input string contains invalid numerical values.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":"     * @throws DateTimeException If the input string represents an invalid date or time.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dominic-Khoo"},"content":"    public static LocalDateTime convertToDateTime(String input) throws InvalidFormatException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dominic-Khoo"},"content":"        String[] parts \u003d input.trim().split(\" \");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dominic-Khoo"},"content":"        if (parts.length \u003d\u003d 0 || !parts[0].contains(\"/\")) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dominic-Khoo"},"content":"            throw new InvalidFormatException(\"Invalid date format. Please use YYYY/MM/DD.\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dominic-Khoo"},"content":"        String[] dateParts \u003d parts[0].split(\"/\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dominic-Khoo"},"content":"        if (dateParts.length !\u003d 3) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dominic-Khoo"},"content":"            throw new InvalidFormatException(\"Date must be in the format YYYY/MM/DD.\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dominic-Khoo"},"content":"        int year;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dominic-Khoo"},"content":"        int month;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Dominic-Khoo"},"content":"        int day;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Dominic-Khoo"},"content":"        try {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Dominic-Khoo"},"content":"            year \u003d Integer.parseInt(dateParts[0]);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Dominic-Khoo"},"content":"            month \u003d Integer.parseInt(dateParts[1]);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Dominic-Khoo"},"content":"            day \u003d Integer.parseInt(dateParts[2]);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Dominic-Khoo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Dominic-Khoo"},"content":"            throw new InvalidFormatException(\"Year, month, and day must be valid integers.\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Dominic-Khoo"},"content":"        LocalDate date;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Dominic-Khoo"},"content":"        try {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Dominic-Khoo"},"content":"            date \u003d LocalDate.of(year, month, day);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Dominic-Khoo"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Dominic-Khoo"},"content":"            throw new InvalidFormatException(\"Invalid date. Please check the year, month, and day values.\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Dominic-Khoo"},"content":"        LocalTime time \u003d LocalTime.MIDNIGHT; //Default time to midnight","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Dominic-Khoo"},"content":"        if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Dominic-Khoo"},"content":"            String timePart \u003d parts[1].trim();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Dominic-Khoo"},"content":"            if (timePart.length() !\u003d 4) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Dominic-Khoo"},"content":"                throw new InvalidFormatException(\"Invalid time format. Please use HHMM.\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Dominic-Khoo"},"content":"            }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Dominic-Khoo"},"content":"            int hour;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Dominic-Khoo"},"content":"            int minute;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Dominic-Khoo"},"content":"            try {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Dominic-Khoo"},"content":"                hour \u003d Integer.parseInt(timePart.substring(0, 2));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Dominic-Khoo"},"content":"                minute \u003d Integer.parseInt(timePart.substring(2, 4));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Dominic-Khoo"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Dominic-Khoo"},"content":"                throw new InvalidFormatException(\"Hour and minute must be valid integers.\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Dominic-Khoo"},"content":"            }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Dominic-Khoo"},"content":"            try {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Dominic-Khoo"},"content":"                time \u003d LocalTime.of(hour, minute);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Dominic-Khoo"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Dominic-Khoo"},"content":"                throw new InvalidFormatException(\"Invalid time. Please check the hour and minute values.\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Dominic-Khoo"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Dominic-Khoo"},"content":"        return LocalDateTime.of(date, time);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Dominic-Khoo"},"content":"     * Formats a {@code LocalDateTime} object into a string with the pattern \"MMM dd yyyy HHmm\".","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param time The {@code LocalDateTime} object to be formatted.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return The formatted date-time string.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Dominic-Khoo"},"content":"    public static String formatDateTime(LocalDateTime time) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Dominic-Khoo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Dominic-Khoo"},"content":"        return time.format(formatter);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":95}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package parser;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"import commands.ByeCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"import commands.Command;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"import commands.DeadlineCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":"import commands.EventCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":"import commands.FindCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":"import commands.HelpCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":"import commands.ListCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"import commands.MarkCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"import commands.NoteCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"import commands.TodoCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"import commands.UnmarkCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"import exceptions.DownyException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"import exceptions.MissingArgumentException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":" * The {@code Parser} class is responsible for interpreting user input and converting","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":" * it into executable commands. It parses the input string and determines which command","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":" * should be executed, providing the appropriate parameters to the command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dominic-Khoo"},"content":"public class Parser {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dominic-Khoo"},"content":"     * Parses the user\u0027s input and returns the corresponding command.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param fullCommand The full command input from the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return The {@code Command} object corresponding to the user\u0027s input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dominic-Khoo"},"content":"     * @throws DownyException If the input is invalid or if required arguments are missing.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dominic-Khoo"},"content":"    public static Command parse(String fullCommand) throws DownyException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dominic-Khoo"},"content":"        assert fullCommand !\u003d null : \"Command cannot be null.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dominic-Khoo"},"content":"        String[] parts \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dominic-Khoo"},"content":"        String command \u003d parts[0];","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Dominic-Khoo"},"content":"        return switch (command) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Dominic-Khoo"},"content":"        case \"bye\" -\u003e handleBye();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Dominic-Khoo"},"content":"        case \"list\" -\u003e handleList();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Dominic-Khoo"},"content":"        case \"mark\" -\u003e handleMark(parts);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Dominic-Khoo"},"content":"        case \"unmark\" -\u003e handleUnmark(parts);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Dominic-Khoo"},"content":"        case \"delete\" -\u003e handleDelete(parts);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Dominic-Khoo"},"content":"        case \"todo\" -\u003e handleTodo(parts);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Dominic-Khoo"},"content":"        case \"deadline\" -\u003e handleDeadline(parts);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Dominic-Khoo"},"content":"        case \"event\" -\u003e handleEvent(parts);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Dominic-Khoo"},"content":"        case \"help\" -\u003e handleHelp();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Dominic-Khoo"},"content":"        case \"find\" -\u003e handleFind(parts);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Dominic-Khoo"},"content":"        case \"note\" -\u003e handleNote(parts);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Dominic-Khoo"},"content":"        default -\u003e throw new InvalidCommandException();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Dominic-Khoo"},"content":"        };","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Dominic-Khoo"},"content":"     * Handles the \"bye\" command.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return A {@code ByeCommand} object to terminate the program.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Dominic-Khoo"},"content":"    private static Command handleBye() {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Dominic-Khoo"},"content":"        return new ByeCommand();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Dominic-Khoo"},"content":"     * Handles the \"list\" command.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return A {@code ListCommand} object to list all tasks.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Dominic-Khoo"},"content":"    private static Command handleList() {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Dominic-Khoo"},"content":"        return new ListCommand();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Dominic-Khoo"},"content":"     * Handles the \"mark\" command, marking a task as complete.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param parts The user input split into parts.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return A {@code MarkCommand} to mark a task as complete.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Dominic-Khoo"},"content":"     * @throws MissingArgumentException if the task number is missing.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Dominic-Khoo"},"content":"    private static Command handleMark(String[] parts) throws MissingArgumentException {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Dominic-Khoo"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Dominic-Khoo"},"content":"            throw new MissingArgumentException(\"Mark command requires a task number.\\n\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Dominic-Khoo"},"content":"                    + \"   Usage: mark \u003ctaskNumber\u003e\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Dominic-Khoo"},"content":"        return new MarkCommand(parts[1]);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Dominic-Khoo"},"content":"     * Handles the \"unmark\" command, marking a task as incomplete.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param parts The user input split into parts.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return An {@code UnmarkCommand} to mark a task as incomplete.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Dominic-Khoo"},"content":"     * @throws MissingArgumentException if the task number is missing.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Dominic-Khoo"},"content":"    private static Command handleUnmark(String[] parts) throws MissingArgumentException {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Dominic-Khoo"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Dominic-Khoo"},"content":"            throw new MissingArgumentException(\"Unmark command requires a task number.\\n\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Dominic-Khoo"},"content":"                    + \"   Usage: unmark \u003ctaskNumber\u003e\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Dominic-Khoo"},"content":"        return new UnmarkCommand(parts[1]);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Dominic-Khoo"},"content":"     * Handles the \"delete\" command to remove a task.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param parts The user input split into parts.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return A {@code DeleteCommand} to remove the specified task.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Dominic-Khoo"},"content":"     * @throws MissingArgumentException if the task number is missing.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Dominic-Khoo"},"content":"    private static Command handleDelete(String[] parts) throws MissingArgumentException {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Dominic-Khoo"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Dominic-Khoo"},"content":"            throw new MissingArgumentException(\"Delete command requires a task number.\\n\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Dominic-Khoo"},"content":"                    + \"   Usage: delete \u003ctaskNumber\u003e\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Dominic-Khoo"},"content":"        return new DeleteCommand(parts[1]);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Dominic-Khoo"},"content":"     * Handles the \"todo\" command to add a new todo task.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param parts The user input split into parts.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return A {@code TodoCommand} to add a new todo task.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Dominic-Khoo"},"content":"     * @throws MissingArgumentException if the task description is missing.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Dominic-Khoo"},"content":"    private static Command handleTodo(String[] parts) throws MissingArgumentException {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Dominic-Khoo"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Dominic-Khoo"},"content":"            throw new MissingArgumentException(\"Todo command requires a task description.\\n\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Dominic-Khoo"},"content":"                    + \"   todo \u003ctaskDescription\u003e\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Dominic-Khoo"},"content":"        return new TodoCommand(parts[1]);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Dominic-Khoo"},"content":"     * Handles the \"deadline\" command to add a new deadline task.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param parts The user input split into parts.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return A {@code DeadlineCommand} to add a new deadline task.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Dominic-Khoo"},"content":"     * @throws MissingArgumentException if a required argument is missing.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Dominic-Khoo"},"content":"     * @throws InvalidFormatException if the format is incorrect.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Dominic-Khoo"},"content":"    private static Command handleDeadline(String[] parts) throws MissingArgumentException, InvalidFormatException {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Dominic-Khoo"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Dominic-Khoo"},"content":"            throw new MissingArgumentException(\"Deadline command requires a task description \"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Dominic-Khoo"},"content":"                    + \"and a due date.\\n\" + \"   deadline \u003ctaskDescription\u003e /by \u003cdueDate\u003e\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Dominic-Khoo"},"content":"        String remainder \u003d parts[1];","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Dominic-Khoo"},"content":"        String[] splitParts \u003d remainder.split(\"/by\", 2);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Dominic-Khoo"},"content":"        if (splitParts.length \u003c 2) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Dominic-Khoo"},"content":"            throw new InvalidFormatException(\"Deadline command must follow the format: \"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Dominic-Khoo"},"content":"                    + \"\u003ctask\u003e /by \u003cdueDate\u003e.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Dominic-Khoo"},"content":"        String name \u003d splitParts[0].trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Dominic-Khoo"},"content":"        String time \u003d splitParts[1].trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Dominic-Khoo"},"content":"        LocalDateTime formattedTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Dominic-Khoo"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Dominic-Khoo"},"content":"            formattedTime \u003d DateTimeHandler.convertToDateTime(time);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Dominic-Khoo"},"content":"        } catch (NumberFormatException | DateTimeException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Dominic-Khoo"},"content":"            throw new InvalidFormatException(\"dueDate must follow the format: YYYY/MM/DD HHMM\");","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Dominic-Khoo"},"content":"        return new DeadlineCommand(name, formattedTime);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Dominic-Khoo"},"content":"     * Handles the \"event\" command to add a new event task.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param parts The user input split into parts.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return An {@code EventCommand} to add a new event task.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Dominic-Khoo"},"content":"     * @throws MissingArgumentException if a required argument is missing.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Dominic-Khoo"},"content":"     * @throws InvalidFormatException if the format is incorrect.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Dominic-Khoo"},"content":"    private static Command handleEvent(String[] parts) throws MissingArgumentException, InvalidFormatException {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Dominic-Khoo"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Dominic-Khoo"},"content":"            throw new MissingArgumentException(\"Event command requires a task description, \"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Dominic-Khoo"},"content":"                    + \"start time, and end time.\\n   \"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Dominic-Khoo"},"content":"                    + \"event \u003ctaskDescription\u003e /from \u003cstartTime\u003e /to \u003cendTime\u003e\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Dominic-Khoo"},"content":"        String remainder \u003d parts[1];","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Dominic-Khoo"},"content":"        String[] splitParts \u003d remainder.split(\"/from\", 2);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Dominic-Khoo"},"content":"        if (splitParts.length \u003c 2 || splitParts[1].trim().isEmpty()) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Dominic-Khoo"},"content":"            throw new InvalidFormatException(\"Event command must contain the \u0027/from\u0027 keyword with a valid start time.\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Dominic-Khoo"},"content":"        if (!splitParts[1].contains(\"/to\")) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Dominic-Khoo"},"content":"            throw new InvalidFormatException(\"Event command must contain the \u0027/to\u0027 keyword with a valid end time.\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Dominic-Khoo"},"content":"        String name \u003d splitParts[0].trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Dominic-Khoo"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Dominic-Khoo"},"content":"            throw new MissingArgumentException(\"Event command requires a task description before \u0027/from\u0027.\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Dominic-Khoo"},"content":"        String[] time \u003d splitParts[1].split(\"/to\", 2);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Dominic-Khoo"},"content":"        // Ensure that startTime and endTime exist after splitting","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Dominic-Khoo"},"content":"        if (time.length \u003c 2 || time[0].trim().isEmpty() || time[1].trim().isEmpty()) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Dominic-Khoo"},"content":"            throw new InvalidFormatException(\"Start time or end time is missing or incorrectly formatted. \"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Dominic-Khoo"},"content":"                    + \"Please use: event \u003ctaskDescription\u003e /from \u003cstartTime\u003e /to \u003cendTime\u003e.\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Dominic-Khoo"},"content":"        String startTime \u003d time[0].trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Dominic-Khoo"},"content":"        String endTime \u003d time[1].trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Dominic-Khoo"},"content":"        LocalDateTime formattedStartTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Dominic-Khoo"},"content":"        LocalDateTime formattedEndTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Dominic-Khoo"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Dominic-Khoo"},"content":"            formattedStartTime \u003d DateTimeHandler.convertToDateTime(startTime);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Dominic-Khoo"},"content":"            formattedEndTime \u003d DateTimeHandler.convertToDateTime(endTime);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Dominic-Khoo"},"content":"            if (formattedStartTime.isAfter(formattedEndTime)) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Dominic-Khoo"},"content":"                throw new InvalidFormatException(\"Start time must be before end time.\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Dominic-Khoo"},"content":"            }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Dominic-Khoo"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Dominic-Khoo"},"content":"            throw new InvalidFormatException(\"StartTime and EndTime must follow the format: YYYY/MM/DD HHMM.\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Dominic-Khoo"},"content":"        return new EventCommand(name, formattedStartTime, formattedEndTime);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Dominic-Khoo"},"content":"     * Handles the \"help\" command to display help information.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return A {@code HelpCommand} to display available commands.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Dominic-Khoo"},"content":"    private static Command handleHelp() {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Dominic-Khoo"},"content":"        return new HelpCommand();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Dominic-Khoo"},"content":"     * Handles the \"find\" command to search for tasks by keyword.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param parts The user input split into parts.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return A {@code FindCommand} to search for tasks.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Dominic-Khoo"},"content":"     * @throws MissingArgumentException if the keyword is missing.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Dominic-Khoo"},"content":"    private static Command handleFind(String[] parts) throws MissingArgumentException {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Dominic-Khoo"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Dominic-Khoo"},"content":"            throw new MissingArgumentException(\"Find command requires a keyword.\\n\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Dominic-Khoo"},"content":"                    + \"   Usage: find \u003ckeyword\u003e\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Dominic-Khoo"},"content":"        return new FindCommand(parts[1]);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Dominic-Khoo"},"content":"     * Handles the \"note\" command, which can either list notes or enter a new note.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param parts The user input split into parts.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return A {@code NoteCommand} to either list notes or enter a new note.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Dominic-Khoo"},"content":"     * @throws MissingArgumentException If the command is missing required arguments.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Dominic-Khoo"},"content":"    private static Command handleNote(String[] parts) throws MissingArgumentException, InvalidFormatException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Dominic-Khoo"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Dominic-Khoo"},"content":"            throw new MissingArgumentException(\"Note command requires either \u0027list\u0027, \u0027entry \u003ccontent\u003e\u0027,\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Dominic-Khoo"},"content":"                    + \" or \u0027delete \u003cnumber\u003e\u0027.\\n\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Dominic-Khoo"},"content":"                    + \"   Usage: note list\\n\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Dominic-Khoo"},"content":"                    + \"   or: note entry \u003ccontent\u003e\\n\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Dominic-Khoo"},"content":"                    + \"   or: note delete \u003cnumber\u003e\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Dominic-Khoo"},"content":"        String[] noteParts \u003d parts[1].split(\" \", 2);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Dominic-Khoo"},"content":"        String noteCommand \u003d noteParts[0];","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Dominic-Khoo"},"content":"        if (noteCommand.equals(\"list\")) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Dominic-Khoo"},"content":"            return new NoteCommand(\"list\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Dominic-Khoo"},"content":"        if (noteCommand.equals(\"entry\")) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Dominic-Khoo"},"content":"            if (noteParts.length \u003c 2 || noteParts[1].trim().isEmpty()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Dominic-Khoo"},"content":"                throw new MissingArgumentException(\"Note entry requires content to be specified.\\n\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Dominic-Khoo"},"content":"                        + \"   Usage: note entry \u003ccontent\u003e\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Dominic-Khoo"},"content":"            }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Dominic-Khoo"},"content":"            return new NoteCommand(\"entry\", noteParts[1].trim());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Dominic-Khoo"},"content":"        if (noteCommand.equals(\"delete\")) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Dominic-Khoo"},"content":"            if (noteParts.length \u003c 2 || noteParts[1].trim().isEmpty()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Dominic-Khoo"},"content":"                throw new MissingArgumentException(\"Note delete requires a note number.\\n\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Dominic-Khoo"},"content":"                        + \"   Usage: note delete \u003cnumber\u003e\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Dominic-Khoo"},"content":"            }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Dominic-Khoo"},"content":"            try {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Dominic-Khoo"},"content":"                int noteNumber \u003d Integer.parseInt(noteParts[1].trim());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Dominic-Khoo"},"content":"                if (noteNumber \u003c\u003d 0) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Dominic-Khoo"},"content":"                    throw new InvalidFormatException(\"Note number must be greater than 0.\\n\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Dominic-Khoo"},"content":"                            + \"   Usage: note delete \u003cnumber\u003e\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Dominic-Khoo"},"content":"                }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Dominic-Khoo"},"content":"                return new NoteCommand(\"delete\", noteNumber);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Dominic-Khoo"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Dominic-Khoo"},"content":"                throw new InvalidFormatException(\"Invalid format for note number. It must be an integer.\\n\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"Dominic-Khoo"},"content":"                        + \"   Usage: note delete \u003cnumber\u003e\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Dominic-Khoo"},"content":"            }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"Dominic-Khoo"},"content":"        throw new InvalidFormatException(\"Note command requires either \u0027list\u0027, \u0027entry \u003ccontent\u003e\u0027,\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"Dominic-Khoo"},"content":"                + \" or \u0027delete \u003cnumber\u003e\u0027.\\n\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Dominic-Khoo"},"content":"                + \"   Usage: note list\\n\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"Dominic-Khoo"},"content":"                + \"   or: note entry \u003ccontent\u003e\\n\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"Dominic-Khoo"},"content":"                + \"   or: note delete \u003cnumber\u003e\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":306}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"import java.io.File;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":"import java.util.List;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"import exceptions.InvalidFileFormatException;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.Event;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.Task;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.Todo;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"import ui.Ui;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":" * The {@code Storage} class handles the storage and retrieval of tasks from a file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":" * It provides methods to read tasks from a file, write tasks to a file, and update task","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":" * status in the file. The class ensures that the storage file and its containing folder","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dominic-Khoo"},"content":" * are created if they do not already exist.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dominic-Khoo"},"content":"public class Storage {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dominic-Khoo"},"content":"    private static final String FOLDER_NAME \u003d \"data\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dominic-Khoo"},"content":"    private static final String NOTES_FILE_NAME \u003d \"notes.txt\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dominic-Khoo"},"content":"    private final String filePath;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dominic-Khoo"},"content":"    private final String notesFilePath;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dominic-Khoo"},"content":"     * Constructs a new {@code Storage} object with the specified file path.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param filePath The file path where tasks are stored.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Dominic-Khoo"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Dominic-Khoo"},"content":"        assert filePath !\u003d null \u0026\u0026 !filePath.isBlank() : \"File path cannot be null or blank.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Dominic-Khoo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Dominic-Khoo"},"content":"        this.notesFilePath \u003d FOLDER_NAME + \"/\" + NOTES_FILE_NAME;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Dominic-Khoo"},"content":"     * Retrieves tasks from the storage file and returns them as a list. If the storage","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Dominic-Khoo"},"content":"     * file or folder does not exist, they are created. Each task is parsed based on its","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Dominic-Khoo"},"content":"     * type and status, and added to the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return An {@code ArrayList} of tasks retrieved from the storage file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Dominic-Khoo"},"content":"    public ArrayList\u003cTask\u003e retrieveTasks() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Dominic-Khoo"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Dominic-Khoo"},"content":"        Path path \u003d Paths.get(this.filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Dominic-Khoo"},"content":"        // Ensure the folder and file exist","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Dominic-Khoo"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Dominic-Khoo"},"content":"            if (Files.notExists(path.getParent())) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Dominic-Khoo"},"content":"                Files.createDirectories(path.getParent());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Dominic-Khoo"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Dominic-Khoo"},"content":"            if (Files.notExists(path)) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Dominic-Khoo"},"content":"                Files.createFile(path);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Dominic-Khoo"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Dominic-Khoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Dominic-Khoo"},"content":"            Ui.showErrorMessage(\"Error creating file or folder: \" + e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Dominic-Khoo"},"content":"            return taskList; // Return an empty list if file creation fails","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Dominic-Khoo"},"content":"        // Now proceed to read the file","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Dominic-Khoo"},"content":"        try (Scanner sc \u003d new Scanner(path.toFile())) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Dominic-Khoo"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Dominic-Khoo"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Dominic-Khoo"},"content":"                char taskType \u003d line.charAt(0);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Dominic-Khoo"},"content":"                String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Dominic-Khoo"},"content":"                for (int i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Dominic-Khoo"},"content":"                    parts[i] \u003d parts[i].trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Dominic-Khoo"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Dominic-Khoo"},"content":"                String taskNumber \u003d parts[1];","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Dominic-Khoo"},"content":"                String taskDescription \u003d parts[2];","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Dominic-Khoo"},"content":"                switch (taskType) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Dominic-Khoo"},"content":"                case \u0027T\u0027 -\u003e {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Dominic-Khoo"},"content":"                    taskList.add(new Todo(taskDescription));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Dominic-Khoo"},"content":"                    if (taskNumber.equals(\"1\")) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Dominic-Khoo"},"content":"                        taskList.get(taskList.size() - 1).completeTask();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Dominic-Khoo"},"content":"                    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Dominic-Khoo"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Dominic-Khoo"},"content":"                case \u0027D\u0027 -\u003e {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Dominic-Khoo"},"content":"                    LocalDateTime taskDeadline \u003d LocalDateTime.parse(parts[3]);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Dominic-Khoo"},"content":"                    taskList.add(new Deadline(taskDescription, taskDeadline));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Dominic-Khoo"},"content":"                    if (taskNumber.equals(\"1\")) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Dominic-Khoo"},"content":"                        taskList.get(taskList.size() - 1).completeTask();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Dominic-Khoo"},"content":"                    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Dominic-Khoo"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Dominic-Khoo"},"content":"                case \u0027E\u0027 -\u003e {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Dominic-Khoo"},"content":"                    LocalDateTime taskStartTime \u003d LocalDateTime.parse(parts[3]);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Dominic-Khoo"},"content":"                    LocalDateTime taskEndTime \u003d LocalDateTime.parse(parts[4]);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Dominic-Khoo"},"content":"                    taskList.add(new Event(taskDescription, taskStartTime, taskEndTime));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Dominic-Khoo"},"content":"                    if (taskNumber.equals(\"1\")) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Dominic-Khoo"},"content":"                        taskList.get(taskList.size() - 1).completeTask();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Dominic-Khoo"},"content":"                    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Dominic-Khoo"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Dominic-Khoo"},"content":"                default -\u003e {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Dominic-Khoo"},"content":"                    throw new InvalidFileFormatException(\"File not in appropriate format\");","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Dominic-Khoo"},"content":"                }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Dominic-Khoo"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Dominic-Khoo"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Dominic-Khoo"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Dominic-Khoo"},"content":"            Ui.showErrorMessage(\"File not found: \" + path.toAbsolutePath());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Dominic-Khoo"},"content":"        } catch (InvalidFileFormatException e) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Dominic-Khoo"},"content":"            Ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Dominic-Khoo"},"content":"        return taskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Dominic-Khoo"},"content":"     * Marks a task as complete in the storage file by updating its status from incomplete","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Dominic-Khoo"},"content":"     * (0) to complete (1).","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param t The task to be marked as complete.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Dominic-Khoo"},"content":"    public void markComplete(Task t) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Dominic-Khoo"},"content":"        assert t !\u003d null : \"Task cannot be null.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Dominic-Khoo"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Dominic-Khoo"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(Paths.get(this.filePath));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Dominic-Khoo"},"content":"            List\u003cString\u003e updatedLines \u003d lines.stream().map(line -\u003e {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Dominic-Khoo"},"content":"                String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Dominic-Khoo"},"content":"                if (parts.length \u003e 2 \u0026\u0026 parts[2].trim().equals(t.getName())) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Dominic-Khoo"},"content":"                    parts[1] \u003d \" 1 \"; // Change the status from 0 to 1","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Dominic-Khoo"},"content":"                    return String.join(\"|\", parts).trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Dominic-Khoo"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Dominic-Khoo"},"content":"                return line;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Dominic-Khoo"},"content":"            }).toList();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Dominic-Khoo"},"content":"            // Write the updated lines back to the file","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Dominic-Khoo"},"content":"            try (FileWriter writer \u003d new FileWriter(this.filePath, false)) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Dominic-Khoo"},"content":"                for (String updatedLine : updatedLines) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Dominic-Khoo"},"content":"                    writer.write(updatedLine + System.lineSeparator());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Dominic-Khoo"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Dominic-Khoo"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Dominic-Khoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Dominic-Khoo"},"content":"            System.out.println(\"An error occurred while writing to the file.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Dominic-Khoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Dominic-Khoo"},"content":"     * Marks a task as incomplete in the storage file by updating its status from complete","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Dominic-Khoo"},"content":"     * (1) to incomplete (0).","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param t The task to be marked as incomplete.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Dominic-Khoo"},"content":"    public void markIncomplete(Task t) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Dominic-Khoo"},"content":"        assert t !\u003d null : \"Task cannot be null.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Dominic-Khoo"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Dominic-Khoo"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(Paths.get(this.filePath));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Dominic-Khoo"},"content":"            List\u003cString\u003e updatedLines \u003d lines.stream().map(line -\u003e {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Dominic-Khoo"},"content":"                String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Dominic-Khoo"},"content":"                if (parts.length \u003e 2 \u0026\u0026 parts[2].trim().equals(t.getName())) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Dominic-Khoo"},"content":"                    parts[1] \u003d \" 0 \"; // Change the status from 1 to 0","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Dominic-Khoo"},"content":"                    return String.join(\"|\", parts).trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Dominic-Khoo"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Dominic-Khoo"},"content":"                return line;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Dominic-Khoo"},"content":"            }).toList();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Dominic-Khoo"},"content":"            // Write the updated lines back to the file","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Dominic-Khoo"},"content":"            try (FileWriter writer \u003d new FileWriter(this.filePath, false)) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Dominic-Khoo"},"content":"                for (String updatedLine : updatedLines) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Dominic-Khoo"},"content":"                    writer.write(updatedLine + System.lineSeparator());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Dominic-Khoo"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Dominic-Khoo"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Dominic-Khoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Dominic-Khoo"},"content":"            System.out.println(\"An error occurred while writing to the file.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Dominic-Khoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Dominic-Khoo"},"content":"     * Deletes a task from the storage file by removing the corresponding line from the file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param t The task to be deleted from the storage file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Dominic-Khoo"},"content":"    public void deleteTask(Task t) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Dominic-Khoo"},"content":"        assert t !\u003d null : \"Task cannot be null.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Dominic-Khoo"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Dominic-Khoo"},"content":"            // Read all lines from the file","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Dominic-Khoo"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(Paths.get(this.filePath));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Dominic-Khoo"},"content":"            // Filter out the line corresponding to the task to be deleted","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Dominic-Khoo"},"content":"            List\u003cString\u003e updatedLines \u003d lines.stream()","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Dominic-Khoo"},"content":"                    .filter(line -\u003e {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Dominic-Khoo"},"content":"                        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Dominic-Khoo"},"content":"                        return !(parts.length \u003e 2 \u0026\u0026 parts[2].trim().equals(t.getName()));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Dominic-Khoo"},"content":"                    })","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Dominic-Khoo"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Dominic-Khoo"},"content":"            // Write the remaining lines back to the file","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Dominic-Khoo"},"content":"            try (FileWriter writer \u003d new FileWriter(this.filePath, false)) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Dominic-Khoo"},"content":"                for (String updatedLine : updatedLines) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Dominic-Khoo"},"content":"                    writer.write(updatedLine + System.lineSeparator());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Dominic-Khoo"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Dominic-Khoo"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Dominic-Khoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Dominic-Khoo"},"content":"            System.out.println(\"An error occurred while updating the file.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Dominic-Khoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Dominic-Khoo"},"content":"     * Writes a new Todo task to the storage file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param t The Todo task to be written to the storage file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Dominic-Khoo"},"content":"    public void writeTodoToFile(Todo t) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Dominic-Khoo"},"content":"        assert t !\u003d null : \"Task cannot be null.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Dominic-Khoo"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Dominic-Khoo"},"content":"            File dataFolder \u003d new File(FOLDER_NAME);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Dominic-Khoo"},"content":"            if (!dataFolder.exists()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Dominic-Khoo"},"content":"                dataFolder.mkdirs(); // Create the folder if it doesn\u0027t exist","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Dominic-Khoo"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Dominic-Khoo"},"content":"            try (FileWriter writer \u003d new FileWriter(this.filePath, true)) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Dominic-Khoo"},"content":"                writer.write(\"T | 0 | \" + t.getName() + System.lineSeparator());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Dominic-Khoo"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Dominic-Khoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Dominic-Khoo"},"content":"            System.out.println(\"An error occurred while writing to the file.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Dominic-Khoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Dominic-Khoo"},"content":"     * Writes a new Deadline task to the storage file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param t The Deadline task to be written to the storage file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Dominic-Khoo"},"content":"    public void writeDeadlineToFile(Deadline t) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Dominic-Khoo"},"content":"        assert t !\u003d null : \"Task cannot be null.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Dominic-Khoo"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Dominic-Khoo"},"content":"            File dataFolder \u003d new File(FOLDER_NAME);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Dominic-Khoo"},"content":"            if (!dataFolder.exists()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Dominic-Khoo"},"content":"                dataFolder.mkdirs(); // Create the folder if it doesn\u0027t exist","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Dominic-Khoo"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Dominic-Khoo"},"content":"            try (FileWriter writer \u003d new FileWriter(this.filePath, true)) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Dominic-Khoo"},"content":"                writer.write(\"D | 0 | \" + t.getName() + \" | \" + t.getTime() + System.lineSeparator());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Dominic-Khoo"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Dominic-Khoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Dominic-Khoo"},"content":"            System.out.println(\"An error occurred while writing to the file.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Dominic-Khoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Dominic-Khoo"},"content":"     * Writes a new Event task to the storage file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param t The Event task to be written to the storage file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Dominic-Khoo"},"content":"    public void writeEventToFile(Event t) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Dominic-Khoo"},"content":"        assert t !\u003d null : \"Task cannot be null.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Dominic-Khoo"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Dominic-Khoo"},"content":"            File dataFolder \u003d new File(FOLDER_NAME);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Dominic-Khoo"},"content":"            if (!dataFolder.exists()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Dominic-Khoo"},"content":"                dataFolder.mkdirs(); // Create the folder if it doesn\u0027t exist","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Dominic-Khoo"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Dominic-Khoo"},"content":"            try (FileWriter writer \u003d new FileWriter(this.filePath, true)) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Dominic-Khoo"},"content":"                writer.write(\"E | 0 | \" + t.getName() + \" | \" + t.getStartTime() + \" | \" + t.getEndTime()","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Dominic-Khoo"},"content":"                        + System.lineSeparator());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Dominic-Khoo"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Dominic-Khoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Dominic-Khoo"},"content":"            System.out.println(\"An error occurred while writing to the file.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Dominic-Khoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Dominic-Khoo"},"content":"     * Retrieves notes from the storage file and returns them as a list. If the storage","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Dominic-Khoo"},"content":"     * file or folder does not exist, they are created.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return A {@code List} of notes retrieved from the storage file.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Dominic-Khoo"},"content":"    public List\u003cString\u003e loadNotes() {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Dominic-Khoo"},"content":"        List\u003cString\u003e notesList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"Dominic-Khoo"},"content":"        Path path \u003d Paths.get(this.notesFilePath);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Dominic-Khoo"},"content":"        // Ensure the folder and file exist","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Dominic-Khoo"},"content":"        try {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"Dominic-Khoo"},"content":"            if (Files.notExists(path.getParent())) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"Dominic-Khoo"},"content":"                Files.createDirectories(path.getParent());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Dominic-Khoo"},"content":"            }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"Dominic-Khoo"},"content":"            if (Files.notExists(path)) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"Dominic-Khoo"},"content":"                Files.createFile(path);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Dominic-Khoo"},"content":"            }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Dominic-Khoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"Dominic-Khoo"},"content":"            Ui.showErrorMessage(\"Error creating notes file or folder: \" + e.getMessage());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"Dominic-Khoo"},"content":"            return notesList;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"Dominic-Khoo"},"content":"        // Read the file, treating each line as a single note","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"Dominic-Khoo"},"content":"        try (Scanner sc \u003d new Scanner(path.toFile())) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"Dominic-Khoo"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"Dominic-Khoo"},"content":"                String line \u003d sc.nextLine().trim();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"Dominic-Khoo"},"content":"                if (!line.isEmpty()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"Dominic-Khoo"},"content":"                    notesList.add(line);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"Dominic-Khoo"},"content":"                }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"Dominic-Khoo"},"content":"            }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"Dominic-Khoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"Dominic-Khoo"},"content":"            Ui.showErrorMessage(\"Error reading notes file: \" + e.getMessage());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"Dominic-Khoo"},"content":"        return notesList;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"Dominic-Khoo"},"content":"     * Writes a new note to the notes storage file.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param noteContent The content of the note to be written.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"Dominic-Khoo"},"content":"    public void writeNoteToFile(String noteContent) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"Dominic-Khoo"},"content":"        assert noteContent !\u003d null \u0026\u0026 !noteContent.isBlank() : \"Note content cannot be null or blank.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"Dominic-Khoo"},"content":"        try {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"Dominic-Khoo"},"content":"            File dataFolder \u003d new File(FOLDER_NAME);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"Dominic-Khoo"},"content":"            if (!dataFolder.exists()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"Dominic-Khoo"},"content":"                dataFolder.mkdirs();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"Dominic-Khoo"},"content":"            }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"Dominic-Khoo"},"content":"            // Append the new note as a single line to the notes file","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"Dominic-Khoo"},"content":"            try (FileWriter writer \u003d new FileWriter(this.notesFilePath, true)) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"Dominic-Khoo"},"content":"                writer.write(noteContent + System.lineSeparator());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"Dominic-Khoo"},"content":"            }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"Dominic-Khoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"Dominic-Khoo"},"content":"            System.out.println(\"An error occurred while writing to the notes file.\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"Dominic-Khoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"Dominic-Khoo"},"content":"     * Deletes a note by its number and re-numbers the remaining notes.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param noteNumber The number of the note to be deleted (1-based index).","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"Dominic-Khoo"},"content":"    public void deleteNoteFromFile(int noteNumber) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"Dominic-Khoo"},"content":"        assert noteNumber \u003e 0 : \"Note number must be greater than 0.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"Dominic-Khoo"},"content":"        try {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"Dominic-Khoo"},"content":"            // Read all lines from the file","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"Dominic-Khoo"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(Paths.get(this.notesFilePath));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"Dominic-Khoo"},"content":"            if (noteNumber \u003e lines.size()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"Dominic-Khoo"},"content":"                Ui.showErrorMessage(\"Note number \" + noteNumber + \" does not exist.\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"Dominic-Khoo"},"content":"                return;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"Dominic-Khoo"},"content":"            }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"Dominic-Khoo"},"content":"            lines.remove(noteNumber - 1);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"Dominic-Khoo"},"content":"            // Write the remaining lines back to the file","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"Dominic-Khoo"},"content":"            try (FileWriter writer \u003d new FileWriter(this.notesFilePath, false)) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"Dominic-Khoo"},"content":"                for (String line : lines) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"Dominic-Khoo"},"content":"                    writer.write(line + System.lineSeparator());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"Dominic-Khoo"},"content":"                }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"Dominic-Khoo"},"content":"            }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"Dominic-Khoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"Dominic-Khoo"},"content":"            System.out.println(\"An error occurred while updating the notes file.\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"Dominic-Khoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":383}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"import parser.DateTimeHandler;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":" * The {@code Deadline} class represents a task with a specific deadline. It extends the","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":" * {@code Task} class and includes additional information about the due date and time for","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":" * the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"    private final LocalDateTime time;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"     * Constructs a new {@code Deadline} task with the specified name and due date.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param name The name or description of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param time The due date and time for the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"    public Deadline(String name, LocalDateTime time) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"        super(name);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":"        this.time \u003d time;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dominic-Khoo"},"content":"     * Returns the due date and time for this deadline task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return The due date and time as a {@code LocalDateTime} object.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dominic-Khoo"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dominic-Khoo"},"content":"        return this.time;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dominic-Khoo"},"content":"     * Returns a string representation of the deadline task, including its completion","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dominic-Khoo"},"content":"     * status, name, and due date.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return A string representation of the task in the format \"[D] name (by: dueDate)\".","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Dominic-Khoo"},"content":"    @Override","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Dominic-Khoo"},"content":"    public String toString() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Dominic-Khoo"},"content":"        String dueDate \u003d DateTimeHandler.formatDateTime(this.time);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Dominic-Khoo"},"content":"        return (\"[D] \" + super.toString() + \" (by: \" + dueDate + \")\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":47}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"import parser.DateTimeHandler;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":" * The {@code Event} class represents a task that occurs at a specific time interval.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":" * It extends the {@code Task} class and includes additional information about the","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":" * start time and end time of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"     * Constructs a new {@code Event} task with the specified name, start time, and end time.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param name      The name or description of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param startTime The start time of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param endTime   The end time of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":"    public Event(String name, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":"        super(name);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dominic-Khoo"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dominic-Khoo"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dominic-Khoo"},"content":"     * Returns the start time of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return The start time as a {@code LocalDateTime} object.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dominic-Khoo"},"content":"    public LocalDateTime getStartTime() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dominic-Khoo"},"content":"        return this.startTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Dominic-Khoo"},"content":"     * Returns the end time of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return The end time as a {@code LocalDateTime} object.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Dominic-Khoo"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Dominic-Khoo"},"content":"        return this.endTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Dominic-Khoo"},"content":"     * Returns a string representation of the event task, including its completion status,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Dominic-Khoo"},"content":"     * name, start time, and end time.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return A string representation of the task in the format","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Dominic-Khoo"},"content":"     *         \"[E] name (from: startTime to: endTime)\".","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Dominic-Khoo"},"content":"    @Override","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Dominic-Khoo"},"content":"    public String toString() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Dominic-Khoo"},"content":"        String start \u003d DateTimeHandler.formatDateTime(this.startTime);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Dominic-Khoo"},"content":"        String end \u003d DateTimeHandler.formatDateTime(this.endTime);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Dominic-Khoo"},"content":"        return (\"[E] \" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":63}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":" * The {@code Task} class represents a general task with a name and a completion status.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":" * It serves as a base class for more specific types of tasks, such as deadlines and events.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"public class Task {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"    private final String name;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":"    private boolean isCompleted;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"     * Constructs a new {@code Task} with the specified name. By default, the task is marked as incomplete.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param name The name or description of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"    public Task(String name) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":"     * Returns whether the task is completed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return {@code true} if the task is completed, {@code false} otherwise.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dominic-Khoo"},"content":"    public boolean isComplete() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dominic-Khoo"},"content":"        return this.isCompleted;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dominic-Khoo"},"content":"     * Marks the task as completed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dominic-Khoo"},"content":"    public void completeTask() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dominic-Khoo"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dominic-Khoo"},"content":"     * Returns the name or description of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return The name of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Dominic-Khoo"},"content":"    public String getName() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Dominic-Khoo"},"content":"        return this.name;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Dominic-Khoo"},"content":"     * Marks the task as incomplete.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Dominic-Khoo"},"content":"    public void uncompleteTask() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Dominic-Khoo"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Dominic-Khoo"},"content":"     * Returns a string representation of the task, including its completion status and name.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return A string representation of the task in the format \"[X] name\" if completed,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Dominic-Khoo"},"content":"     *         or \"[ ] name\" if not completed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Dominic-Khoo"},"content":"    @Override","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Dominic-Khoo"},"content":"    public String toString() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Dominic-Khoo"},"content":"        if (isCompleted) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Dominic-Khoo"},"content":"            return (\"[X] \" + this.name);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Dominic-Khoo"},"content":"        return (\"[ ] \" + this.name);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":68}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"import storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":" * The {@code TaskList} class manages a list of tasks, providing operations to add, remove,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":" * and modify tasks. It supports different types of tasks, including todos, deadlines, and events.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":"public class TaskList {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"     * Constructs an empty {@code TaskList}.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"    public TaskList() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":"     * Loads tasks from the specified storage into this task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param storage The storage object from which tasks are retrieved.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dominic-Khoo"},"content":"    public void loadTasks(Storage storage) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dominic-Khoo"},"content":"        this.tasks \u003d storage.retrieveTasks();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dominic-Khoo"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return {@code true} if the task list is empty, {@code false} otherwise.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dominic-Khoo"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dominic-Khoo"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Dominic-Khoo"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return The size of the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Dominic-Khoo"},"content":"    public int getSize() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Dominic-Khoo"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Dominic-Khoo"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param index The index of the task to retrieve (1-based index).","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Dominic-Khoo"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Dominic-Khoo"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Dominic-Khoo"},"content":"     * Marks the task at the specified index as complete.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param index The index of the task to mark as complete (1-based index).","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Dominic-Khoo"},"content":"    public void completeTaskInList(int index) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Dominic-Khoo"},"content":"        this.tasks.get(index - 1).completeTask();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Dominic-Khoo"},"content":"     * Marks the task at the specified index as incomplete.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param index The index of the task to unmark as incomplete (1-based index).","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Dominic-Khoo"},"content":"    public void unmarkTaskInList(int index) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Dominic-Khoo"},"content":"        this.tasks.get(index - 1).uncompleteTask();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Dominic-Khoo"},"content":"     * Deletes the task at the specified index from the list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param index The index of the task to delete (1-based index).","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return The task that was removed from the list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Dominic-Khoo"},"content":"    public Task deleteTaskInList(int index) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Dominic-Khoo"},"content":"        Task t \u003d this.tasks.get(index - 1);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Dominic-Khoo"},"content":"        this.tasks.remove(index - 1);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Dominic-Khoo"},"content":"        return t;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Dominic-Khoo"},"content":"     * Adds a new Todo task to the list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param taskDescription The description of the Todo task to add.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return The newly added Todo task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Dominic-Khoo"},"content":"    public Todo addTodo(String taskDescription) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Dominic-Khoo"},"content":"        Todo t \u003d new Todo(taskDescription);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Dominic-Khoo"},"content":"        this.tasks.add(t);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Dominic-Khoo"},"content":"        return t;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Dominic-Khoo"},"content":"     * Adds a new Deadline task to the list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param taskDescription The description of the Deadline task to add.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param time            The due date and time of the deadline.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return The newly added Deadline task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Dominic-Khoo"},"content":"    public Deadline addDeadline(String taskDescription, LocalDateTime time) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Dominic-Khoo"},"content":"        Deadline d \u003d new Deadline(taskDescription, time);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Dominic-Khoo"},"content":"        this.tasks.add(d);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Dominic-Khoo"},"content":"        return d;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Dominic-Khoo"},"content":"     * Adds a new Event task to the list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param taskDescription The description of the Event task to add.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param startTime       The start time of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param endTime         The end time of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return The newly added Event task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Dominic-Khoo"},"content":"    public Event addEvent(String taskDescription, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Dominic-Khoo"},"content":"        Event e \u003d new Event(taskDescription, startTime, endTime);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Dominic-Khoo"},"content":"        this.tasks.add(e);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Dominic-Khoo"},"content":"        return e;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":128}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":" * The {@code Todo} class represents a simple task without any specific date or time associated with it.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":" * It extends the {@code Task} class and is used for tasks that need to be done but","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":" * do not have a deadline or event time.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":"     * Constructs a new {@code Todo} task with the specified name.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param name The name or description of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"    public Todo(String name) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"        super(name);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"     * Returns a string representation of the Todo task, including its completion status and name.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return A string representation of the task in the format \"[T] name\", where \"T\" denotes a Todo task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":"    @Override","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":"    public String toString() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":28}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"import java.util.List;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":" * The {@code Ui} class handles interactions with the user, including displaying messages,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":" * showing the list of tasks, and reading user input. It acts as the user interface for","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":" * the application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"public class Ui {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"     * Constructs a new {@code Ui} object and initializes the scanner for user input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"    public Ui() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dominic-Khoo"},"content":"    public static String showWelcome() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dominic-Khoo"},"content":"        return \"Hello! I\u0027m Downy.\\nHow can I help?\\n\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dominic-Khoo"},"content":"     * Displays an exit message to the user and closes the scanner.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dominic-Khoo"},"content":"    public String showExitMessage() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dominic-Khoo"},"content":"        assert this.scanner !\u003d null : \"Scanner should not be null when closing.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dominic-Khoo"},"content":"        this.scanner.close();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dominic-Khoo"},"content":"        return \"Bye! Yippee!\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Dominic-Khoo"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Dominic-Khoo"},"content":"    public static String showErrorMessage(String message) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Dominic-Khoo"},"content":"        assert message !\u003d null \u0026\u0026 !message.isBlank() : \"Error message should not be null or empty.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Dominic-Khoo"},"content":"        return \"Error: \" + message + \"\\n\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Dominic-Khoo"},"content":"     * Displays a generic message to the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Dominic-Khoo"},"content":"    public static String showMessage(String message) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Dominic-Khoo"},"content":"        assert message !\u003d null \u0026\u0026 !message.isBlank() : \"Message should not be null or empty.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Dominic-Khoo"},"content":"        return message + \"\\n\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Dominic-Khoo"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param tasks The task list containing the tasks to be displayed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Dominic-Khoo"},"content":"    public String displayTasks(TaskList tasks) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Dominic-Khoo"},"content":"        assert tasks !\u003d null : \"Task list should not be null.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Dominic-Khoo"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Dominic-Khoo"},"content":"        result.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Dominic-Khoo"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Dominic-Khoo"},"content":"            result.append((i + 1)).append(\". \").append(tasks.getTask(i)).append(\"\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Dominic-Khoo"},"content":"        return result.toString();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Dominic-Khoo"},"content":"     * Displays tasks from the task list that contain the specified keyword in their names.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Dominic-Khoo"},"content":"     * The search is case-insensitive, and only matching tasks are displayed. If no tasks","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Dominic-Khoo"},"content":"     * match the keyword, a message indicating that no matching tasks were found is shown.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param tasks   The {@code TaskList} containing the tasks to be searched.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param keyword The keyword to search for within the task names.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Dominic-Khoo"},"content":"    public String displayMatchingTasks(TaskList tasks, String keyword) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Dominic-Khoo"},"content":"        assert tasks !\u003d null : \"Task list should not be null.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Dominic-Khoo"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Dominic-Khoo"},"content":"        result.append(\"Here are the tasks in your list that match the keyword:\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Dominic-Khoo"},"content":"        String lowerCaseKeyword \u003d keyword.toLowerCase();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Dominic-Khoo"},"content":"        int matchCount \u003d 0;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Dominic-Khoo"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Dominic-Khoo"},"content":"            String taskName \u003d tasks.getTask(i).getName().toLowerCase();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Dominic-Khoo"},"content":"            if (taskName.contains(lowerCaseKeyword)) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Dominic-Khoo"},"content":"                result.append((matchCount + 1)).append(\". \").append(tasks.getTask(i)).append(\"\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Dominic-Khoo"},"content":"                matchCount++;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Dominic-Khoo"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Dominic-Khoo"},"content":"        if (matchCount \u003d\u003d 0) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Dominic-Khoo"},"content":"            result.append(\"No matching tasks found.\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Dominic-Khoo"},"content":"        return result.toString();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Dominic-Khoo"},"content":"     * Displays a message indicating that a task is complete.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param t The task that is complete.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Dominic-Khoo"},"content":"    public String displayCompletedTask(Task t) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Dominic-Khoo"},"content":"        assert t !\u003d null : \"Task should not be null.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Dominic-Khoo"},"content":"        return \"Nice! You\u0027ve completed this task:\\n  \" + t + \"\\n\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Dominic-Khoo"},"content":"     * Displays a message indicating that a task is not complete.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param t The task that is not complete.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Dominic-Khoo"},"content":"    public String displayIncompleteTask(Task t) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Dominic-Khoo"},"content":"        assert t !\u003d null : \"Task should not be null.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Dominic-Khoo"},"content":"        return \"Ok! This task is not complete:\\n  \" + t + \"\\n\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Dominic-Khoo"},"content":"     * Displays a message indicating that a task has been deleted.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param t The task that has been deleted.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Dominic-Khoo"},"content":"    public String displayDeletedTask(Task t) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Dominic-Khoo"},"content":"        assert t !\u003d null : \"Task should not be null.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Dominic-Khoo"},"content":"        return \"Ok! This task has been removed:\\n  \" + t + \"\\n\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Dominic-Khoo"},"content":"     * Displays a message indicating that a task has been added and shows the current","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Dominic-Khoo"},"content":"     * number of tasks in the list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param t         The task that has been added.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param taskCount The current number of tasks in the list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Dominic-Khoo"},"content":"    public String displayTaskAdded(Task t, int taskCount) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Dominic-Khoo"},"content":"        return \"Okay! Added this task:\\n  \" + t + \"\\nNow you have \" + taskCount + \" tasks in this list\\n\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Dominic-Khoo"},"content":"     * Reads and returns the next command input by the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return The command input by the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Dominic-Khoo"},"content":"    public String readCommand() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Dominic-Khoo"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Dominic-Khoo"},"content":"     * Displays the list of notes to the user.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param notes The list of notes to be displayed.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return A message displaying the notes.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Dominic-Khoo"},"content":"    public String displayNotes(List\u003cString\u003e notes) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Dominic-Khoo"},"content":"        assert notes !\u003d null : \"Notes list should not be null.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Dominic-Khoo"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Dominic-Khoo"},"content":"        result.append(\"Here are your notes:\\n\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Dominic-Khoo"},"content":"        if (notes.isEmpty()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Dominic-Khoo"},"content":"            result.append(\"No notes found.\\n\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Dominic-Khoo"},"content":"        } else {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Dominic-Khoo"},"content":"            for (int i \u003d 0; i \u003c notes.size(); i++) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Dominic-Khoo"},"content":"                result.append((i + 1)).append(\". \").append(notes.get(i)).append(\"\\n\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Dominic-Khoo"},"content":"            }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Dominic-Khoo"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Dominic-Khoo"},"content":"        return result.toString();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Dominic-Khoo"},"content":"     * Displays a message indicating that a new note has been added.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param noteContent The content of the note that was added.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return A message confirming that the note has been added.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Dominic-Khoo"},"content":"    public String displayNoteAdded(String noteContent) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Dominic-Khoo"},"content":"        assert noteContent !\u003d null \u0026\u0026 !noteContent.isBlank() : \"Note content should not be null or empty.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Dominic-Khoo"},"content":"        return \"Okay! Added this note:\\n  \" + noteContent + \"\\n\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Dominic-Khoo"},"content":"     * Displays a message indicating that a note has been deleted.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Dominic-Khoo"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Dominic-Khoo"},"content":"     * @param noteNumber The number of the note that was deleted.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Dominic-Khoo"},"content":"     * @return A message confirming that the note has been deleted.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Dominic-Khoo"},"content":"    public String displayNoteDeleted(int noteNumber) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Dominic-Khoo"},"content":"        assert noteNumber \u003e 0 : \"Note number should be greater than 0.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Dominic-Khoo"},"content":"        return \"Okay! Deleted note number \" + noteNumber + \":\\n\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Dominic-Khoo"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Dominic-Khoo"},"content":"     * Displays a help message listing all valid commands.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Dominic-Khoo"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Dominic-Khoo"},"content":"    public String displayHelp() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Dominic-Khoo"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Dominic-Khoo"},"content":"        result.append(\"Here are a list of valid commands:\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Dominic-Khoo"},"content":"        result.append(\" - list\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Dominic-Khoo"},"content":"        result.append(\" - mark \u003ctaskNumber\u003e\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Dominic-Khoo"},"content":"        result.append(\" - unmark \u003ctaskNumber\u003e\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Dominic-Khoo"},"content":"        result.append(\" - delete \u003ctaskNumber\u003e\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Dominic-Khoo"},"content":"        result.append(\" - todo \u003ctaskDescription\u003e\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Dominic-Khoo"},"content":"        result.append(\" - deadline \u003ctaskDescription\u003e /by \u003cdueDate\u003e\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Dominic-Khoo"},"content":"        result.append(\" - event \u003ctaskDescription\u003e /from \u003cstartTime\u003e /to \u003cendTime\u003e\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Dominic-Khoo"},"content":"        result.append(\" - bye\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Dominic-Khoo"},"content":"        result.append(\" - help\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Dominic-Khoo"},"content":"        result.append(\" - find \u003ckeyword\u003e\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Dominic-Khoo"},"content":"        result.append(\" - note list\\n\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Dominic-Khoo"},"content":"        result.append(\" - note entry \u003cnoteContent\u003e\\n\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Dominic-Khoo"},"content":"        result.append(\" - note delete \u003cnoteNumber\u003e\\n\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Dominic-Khoo"},"content":"        return result.toString();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":228}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@/css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":"                \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"                \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"            \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"62.0\" fitWidth\u003d\"58.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":19}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package parser;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"import commands.ByeCommand;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":"import commands.Command;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":"import commands.DeadlineCommand;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":"import commands.EventCommand;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"import commands.HelpCommand;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"import commands.ListCommand;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"import commands.MarkCommand;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"import commands.TodoCommand;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"import commands.UnmarkCommand;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"import exceptions.DownyException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"import exceptions.MissingArgumentException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":"public class ParserTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dominic-Khoo"},"content":"    void testParseByeCommand() throws DownyException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dominic-Khoo"},"content":"        Command command \u003d Parser.parse(\"bye\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dominic-Khoo"},"content":"        assertTrue(command instanceof ByeCommand);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dominic-Khoo"},"content":"    void testParseListCommand() throws DownyException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dominic-Khoo"},"content":"        Command command \u003d Parser.parse(\"list\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dominic-Khoo"},"content":"        assertTrue(command instanceof ListCommand);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dominic-Khoo"},"content":"    void testParseMarkCommand() throws DownyException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dominic-Khoo"},"content":"        Command command \u003d Parser.parse(\"mark 1\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Dominic-Khoo"},"content":"        assertTrue(command instanceof MarkCommand);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(\"1\", ((MarkCommand) command).getTaskNumber());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Dominic-Khoo"},"content":"    void testParseMarkCommandWithoutTaskNumber() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Dominic-Khoo"},"content":"        Exception exception \u003d assertThrows(MissingArgumentException.class, () -\u003e {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Dominic-Khoo"},"content":"            Parser.parse(\"mark\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Dominic-Khoo"},"content":"        });","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(\"Mark command requires a task number.\\n   Usage: mark \u003ctaskNumber\u003e\", exception.getMessage());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Dominic-Khoo"},"content":"    void testParseUnmarkCommand() throws DownyException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Dominic-Khoo"},"content":"        Command command \u003d Parser.parse(\"unmark 1\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Dominic-Khoo"},"content":"        assertTrue(command instanceof UnmarkCommand);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(\"1\", ((UnmarkCommand) command).getTaskNumber());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Dominic-Khoo"},"content":"    void testParseUnmarkCommandWithoutTaskNumber() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Dominic-Khoo"},"content":"        Exception exception \u003d assertThrows(MissingArgumentException.class, () -\u003e {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Dominic-Khoo"},"content":"            Parser.parse(\"unmark\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Dominic-Khoo"},"content":"        });","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(\"Unmark command requires a task number.\\n   Usage: unmark \u003ctaskNumber\u003e\", exception.getMessage());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Dominic-Khoo"},"content":"    void testParseDeleteCommand() throws DownyException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Dominic-Khoo"},"content":"        Command command \u003d Parser.parse(\"delete 1\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Dominic-Khoo"},"content":"        assertTrue(command instanceof DeleteCommand);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(\"1\", ((DeleteCommand) command).getTaskNumber());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Dominic-Khoo"},"content":"    void testParseDeleteCommandWithoutTaskNumber() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Dominic-Khoo"},"content":"        Exception exception \u003d assertThrows(MissingArgumentException.class, () -\u003e {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Dominic-Khoo"},"content":"            Parser.parse(\"delete\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Dominic-Khoo"},"content":"        });","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(\"Delete command requires a task number.\\n   Usage: delete \u003ctaskNumber\u003e\", exception.getMessage());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Dominic-Khoo"},"content":"    void testParseTodoCommand() throws DownyException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Dominic-Khoo"},"content":"        Command command \u003d Parser.parse(\"todo read book\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Dominic-Khoo"},"content":"        assertTrue(command instanceof TodoCommand);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(\"read book\", ((TodoCommand) command).getTaskDescription());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Dominic-Khoo"},"content":"    void testParseTodoCommandWithoutDescription() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Dominic-Khoo"},"content":"        Exception exception \u003d assertThrows(MissingArgumentException.class, () -\u003e {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Dominic-Khoo"},"content":"            Parser.parse(\"todo\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Dominic-Khoo"},"content":"        });","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(\"Todo command requires a task description.\\n   todo \u003ctaskDescription\u003e\", exception.getMessage());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Dominic-Khoo"},"content":"    void testParseDeadlineCommand() throws DownyException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Dominic-Khoo"},"content":"        Command command \u003d Parser.parse(\"deadline submit report /by 2024/08/30 1800\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Dominic-Khoo"},"content":"        assertTrue(command instanceof DeadlineCommand);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(\"submit report\", ((DeadlineCommand) command).getTaskDescription());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(\"2024-08-30T18:00\", ((DeadlineCommand) command).getDueDate().toString());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Dominic-Khoo"},"content":"    void testParseDeadlineCommandWithoutDueDate() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Dominic-Khoo"},"content":"        Exception exception \u003d assertThrows(InvalidFormatException.class, () -\u003e {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Dominic-Khoo"},"content":"            Parser.parse(\"deadline submit report\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Dominic-Khoo"},"content":"        });","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(\"Deadline command must follow the format: \u003ctask\u003e /by \u003cdueDate\u003e.\", exception.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Dominic-Khoo"},"content":"    void testParseDeadlineCommandWithInvalidDate() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Dominic-Khoo"},"content":"        Exception exception \u003d assertThrows(InvalidFormatException.class, () -\u003e {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Dominic-Khoo"},"content":"            Parser.parse(\"deadline submit report /by 2024/13/30 1800\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Dominic-Khoo"},"content":"        });","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(\"Invalid date. Please check the year, month, and day values.\", exception.getMessage());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Dominic-Khoo"},"content":"    void testParseEventCommand() throws DownyException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Dominic-Khoo"},"content":"        Command command \u003d Parser.parse(\"event team meeting /from 2024/08/30 0900 /to 2024/08/30 1100\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Dominic-Khoo"},"content":"        assertTrue(command instanceof EventCommand);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(\"team meeting\", ((EventCommand) command).getTaskDescription());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(\"2024-08-30T09:00\", ((EventCommand) command).getStartTime().toString());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(\"2024-08-30T11:00\", ((EventCommand) command).getEndTime().toString());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Dominic-Khoo"},"content":"    void testParseEventCommandWithoutEndTime() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Dominic-Khoo"},"content":"        Exception exception \u003d assertThrows(InvalidFormatException.class, () -\u003e {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Dominic-Khoo"},"content":"            Parser.parse(\"event team meeting /from 2024/08/30 0900\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Dominic-Khoo"},"content":"        });","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(\"Event command must contain the \u0027/to\u0027 keyword with a valid end time.\", exception.getMessage());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Dominic-Khoo"},"content":"    void testParseEventCommandWithInvalidStartTime() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Dominic-Khoo"},"content":"        Exception exception \u003d assertThrows(InvalidFormatException.class, () -\u003e {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Dominic-Khoo"},"content":"            Parser.parse(\"event team meeting /from 2024/08/30 2500 /to 2024/08/30 1100\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Dominic-Khoo"},"content":"        });","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(\"Invalid time. Please check the hour and minute values.\", exception.getMessage());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Dominic-Khoo"},"content":"    void testParseEventCommandWithStartAfterEndTime() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Dominic-Khoo"},"content":"        Exception exception \u003d assertThrows(InvalidFormatException.class, () -\u003e {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Dominic-Khoo"},"content":"            Parser.parse(\"event team meeting /from 2024/08/30 1100 /to 2024/08/30 0900\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Dominic-Khoo"},"content":"        });","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(\"Start time must be before end time.\", exception.getMessage());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Dominic-Khoo"},"content":"    void testParseHelpCommand() throws DownyException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Dominic-Khoo"},"content":"        Command command \u003d Parser.parse(\"help\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Dominic-Khoo"},"content":"        assertTrue(command instanceof HelpCommand);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Dominic-Khoo"},"content":"    void testParseInvalidCommand() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Dominic-Khoo"},"content":"        Exception exception \u003d assertThrows(InvalidCommandException.class, () -\u003e {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Dominic-Khoo"},"content":"            Parser.parse(\"unknowncommand\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Dominic-Khoo"},"content":"        });","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(\"Invalid command entered\", exception.getMessage());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":168}},{"path":"src/test/java/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":"import java.util.List;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.Event;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.Task;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.Todo;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"class StorageTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":"    private Path tempFile;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dominic-Khoo"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dominic-Khoo"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dominic-Khoo"},"content":"        tempFile \u003d Files.createTempFile(\"test\", \".txt\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dominic-Khoo"},"content":"        storage \u003d new Storage(tempFile.toString());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dominic-Khoo"},"content":"    @AfterEach","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dominic-Khoo"},"content":"    void tearDown() throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dominic-Khoo"},"content":"        Files.deleteIfExists(tempFile);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dominic-Khoo"},"content":"    void testRetrieveTasksEmptyFile() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dominic-Khoo"},"content":"        List\u003cTask\u003e tasks \u003d storage.retrieveTasks();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Dominic-Khoo"},"content":"        assertTrue(tasks.isEmpty(), \"Task list should be empty when no tasks are in the file\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Dominic-Khoo"},"content":"    void testRetrieveTasksWithTasks() throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Dominic-Khoo"},"content":"        List\u003cString\u003e lines \u003d List.of(","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Dominic-Khoo"},"content":"                \"T | 0 | Read a book\",","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Dominic-Khoo"},"content":"                \"D | 1 | Submit report | 2024-08-30T18:00\",","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Dominic-Khoo"},"content":"                \"E | 0 | Team meeting | 2024-08-30T09:00 | 2024-08-30T11:00\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Dominic-Khoo"},"content":"        );","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Dominic-Khoo"},"content":"        Files.write(tempFile, lines, StandardOpenOption.WRITE);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Dominic-Khoo"},"content":"        List\u003cTask\u003e tasks \u003d storage.retrieveTasks();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(3, tasks.size(), \"Task list should have three tasks\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Dominic-Khoo"},"content":"        assertTrue(tasks.get(0) instanceof Todo, \"First task should be a Todo\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(\"Read a book\", tasks.get(0).getName());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Dominic-Khoo"},"content":"        assertTrue(tasks.get(1) instanceof Deadline, \"Second task should be a Deadline\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(\"Submit report\", tasks.get(1).getName());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(LocalDateTime.of(2024, 8, 30, 18, 0), ((Deadline) tasks.get(1)).getTime());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Dominic-Khoo"},"content":"        assertTrue(tasks.get(2) instanceof Event, \"Third task should be an Event\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(\"Team meeting\", tasks.get(2).getName());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(LocalDateTime.of(2024, 8, 30, 9, 0), ((Event) tasks.get(2)).getStartTime());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(LocalDateTime.of(2024, 8, 30, 11, 0), ((Event) tasks.get(2)).getEndTime());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Dominic-Khoo"},"content":"    void testMarkComplete() throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Dominic-Khoo"},"content":"        List\u003cString\u003e lines \u003d List.of(\"T | 0 | Read a book\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Dominic-Khoo"},"content":"        Files.write(tempFile, lines, StandardOpenOption.WRITE);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Dominic-Khoo"},"content":"        List\u003cTask\u003e tasks \u003d storage.retrieveTasks();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Dominic-Khoo"},"content":"        Task task \u003d tasks.get(0);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Dominic-Khoo"},"content":"        storage.markComplete(task);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Dominic-Khoo"},"content":"        List\u003cString\u003e updatedLines \u003d Files.readAllLines(tempFile);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Dominic-Khoo"},"content":"        assertTrue(updatedLines.get(0).contains(\"1\"), \"Task should be marked as complete in the file\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Dominic-Khoo"},"content":"    void testMarkIncomplete() throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Dominic-Khoo"},"content":"        List\u003cString\u003e lines \u003d List.of(\"T | 1 | Read a book\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Dominic-Khoo"},"content":"        Files.write(tempFile, lines, StandardOpenOption.WRITE);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Dominic-Khoo"},"content":"        List\u003cTask\u003e tasks \u003d storage.retrieveTasks();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Dominic-Khoo"},"content":"        Task task \u003d tasks.get(0);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Dominic-Khoo"},"content":"        storage.markIncomplete(task);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Dominic-Khoo"},"content":"        List\u003cString\u003e updatedLines \u003d Files.readAllLines(tempFile);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Dominic-Khoo"},"content":"        assertTrue(updatedLines.get(0).contains(\"0\"), \"Task should be marked as incomplete in the file\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Dominic-Khoo"},"content":"    void testDeleteTask() throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Dominic-Khoo"},"content":"        List\u003cString\u003e lines \u003d List.of(\"T | 0 | Read a book\", \"D | 1 | Submit report | 2024-08-30T18:00\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Dominic-Khoo"},"content":"        Files.write(tempFile, lines, StandardOpenOption.WRITE);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Dominic-Khoo"},"content":"        List\u003cTask\u003e tasks \u003d storage.retrieveTasks();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Dominic-Khoo"},"content":"        Task task \u003d tasks.get(0);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Dominic-Khoo"},"content":"        storage.deleteTask(task);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Dominic-Khoo"},"content":"        List\u003cString\u003e updatedLines \u003d Files.readAllLines(tempFile);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(1, updatedLines.size(), \"There should be one task left in the file\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Dominic-Khoo"},"content":"        assertTrue(updatedLines.get(0).contains(\"Submit report\"), \"Remaining task should be \u0027Submit report\u0027\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Dominic-Khoo"},"content":"    void testWriteTodoToFile() throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Dominic-Khoo"},"content":"        Todo todo \u003d new Todo(\"Read a book\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Dominic-Khoo"},"content":"        storage.writeTodoToFile(todo);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Dominic-Khoo"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(tempFile);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(1, lines.size(), \"There should be one task in the file\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Dominic-Khoo"},"content":"        assertTrue(lines.get(0).contains(\"T | 0 | Read a book\"), \"The task should be written as a Todo\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Dominic-Khoo"},"content":"    void testWriteDeadlineToFile() throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Dominic-Khoo"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", LocalDateTime.of(2024, 8, 30, 18, 0));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Dominic-Khoo"},"content":"        storage.writeDeadlineToFile(deadline);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Dominic-Khoo"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(tempFile);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(1, lines.size(), \"There should be one task in the file\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Dominic-Khoo"},"content":"        assertTrue(lines.get(0).contains(\"D | 0 | Submit report | 2024-08-30T18:00\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Dominic-Khoo"},"content":"                \"The task should be written as a Deadline\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Dominic-Khoo"},"content":"    void testWriteEventToFile() throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Dominic-Khoo"},"content":"        Event event \u003d new Event(\"Team meeting\", LocalDateTime.of(2024, 8, 30, 9, 0),","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Dominic-Khoo"},"content":"                LocalDateTime.of(2024, 8, 30, 11, 0));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Dominic-Khoo"},"content":"        storage.writeEventToFile(event);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Dominic-Khoo"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(tempFile);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(1, lines.size(), \"There should be one task in the file\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Dominic-Khoo"},"content":"        assertTrue(lines.get(0).contains(\"E | 0 | Team meeting | 2024-08-30T09:00 | 2024-08-30T11:00\"),","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Dominic-Khoo"},"content":"                \"The task should be written as an Event\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":141}},{"path":"src/test/java/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":"class TaskListTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"    void setUp() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"    void testIsEmptyInitially() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"        assertTrue(taskList.isEmpty(), \"Task list should be empty initially\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dominic-Khoo"},"content":"    void testAddTodo() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dominic-Khoo"},"content":"        taskList.addTodo(\"Read a book\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(1, taskList.getSize(), \"Task list should have one task after adding a Todo\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dominic-Khoo"},"content":"        assertFalse(taskList.isEmpty(), \"Task list should not be empty after adding a task\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dominic-Khoo"},"content":"        assertTrue(taskList.getTask(0) instanceof Todo, \"The task should be an instance of Todo\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(\"Read a book\", taskList.getTask(0).getName(), \"The task description should match\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dominic-Khoo"},"content":"    void testAddDeadline() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dominic-Khoo"},"content":"        LocalDateTime dueDate \u003d LocalDateTime.of(2024, 8, 30, 18, 0);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dominic-Khoo"},"content":"        taskList.addDeadline(\"Submit report\", dueDate);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(1, taskList.getSize(), \"Task list should have one task after adding a Deadline\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dominic-Khoo"},"content":"        assertFalse(taskList.isEmpty(), \"Task list should not be empty after adding a task\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Dominic-Khoo"},"content":"        assertTrue(taskList.getTask(0) instanceof Deadline, \"The task should be an instance of Deadline\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(\"Submit report\", taskList.getTask(0).getName(), \"The task description should match\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(dueDate, ((Deadline) taskList.getTask(0)).getTime(), \"The due date should match\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Dominic-Khoo"},"content":"    void testAddEvent() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Dominic-Khoo"},"content":"        LocalDateTime startTime \u003d LocalDateTime.of(2024, 8, 30, 9, 0);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Dominic-Khoo"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2024, 8, 30, 11, 0);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Dominic-Khoo"},"content":"        taskList.addEvent(\"Team meeting\", startTime, endTime);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(1, taskList.getSize(), \"Task list should have one task after adding an Event\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Dominic-Khoo"},"content":"        assertFalse(taskList.isEmpty(), \"Task list should not be empty after adding a task\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Dominic-Khoo"},"content":"        assertTrue(taskList.getTask(0) instanceof Event, \"The task should be an instance of Event\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(\"Team meeting\", taskList.getTask(0).getName(), \"The task description should match\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(startTime, ((Event) taskList.getTask(0)).getStartTime(), \"The start time should match\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(endTime, ((Event) taskList.getTask(0)).getEndTime(), \"The end time should match\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Dominic-Khoo"},"content":"    void testCompleteTaskInList() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Dominic-Khoo"},"content":"        taskList.addTodo(\"Read a book\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Dominic-Khoo"},"content":"        taskList.completeTaskInList(1);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Dominic-Khoo"},"content":"        assertTrue(taskList.getTask(0).isComplete(), \"Task should be marked as completed\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Dominic-Khoo"},"content":"    void testUnmarkTaskInList() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Dominic-Khoo"},"content":"        taskList.addTodo(\"Read a book\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Dominic-Khoo"},"content":"        taskList.completeTaskInList(1);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Dominic-Khoo"},"content":"        taskList.unmarkTaskInList(1);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Dominic-Khoo"},"content":"        assertFalse(taskList.getTask(0).isComplete(), \"Task should be unmarked as completed\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Dominic-Khoo"},"content":"    void testDeleteTaskInList() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Dominic-Khoo"},"content":"        taskList.addTodo(\"Read a book\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Dominic-Khoo"},"content":"        Task deletedTask \u003d taskList.deleteTaskInList(1);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(\"Read a book\", deletedTask.getName(), \"Deleted task description should match\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(0, taskList.getSize(), \"Task list should be empty after deleting the task\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":82}},{"path":"src/test/java/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"package ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"import java.util.List;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.Task;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dominic-Khoo"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dominic-Khoo"},"content":"class UiTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dominic-Khoo"},"content":"    private Ui ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dominic-Khoo"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dominic-Khoo"},"content":"    void setUp() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dominic-Khoo"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dominic-Khoo"},"content":"    void testShowWelcome() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dominic-Khoo"},"content":"        String expectedOutput \u003d \"Hello! I\u0027m Downy.\\nHow can I help?\\n\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(expectedOutput.trim(), ui.showWelcome().trim());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dominic-Khoo"},"content":"    void testShowExitMessage() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dominic-Khoo"},"content":"        String expectedOutput \u003d \"Bye! Yippee!\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(expectedOutput.trim(), ui.showExitMessage().trim());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dominic-Khoo"},"content":"    void testShowErrorMessage() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dominic-Khoo"},"content":"        String expectedOutput \u003d \"Error: An error occurred\\n\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(expectedOutput.trim(), Ui.showErrorMessage(\"An error occurred\").trim());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Dominic-Khoo"},"content":"    void testShowMessage() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Dominic-Khoo"},"content":"        String expectedOutput \u003d \"This is a message\\n\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(expectedOutput.trim(), Ui.showMessage(\"This is a message\").trim());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Dominic-Khoo"},"content":"    void testDisplayTasks() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Dominic-Khoo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Dominic-Khoo"},"content":"        taskList.addTodo(\"Read a book\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Dominic-Khoo"},"content":"        taskList.addDeadline(\"Submit report\", LocalDateTime.of(2024, 8, 30, 18, 0));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Dominic-Khoo"},"content":"        String expectedOutput \u003d \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Dominic-Khoo"},"content":"                + \"1. [T] [ ] Read a book\\n\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Dominic-Khoo"},"content":"                + \"2. [D] [ ] Submit report (by: Aug 30 2024 1800)\\n\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(expectedOutput.trim(), ui.displayTasks(taskList).trim());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Dominic-Khoo"},"content":"    void testDisplayCompletedTask() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Dominic-Khoo"},"content":"        Task task \u003d new Task(\"Read a book\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Dominic-Khoo"},"content":"        String expectedOutput \u003d \"Nice! You\u0027ve completed this task:\\n  \" + task + \"\\n\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(expectedOutput.trim(), ui.displayCompletedTask(task).trim());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Dominic-Khoo"},"content":"    void testDisplayIncompleteTask() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Dominic-Khoo"},"content":"        Task task \u003d new Task(\"Read a book\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Dominic-Khoo"},"content":"        String expectedOutput \u003d \"Ok! This task is not complete:\\n  \" + task + \"\\n\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(expectedOutput.trim(), ui.displayIncompleteTask(task).trim());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Dominic-Khoo"},"content":"    void testDisplayDeletedTask() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Dominic-Khoo"},"content":"        Task task \u003d new Task(\"Read a book\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Dominic-Khoo"},"content":"        String expectedOutput \u003d \"Ok! This task has been removed:\\n  \" + task + \"\\n\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(expectedOutput.trim(), ui.displayDeletedTask(task).trim());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Dominic-Khoo"},"content":"    void testDisplayTaskAdded() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Dominic-Khoo"},"content":"        Task task \u003d new Task(\"Read a book\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Dominic-Khoo"},"content":"        String expectedOutput \u003d \"Okay! Added this task:\\n  \" + task + \"\\nNow you have 5 tasks in this list\\n\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(expectedOutput.trim(), ui.displayTaskAdded(task, 5).trim());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Dominic-Khoo"},"content":"    void testDisplayHelp() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Dominic-Khoo"},"content":"        String expectedOutput \u003d \"Here are a list of valid commands:\\n\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Dominic-Khoo"},"content":"                + \" - list\\n\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Dominic-Khoo"},"content":"                + \" - mark \u003ctaskNumber\u003e\\n\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Dominic-Khoo"},"content":"                + \" - unmark \u003ctaskNumber\u003e\\n\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Dominic-Khoo"},"content":"                + \" - delete \u003ctaskNumber\u003e\\n\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Dominic-Khoo"},"content":"                + \" - todo \u003ctaskDescription\u003e\\n\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Dominic-Khoo"},"content":"                + \" - deadline \u003ctaskDescription\u003e /by \u003cdueDate\u003e\\n\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Dominic-Khoo"},"content":"                + \" - event \u003ctaskDescription\u003e /from \u003cstartTime\u003e /to \u003cendTime\u003e\\n\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Dominic-Khoo"},"content":"                + \" - bye\\n\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Dominic-Khoo"},"content":"                + \" - help\\n\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Dominic-Khoo"},"content":"                + \" - find \u003ckeyword\u003e\\n\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Dominic-Khoo"},"content":"                + \" - note list\\n\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Dominic-Khoo"},"content":"                + \" - note entry \u003cnoteContent\u003e\\n\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Dominic-Khoo"},"content":"                + \" - note delete \u003cnoteNumber\u003e\\n\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(expectedOutput.trim(), ui.displayHelp().trim());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Dominic-Khoo"},"content":"    void testDisplayMatchingTasksWithMatches() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Dominic-Khoo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Dominic-Khoo"},"content":"        taskList.addTodo(\"Read a book\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Dominic-Khoo"},"content":"        taskList.addTodo(\"Complete the assignment\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Dominic-Khoo"},"content":"        taskList.addTodo(\"Read the news\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Dominic-Khoo"},"content":"        String expectedOutput \u003d \"Here are the tasks in your list that match the keyword:\\n\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Dominic-Khoo"},"content":"                + \"1. [T] [ ] Read a book\\n\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Dominic-Khoo"},"content":"                + \"2. [T] [ ] Read the news\\n\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(expectedOutput.trim(), ui.displayMatchingTasks(taskList, \"read\").trim());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Dominic-Khoo"},"content":"    void testDisplayMatchingTasksWithoutMatches() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Dominic-Khoo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Dominic-Khoo"},"content":"        taskList.addTodo(\"Read a book\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Dominic-Khoo"},"content":"        taskList.addTodo(\"Complete the assignment\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Dominic-Khoo"},"content":"        taskList.addTodo(\"Read the news\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Dominic-Khoo"},"content":"        String expectedOutput \u003d \"Here are the tasks in your list that match the keyword:\\n\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Dominic-Khoo"},"content":"                + \"No matching tasks found.\\n\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(expectedOutput.trim(), ui.displayMatchingTasks(taskList, \"exercise\").trim());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Dominic-Khoo"},"content":"    void testDisplayMatchingTasksCaseInsensitive() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Dominic-Khoo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Dominic-Khoo"},"content":"        taskList.addTodo(\"Read a book\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Dominic-Khoo"},"content":"        taskList.addTodo(\"Complete the assignment\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Dominic-Khoo"},"content":"        taskList.addTodo(\"Read the news\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Dominic-Khoo"},"content":"        String expectedOutput \u003d \"Here are the tasks in your list that match the keyword:\\n\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Dominic-Khoo"},"content":"                + \"1. [T] [ ] Read a book\\n\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Dominic-Khoo"},"content":"                + \"2. [T] [ ] Read the news\\n\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(expectedOutput.trim(), ui.displayMatchingTasks(taskList, \"READ\").trim());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Dominic-Khoo"},"content":"    void testDisplayNotes() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Dominic-Khoo"},"content":"        List\u003cString\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Dominic-Khoo"},"content":"        notes.add(\"First note\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Dominic-Khoo"},"content":"        notes.add(\"Second note\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Dominic-Khoo"},"content":"        String expectedOutput \u003d \"Here are your notes:\\n\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Dominic-Khoo"},"content":"                + \"1. First note\\n\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Dominic-Khoo"},"content":"                + \"2. Second note\\n\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(expectedOutput.trim(), ui.displayNotes(notes).trim());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Dominic-Khoo"},"content":"    void testDisplayNotesNoNotes() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Dominic-Khoo"},"content":"        List\u003cString\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Dominic-Khoo"},"content":"        String expectedOutput \u003d \"Here are your notes:\\nNo notes found.\\n\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(expectedOutput.trim(), ui.displayNotes(notes).trim());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Dominic-Khoo"},"content":"    void testDisplayNoteAdded() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Dominic-Khoo"},"content":"        String noteContent \u003d \"This is a note\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Dominic-Khoo"},"content":"        String expectedOutput \u003d \"Okay! Added this note:\\n  This is a note\\n\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(expectedOutput.trim(), ui.displayNoteAdded(noteContent).trim());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Dominic-Khoo"},"content":"    @Test","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Dominic-Khoo"},"content":"    void testDisplayNoteDeleted() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Dominic-Khoo"},"content":"        int noteNumber \u003d 2;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Dominic-Khoo"},"content":"        String expectedOutput \u003d \"Okay! Deleted note number 2:\\n\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Dominic-Khoo"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Dominic-Khoo"},"content":"        assertEquals(expectedOutput.trim(), ui.displayNoteDeleted(noteNumber).trim());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Dominic-Khoo"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Dominic-Khoo"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":191}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Dominic-Khoo"},"content":"list","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dominic-Khoo"},"content":"todo borrow book","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dominic-Khoo"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dominic-Khoo"},"content":"event meet friends /from Mon 2pm /to Mon 4pm","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dominic-Khoo"},"content":"list","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dominic-Khoo"},"content":"mark 1","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dominic-Khoo"},"content":"mark 2","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dominic-Khoo"},"content":"unmark 2","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dominic-Khoo"},"content":"list","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dominic-Khoo"},"content":"goodbye","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dominic-Khoo"},"content":"bye","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dominic-Khoo"},"content":"java -classpath ..\\bin Downy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dominic-Khoo"},"content":"java -classpath ../bin Downy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Dominic-Khoo":1,"-":37}}]
