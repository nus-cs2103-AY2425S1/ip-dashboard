[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsnotsherm"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsnotsherm"},"content":"checkstyle {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsnotsherm"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsnotsherm"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsnotsherm"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsnotsherm"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsnotsherm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsnotsherm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsnotsherm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsnotsherm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsnotsherm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsnotsherm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsnotsherm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsnotsherm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsnotsherm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsnotsherm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsnotsherm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsnotsherm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsnotsherm"},"content":"    mainClass.set(\"rex.Launcher\")","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsnotsherm"},"content":"    archiveBaseName \u003d \"rex\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsnotsherm"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":39,"itsnotsherm":24}},{"path":"src/main/java/rex/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsnotsherm"},"content":"package rex;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsnotsherm"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsnotsherm"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsnotsherm"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsnotsherm"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsnotsherm"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsnotsherm"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsnotsherm"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsnotsherm"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsnotsherm"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsnotsherm"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsnotsherm"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsnotsherm"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsnotsherm"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsnotsherm"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsnotsherm"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsnotsherm"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsnotsherm"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsnotsherm"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsnotsherm"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsnotsherm"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsnotsherm"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsnotsherm"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsnotsherm"},"content":"        try {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsnotsherm"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsnotsherm"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsnotsherm"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsnotsherm"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsnotsherm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsnotsherm"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsnotsherm"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsnotsherm"},"content":"        dialog.setMinHeight(Label.USE_PREF_SIZE);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsnotsherm"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsnotsherm"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsnotsherm"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsnotsherm"},"content":"    private void flip() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsnotsherm"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsnotsherm"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsnotsherm"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsnotsherm"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsnotsherm"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsnotsherm"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsnotsherm"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsnotsherm"},"content":"    public static DialogBox getRexDialog(String text, Image img) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsnotsherm"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsnotsherm"},"content":"        db.flip();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsnotsherm"},"content":"        return db;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsnotsherm"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"itsnotsherm":63}},{"path":"src/main/java/rex/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsnotsherm"},"content":"package rex;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsnotsherm"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsnotsherm"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsnotsherm"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsnotsherm"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsnotsherm"},"content":"public class Launcher {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsnotsherm"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsnotsherm"},"content":"        Application.launch(rex.Main.class, args);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsnotsherm"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"itsnotsherm":12}},{"path":"src/main/java/rex/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsnotsherm"},"content":"package rex;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsnotsherm"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsnotsherm"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsnotsherm"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsnotsherm"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsnotsherm"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsnotsherm"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsnotsherm"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsnotsherm"},"content":" * A GUI for Rex using FXML.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsnotsherm"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsnotsherm"},"content":"public class Main extends Application {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsnotsherm"},"content":"    private static Stage primaryStage;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsnotsherm"},"content":"    private Rex rex \u003d new Rex();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsnotsherm"},"content":"    @Override","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsnotsherm"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsnotsherm"},"content":"        try {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsnotsherm"},"content":"            primaryStage \u003d stage;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsnotsherm"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsnotsherm"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsnotsherm"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsnotsherm"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsnotsherm"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsnotsherm"},"content":"            stage.setTitle(\"Rex\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsnotsherm"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsnotsherm"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setRex(rex); // inject the Rex instance","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsnotsherm"},"content":"            stage.show();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsnotsherm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsnotsherm"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsnotsherm"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsnotsherm"},"content":"    public static void exit() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsnotsherm"},"content":"        primaryStage.close();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsnotsherm"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"itsnotsherm":44}},{"path":"src/main/java/rex/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsnotsherm"},"content":"package rex;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsnotsherm"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsnotsherm"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsnotsherm"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsnotsherm"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsnotsherm"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsnotsherm"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsnotsherm"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsnotsherm"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsnotsherm"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsnotsherm"},"content":"import rex.util.Ui;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsnotsherm"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsnotsherm"},"content":" * Controller for the main GUI.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsnotsherm"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsnotsherm"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsnotsherm"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsnotsherm"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsnotsherm"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsnotsherm"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsnotsherm"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsnotsherm"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsnotsherm"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsnotsherm"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsnotsherm"},"content":"    private Rex rex;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsnotsherm"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsnotsherm"},"content":"    private Image rexImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Rex.png\"));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsnotsherm"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsnotsherm"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsnotsherm"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsnotsherm"},"content":"    /** Injects the Rex instance */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsnotsherm"},"content":"    public void setRex(Rex rex) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsnotsherm"},"content":"        this.rex \u003d rex;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsnotsherm"},"content":"        String greetingMessage \u003d Ui.getGreeting();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsnotsherm"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsnotsherm"},"content":"                DialogBox.getRexDialog(greetingMessage, rexImage)","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsnotsherm"},"content":"        );","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsnotsherm"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Rex\u0027s reply and then appends them to","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsnotsherm"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsnotsherm"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsnotsherm"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsnotsherm"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsnotsherm"},"content":"        String response \u003d rex.getResponse(input)  + \"\\n\";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsnotsherm"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsnotsherm"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsnotsherm"},"content":"                DialogBox.getRexDialog(response, rexImage)","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsnotsherm"},"content":"        );","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsnotsherm"},"content":"        // Exit application if bye command entered","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsnotsherm"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsnotsherm"},"content":"            userInput.setDisable(true);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsnotsherm"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsnotsherm"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsnotsherm"},"content":"            delay.setOnFinished(event -\u003e Main.exit());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsnotsherm"},"content":"            delay.play();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsnotsherm"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsnotsherm"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsnotsherm"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"itsnotsherm":69}},{"path":"src/main/java/rex/Rex.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsnotsherm"},"content":"package rex;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsnotsherm"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsnotsherm"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsnotsherm"},"content":"import rex.command.Command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsnotsherm"},"content":"import rex.exception.InvalidCommandException;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsnotsherm"},"content":"import rex.exception.InvalidInputException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsnotsherm"},"content":"import rex.task.Deadline;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsnotsherm"},"content":"import rex.task.Event;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsnotsherm"},"content":"import rex.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsnotsherm"},"content":"import rex.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsnotsherm"},"content":"import rex.task.ToDo;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsnotsherm"},"content":"import rex.util.Parser;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsnotsherm"},"content":"import rex.util.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsnotsherm"},"content":"import rex.util.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsnotsherm"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsnotsherm"},"content":" * The {@code Rex} class serves as the main entry point for the Rex application,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsnotsherm"},"content":" * a task management system that allows users to manage their tasks via various commands.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsnotsherm"},"content":" * It integrates storage, task management, and user interaction functionalities.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsnotsherm"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsnotsherm"},"content":"public class Rex {","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsnotsherm"},"content":"    private static final String FILE_PATH \u003d \"./data/rex.txt\";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsnotsherm"},"content":"    private static final String TEMP_PATH \u003d \"./data/tmp.txt\";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsnotsherm"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsnotsherm"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsnotsherm"},"content":"    private Ui ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsnotsherm"},"content":"     * The {@code Rex} class serves as the main entry point for the Rex application,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsnotsherm"},"content":"     * a task management system that allows users to manage their tasks via various commands.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsnotsherm"},"content":"     * It integrates storage, task management, and user interaction functionalities.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsnotsherm"},"content":"    public Rex() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsnotsherm"},"content":"        try {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsnotsherm"},"content":"            this.storage \u003d new Storage(FILE_PATH, TEMP_PATH);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsnotsherm"},"content":"            this.taskList \u003d new TaskList(storage);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsnotsherm"},"content":"            this.ui \u003d new Ui();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsnotsherm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsnotsherm"},"content":"            System.out.println(\"An error has occurred.\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsnotsherm"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsnotsherm"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsnotsherm"},"content":"        Command command \u003d null;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsnotsherm"},"content":"        try {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsnotsherm"},"content":"            String[] inputTokens \u003d Parser.parseInput(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsnotsherm"},"content":"            // Process user command","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsnotsherm"},"content":"            command \u003d Command.inputToCommand(inputTokens[0]);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsnotsherm"},"content":"            if (inputTokens.length \u003d\u003d 1) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsnotsherm"},"content":"                return commandToOutput(command);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsnotsherm"},"content":"            } else {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsnotsherm"},"content":"                return commandToOutput(command, inputTokens[1]);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsnotsherm"},"content":"            }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsnotsherm"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsnotsherm"},"content":"            if (command !\u003d null) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsnotsherm"},"content":"                String usageMessage \u003d Command.usageMessage(command);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsnotsherm"},"content":"                return ui.errorMessage(e.getMessage() + \"\\nUsage: \" + usageMessage);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsnotsherm"},"content":"            } else {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsnotsherm"},"content":"                return ui.errorMessage(e);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsnotsherm"},"content":"            }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsnotsherm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsnotsherm"},"content":"            System.out.println(\"An error has occurred.\");","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsnotsherm"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsnotsherm"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsnotsherm"},"content":"            assert command !\u003d null : \"command should not be null\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsnotsherm"},"content":"            String usageMessage \u003d Command.usageMessage(command);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsnotsherm"},"content":"            return ui.errorMessage(\"Wrong date/time format!\\nUsage: \" + usageMessage);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsnotsherm"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsnotsherm"},"content":"            assert command !\u003d null : \"command should not be null\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsnotsherm"},"content":"            String usageMessage \u003d Command.usageMessage(command);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsnotsherm"},"content":"            return ui.errorMessage(\"Invalid task number!\\nUsage: \" + usageMessage);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsnotsherm"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsnotsherm"},"content":"    private String commandToOutput(Command command, String ... argument)","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsnotsherm"},"content":"            throws InvalidInputException, IOException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsnotsherm"},"content":"        if (argument.length \u003e 1) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsnotsherm"},"content":"            throw new InvalidInputException(\"Too many arguments.\");","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsnotsherm"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsnotsherm"},"content":"        switch (command) {","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsnotsherm"},"content":"        case HELP:","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsnotsherm"},"content":"            return ui.getHelp();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsnotsherm"},"content":"        case TODO:","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsnotsherm"},"content":"            ToDo toDo \u003d taskList.addToDo(argument[0]);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"itsnotsherm"},"content":"            return ui.addTask(toDo);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsnotsherm"},"content":"        case DEADLINE:","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsnotsherm"},"content":"            Deadline deadline \u003d taskList.addDeadline(argument[0]);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsnotsherm"},"content":"            return ui.addTask(deadline);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsnotsherm"},"content":"        case EVENT:","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsnotsherm"},"content":"            Event event \u003d taskList.addEvent(argument[0]);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"itsnotsherm"},"content":"            return ui.addTask(event);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"itsnotsherm"},"content":"        case LIST:","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"itsnotsherm"},"content":"            return ui.displayList(taskList);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"itsnotsherm"},"content":"        case SCHEDULE:","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"itsnotsherm"},"content":"            return ui.displaySchedule(taskList, argument[0]);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"itsnotsherm"},"content":"        case FIND:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"itsnotsherm"},"content":"            return ui.findTask(taskList, argument[0]);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"itsnotsherm"},"content":"        case MARK:","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"itsnotsherm"},"content":"            Task marked \u003d taskList.markTask(argument[0]);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"itsnotsherm"},"content":"            return ui.markTask(marked);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"itsnotsherm"},"content":"        case UNMARK:","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"itsnotsherm"},"content":"            Task unmarked \u003d taskList.unmarkTask(argument[0]);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"itsnotsherm"},"content":"            return ui.unmarkTask(unmarked);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"itsnotsherm"},"content":"        case DELETE:","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"itsnotsherm"},"content":"            Task deleted \u003d taskList.deleteTask(argument[0]);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"itsnotsherm"},"content":"            return ui.deleteTask(deleted);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"itsnotsherm"},"content":"        case RAWR:","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"itsnotsherm"},"content":"            return ui.rawr();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"itsnotsherm"},"content":"        case BYE:","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"itsnotsherm"},"content":"            return ui.getGoodbye();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"itsnotsherm"},"content":"        default:","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"itsnotsherm"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"itsnotsherm"},"content":"        }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"itsnotsherm"},"content":"}","lastModifiedDate":"2024-08-17","isFullCredit":false}],"authorContributionMap":{"itsnotsherm":119}},{"path":"src/main/java/rex/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsnotsherm"},"content":"package rex.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsnotsherm"},"content":"import rex.exception.InvalidCommandException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsnotsherm"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsnotsherm"},"content":" * The {@code Command} enum represents the various commands that can be issued in the Rex application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsnotsherm"},"content":" * Each command corresponds to a specific action that the application can perform.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsnotsherm"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsnotsherm"},"content":"public enum Command {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsnotsherm"},"content":"    TODO, DEADLINE, EVENT, LIST, SCHEDULE, FIND, MARK, UNMARK, DELETE, RAWR, BYE, HELP;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsnotsherm"},"content":"     * Converts a user input string into the corresponding {@code Command} enum.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsnotsherm"},"content":"     * @param input The input string representing the command.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsnotsherm"},"content":"     * @return The corresponding {@code Command} enum.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsnotsherm"},"content":"     * @throws InvalidCommandException if the input string does not match any valid command.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsnotsherm"},"content":"    public static Command inputToCommand(String input) throws InvalidCommandException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsnotsherm"},"content":"        switch (input) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsnotsherm"},"content":"        case \"help\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsnotsherm"},"content":"            return HELP;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsnotsherm"},"content":"        case \"todo\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsnotsherm"},"content":"            return TODO;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsnotsherm"},"content":"        case \"deadline\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsnotsherm"},"content":"            return DEADLINE;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsnotsherm"},"content":"        case \"event\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsnotsherm"},"content":"            return EVENT;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsnotsherm"},"content":"        case \"list\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsnotsherm"},"content":"            return LIST;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsnotsherm"},"content":"        case \"schedule\":","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsnotsherm"},"content":"            return SCHEDULE;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsnotsherm"},"content":"        case \"find\":","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsnotsherm"},"content":"            return FIND;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsnotsherm"},"content":"        case \"mark\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsnotsherm"},"content":"            return MARK;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsnotsherm"},"content":"        case \"unmark\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsnotsherm"},"content":"            return UNMARK;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsnotsherm"},"content":"        case \"delete\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsnotsherm"},"content":"            return DELETE;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsnotsherm"},"content":"        case \"rawr\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsnotsherm"},"content":"            return RAWR;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsnotsherm"},"content":"        case \"bye\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsnotsherm"},"content":"            return BYE;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsnotsherm"},"content":"        default:","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsnotsherm"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsnotsherm"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsnotsherm"},"content":"     * Returns a usage message for the specified {@code Command}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsnotsherm"},"content":"     * The usage message provides a brief description of how to use the command.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsnotsherm"},"content":"     * @param command The {@code Command} for which the usage message is requested.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsnotsherm"},"content":"     * @return A string containing the usage message for the command.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsnotsherm"},"content":"    public static String usageMessage(Command command) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsnotsherm"},"content":"        switch (command) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsnotsherm"},"content":"        case HELP:","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsnotsherm"},"content":"            return \"help\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsnotsherm"},"content":"        case TODO:","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsnotsherm"},"content":"            return \"todo \u003cdescription\u003e\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsnotsherm"},"content":"        case DEADLINE:","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsnotsherm"},"content":"            return \"deadline \u003cdescription\u003e /by \u003cdate: DD-MM-YY\u003e \u003ctime: HHMM\u003e\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsnotsherm"},"content":"        case EVENT:","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsnotsherm"},"content":"            return \"event \u003cdescription\u003e /from \u003cdate: DD-MM-YY\u003e \u003ctime: HHMM\u003e /to \u003cdate: DD-MM-YY\u003e \u003ctime: HHMM\u003e\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsnotsherm"},"content":"        case LIST:","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsnotsherm"},"content":"            return \"list\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsnotsherm"},"content":"        case SCHEDULE:","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsnotsherm"},"content":"            return \"schedule \u003cdate: DD-MM-YY\u003e\";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsnotsherm"},"content":"        case FIND:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsnotsherm"},"content":"            return \"find \u003ckeyword\u003e\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsnotsherm"},"content":"        case MARK:","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsnotsherm"},"content":"            return \"mark \u003ctask number\u003e\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsnotsherm"},"content":"        case UNMARK:","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsnotsherm"},"content":"            return \"unmark \u003ctask number\u003e\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsnotsherm"},"content":"        case DELETE:","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsnotsherm"},"content":"            return \"delete \u003ctask number\u003e\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsnotsherm"},"content":"        case RAWR:","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsnotsherm"},"content":"            return \"rawr\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsnotsherm"},"content":"        case BYE:","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsnotsherm"},"content":"            return \"bye\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsnotsherm"},"content":"        default:","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsnotsherm"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsnotsherm"},"content":"        return null;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"itsnotsherm"},"content":"     * Provides a list of all valid commands and their corresponding usage messages.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsnotsherm"},"content":"     * @return A formatted string listing all valid commands and their usage instructions.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsnotsherm"},"content":"    public static String getCommandList() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsnotsherm"},"content":"        String spaces \u003d \"  \";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"itsnotsherm"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d \"Here are a list of valid commands and how to use them:\\n\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d \"\\n\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d spaces + \"Adding tasks:\\n\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d spaces + \"* \" + usageMessage(TODO) + \"\\n\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d spaces + \"* \" + usageMessage(DEADLINE) + \"\\n\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d spaces + \"* \" + usageMessage(EVENT) + \"\\n\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d \"\\n\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d spaces + \"List tasks/schedule:\\n\";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d spaces + \"* \" + usageMessage(LIST) + \"\\n\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d spaces + \"* \" + usageMessage(SCHEDULE) + \"\\n\";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d \"\\n\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d spaces + \"Find tasks with description that matches keyword:\\n\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d spaces + \"* \" + usageMessage(FIND) + \"\\n\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d \"\\n\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d spaces + \"Mark/Unmark/Delete tasks:\\n\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d spaces + \"* \" + usageMessage(MARK) + \"\\n\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d spaces + \"* \" + usageMessage(UNMARK) + \"\\n\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d spaces + \"* \" + usageMessage(DELETE) + \"\\n\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d \"\\n\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d spaces + \"rawr:\\n\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d spaces + \"* \" + usageMessage(RAWR) + \"\\n\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d \"\\n\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d spaces + \"Exit:\\n\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d spaces + \"* \" + usageMessage(BYE) + \"\\n\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"itsnotsherm"},"content":"        return output;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"itsnotsherm"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"itsnotsherm":129}},{"path":"src/main/java/rex/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsnotsherm"},"content":"package rex.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsnotsherm"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsnotsherm"},"content":" * The {@code InvalidCommandException} class is a specific type of {@code InvalidInputException}","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsnotsherm"},"content":" * that is thrown when a user inputs an unrecognized command in the Rex application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsnotsherm"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsnotsherm"},"content":"public class InvalidCommandException extends InvalidInputException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsnotsherm"},"content":"     * Constructs a new {@code InvalidCommandException} with a default error message.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsnotsherm"},"content":"     * The message indicates that the command was not recognized and provides a suggestion","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsnotsherm"},"content":"     * to the user to enter \"help\" for a list of valid commands.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsnotsherm"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsnotsherm"},"content":"        super(\"I don\u0027t know what that means!!!\\nEnter \\\"help\\\" for a list of what I do know! rawr\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsnotsherm"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"itsnotsherm":16}},{"path":"src/main/java/rex/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsnotsherm"},"content":"package rex.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsnotsherm"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsnotsherm"},"content":" * The {@code InvalidInputException} class represents an exception that is thrown","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsnotsherm"},"content":" * when the user provides an invalid input in the Rex application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsnotsherm"},"content":" * This class serves as the base class for more specific input-related exceptions.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsnotsherm"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsnotsherm"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsnotsherm"},"content":"     * Constructs a new {@code InvalidInputException} with the specified detail message.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsnotsherm"},"content":"     * @param message The detail message that describes the reason for the exception.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsnotsherm"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsnotsherm"},"content":"        super(message);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsnotsherm"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"itsnotsherm":17}},{"path":"src/main/java/rex/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsnotsherm"},"content":"package rex.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsnotsherm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsnotsherm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsnotsherm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsnotsherm"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsnotsherm"},"content":" * The {@code Deadline} class represents a task that has a specific deadline.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsnotsherm"},"content":" * It extends the {@code Task} class by adding a deadline date and time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsnotsherm"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsnotsherm"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsnotsherm"},"content":"    private LocalDateTime by;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsnotsherm"},"content":"     * Constructs a new {@code Deadline} task with the specified description, completion status, and deadline.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsnotsherm"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsnotsherm"},"content":"     * @param isDone      The completion status of the Deadline task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsnotsherm"},"content":"     * @param by          The deadline by which the task should be completed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsnotsherm"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime by) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsnotsherm"},"content":"        super(description, isDone);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsnotsherm"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsnotsherm"},"content":"     * Returns a string representation of the Deadline task, including its type identifier \"[D]\",","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsnotsherm"},"content":"     * the task details from the {@code Task} superclass, and the deadline formatted as \"dd MMM yyyy HHmm\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsnotsherm"},"content":"     * @return A string representation of the Deadline task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsnotsherm"},"content":"    @Override","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsnotsherm"},"content":"    public String toString() {","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsnotsherm"},"content":"        DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsnotsherm"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by.format(outputFormat) + \"HRS)\";","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsnotsherm"},"content":"     * Returns a formatted string suitable for saving to a file. The format includes a type identifier \"D\",","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsnotsherm"},"content":"     * followed by the formatted output from the {@code Task} superclass, and the deadline formatted as \"dd-MM-yy HHmm\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsnotsherm"},"content":"     * @return A formatted string representing the Deadline task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsnotsherm"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsnotsherm"},"content":"    public String formatter() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsnotsherm"},"content":"        DateTimeFormatter fileFormat \u003d DateTimeFormatter.ofPattern(\"dd-MM-yy HHmm\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsnotsherm"},"content":"        return \"D | \" + super.formatter() + \" | \" + by.format(fileFormat);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsnotsherm"},"content":"    @Override","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsnotsherm"},"content":"    public boolean isScheduledOnDate(LocalDate date) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsnotsherm"},"content":"        return by.toLocalDate().equals(date);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsnotsherm"},"content":"}","lastModifiedDate":"2024-08-17","isFullCredit":false}],"authorContributionMap":{"itsnotsherm":54}},{"path":"src/main/java/rex/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsnotsherm"},"content":"package rex.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsnotsherm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsnotsherm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsnotsherm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsnotsherm"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsnotsherm"},"content":" * The {@code Event} class represents a task that occurs over a specific time period.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsnotsherm"},"content":" * It extends the {@code Task} class by adding start and end times for the event.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsnotsherm"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsnotsherm"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsnotsherm"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsnotsherm"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsnotsherm"},"content":"     * Constructs a new {@code Event} task with the specified description, completion status, start time, and end time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsnotsherm"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsnotsherm"},"content":"     * @param isDone      The completion status of the Event task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsnotsherm"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsnotsherm"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsnotsherm"},"content":"    public Event(String description, boolean isDone, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsnotsherm"},"content":"        super(description, isDone);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsnotsherm"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsnotsherm"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsnotsherm"},"content":"     * Returns a string representation of the Event task, including its type identifier \"[E]\",","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsnotsherm"},"content":"     * the task details from the {@code Task} superclass,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsnotsherm"},"content":"     * and the event\u0027s start and end times formatted as \"dd MMM yyyy HHmm\".","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsnotsherm"},"content":"     * @return A string representation of the Event task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsnotsherm"},"content":"    @Override","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsnotsherm"},"content":"    public String toString() {","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsnotsherm"},"content":"        DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsnotsherm"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + from.format(outputFormat)","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsnotsherm"},"content":"                + \"HRS | to: \" + to.format(outputFormat) + \"HRS)\";","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsnotsherm"},"content":"     * Returns a formatted string suitable for saving to a file. The format includes a type identifier \"E\",","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsnotsherm"},"content":"     * followed by the formatted output from the {@code Task} superclass,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsnotsherm"},"content":"     * and the event\u0027s start and end times formatted as \"dd-MM-yy HHmm\".","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsnotsherm"},"content":"     * @return A formatted string representing the Event task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsnotsherm"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsnotsherm"},"content":"    public String formatter() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsnotsherm"},"content":"        DateTimeFormatter fileFormat \u003d DateTimeFormatter.ofPattern(\"dd-MM-yy HHmm\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsnotsherm"},"content":"        return \"E | \" + super.formatter() + \" | \" + from.format(fileFormat)","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsnotsherm"},"content":"                + \" | \" + to.format(fileFormat);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsnotsherm"},"content":"    @Override","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsnotsherm"},"content":"    public boolean isScheduledOnDate(LocalDate date) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsnotsherm"},"content":"        return from.toLocalDate().equals(date);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsnotsherm"},"content":"}","lastModifiedDate":"2024-08-17","isFullCredit":false}],"authorContributionMap":{"itsnotsherm":61}},{"path":"src/main/java/rex/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsnotsherm"},"content":"package rex.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsnotsherm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsnotsherm"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsnotsherm"},"content":" * The {@code Task} class represents a generic task in the Rex application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsnotsherm"},"content":" * It contains information about the task description, its completion status,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsnotsherm"},"content":" * and manages the count of tasks created.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsnotsherm"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsnotsherm"},"content":"public abstract class Task {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsnotsherm"},"content":"    private static int numberOfTasks \u003d 0;","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsnotsherm"},"content":"    private final String description;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsnotsherm"},"content":"    private boolean isDone;","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsnotsherm"},"content":"     * The {@code Task} class represents a generic task in the Rex application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsnotsherm"},"content":"     * It contains information about the task description, its completion status,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsnotsherm"},"content":"     * and manages the count of tasks created.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsnotsherm"},"content":"    protected Task(String description, boolean isDone) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsnotsherm"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsnotsherm"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsnotsherm"},"content":"        numberOfTasks++;","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsnotsherm"},"content":"     * Marks the task as done by setting its completion status to true.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsnotsherm"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsnotsherm"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsnotsherm"},"content":"     * Marks the task as not done by setting its completion status to false.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsnotsherm"},"content":"    public void unMarkDone() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsnotsherm"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsnotsherm"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsnotsherm"},"content":"        return description;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsnotsherm"},"content":"     * Returns the status icon representing whether the task is done or not.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsnotsherm"},"content":"     * @return \"X\" if the task is done, otherwise a blank space.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsnotsherm"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsnotsherm"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsnotsherm"},"content":"     * Returns the total number of tasks created.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsnotsherm"},"content":"     * @return The total number of tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsnotsherm"},"content":"    public static int getNumberOfTasks() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsnotsherm"},"content":"        return numberOfTasks;","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsnotsherm"},"content":"     * Decrements the total number of tasks by one.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsnotsherm"},"content":"     * This method should be called when a task is removed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsnotsherm"},"content":"    public static void removeTask() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsnotsherm"},"content":"        assert numberOfTasks \u003e\u003d 0 : \"total number of tasks should not be less than 0\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsnotsherm"},"content":"        numberOfTasks--;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsnotsherm"},"content":"     * Returns a string representation of the task, including its status icon and description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsnotsherm"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsnotsherm"},"content":"    @Override","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsnotsherm"},"content":"    public String toString() {","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsnotsherm"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsnotsherm"},"content":"     * Returns a formatted string suitable for saving to a file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsnotsherm"},"content":"     * The format includes the task\u0027s completion status and description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsnotsherm"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsnotsherm"},"content":"    public String formatter() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsnotsherm"},"content":"        return (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsnotsherm"},"content":"    public abstract boolean isScheduledOnDate(LocalDate date);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsnotsherm"},"content":"}","lastModifiedDate":"2024-08-17","isFullCredit":false}],"authorContributionMap":{"itsnotsherm":92}},{"path":"src/main/java/rex/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsnotsherm"},"content":"package rex.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsnotsherm"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsnotsherm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsnotsherm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsnotsherm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsnotsherm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsnotsherm"},"content":"import rex.exception.InvalidInputException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsnotsherm"},"content":"import rex.util.Parser;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsnotsherm"},"content":"import rex.util.Storage;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsnotsherm"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsnotsherm"},"content":" * The {@code TaskList} class manages a list of tasks, including adding, retrieving, updating,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsnotsherm"},"content":" * and deleting tasks. It also handles the loading and saving of tasks to persistent storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsnotsherm"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsnotsherm"},"content":"public class TaskList {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsnotsherm"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsnotsherm"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsnotsherm"},"content":"     * Constructs a new {@code TaskList} with the specified storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsnotsherm"},"content":"     * Loads tasks from the storage upon initialization.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsnotsherm"},"content":"     * @param storage The storage instance used for loading and saving tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsnotsherm"},"content":"     * @throws IOException If an I/O error occurs during loading.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsnotsherm"},"content":"    public TaskList(Storage storage) throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsnotsherm"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsnotsherm"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsnotsherm"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsnotsherm"},"content":"        loadList();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsnotsherm"},"content":"     * Adds a new {@code ToDo} task to the list and updates storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsnotsherm"},"content":"     * @param argument The description of the ToDo task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsnotsherm"},"content":"     * @return The newly added {@code ToDo} task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsnotsherm"},"content":"     * @throws IOException If an I/O error occurs during storage update.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsnotsherm"},"content":"    public ToDo addToDo(String argument) throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsnotsherm"},"content":"        ToDo toDo \u003d new ToDo(argument, false);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsnotsherm"},"content":"        tasks.add(toDo);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsnotsherm"},"content":"        updateStorage();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsnotsherm"},"content":"        return toDo;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsnotsherm"},"content":"     * Adds a new {@code Deadline} task to the list and updates storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsnotsherm"},"content":"     * Parses the input argument to extract the description and deadline date/time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsnotsherm"},"content":"     * @param argument The description and deadline of the task in a single string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsnotsherm"},"content":"     * @return The newly added {@code Deadline} task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsnotsherm"},"content":"     * @throws IOException If an I/O error occurs during storage update.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsnotsherm"},"content":"     * @throws InvalidInputException If the input argument is invalid.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsnotsherm"},"content":"    public Deadline addDeadline(String argument) throws IOException, InvalidInputException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsnotsherm"},"content":"        String[] argumentTokens \u003d Parser.parseDeadline(argument);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsnotsherm"},"content":"        String description \u003d argumentTokens[0];","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsnotsherm"},"content":"        LocalDateTime by \u003d Parser.parseDateTime(argumentTokens[1]);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsnotsherm"},"content":"        Deadline deadline \u003d new Deadline(description, false, by);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsnotsherm"},"content":"        tasks.add(deadline);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsnotsherm"},"content":"        updateStorage();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsnotsherm"},"content":"        return deadline;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsnotsherm"},"content":"     * Adds a new {@code Event} task to the list and updates storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsnotsherm"},"content":"     * Parses the input argument to extract the description, start time, and end time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsnotsherm"},"content":"     * @param argument The description, start time, and end time of the event in a single string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsnotsherm"},"content":"     * @return The newly added {@code Event} task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsnotsherm"},"content":"     * @throws IOException If an I/O error occurs during storage update.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsnotsherm"},"content":"     * @throws InvalidInputException If the input argument is invalid.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsnotsherm"},"content":"    public Event addEvent(String argument) throws IOException, InvalidInputException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsnotsherm"},"content":"        String[] argumentTokens \u003d Parser.parseEvent(argument);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsnotsherm"},"content":"        String description \u003d argumentTokens[0];","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsnotsherm"},"content":"        LocalDateTime from \u003d Parser.parseDateTime(argumentTokens[1]);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsnotsherm"},"content":"        LocalDateTime to \u003d Parser.parseDateTime(argumentTokens[2]);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsnotsherm"},"content":"        if (from.isAfter(to)) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsnotsherm"},"content":"            throw new InvalidInputException(\"From \u003cdate and time\u003e must be before To \u003cdate and time\u003e!\");","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsnotsherm"},"content":"        }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsnotsherm"},"content":"        assert from.isBefore(to) : \"from datetime should be before to datetime\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsnotsherm"},"content":"        Event event \u003d new Event(description, false, from, to);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"itsnotsherm"},"content":"        tasks.add(event);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsnotsherm"},"content":"        updateStorage();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsnotsherm"},"content":"        return event;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"itsnotsherm"},"content":"     * Loads a {@code ToDo} task into the list without updating storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"itsnotsherm"},"content":"     * This is typically used when loading tasks from a file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"itsnotsherm"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"itsnotsherm"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"itsnotsherm"},"content":"    public void loadTask(String description, boolean isDone) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"itsnotsherm"},"content":"        tasks.add(new ToDo(description, isDone));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"itsnotsherm"},"content":"     * Loads a {@code Deadline} task into the list without updating storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"itsnotsherm"},"content":"     * This is typically used when loading tasks from a file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"itsnotsherm"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"itsnotsherm"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"itsnotsherm"},"content":"     * @param by          The deadline of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"itsnotsherm"},"content":"    public void loadTask(String description, boolean isDone, LocalDateTime by) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"itsnotsherm"},"content":"        tasks.add(new Deadline(description, isDone, by));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"itsnotsherm"},"content":"     * Loads an {@code Event} task into the list without updating storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"itsnotsherm"},"content":"     * This is typically used when loading tasks from a file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"itsnotsherm"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"itsnotsherm"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"itsnotsherm"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"itsnotsherm"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"itsnotsherm"},"content":"    public void loadTask(String description, boolean isDone, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"itsnotsherm"},"content":"        tasks.add(new Event(description, isDone, from, to));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"itsnotsherm"},"content":"     * Retrieves a task by its index in the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"itsnotsherm"},"content":"     * @param argument The index of the task as a string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"itsnotsherm"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"itsnotsherm"},"content":"    public Task getTask(String argument) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"itsnotsherm"},"content":"        return getTask(Integer.parseInt(argument));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"itsnotsherm"},"content":"     * Retrieves a task by its index in the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"itsnotsherm"},"content":"     * @param index The index of the task as an integer.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"itsnotsherm"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"itsnotsherm"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"itsnotsherm"},"content":"        return tasks.get(index - 1);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"itsnotsherm"},"content":"     * Returns a string representation of the entire task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"itsnotsherm"},"content":"     * If the list is empty, a message indicating the list is empty is returned.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"itsnotsherm"},"content":"     * @return A string representation of the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"itsnotsherm"},"content":"    public String getListDisplay() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"itsnotsherm"},"content":"        if (isEmpty()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"itsnotsherm"},"content":"            return \"The list is empty! rawr\\n\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"itsnotsherm"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"itsnotsherm"},"content":"        return tasks.stream()","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"itsnotsherm"},"content":"                .map(task -\u003e (tasks.indexOf(task) + 1) + \".\" + task)","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"itsnotsherm"},"content":"                .reduce(\"\", (output, taskDetails) -\u003e output + taskDetails + \"\\n\");","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"itsnotsherm"},"content":"    public String getSchedule(String date) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"itsnotsherm"},"content":"        LocalDate parsedDate \u003d Parser.parseDate(date);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"itsnotsherm"},"content":"        DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"itsnotsherm"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d filterByDate(parsedDate);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"itsnotsherm"},"content":"        if (filteredTasks.isEmpty()) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"itsnotsherm"},"content":"            return \"You are free on \" + parsedDate.format(outputFormat) + \"! rawr\\n\";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"itsnotsherm"},"content":"        }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"itsnotsherm"},"content":"        return filteredTasks.stream()","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"itsnotsherm"},"content":"                .map(task -\u003e (filteredTasks.indexOf(task) + 1) + \".\" + task)","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"itsnotsherm"},"content":"                .reduce(\"Here are the tasks you have on \" + parsedDate.format(outputFormat) + \":\\n\", (","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"itsnotsherm"},"content":"                        output, taskDetails) -\u003e output + taskDetails + \"\\n\");","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"itsnotsherm"},"content":"    private ArrayList\u003cTask\u003e filterByDate(LocalDate date) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"itsnotsherm"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"itsnotsherm"},"content":"        for (Task currentTask : tasks) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"itsnotsherm"},"content":"            if (currentTask.isScheduledOnDate(date)) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"itsnotsherm"},"content":"                filteredTasks.add(currentTask);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"itsnotsherm"},"content":"            }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"itsnotsherm"},"content":"        }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"itsnotsherm"},"content":"        return filteredTasks;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"itsnotsherm"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"itsnotsherm"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"itsnotsherm"},"content":"    public int size() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"itsnotsherm"},"content":"        return tasks.size();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"itsnotsherm"},"content":"    private boolean isEmpty() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"itsnotsherm"},"content":"        return size() \u003d\u003d 0;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"itsnotsherm"},"content":"     * Finds and returns tasks from the task list that contain the specified keyword in their description.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"itsnotsherm"},"content":"     * \u003cp\u003eThe method iterates through all the tasks in the list and checks if the description of each","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"itsnotsherm"},"content":"     * task contains the specified keyword. If a task matches, it is included in the output string,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"itsnotsherm"},"content":"     * which displays the task number and the task details.\u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"itsnotsherm"},"content":"     * @param keyword The keyword to search for within the task descriptions.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"itsnotsherm"},"content":"     * @return A formatted string listing all tasks that contain the keyword, including their task number.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"itsnotsherm"},"content":"     *         If no tasks match the keyword, an empty result string is returned","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"itsnotsherm"},"content":"     *         with a message indicating the search results.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"itsnotsherm"},"content":"    public String findTasks(String keyword) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"itsnotsherm"},"content":"        return tasks.stream()","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"itsnotsherm"},"content":"                .filter(task -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"itsnotsherm"},"content":"                .map(task -\u003e (tasks.indexOf(task) + 1) + \".\" + task)","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"itsnotsherm"},"content":"                .reduce(\"Here are the matching tasks in your list:\\n\", (","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"itsnotsherm"},"content":"                        output, taskDetails) -\u003e output + taskDetails + \"\\n\");","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"itsnotsherm"},"content":"     * Marks a task as done and updates storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"itsnotsherm"},"content":"     * @param argument The index of the task as a string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"itsnotsherm"},"content":"     * @return The task that was marked as done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"itsnotsherm"},"content":"     * @throws IOException If an I/O error occurs during storage update.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"itsnotsherm"},"content":"    public Task markTask(String argument) throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"itsnotsherm"},"content":"        Task actionTask \u003d getTask(argument);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"itsnotsherm"},"content":"        actionTask.markAsDone();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"itsnotsherm"},"content":"        updateStorage();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"itsnotsherm"},"content":"        return actionTask;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"itsnotsherm"},"content":"     * Unmarks a task as done and updates storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"itsnotsherm"},"content":"     * @param argument The index of the task as a string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"itsnotsherm"},"content":"     * @return The task that was unmarked.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"itsnotsherm"},"content":"     * @throws IOException If an I/O error occurs during storage update.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"itsnotsherm"},"content":"    public Task unmarkTask(String argument) throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"itsnotsherm"},"content":"        Task actionTask \u003d getTask(argument);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"itsnotsherm"},"content":"        actionTask.unMarkDone();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"itsnotsherm"},"content":"        updateStorage();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"itsnotsherm"},"content":"        return actionTask;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"itsnotsherm"},"content":"     * Deletes a task from the list and updates storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"itsnotsherm"},"content":"     * @param argument The index of the task as a string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"itsnotsherm"},"content":"     * @return The task that was deleted.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"itsnotsherm"},"content":"     * @throws IOException If an I/O error occurs during storage update.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"itsnotsherm"},"content":"    public Task deleteTask(String argument) throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"itsnotsherm"},"content":"        Task actionTask \u003d getTask(argument);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"itsnotsherm"},"content":"        tasks.remove(actionTask);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"itsnotsherm"},"content":"        Task.removeTask();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"itsnotsherm"},"content":"        updateStorage();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"itsnotsherm"},"content":"        return actionTask;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"itsnotsherm"},"content":"     * Loads the tasks from storage into the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"itsnotsherm"},"content":"     * @throws IOException If an I/O error occurs during loading.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"itsnotsherm"},"content":"    private void loadList() throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"itsnotsherm"},"content":"        storage.loadFile(this);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"itsnotsherm"},"content":"     * Updates the storage with the current task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"itsnotsherm"},"content":"     * @throws IOException If an I/O error occurs during storage update.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"itsnotsherm"},"content":"    private void updateStorage() throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"itsnotsherm"},"content":"        storage.updateFile(this);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"itsnotsherm"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"itsnotsherm":287}},{"path":"src/main/java/rex/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsnotsherm"},"content":"package rex.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsnotsherm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsnotsherm"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsnotsherm"},"content":" * The {@code ToDo} class represents a task that needs to be done without any specific deadline or time constraints.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsnotsherm"},"content":" * It extends the {@code Task} class and adds a type identifier to distinguish it as a ToDo task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsnotsherm"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsnotsherm"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsnotsherm"},"content":"     * Constructs a new {@code ToDo} task with the specified description and completion status.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsnotsherm"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsnotsherm"},"content":"     * @param isDone      The completion status of the ToDo task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsnotsherm"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsnotsherm"},"content":"        super(description, isDone);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsnotsherm"},"content":"     * Returns a string representation of the ToDo task, including its type identifier \"[T]\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsnotsherm"},"content":"     * and the information from the {@code Task} superclass.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsnotsherm"},"content":"     * @return A string representation of the ToDo task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsnotsherm"},"content":"    @Override","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsnotsherm"},"content":"    public String toString() {","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsnotsherm"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsnotsherm"},"content":"     * Returns a formatted string suitable for saving to a file. The format includes a type identifier \"T\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsnotsherm"},"content":"     * followed by the formatted output from the {@code Task} superclass.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsnotsherm"},"content":"     * @return A formatted string representing the ToDo task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsnotsherm"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsnotsherm"},"content":"    public String formatter() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsnotsherm"},"content":"        return \"T | \" + super.formatter();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsnotsherm"},"content":"    @Override","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsnotsherm"},"content":"    public boolean isScheduledOnDate(LocalDate date) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsnotsherm"},"content":"        return false;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsnotsherm"},"content":"}","lastModifiedDate":"2024-08-17","isFullCredit":false}],"authorContributionMap":{"itsnotsherm":47}},{"path":"src/main/java/rex/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsnotsherm"},"content":"package rex.util;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsnotsherm"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsnotsherm"},"content":"import java.io.File;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsnotsherm"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsnotsherm"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsnotsherm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsnotsherm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsnotsherm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsnotsherm"},"content":"import rex.command.Command;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsnotsherm"},"content":"import rex.exception.InvalidCommandException;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsnotsherm"},"content":"import rex.exception.InvalidInputException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsnotsherm"},"content":"import rex.task.TaskList;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsnotsherm"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsnotsherm"},"content":" * The {@code Parser} class provides utility methods to parse user input and save file content.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsnotsherm"},"content":" * It includes methods to parse commands, tasks, and dates, as well as handle input validation.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsnotsherm"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsnotsherm"},"content":"public class Parser {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsnotsherm"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yy HHmm\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsnotsherm"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yy\");","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsnotsherm"},"content":"     * Parses the user input into command and argument tokens.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsnotsherm"},"content":"     * @param input The raw user input as a string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsnotsherm"},"content":"     * @return A string array where the first element is the command and the second is the argument.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsnotsherm"},"content":"     * @throws InvalidInputException If the input is invalid based on the command.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsnotsherm"},"content":"    public static String[] parseInput(String input) throws InvalidInputException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsnotsherm"},"content":"        String[] inputTokens \u003d input.split(\" \", 2);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsnotsherm"},"content":"        validateInput(inputTokens);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsnotsherm"},"content":"        return inputTokens;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsnotsherm"},"content":"     * Parses the contents of a file and loads tasks into the provided {@code TaskList}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsnotsherm"},"content":"     * @param list The {@code TaskList} instance where tasks will be loaded.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsnotsherm"},"content":"     * @param f The file to be parsed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsnotsherm"},"content":"     * @throws IOException If an I/O error occurs while reading the file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsnotsherm"},"content":"    public static void parseFile(TaskList list, File f) throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsnotsherm"},"content":"        assert f !\u003d null \u0026\u0026 f.exists() : \"File should exist\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsnotsherm"},"content":"        assert list !\u003d null : \"TaskList should not be null\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsnotsherm"},"content":"        // Initialize reader to read from save file","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsnotsherm"},"content":"        FileReader r \u003d new FileReader(f);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsnotsherm"},"content":"        BufferedReader reader \u003d new BufferedReader(r);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsnotsherm"},"content":"        String currentLine;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsnotsherm"},"content":"        while ((currentLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsnotsherm"},"content":"            String[] taskTokens \u003d currentLine.split(\" \\\\| \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsnotsherm"},"content":"            String taskType \u003d taskTokens[0];","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsnotsherm"},"content":"            // 1 if marked, 0 if unmarked","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsnotsherm"},"content":"            int marked \u003d Integer.parseInt(taskTokens[1]);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsnotsherm"},"content":"            boolean isMarked \u003d marked \u003d\u003d 1;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsnotsherm"},"content":"            String description \u003d taskTokens[2];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsnotsherm"},"content":"            switch (taskType) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsnotsherm"},"content":"            case \"T\":","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsnotsherm"},"content":"                list.loadTask(description, isMarked);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsnotsherm"},"content":"                break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsnotsherm"},"content":"            case \"D\":","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsnotsherm"},"content":"                LocalDateTime by \u003d parseDateTime(taskTokens[3]);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsnotsherm"},"content":"                list.loadTask(description, isMarked, by);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsnotsherm"},"content":"                break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsnotsherm"},"content":"            case \"E\":","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsnotsherm"},"content":"                LocalDateTime from \u003d parseDateTime(taskTokens[3]);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsnotsherm"},"content":"                LocalDateTime to \u003d parseDateTime(taskTokens[4]);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsnotsherm"},"content":"                list.loadTask(description, isMarked, from, to);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsnotsherm"},"content":"                break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsnotsherm"},"content":"            default:","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsnotsherm"},"content":"                throw new IOException(\"Error: corrupted file.\");","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsnotsherm"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsnotsherm"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsnotsherm"},"content":"        reader.close();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsnotsherm"},"content":"        r.close();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsnotsherm"},"content":"     * Parses the argument for a {@code Deadline} task to extract the description and deadline.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsnotsherm"},"content":"     * @param argument The raw argument string containing the task description and deadline.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsnotsherm"},"content":"     * @return A string array where the first element is the description and the second is the deadline.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"itsnotsherm"},"content":"     * @throws InvalidInputException If the input is missing the \"/by\" keyword or other required elements.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsnotsherm"},"content":"    public static String[] parseDeadline(String argument) throws InvalidInputException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsnotsherm"},"content":"        String[] descriptionBy \u003d argument.split(\"/by \", 2);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsnotsherm"},"content":"        if (descriptionBy.length \u003c 2) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsnotsherm"},"content":"            throw new InvalidInputException(\"/by not found in input!\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"itsnotsherm"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"itsnotsherm"},"content":"        return descriptionBy;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"itsnotsherm"},"content":"     * Parses the argument for an {@code Event} task to extract the description, start time, and end time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"itsnotsherm"},"content":"     * @param argument The raw argument string containing the task description, start time, and end time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"itsnotsherm"},"content":"     * @return A string array where the first element is the description,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"itsnotsherm"},"content":"     *         the second is the start time, and the third is the end time.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"itsnotsherm"},"content":"     * @throws InvalidInputException If the input is missing the \"/from\" or \"/to\" keywords or other required elements.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"itsnotsherm"},"content":"    public static String[] parseEvent(String argument) throws InvalidInputException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"itsnotsherm"},"content":"        String[] tokens \u003d argument.split(\"/from \", 2);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"itsnotsherm"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"itsnotsherm"},"content":"            throw new InvalidInputException(\"/from not found in input!\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"itsnotsherm"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"itsnotsherm"},"content":"        String description \u003d tokens[0];","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"itsnotsherm"},"content":"        String[] fromTo \u003d tokens[1].split(\" /to \", 2);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"itsnotsherm"},"content":"        if (fromTo.length \u003c 2) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"itsnotsherm"},"content":"            throw new InvalidInputException(\"/to not found in input!\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"itsnotsherm"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"itsnotsherm"},"content":"        return new String[] {description, fromTo[0], fromTo[1]};","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"itsnotsherm"},"content":"     * Parses a date and time string into a {@code LocalDateTime} object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"itsnotsherm"},"content":"     * @param dateTimeString The string containing the date and time in the format \"dd-MM-yy HHmm\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"itsnotsherm"},"content":"     * @return A {@code LocalDateTime} object representing the parsed date and time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"itsnotsherm"},"content":"    public static LocalDateTime parseDateTime(String dateTimeString) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"itsnotsherm"},"content":"        return LocalDateTime.parse(dateTimeString, DATE_TIME_FORMATTER);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"itsnotsherm"},"content":"    public static LocalDate parseDate(String dateString) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"itsnotsherm"},"content":"        return LocalDate.parse(dateString, DATE_FORMATTER);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"itsnotsherm"},"content":"     * Validates the command input and its arguments, throwing an exception if invalid.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"itsnotsherm"},"content":"     * @param inputTokens The array of command and argument tokens.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"itsnotsherm"},"content":"     * @throws InvalidInputException If the input is invalid for the given command.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"itsnotsherm"},"content":"    private static void validateInput(String[] inputTokens) throws InvalidInputException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"itsnotsherm"},"content":"        Command command \u003d Command.inputToCommand(inputTokens[0]);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"itsnotsherm"},"content":"        switch (command) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"itsnotsherm"},"content":"        case HELP:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"itsnotsherm"},"content":"        case BYE:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"itsnotsherm"},"content":"        case LIST:","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"itsnotsherm"},"content":"            if (inputTokens.length \u003e 1) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"itsnotsherm"},"content":"                String usageMessage \u003d Command.usageMessage(command);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"itsnotsherm"},"content":"                throw new InvalidInputException(\"Too MANY arguments!\\nUsage: \" + usageMessage);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"itsnotsherm"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"itsnotsherm"},"content":"            break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"itsnotsherm"},"content":"        case TODO:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"itsnotsherm"},"content":"        case DEADLINE:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"itsnotsherm"},"content":"        case EVENT:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"itsnotsherm"},"content":"            if (inputTokens.length \u003d\u003d 1 || inputTokens[1].isBlank()) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"itsnotsherm"},"content":"                String usageMessage \u003d Command.usageMessage(command);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"itsnotsherm"},"content":"                throw new InvalidInputException(\"Task description cannot be empty!\\nUsage: \" + usageMessage);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"itsnotsherm"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"itsnotsherm"},"content":"            break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"itsnotsherm"},"content":"        case SCHEDULE:","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"itsnotsherm"},"content":"            if (inputTokens.length \u003d\u003d 1) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"itsnotsherm"},"content":"                String usageMessage \u003d Command.usageMessage(command);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"itsnotsherm"},"content":"                throw new InvalidInputException(\"No date entered!\\nUsage: \" + usageMessage);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"itsnotsherm"},"content":"            }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"itsnotsherm"},"content":"            break;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"itsnotsherm"},"content":"        case FIND:","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"itsnotsherm"},"content":"            if (inputTokens.length \u003d\u003d 1) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"itsnotsherm"},"content":"                String usageMessage \u003d Command.usageMessage(command);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"itsnotsherm"},"content":"                throw new InvalidInputException(\"No keyword entered!\\nUsage: \" + usageMessage);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"itsnotsherm"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"itsnotsherm"},"content":"            break;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"itsnotsherm"},"content":"        case MARK:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"itsnotsherm"},"content":"        case UNMARK:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"itsnotsherm"},"content":"        case DELETE:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"itsnotsherm"},"content":"            if (inputTokens.length \u003d\u003d 1) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"itsnotsherm"},"content":"                String usageMessage \u003d Command.usageMessage(command);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"itsnotsherm"},"content":"                throw new InvalidInputException(\"No task number entered!\\nUsage: \" + usageMessage);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"itsnotsherm"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"itsnotsherm"},"content":"            break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"itsnotsherm"},"content":"        case RAWR:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"itsnotsherm"},"content":"            if (inputTokens.length \u003e 1) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"itsnotsherm"},"content":"                throw new InvalidInputException(\"\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"itsnotsherm"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"itsnotsherm"},"content":"            break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"itsnotsherm"},"content":"        default:","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"itsnotsherm"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"itsnotsherm"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"itsnotsherm"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"itsnotsherm":194}},{"path":"src/main/java/rex/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsnotsherm"},"content":"package rex.util;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsnotsherm"},"content":"import java.io.File;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsnotsherm"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsnotsherm"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsnotsherm"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsnotsherm"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsnotsherm"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsnotsherm"},"content":"import java.nio.file.StandardCopyOption;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsnotsherm"},"content":"import rex.task.Task;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsnotsherm"},"content":"import rex.task.TaskList;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsnotsherm"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsnotsherm"},"content":" * The {@code Storage} class handles the management of persistent storage for tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsnotsherm"},"content":" * It is responsible for loading tasks from a file into a {@code TaskList} and updating","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsnotsherm"},"content":" * the file with the current state of the {@code TaskList}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsnotsherm"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsnotsherm"},"content":"public class Storage {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsnotsherm"},"content":"    private final String filePath;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsnotsherm"},"content":"    private final String tempPath;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsnotsherm"},"content":"    public Storage(String filePath, String tempPath) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsnotsherm"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsnotsherm"},"content":"        this.tempPath \u003d tempPath;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsnotsherm"},"content":"     * Loads tasks from the file specified by {@code filepath} into the provided {@code TaskList}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsnotsherm"},"content":"     * This method ensures that the necessary directories and files exist before parsing.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsnotsherm"},"content":"     * @param list The {@code TaskList} instance to which tasks will be loaded.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsnotsherm"},"content":"     * @throws IOException If an I/O error occurs while reading the file or creating directories/files.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsnotsherm"},"content":"    public void loadFile(TaskList list) throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsnotsherm"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsnotsherm"},"content":"        File dir \u003d file.getParentFile();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsnotsherm"},"content":"        createDirectory(dir);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsnotsherm"},"content":"        createFile(file);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsnotsherm"},"content":"        // Parse file data into the provided TaskList","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsnotsherm"},"content":"        Parser.parseFile(list, file);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsnotsherm"},"content":"     * Updates the file specified by {@code filepath} with the current state of the {@code TaskList}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsnotsherm"},"content":"     * This method first writes the tasks to a temporary file, then replaces the main file with the temporary one.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsnotsherm"},"content":"     * @param list The {@code TaskList} instance containing the tasks to be saved.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsnotsherm"},"content":"     * @throws IOException If an I/O error occurs while writing to or copying files.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsnotsherm"},"content":"    public void updateFile(TaskList list) throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsnotsherm"},"content":"        File temp \u003d new File(tempPath);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsnotsherm"},"content":"        // Creates temp file to copy taskList from","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsnotsherm"},"content":"        Path tempFilePath \u003d Paths.get(tempPath);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsnotsherm"},"content":"        Files.deleteIfExists(tempFilePath);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsnotsherm"},"content":"        createFile(temp);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsnotsherm"},"content":"        try (FileWriter writer \u003d new FileWriter(temp, true)) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsnotsherm"},"content":"            for (int i \u003d 1; i \u003c\u003d list.size(); i++) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsnotsherm"},"content":"                Task task \u003d list.getTask(i);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsnotsherm"},"content":"                writer.write(task.formatter() + System.lineSeparator());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsnotsherm"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsnotsherm"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsnotsherm"},"content":"        // Replace the main file with the updated temp file","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsnotsherm"},"content":"        Files.copy(tempFilePath, Paths.get(filePath), StandardCopyOption.REPLACE_EXISTING);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsnotsherm"},"content":"        Files.delete(tempFilePath);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsnotsherm"},"content":"     * Creates the specified directory if it does not already exist.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsnotsherm"},"content":"     * @param dir The directory to be created.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsnotsherm"},"content":"    private void createDirectory(File dir) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsnotsherm"},"content":"        if (!dir.isDirectory()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsnotsherm"},"content":"            dir.mkdirs();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsnotsherm"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsnotsherm"},"content":"     * Creates the specified file if it does not already exist.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsnotsherm"},"content":"     * @param f The file to be created.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsnotsherm"},"content":"     * @throws IOException If an I/O error occurs while creating the file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsnotsherm"},"content":"    private void createFile(File f) throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsnotsherm"},"content":"        if (!f.exists()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsnotsherm"},"content":"            f.createNewFile();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsnotsherm"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"itsnotsherm"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"itsnotsherm":95}},{"path":"src/main/java/rex/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsnotsherm"},"content":"package rex.util;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsnotsherm"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsnotsherm"},"content":"import rex.command.Command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsnotsherm"},"content":"import rex.exception.InvalidInputException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsnotsherm"},"content":"import rex.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsnotsherm"},"content":"import rex.task.TaskList;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsnotsherm"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsnotsherm"},"content":" * The {@code Ui} class handles the user interface of the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsnotsherm"},"content":" * It provides methods to interact with the user by reading user inputs,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsnotsherm"},"content":" * displaying messages, prompts, and error messages.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsnotsherm"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsnotsherm"},"content":"public class Ui {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsnotsherm"},"content":"     * Constructs a new {@code Ui} instance and initializes the {@code Scanner}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsnotsherm"},"content":"    // \"rawr\" string added to end of each print statement","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsnotsherm"},"content":"    private static final String RAWR \u003d \"rawr\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsnotsherm"},"content":"    // \"RAWRRRR\" that comes with each error message","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsnotsherm"},"content":"    private static final String ERROR_PREFIX \u003d \"RAWRRRR!!!\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsnotsherm"},"content":"    // Scanner placeholder","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsnotsherm"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsnotsherm"},"content":"    public Ui() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsnotsherm"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsnotsherm"},"content":"     * Displays a greeting message to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsnotsherm"},"content":"    public static String getGreeting() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsnotsherm"},"content":"        System.out.println(\"Hello! I\u0027m Rex! \" + RAWR);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsnotsherm"},"content":"        System.out.println(\"What can I do for you? \" + RAWR);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsnotsherm"},"content":"        return \"Hello! I\u0027m Rex! \" + RAWR + \"\\nWhat can I do for you? \" + RAWR;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsnotsherm"},"content":"     * Displays a help message listing available commands.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsnotsherm"},"content":"    public String getHelp() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsnotsherm"},"content":"        return Command.getCommandList();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsnotsherm"},"content":"     * Displays the current list of tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsnotsherm"},"content":"    public String displayList(TaskList taskList) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsnotsherm"},"content":"        return taskList.getListDisplay();","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsnotsherm"},"content":"    public String displaySchedule(TaskList taskList, String date) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsnotsherm"},"content":"        return taskList.getSchedule(date);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsnotsherm"},"content":"     * Displays the output for the tasks that match the keyword searched.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsnotsherm"},"content":"    public String findTask(TaskList taskList, String keyword) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"itsnotsherm"},"content":"        return taskList.findTasks(keyword);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"itsnotsherm"},"content":"     * Informs the user that a new task has been added.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"itsnotsherm"},"content":"     * @param task The {@code Task} that was added to the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"itsnotsherm"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"itsnotsherm"},"content":"        String output \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d \"  \" + task;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d \"\\nNow you have \" + Task.getNumberOfTasks() + \" tasks in the list.\";","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"itsnotsherm"},"content":"        return output;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"itsnotsherm"},"content":"     * Informs the user that a task has been marked as done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"itsnotsherm"},"content":"     * @param task The {@code Task} that was marked as done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"itsnotsherm"},"content":"    public String markTask(Task task) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"itsnotsherm"},"content":"        String output \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d \"  \" + task;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"itsnotsherm"},"content":"        return output;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"itsnotsherm"},"content":"     * Informs the user that a task has been marked as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"itsnotsherm"},"content":"     * @param task The {@code Task} that was marked as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"itsnotsherm"},"content":"    public String unmarkTask(Task task) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"itsnotsherm"},"content":"        String output \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d \"  \" + task;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"itsnotsherm"},"content":"        return output;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"itsnotsherm"},"content":"     * Informs the user that a task has been deleted.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"itsnotsherm"},"content":"     * @param task The {@code Task} that was removed from the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"itsnotsherm"},"content":"    public String deleteTask(Task task) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"itsnotsherm"},"content":"        String output \u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d \"  \" + task;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"itsnotsherm"},"content":"        output +\u003d \"\\nNow you have \" + Task.getNumberOfTasks() + \" tasks in the list.\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"itsnotsherm"},"content":"        return output;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"itsnotsherm"},"content":"     * Prints a playful \"rawr\" message to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"itsnotsherm"},"content":"    public String rawr() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"itsnotsherm"},"content":"        return RAWR + \"!\";","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"itsnotsherm"},"content":"     * Displays a goodbye message and closes the {@code Scanner}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"itsnotsherm"},"content":"    public String getGoodbye() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"itsnotsherm"},"content":"        scanner.close();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"itsnotsherm"},"content":"        return \"Bye. Hope to see you again soon! \" + RAWR;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"itsnotsherm"},"content":"     * Displays an error message to the user with a default error prefix.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"itsnotsherm"},"content":"     * @param e The {@code InvalidInputException} containing the error message.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"itsnotsherm"},"content":"    public String errorMessage(InvalidInputException e) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"itsnotsherm"},"content":"        return errorMessage(e.getMessage());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"itsnotsherm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"itsnotsherm"},"content":"     * Displays a custom error message to the user with a default error prefix.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"itsnotsherm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"itsnotsherm"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"itsnotsherm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"itsnotsherm"},"content":"    public String errorMessage(String message) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"itsnotsherm"},"content":"        return ERROR_PREFIX + \" \" + message;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"itsnotsherm"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"itsnotsherm":146}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"itsnotsherm"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsnotsherm"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsnotsherm"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsnotsherm"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsnotsherm"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsnotsherm"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsnotsherm"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsnotsherm"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsnotsherm"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" textFill\u003d\"WHITE\" textOverrun\u003d\"CLIP\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsnotsherm"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsnotsherm"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsnotsherm"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsnotsherm"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsnotsherm"},"content":"            \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsnotsherm"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsnotsherm"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsnotsherm"},"content":"            \u003cFont name\u003d\"Arial Black\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsnotsherm"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsnotsherm"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsnotsherm"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsnotsherm"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsnotsherm"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsnotsherm"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsnotsherm"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"itsnotsherm":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"itsnotsherm"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsnotsherm"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsnotsherm"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsnotsherm"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsnotsherm"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsnotsherm"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsnotsherm"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"rex.MainWindow\"\u003e","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsnotsherm"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsnotsherm"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsnotsherm"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"0.6666666666666643\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsnotsherm"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"42.66666666666663\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsnotsherm"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsnotsherm"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsnotsherm"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsnotsherm"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsnotsherm"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsnotsherm"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"itsnotsherm":19}},{"path":"src/test/java/rex/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsnotsherm"},"content":"package rex.task;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsnotsherm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsnotsherm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsnotsherm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsnotsherm"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsnotsherm"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsnotsherm"},"content":"    public void testFormattedNotDone() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsnotsherm"},"content":"        assertEquals(\"D | 0 | do this | 01-09-24 1200\",","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsnotsherm"},"content":"                new Deadline(\"do this\", false, LocalDateTime.of(2024, 9, 1, 12, 0)).formatter());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsnotsherm"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsnotsherm"},"content":"    public void testFormattedDone() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsnotsherm"},"content":"        assertEquals(\"D | 1 | do that thing | 01-09-24 1200\",","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsnotsherm"},"content":"                new Deadline(\"do that thing\", true, LocalDateTime.of(2024, 9, 1, 12, 0)).formatter());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsnotsherm"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsnotsherm"},"content":"    public void testToStringNotDone() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsnotsherm"},"content":"        assertEquals(\"[D][ ] submit assignment(by: 01 Sep 2024 1200HRS)\",","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsnotsherm"},"content":"                new Deadline(\"submit assignment\", false, LocalDateTime.of(2024, 9, 1, 12, 0)).toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsnotsherm"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsnotsherm"},"content":"    public void testToStringDone() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsnotsherm"},"content":"        assertEquals(\"[D][X] finish homework(by: 01 Sep 2024 1200HRS)\",","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsnotsherm"},"content":"                new Deadline(\"finish homework\", true, LocalDateTime.of(2024, 9, 1, 12, 0)).toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsnotsherm"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"itsnotsherm":33}},{"path":"src/test/java/rex/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsnotsherm"},"content":"package rex.task;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsnotsherm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsnotsherm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsnotsherm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsnotsherm"},"content":"public class EventTest {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsnotsherm"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsnotsherm"},"content":"    public void testFormattedNotDone() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsnotsherm"},"content":"        assertEquals(\"E | 0 | team meeting | 01-11-24 1200 | 01-11-24 1400\",","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsnotsherm"},"content":"                new Event(\"team meeting\", false, LocalDateTime.of(2024, 11, 1, 12, 0),","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsnotsherm"},"content":"                        LocalDateTime.of(2024, 11, 1, 14, 0)).formatter());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsnotsherm"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsnotsherm"},"content":"    public void testFormattedDone() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsnotsherm"},"content":"        assertEquals(\"E | 1 | team meeting | 01-11-24 1200 | 01-11-24 1400\",","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsnotsherm"},"content":"                new Event(\"team meeting\", true, LocalDateTime.of(2024, 11, 1, 12, 0),","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsnotsherm"},"content":"                        LocalDateTime.of(2024, 11, 1, 14, 0)).formatter());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsnotsherm"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsnotsherm"},"content":"    public void testToStringNotDone() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsnotsherm"},"content":"        assertEquals(\"[E][ ] team meeting(from: 01 Nov 2024 1200HRS | to: 01 Nov 2024 1400HRS)\",","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsnotsherm"},"content":"                new Event(\"team meeting\", false, LocalDateTime.of(2024, 11, 1, 12, 0),","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsnotsherm"},"content":"                        LocalDateTime.of(2024, 11, 1, 14, 0)).toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsnotsherm"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsnotsherm"},"content":"    public void testToStringDone() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsnotsherm"},"content":"        assertEquals(\"[E][X] team meeting(from: 01 Nov 2024 1200HRS | to: 01 Nov 2024 1400HRS)\",","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsnotsherm"},"content":"                new Event(\"team meeting\", true, LocalDateTime.of(2024, 11, 1, 12, 0),","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsnotsherm"},"content":"                        LocalDateTime.of(2024, 11, 1, 14, 0)).toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsnotsherm"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"itsnotsherm":37}},{"path":"src/test/java/rex/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsnotsherm"},"content":"package rex.task;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsnotsherm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsnotsherm"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsnotsherm"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsnotsherm"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsnotsherm"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsnotsherm"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsnotsherm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsnotsherm"},"content":"import rex.exception.InvalidInputException;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsnotsherm"},"content":"import rex.util.Storage;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsnotsherm"},"content":"public class TaskListTest {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsnotsherm"},"content":"    private static final String TESTFILE_PATH \u003d \"./data/test/rex.txt\";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsnotsherm"},"content":"    private static final String TESTTEMP_PATH \u003d \"./data/test/tmp.txt\";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsnotsherm"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsnotsherm"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsnotsherm"},"content":"    public void setUp() throws IOException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsnotsherm"},"content":"        taskList \u003d new TaskList(new Storage(TESTFILE_PATH, TESTTEMP_PATH));","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsnotsherm"},"content":"    @AfterEach","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsnotsherm"},"content":"    public void deleteFile() throws IOException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsnotsherm"},"content":"        Files.deleteIfExists(Paths.get(\"./data/rex.txt\"));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsnotsherm"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsnotsherm"},"content":"    public void testEmptyList() {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsnotsherm"},"content":"        assertEquals(\"The list is empty! rawr\\n\", taskList.getListDisplay());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsnotsherm"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsnotsherm"},"content":"    public void testNonEmptyList() throws IOException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsnotsherm"},"content":"        taskList.addToDo(\"do this\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsnotsherm"},"content":"        taskList.addToDo(\"do that\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsnotsherm"},"content":"        taskList.addToDo(\"do something\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsnotsherm"},"content":"        assertEquals(\"1.[T][ ] do this\\n2.[T][ ] do that\\n3.[T][ ] do something\\n\", taskList.getListDisplay());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsnotsherm"},"content":"        assertEquals(3, taskList.size());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsnotsherm"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsnotsherm"},"content":"    void testAddToDo() throws IOException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsnotsherm"},"content":"        ToDo toDo \u003d taskList.addToDo(\"Read a book\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsnotsherm"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"itsnotsherm"},"content":"        assertEquals(toDo, taskList.getTask(1));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"itsnotsherm"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"itsnotsherm"},"content":"    void testAddDeadline() throws IOException, InvalidInputException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"itsnotsherm"},"content":"        Deadline deadline \u003d taskList.addDeadline(\"submit assignment /by 01-09-24 1200\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"itsnotsherm"},"content":"        assertEquals(1, taskList.size(), \"Task list size should be 1 after adding a Deadline\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"itsnotsherm"},"content":"        assertEquals(deadline, taskList.getTask(1), \"The task added should be the one retrieved\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"itsnotsherm"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"itsnotsherm"},"content":"    void testAddEvent() throws IOException, InvalidInputException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"itsnotsherm"},"content":"        Event event \u003d taskList.addEvent(\"meeting /from 02-12-24 1200 /to 02-12-24 1400\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"itsnotsherm"},"content":"        assertEquals(1, taskList.size(), \"Task list size should be 1 after adding an Event\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"itsnotsherm"},"content":"        assertEquals(event, taskList.getTask(1), \"The task added should be the one retrieved\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"itsnotsherm"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"itsnotsherm":64}},{"path":"src/test/java/rex/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsnotsherm"},"content":"package rex.task;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsnotsherm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsnotsherm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsnotsherm"},"content":"public class ToDoTest {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsnotsherm"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsnotsherm"},"content":"    public void testFormattedNotDone() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsnotsherm"},"content":"        assertEquals(\"T | 0 | do something\", new ToDo(\"do something\", false).formatter());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsnotsherm"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsnotsherm"},"content":"    public void testFormattedDone() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsnotsherm"},"content":"        assertEquals(\"T | 1 | do something else\", new ToDo(\"do something else\", true).formatter());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsnotsherm"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsnotsherm"},"content":"    void testToStringNotDone() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsnotsherm"},"content":"        assertEquals(\"[T][ ] Complete assignment\", new ToDo(\"Complete assignment\", false).toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsnotsherm"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsnotsherm"},"content":"    void testToStringDone() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsnotsherm"},"content":"        assertEquals(\"[T][X] Complete homework\", new ToDo(\"Complete homework\", true).toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsnotsherm"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"itsnotsherm":27}},{"path":"src/test/java/rex/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsnotsherm"},"content":"package rex.util;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsnotsherm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsnotsherm"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsnotsherm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsnotsherm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsnotsherm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsnotsherm"},"content":"import rex.exception.InvalidInputException;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsnotsherm"},"content":"public class ParserTest {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsnotsherm"},"content":"    @Test","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsnotsherm"},"content":"    public void testParseInput_validCommand() throws InvalidInputException {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsnotsherm"},"content":"        String input \u003d \"todo Read book\";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsnotsherm"},"content":"        String[] parsed \u003d Parser.parseInput(input);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsnotsherm"},"content":"        assertEquals(\"todo\", parsed[0]);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsnotsherm"},"content":"        assertEquals(\"Read book\", parsed[1]);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsnotsherm"},"content":"    @Test","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsnotsherm"},"content":"    public void testParseInput_invalidCommandThrowsException() {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsnotsherm"},"content":"        String input \u003d \"notacommand\";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsnotsherm"},"content":"        assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsnotsherm"},"content":"            Parser.parseInput(input);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsnotsherm"},"content":"        });","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"itsnotsherm"},"content":"    @Test","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"itsnotsherm"},"content":"    public void testParseDateTime_validInput() {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"itsnotsherm"},"content":"        String dateTimeString \u003d \"12-12-23 2359\";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"itsnotsherm"},"content":"        LocalDateTime dateTime \u003d Parser.parseDateTime(dateTimeString);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"itsnotsherm"},"content":"        LocalDateTime expectedDateTime \u003d LocalDateTime.parse(\"12-12-23 2359\",","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"itsnotsherm"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yy HHmm\"));","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"itsnotsherm"},"content":"        assertEquals(expectedDateTime, dateTime);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"itsnotsherm"},"content":"    @Test","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"itsnotsherm"},"content":"    public void testParseDateTime_invalidInput() {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"itsnotsherm"},"content":"        String dateTimeString \u003d \"12 December 2023 1159pm\";","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"itsnotsherm"},"content":"        assertThrows(Exception.class, () -\u003e {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"itsnotsherm"},"content":"            Parser.parseDateTime(dateTimeString);","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"itsnotsherm"},"content":"        });","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"itsnotsherm"},"content":"    }","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"itsnotsherm"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"itsnotsherm"},"content":"}","lastModifiedDate":"2024-09-20","isFullCredit":false}],"authorContributionMap":{"itsnotsherm":47}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"itsnotsherm"},"content":"list","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"itsnotsherm"},"content":"add read book","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"itsnotsherm"},"content":"todo","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"itsnotsherm"},"content":"todo read book","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"itsnotsherm"},"content":"deadline return book","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"itsnotsherm"},"content":"deadline return book /by 06-06-24 1400","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"itsnotsherm"},"content":"event project meeting","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"itsnotsherm"},"content":"event project meeting /from 6 Aug 2024","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"itsnotsherm"},"content":"event project meeting /from 06-08-24 1400 /to 06-08-24 1600","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"itsnotsherm"},"content":"mark 1","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"itsnotsherm"},"content":"todo join sports club","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"itsnotsherm"},"content":"mark 4","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"itsnotsherm"},"content":"todo borrow book","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"itsnotsherm"},"content":"list","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"itsnotsherm"},"content":"deadline return book /by 23-09-24 1200","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"itsnotsherm"},"content":"event project meeting /from 24-09-24 1400 /to 24-09-24 1600","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"itsnotsherm"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsnotsherm"},"content":"unmark 1","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"itsnotsherm"},"content":"mark 10","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"itsnotsherm"},"content":"mark -10","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"itsnotsherm"},"content":"mark 0","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"itsnotsherm"},"content":"delete 1","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsnotsherm"},"content":"delete 3","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"itsnotsherm"},"content":"delete 99","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"itsnotsherm"},"content":"delete -1","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"itsnotsherm"},"content":"list","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"itsnotsherm"},"content":"bye","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"itsnotsherm":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"itsnotsherm"},"content":"java -classpath ..\\bin Rex \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":20,"itsnotsherm":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"itsnotsherm"},"content":"java -classpath ../bin Rex \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":37,"itsnotsherm":1}}]
