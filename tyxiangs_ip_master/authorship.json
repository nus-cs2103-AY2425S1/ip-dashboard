[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"checkstyle {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"    archiveFileName \u003d \u0027dave.jar\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"    archiveBaseName \u003d \"dave\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"tyxiangs":21,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"# Dave User Guide","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"![User Interface](Ui.png)","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"Dave is a simple, interactive chatbot designed to help users manage tasks. With Dave, users can create, manage, and track their tasks, set deadlines, mark tasks as completed, and more. It provides an intuitive command-based interface that helps you keep track of your to-do list efficiently.","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"Dave allows users to add tasks with deadlines, helping them stay on top of their important events.","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"Usage: To add a deadline, use the following command format:","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"Command Format: `deadline \u003ctask description\u003e /by \u003cdate/time\u003e`","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"Example: `deadline Submit assignment /by 2024-09-20`","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"Expected Outcome: The task with a deadline will be added to the list, and Dave will confirm the addition by displaying the task and its corresponding deadline.","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"```","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"  [D][ ] Submit assignment (by: Sep 20 2024)","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"```","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"## Adding To-Dos","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"To-dos are basic tasks without any specific deadline. Dave allows users to add and manage these tasks.","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"Usage: To add a to-do, use the following command format:","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"Command Format: `todo \u003ctask description\u003e`","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"Example: `todo Buy groceries`","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"Expected Outcome: A to-do task will be added to the list, and Dave will confirm it by displaying the task.","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"```","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"  [T][ ] Buy groceries","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"```","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"## Adding Events","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"For tasks that are tied to specific events with start and end times, you can use Dave\u0027s event feature.","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"Usage: To add an event, use the following command format:","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"Command Format: `event \u003ctask description\u003e /at \u003cdate/time\u003e`","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"Example: `event Attend meeting /at 2024-09-21 10:00`","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"Expected Outcome: An event will be added to the task list with a specified date and time, and Dave will confirm the addition.","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tyxiangs"},"content":"```","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tyxiangs"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tyxiangs"},"content":"  [E][ ] Attend meeting (at: Sep 21 2024 10:00 AM)","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tyxiangs"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tyxiangs"},"content":"```","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tyxiangs"},"content":"## Marking Tasks as Done","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tyxiangs"},"content":"When a task is completed, you can mark it as done to keep your task list up-to-date.","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tyxiangs"},"content":"Usage: To mark a task as done, use the following command format:","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tyxiangs"},"content":"Command Format: `mark \u003ctask number\u003e`","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tyxiangs"},"content":"Example: `mark 1`","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tyxiangs"},"content":"Expected Outcome: Dave will mark the specified task as done and update the task list accordingly.","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tyxiangs"},"content":"```","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tyxiangs"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tyxiangs"},"content":"  [T][X] Buy groceries","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tyxiangs"},"content":"## Unmarking Tasks","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tyxiangs"},"content":"If you need to unmark a task that was previously marked as done, you can easily undo this action.","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tyxiangs"},"content":"Usage: To unmark a task, use the following command format:","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tyxiangs"},"content":"Command Format: `unmark \u003ctask number\u003e`","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tyxiangs"},"content":"Example: `unmark 1`","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tyxiangs"},"content":"Expected Outcome: Dave will unmark the specified task and return it to the list of pending tasks.","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tyxiangs"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tyxiangs"},"content":"  [T][ ] Buy groceries","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tyxiangs"},"content":"```","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tyxiangs"},"content":"## Deleting Tasks","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tyxiangs"},"content":"If a task is no longer needed, you can delete it from the task list.","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tyxiangs"},"content":"Usage: To delete a task, use the following command format:","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tyxiangs"},"content":"Command Format: `delete \u003ctask number\u003e`","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tyxiangs"},"content":"Example: `delete 2`","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tyxiangs"},"content":"Expected Outcome: The task will be removed from the list, and Dave will confirm the deletion by displaying the updated task list.","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tyxiangs"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tyxiangs"},"content":"  [D][ ] Submit assignment (by: Sep 20 2024)","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tyxiangs"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tyxiangs"},"content":"## Finding Tasks","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tyxiangs"},"content":"To quickly search for tasks containing a specific keyword, Dave offers a find command.","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tyxiangs"},"content":"Usage: To find tasks, use the following command format:","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tyxiangs"},"content":"Command Format: `find \u003ckeyword\u003e`","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tyxiangs"},"content":"Example: `find meeting`","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tyxiangs"},"content":"Expected Outcome: Dave will display a list of tasks that contain the specified keyword.","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tyxiangs"},"content":"```","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tyxiangs"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tyxiangs"},"content":"  1. [E][ ] Attend meeting (at: Sep 21 2024 10:00 AM)","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tyxiangs"},"content":"```","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tyxiangs"},"content":"## Listing All Tasks","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"tyxiangs"},"content":"To view all tasks that are currently tracked by Dave, use the list command.","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"tyxiangs"},"content":"Usage: To display the full list of saved tasks, use the following command format:","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"tyxiangs"},"content":"Command Format: `list`","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"tyxiangs"},"content":"Example: `list`","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"tyxiangs"},"content":"Expected Outcome: Dave will display the full list of tasks, including their status (whether they are marked as done or pending).","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"tyxiangs"},"content":"```","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"tyxiangs"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"tyxiangs"},"content":"  1. [T][ ] Buy groceries","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"tyxiangs"},"content":"  2. [E][ ] Attend meeting (at: Sep 21 2024 10:00 AM)","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"tyxiangs"},"content":"  3. [T][ ] Complete project report","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"tyxiangs"},"content":"```","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"tyxiangs"},"content":"## Exiting Dave","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"tyxiangs"},"content":"When you\u0027re done, you can exit the application by using the exit command.","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"tyxiangs"},"content":"Usage: To exit, use the following command format:","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"tyxiangs"},"content":"Command Format: `bye`","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"tyxiangs"},"content":"Example: `bye`","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"tyxiangs"},"content":"Expected Outcome: Dave will exit.","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"tyxiangs"},"content":"```","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"tyxiangs"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"tyxiangs"},"content":"```","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"tyxiangs"},"content":"## Adding Reminders","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"tyxiangs"},"content":"Dave allows users to receive reminders for either all undone tasks or overdue tasks. This feature helps ensure that you stay on top of your pending tasks.","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"tyxiangs"},"content":"Usage: To call a reminder, use one of the following command formats:","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"tyxiangs"},"content":"Command Format:","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"tyxiangs"},"content":"`reminder all` - Shows all undone tasks.","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"tyxiangs"},"content":"`reminder overdue` - Shows only overdue tasks.","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"tyxiangs"},"content":"Example: ","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"tyxiangs"},"content":"`reminder all`","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"tyxiangs"},"content":"`reminder overdue`","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"tyxiangs"},"content":"Expected Outcome: ","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"tyxiangs"},"content":"When you use the reminder all command, Dave will display a list of all tasks that are not yet completed. This list includes any tasks, to-dos, deadlines, or events that you haven’t marked as done, regardless of their due date. Dave will provide this list as a gentle reminder to keep track of all ongoing tasks.","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"tyxiangs"},"content":"When you use the reminder overdue command, Dave will display only those tasks whose deadlines have already passed but are still marked as incomplete. This allows you to prioritize tasks that need immediate attention. It’s a prompt to focus on any missed deadlines and take action before it’s too late.","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"tyxiangs"},"content":"For all undone tasks:","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"tyxiangs"},"content":"```","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"tyxiangs"},"content":"Hmmmm. Time is ticking. You still have the following tasks that haven\u0027t been completed:","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"tyxiangs"},"content":"  [D][ ] Submit assignment (by: Sep 20 2024)","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"tyxiangs"},"content":"  [T][ ] Buy groceries","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"tyxiangs"},"content":"```","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"tyxiangs"},"content":"For overdue undone tasks:","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"tyxiangs"},"content":"```","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"tyxiangs"},"content":"Can you get to work? You still have the following tasks that haven\u0027t been completed, and they\u0027re overdue:","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"tyxiangs"},"content":"  [D][ ] Submit assignment (by: Sep 15 2024)","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"tyxiangs"},"content":"```","lastModifiedDate":"2024-09-20","isFullCredit":false}],"authorContributionMap":{"tyxiangs":184,"-":22}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"    @FXML","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"    @FXML","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"     * Constructor for DialogBox. Takes in text and image to populate the dialog box.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"     * @param text Text to be displayed.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"     * @param img Image to represent the speaker.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"        assert text !\u003d null : \"Text should not be null\"; // Ensure text is not null","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"        assert img !\u003d null : \"Image should not be null\"; // Ensure image is not null","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"        try {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"            System.err.println(\"Error loading DialogBox FXML: \" + e.getMessage()); // Avoid using empty catch blocks","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"        // Ensure dialog and displayPicture are properly initialized","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"        assert dialog !\u003d null : \"Dialog label should have been initialized\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"        assert displayPicture !\u003d null : \"Display picture should have been initialized\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tyxiangs"},"content":"    private void flip() {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tyxiangs"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tyxiangs"},"content":"        assert tmp !\u003d null : \"DialogBox children list should not be null\"; // Ensure children list is valid","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tyxiangs"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tyxiangs"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tyxiangs"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tyxiangs"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tyxiangs"},"content":"     * Creates a user dialog with the specified text and image.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tyxiangs"},"content":"     * @param text Text for the user dialog.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tyxiangs"},"content":"     * @param img Image representing the user.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tyxiangs"},"content":"     * @return DialogBox for the user.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tyxiangs"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tyxiangs"},"content":"        assert text !\u003d null \u0026\u0026 !text.isEmpty() : \"User dialog text should not be null or empty\"; // Ensure text is valid","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tyxiangs"},"content":"        assert img !\u003d null : \"User image should not be null\"; // Ensure image is valid","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tyxiangs"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tyxiangs"},"content":"     * Creates a Duke dialog with the specified text and image. The dialog is flipped","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tyxiangs"},"content":"     * so that the image is on the left and the text is on the right.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tyxiangs"},"content":"     * @param text Text for the Duke dialog.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tyxiangs"},"content":"     * @param img Image representing Duke.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tyxiangs"},"content":"     * @return DialogBox for Duke.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tyxiangs"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tyxiangs"},"content":"        assert text !\u003d null \u0026\u0026 !text.isEmpty() : \"Duke dialog text should not be null or empty\"; // Ensure text is valid","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tyxiangs"},"content":"        assert img !\u003d null : \"Duke image should not be null\"; // Ensure image is valid","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tyxiangs"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tyxiangs"},"content":"        db.flip();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tyxiangs"},"content":"        return db;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-09-08","isFullCredit":false}],"authorContributionMap":{"tyxiangs":93}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"public class Launcher {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"     * The main method that serves as the entry point for the application.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"     * @param args Command-line arguments passed to the application.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"        assert args !\u003d null : \"Command-line arguments should not be null\"; // Assert that the arguments are not null","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-09-08","isFullCredit":false}],"authorContributionMap":{"tyxiangs":17}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"import dave.Dave;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"public class Main extends Application {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"    private Dave dave \u003d new Dave(\"C:\\\\Users\\\\thamy\\\\OneDrive\\\\data\\\\daveData.txt\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"        try {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"            assert dave !\u003d null : \"Dave instance should be initialized\"; // Assert that dave is initialized","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"            assert ap !\u003d null : \"AnchorPane should have been loaded\"; // Assert that the layout was successfully loaded","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"            MainWindow controller \u003d fxmlLoader.\u003cMainWindow\u003egetController();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"            assert controller !\u003d null : \"MainWindow controller should be initialized\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"            // Assert controller initialization","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"            controller.setDave(dave); // inject the Duke instance","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"            controller.showWelcomeMessage();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"            stage.setMinWidth(640);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"            stage.show();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-09-08","isFullCredit":false}],"authorContributionMap":{"tyxiangs":45}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"import dave.Dave;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":" * Controller for the main GUI.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":" * This class is responsible for handling user input, interacting with the Duke instance (called Dave),","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":" * and updating the user interface.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"    @FXML","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"    @FXML","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"    @FXML","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"    @FXML","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"    private Dave dave;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"userImage.png\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"dukeImage.png\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"     * Initializes the MainWindow by binding the scroll pane\u0027s vertical value to the dialog container\u0027s height","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"     * and setting the scroll behavior.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"     * Ensures the scroll pane adapts to the height and automatically scrolls down when new content is added.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"    @FXML","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"        assert scrollPane !\u003d null : \"ScrollPane should not be null\"; // Assert that scrollPane is initialized","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"        assert dialogContainer !\u003d null : \"DialogContainer should not be null\"; // Assert that dialogContainer is initialized","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"        dialogContainer.setFillWidth(true);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"     * Injects the Duke (Dave) instance into the controller.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"     * This allows the MainWindow to interact with the Duke instance for task management.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"     * @param d The Dave instance that handles tasks and processes user commands.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tyxiangs"},"content":"    public void setDave(Dave d) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tyxiangs"},"content":"        assert d !\u003d null : \"Dave instance should not be null\"; // Assert that a valid Dave instance is passed","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tyxiangs"},"content":"        dave \u003d d;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tyxiangs"},"content":"     * Handles user input by creating dialog boxes for both the user\u0027s input and Dave\u0027s response.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tyxiangs"},"content":"     * Adds the dialog boxes to the dialog container and clears the user input field after processing.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tyxiangs"},"content":"     * This method is triggered when the user clicks the \"Send\" button or presses enter.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tyxiangs"},"content":"    @FXML","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tyxiangs"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tyxiangs"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tyxiangs"},"content":"        assert input !\u003d null \u0026\u0026 !input.isEmpty() : \"User input should not be null or empty\"; // Assert input is valid","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tyxiangs"},"content":"        String response \u003d dave.getResponse(input);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tyxiangs"},"content":"        assert response !\u003d null : \"Response from Dave should not be null\"; // Assert response is valid","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tyxiangs"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tyxiangs"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tyxiangs"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tyxiangs"},"content":"        );","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tyxiangs"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tyxiangs"},"content":"     * Displays a welcome message and lists the available commands to the user when the application starts.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tyxiangs"},"content":"     * This message is displayed in a dialog box within the GUI.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tyxiangs"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tyxiangs"},"content":"        String welcomeMessage \u003d \"Welcome to Dave!\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tyxiangs"},"content":"                + \"Here are the missions we accept:\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tyxiangs"},"content":"                + \"- todo \u003ctask description\u003e: Add a ToDo task\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tyxiangs"},"content":"                + \"- deadline \u003ctask description\u003e /by \u003cdate\u003e: Add a Deadline task\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tyxiangs"},"content":"                + \"- event \u003ctask description\u003e /from \u003cstart time\u003e /to \u003cend time\u003e: Add an Event task\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tyxiangs"},"content":"                + \"- list: View all tasks\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tyxiangs"},"content":"                + \"- mark \u003ctask number\u003e: Mark a task as done\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tyxiangs"},"content":"                + \"- unmark \u003ctask number\u003e: Unmark a task\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tyxiangs"},"content":"                + \"- delete \u003ctask number\u003e: Delete a task\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tyxiangs"},"content":"                + \"- find \u003ckeyword\u003e: Find tasks that match the keyword\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tyxiangs"},"content":"                + \"- bye: Exit the program\\n\"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tyxiangs"},"content":"                + \"- reminder all: Check undone task\\n\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tyxiangs"},"content":"                + \"- reminder overdue: Check undone overdue task\\n\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tyxiangs"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tyxiangs"},"content":"                DialogBox.getDukeDialog(welcomeMessage, dukeImage)","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tyxiangs"},"content":"        );","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-09-08","isFullCredit":false}],"authorContributionMap":{"tyxiangs":104}},{"path":"src/main/java/dave/Dave.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package dave;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"import dave.command.Command;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"import dave.exceptions.InvalidCommandException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"import dave.exceptions.InvalidDescriptionException;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"import dave.parser.Parser;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"import dave.storage.Storage;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"import dave.task.TaskList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"import dave.ui.Ui;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":" * The main class for the Dave application.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":" * It is responsible for initializing components such as the task list, storage, and user interface,","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":" * and providing responses to user input by processing commands.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"public class Dave {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"    private final Storage storage;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"    private final TaskList tasks;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"    private final Ui ui;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"    private final String filePath;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"     * Constructs a Dave instance, initializing the user interface, task list, and storage components.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"     * @param filePath The file path where tasks will be stored and loaded from.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"    public Dave(String filePath) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"        assert filePath !\u003d null","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"                \u0026\u0026 !filePath.isEmpty() : \"File path should not be null or empty\"; // Ensure valid file path","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"        this.storage \u003d new Storage(filePath, this.tasks);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"        assert storage !\u003d null : \"Storage should be initialized\"; // Ensure storage is initialized","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"        assert tasks !\u003d null : \"Task list should be initialized\"; // Ensure task list is initialized","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"        assert ui !\u003d null : \"UI should be initialized\"; // Ensure UI is initialized","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"     * Processes user input and gets the appropriate response by executing the corresponding command.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"     * @param input The user input.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"     * @return The response generated by executing the command or error messages if any exceptions occur.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"        assert input !\u003d null \u0026\u0026 !input.isEmpty() : \"Input should not be null or empty\"; // Ensure valid input","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"        try {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tyxiangs"},"content":"            assert c !\u003d null : \"Parsed command should not be null\"; // Ensure the command is valid","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tyxiangs"},"content":"            return c.execute(tasks, storage, ui);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tyxiangs"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tyxiangs"},"content":"            return e.getMessage(); // Return message for invalid command","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tyxiangs"},"content":"        } catch (InvalidDescriptionException e) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tyxiangs"},"content":"            return e.getMessage(); // Return message for invalid task description","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tyxiangs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tyxiangs"},"content":"            return \"An error occurred while trying to write to the file.\"; // Handle IO exceptions","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tyxiangs"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tyxiangs"},"content":"            return \"Unexpected error occurred.\"; // Catch-all for unexpected errors","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"tyxiangs":67}},{"path":"src/main/java/dave/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package dave.command;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"import dave.storage.Storage;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"import dave.task.Task;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"import dave.task.TaskList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"import dave.ui.Ui;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":" * Represents the command to add a new task to the task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":" * This command adds the task, provides feedback to the user, and saves the updated list to storage.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"    private final Task task;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"     * Constructs an {@code AddCommand} with the specified task to be added.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"     * @param task The task to be added to the task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"     * Executes the command to add a task to the task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"     * It adds the task to the list, saves the updated list to the storage, and provides feedback to the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"     * @param tasks   The {@code TaskList} containing the tasks.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"     * @param storage The {@code Storage} object to handle saving the updated task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"     * @param ui      The {@code Ui} object to handle user interaction.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"     * @return A {@code String} message confirming that the task has been added successfully.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"     * @throws IOException If an input or output error occurs while saving the task.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) throws IOException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"        // Adding assertions for safety checks","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"        assert task !\u003d null : \"Task should not be null.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"        assert tasks !\u003d null : \"TaskList should not be null.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"        assert storage !\u003d null : \"Storage should not be null.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"        assert ui !\u003d null : \"Ui should not be null.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"        try {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"            tasks.addTask(task);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"            String output \u003d \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"                    + task + \"\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"                    + \"Now you have \" + tasks.getSize() + \" tasks in the list.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"            storage.amendFile(task); // Ensure amendFile is accessed via the correct instance","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"            return output;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"            return \"An error occurred while saving the task to the file.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"            return \"An unexpected error occurred while adding the task.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"tyxiangs":57}},{"path":"src/main/java/dave/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package dave.command;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"import dave.storage.Storage;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"import dave.task.TaskList;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"import dave.ui.Ui;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":" * Represents an abstract command in the Dave application.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":" * Each command will inherit from this class and implement its own behavior","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":" * by overriding the {@code execute} method.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"public abstract class Command {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"     * Executes the command.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"     * This method must be implemented by any class that inherits from {@code Command}.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"     * It defines the actions to be performed when the command is run.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"     * @param tasks   The {@code TaskList} containing all the tasks.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"     * @param storage The {@code Storage} object to handle saving and loading tasks.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"     * @param ui      The {@code Ui} object to handle user interaction.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"     * @throws IOException If an I/O error occurs during the execution of the command.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"    public abstract String execute(TaskList tasks, Storage storage, Ui ui) throws IOException;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"     * Determines if the command is an exit command.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"     * By default, this method returns {@code false}. Classes that represent","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"     * an exit command should override this method to return {@code true}.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"     * @return {@code true} if this command is an exit command; {@code false} otherwise.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"        return false;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"     * Checks that the essential objects required for the command are not null.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"     * This method can be used in subclasses to ensure that the necessary components","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"     * are available before proceeding with command execution.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"     * @param tasks   The {@code TaskList} object containing tasks.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"     * @param storage The {@code Storage} object handling data persistence.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"     * @param ui      The {@code Ui} object handling user interaction.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"    protected void assertComponents(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"        assert tasks !\u003d null : \"TaskList should not be null.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"        assert storage !\u003d null : \"Storage should not be null.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"        assert ui !\u003d null : \"Ui should not be null.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"tyxiangs":53}},{"path":"src/main/java/dave/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package dave.command;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"import dave.storage.Storage;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"import dave.task.Task;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"import dave.task.TaskList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"import dave.ui.Ui;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":" * Represents the command to delete a task from the task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":" * This command removes the task from the list, provides feedback to the user, and saves the updated list to storage.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"    private int index;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"     * Constructs a {@code DeleteCommand} with the specified index of the task to be deleted.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"     * @param index The index of the task to be deleted in the task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"     * Executes the command to delete a task from the task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"     * It removes the task from the list, saves the updated list to the storage, and provides feedback to the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"     * @param tasks   The {@code TaskList} containing the tasks.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"     * @param storage The {@code Storage} object to handle saving the updated task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"     * @param ui      The {@code Ui} object to handle user interaction.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"     * @return A {@code String} message confirming that the task has been deleted successfully,","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"     * @throws IOException If an input or output error occurs while saving the task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) throws IOException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"        // Adding assertions for safety checks","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"        assert tasks !\u003d null : \"TaskList should not be null.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"        assert storage !\u003d null : \"Storage should not be null.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"        assert ui !\u003d null : \"Ui should not be null.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"        assert index \u003e\u003d 0 : \"Task index should be non-negative.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"        try {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"            Task task \u003d tasks.getTask(index);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"            tasks.deleteTask(index);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"            String output \u003d \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"                    + task + \"\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"                    + \"Now you have \" + tasks.getSize() + \" tasks in the list.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"            storage.saveFile(tasks);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"            return output;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"            ui.showLine();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"            return \"Oh no! You have entered an invalid number. Please try again.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tyxiangs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tyxiangs"},"content":"            ui.showLine();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tyxiangs"},"content":"            return \"An error occurred while saving the task to the file.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tyxiangs"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tyxiangs"},"content":"            ui.showLine();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tyxiangs"},"content":"            return \"An unexpected error occurred while deleting the task.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"tyxiangs":63}},{"path":"src/main/java/dave/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package dave.command;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"import dave.storage.Storage;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"import dave.task.TaskList;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"import dave.ui.Ui;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":" * Represents the command to exit the application.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":" * This command outputs a farewell message and signals the application to terminate.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"     * Executes the exit command.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"     * This method outputs a farewell message to the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"     * @param tasks   The {@code TaskList} containing the tasks (not used in this command).","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"     * @param storage The {@code Storage} object to handle saving the task list (not used in this command).","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"     * @param ui      The {@code Ui} object to handle user interaction.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"     * @return A {@code String} message confirming the application is exiting.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"        // Adding assertions for null checks","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"        assert tasks !\u003d null : \"TaskList should not be null.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"        assert storage !\u003d null : \"Storage should not be null.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"        assert ui !\u003d null : \"Ui should not be null.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"     * Indicates whether this command causes the application to exit.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"     * @return {@code true} since this command exits the application.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"        return true;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"tyxiangs":41}},{"path":"src/main/java/dave/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package dave.command;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"import java.util.List;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"import dave.storage.Storage;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"import dave.task.Task;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"import dave.task.TaskList;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"import dave.ui.Ui;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":" * Represents a command to find tasks with a keyword in the task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":" * The command searches the task descriptions for matches with the given keyword.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"     * The keyword to search for in task descriptions.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"    private String keyword;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"     * Creates a new FindCommand with the specified keyword.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"     * @param description The keyword used to search for tasks in the task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"    public FindCommand(String description) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"        assert description !\u003d null \u0026\u0026 !description.isBlank() : \"Keyword should not be null or empty\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"        this.keyword \u003d description;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"     * Executes the find command. It searches the tasks in the provided TaskList","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"     * for those that match the keyword and returns a formatted string of results.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"     * @param tasks   The TaskList to search for matching tasks.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"     * @param storage The Storage instance, not used in this command.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"     * @param ui      The Ui instance for user interactions, not used in this command.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"     * @return A String of tasks that match the keyword.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"        assert tasks !\u003d null : \"TaskList should not be null.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"        assert tasks.getSize() \u003e\u003d 0 : \"TaskList size should be non-negative.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"        assert keyword !\u003d null \u0026\u0026 !keyword.isBlank() : \"Keyword should not be null or empty.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"            List\u003cTask\u003e matchingTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"            if (matchingTasks.isEmpty()) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"                return \"No tasks found matching: \" + keyword;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"            }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"            return matchingTasks.stream()","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"                    .map(Task::toString)","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"                    .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tyxiangs"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tyxiangs"},"content":"            return \"Unexpected error occurred: \" + e.getMessage();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"tyxiangs":59}},{"path":"src/main/java/dave/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package dave.command;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"import dave.storage.Storage;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"import dave.task.TaskList;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"import dave.ui.Ui;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":" * Represents the command to list all tasks in the task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":" * This command displays all the tasks currently stored in the task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"     * Executes the list command.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"     * This method returns all the tasks in the task list, numbered sequentially.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"     * @param tasks   The {@code TaskList} containing the tasks to be displayed.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"     * @param storage The {@code Storage} object to handle saving the task list (not used in this command).","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"     * @param ui      The {@code Ui} object to handle user interaction (not used in this command).","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"     * @return A string representation of all tasks in the task list.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"        assert tasks !\u003d null : \"Task list should not be null.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"        assert tasks.getSize() \u003e\u003d 0 : \"Task list size should be non-negative.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"        StringBuilder taskListString \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"            taskListString.append((i + 1)).append(\". \").append(tasks.getTask(i)).append(\"\\n\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"        return taskListString.toString().trim(); // Trim to remove the trailing new line","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"tyxiangs":33}},{"path":"src/main/java/dave/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package dave.command;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"import dave.storage.Storage;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"import dave.task.Task;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"import dave.task.TaskList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"import dave.ui.Ui;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":" * Represents the command to mark a task as done in the task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":" * This command modifies the task\u0027s status to indicate completion.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"    private final int taskIndex;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"     * Constructs a {@code MarkCommand} with the specified task index.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"     * @param taskIndex The index of the task to be marked as done (1-based index).","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"        assert taskIndex \u003e 0 : \"Task index must be positive.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"     * Executes the command to mark a task as done in the task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"     * It updates the task\u0027s status, saves the updated task list to the storage, and returns feedback to the user.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"     * @param tasks   The {@code TaskList} containing the tasks.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"     * @param storage The {@code Storage} object to handle saving the updated task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"     * @param ui      The {@code Ui} object to handle user interaction.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"     * @return A string message indicating the result of the operation.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"        assert tasks !\u003d null : \"Task list should not be null.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"        assert storage !\u003d null : \"Storage should not be null.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"        try {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"            Task task \u003d tasks.getTask(taskIndex - 1);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"            task.markAsDone();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"            Storage.saveFile(tasks);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n\" + task;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"            return \"Oh no! You have entered an invalid number. Please try again.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"            return \"An error occurred while saving the task to the file.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"            return \"An unexpected error occurred while marking the task.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"tyxiangs":55}},{"path":"src/main/java/dave/command/ReminderCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package dave.command;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"import dave.exceptions.InvalidDescriptionException;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"import dave.storage.Storage;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"import dave.task.Task;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"import dave.task.TaskList;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"import dave.ui.Ui;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":" * Represents a command that reminds the user of undone tasks in the task list.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":" * It can list either all undone tasks or only the overdue tasks based on the user\u0027s input.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"public class ReminderCommand extends Command {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"    private String reminderTaskType;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"     * Enum to represent valid reminder types, either \u0027overdue\u0027 for overdue tasks","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"     * or \u0027all\u0027 for all undone tasks.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"    public enum ReminderType {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"        overdue, all","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"     * Constructs a ReminderCommand with the specified reminder type.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"     * Validates the reminder type to ensure it\u0027s either \u0027overdue\u0027 or \u0027all\u0027.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"     * @param reminderTaskType The type of reminder: either \u0027overdue\u0027 or \u0027all\u0027.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"     * @throws InvalidDescriptionException if the reminderTaskType is invalid.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"    public ReminderCommand(String reminderTaskType) throws InvalidDescriptionException {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"        // Validate reminderTaskType using the enum","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"        try {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"            ReminderType.valueOf(reminderTaskType);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"            this.reminderTaskType \u003d reminderTaskType;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"            throw new InvalidDescriptionException(\"Invalid reminder type provided. Use \u0027overdue\u0027 or \u0027all\u0027 as valid types.\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"     * Executes the reminder command, returning a list of undone tasks based on the reminder type.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"     * If the reminder type is \u0027overdue\u0027, only overdue undone tasks will be displayed.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"     * If the reminder type is \u0027all\u0027, all undone tasks will be displayed.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"     * @param tasks   The {@code TaskList} containing the tasks to be displayed.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"     * @param storage The {@code Storage} object to handle saving the task list (not used in this command).","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"     * @param ui      The {@code Ui} object to handle user interaction (not used in this command).","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"     * @return A string representation of all undone or overdue tasks in the task list.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"     * @throws IllegalStateException if an unexpected reminder task type is encountered (should not occur due to validation in the constructor).","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tyxiangs"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tyxiangs"},"content":"        assert tasks !\u003d null : \"Task list should not be null.\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tyxiangs"},"content":"        assert tasks.getSize() \u003e\u003d 0 : \"Task list size should be non-negative.\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tyxiangs"},"content":"        String str;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tyxiangs"},"content":"        ArrayList\u003cTask\u003e undoneTasks;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tyxiangs"},"content":"        // Choose the appropriate task list based on the reminderTaskType","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tyxiangs"},"content":"        if (\"overdue\".equals(reminderTaskType)) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tyxiangs"},"content":"            undoneTasks \u003d tasks.findUndoneDeadlineTasks();","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tyxiangs"},"content":"            str \u003d \"Can you get to work? You still have the following tasks that haven\u0027t been completed, and they\u0027re overdue:\\n\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tyxiangs"},"content":"        } else if (\"all\".equals(reminderTaskType)) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tyxiangs"},"content":"            undoneTasks \u003d tasks.findUndoneTasks();","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tyxiangs"},"content":"            str \u003d \"Hmmmm. Time is ticking. You still have the following tasks that haven\u0027t been completed:\\n\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tyxiangs"},"content":"        } else {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tyxiangs"},"content":"            throw new IllegalStateException(\"Unexpected reminder task type: \" + reminderTaskType);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tyxiangs"},"content":"        if (undoneTasks.isEmpty()) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tyxiangs"},"content":"            return \"I can\u0027t believe you didn\u0027t leave any tasks undone!\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tyxiangs"},"content":"        return str + String.join(\"\\n\", undoneTasks.stream()","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tyxiangs"},"content":"                .map(Task::toString)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tyxiangs"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-09-14","isFullCredit":false}],"authorContributionMap":{"tyxiangs":80}},{"path":"src/main/java/dave/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package dave.command;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"import dave.storage.Storage;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"import dave.task.Task;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"import dave.task.TaskList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"import dave.ui.Ui;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":" * Represents the command to unmark a task as not done in the task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":" * This command modifies the task\u0027s status to indicate it is not completed.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"    private final int taskIndex;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"     * Constructs an {@code UnmarkCommand} with the specified task index.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"     * @param taskIndex The index of the task to be unmarked as not done (1-based index).","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"        assert taskIndex \u003e 0 : \"Task index must be positive.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"     * Executes the command to unmark a task as not done in the task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"     * It updates the task\u0027s status, saves the updated task list to the storage, and returns feedback to the user.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"     * @param tasks   The {@code TaskList} containing the tasks.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"     * @param storage The {@code Storage} object to handle saving the updated task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"     * @param ui      The {@code Ui} object to handle user interaction.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"     * @return A string message indicating the result of the operation.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"        assert tasks !\u003d null : \"Task list should not be null.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"        assert storage !\u003d null : \"Storage should not be null.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"        try {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"            Task task \u003d tasks.getTask(taskIndex - 1);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"            task.markAsNotDone();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"            Storage.saveFile(tasks);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"            return \"Ok, I\u0027ve marked this task as not done yet:\\n\" + task;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"            return \"Oh no! You have entered an invalid number. Please try again.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"            return \"An error occurred while saving the task to the file.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"            return \"An unexpected error occurred while marking the task.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"tyxiangs":54}},{"path":"src/main/java/dave/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package dave.exceptions;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":" * The {@code InvalidCommandException} class represents an exception that is thrown","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":" * when the user inputs an unrecognized or invalid command in the Dave application.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"     * Constructs an {@code InvalidCommandException} with the specified detail message.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"     * @param message The detail message, saved for later retrieval by the {@link Throwable#getMessage()} method.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"        super(message);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"tyxiangs":17}},{"path":"src/main/java/dave/exceptions/InvalidDateTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package dave.exceptions;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":" * The {@code InvalidDateTimeFormatException} class represents an exception that is thrown","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":" * when the user provides an incorrectly formatted date or time in the Dave application.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"public class InvalidDateTimeFormatException extends Exception {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"     * Constructs an {@code InvalidDateTimeFormatException} with the specified detail message.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"     * @param message The detail message, saved for later retrieval by the {@link Throwable#getMessage()} method.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"    public InvalidDateTimeFormatException(String message) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"        super(message);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"tyxiangs":17}},{"path":"src/main/java/dave/exceptions/InvalidDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package dave.exceptions;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":" * The {@code InvalidDescriptionException} class represents an exception that is thrown","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":" * when the user provides an invalid or incomplete description for a task in the Dave application.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"public class InvalidDescriptionException extends Exception {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"     * Constructs an {@code InvalidDescriptionException} with the specified detail message.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"     * @param message The detail message, saved for later retrieval by the {@link Throwable#getMessage()} method.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"    public InvalidDescriptionException(String message) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"        super(message);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false}],"authorContributionMap":{"tyxiangs":18}},{"path":"src/main/java/dave/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package dave.parser;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"import java.util.function.Function;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"import dave.command.AddCommand;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"import dave.command.Command;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"import dave.command.DeleteCommand;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"import dave.command.ExitCommand;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"import dave.command.FindCommand;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"import dave.command.ListCommand;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"import dave.command.MarkCommand;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"import dave.command.ReminderCommand;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"import dave.command.UnmarkCommand;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"import dave.exceptions.InvalidCommandException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"import dave.exceptions.InvalidDateTimeFormatException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"import dave.exceptions.InvalidDescriptionException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"import dave.task.Deadline;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"import dave.task.Event;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"import dave.task.Todo;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":" * The {@code Parser} class is responsible for interpreting and processing user input commands.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":" * It determines which type of task the command refers to and creates the corresponding command object.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"public class Parser {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"     * Enum representing different task types or commands that the parser can handle.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"    public enum TaskType {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"        bye, list, mark, unmark, todo, deadline, event, delete, find, reminder","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"     * Parses the user\u0027s input command and returns the appropriate {@code Command} object based on the task type.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"     * @param fullCommand The full string command input provided by the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"     * @return The corresponding {@code Command} object for the input command.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"     * @throws InvalidCommandException if the command is not recognized.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"     * @throws InvalidDescriptionException if the command arguments are invalid.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"    public static Command parse(String fullCommand) throws InvalidCommandException, InvalidDescriptionException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"        assert fullCommand !\u003d null \u0026\u0026 !fullCommand.isEmpty() : \"User input should not be null or empty\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"        String[] commandParts \u003d splitCommand(fullCommand);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"        String commandWord \u003d commandParts[0];","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"        String commandArgs \u003d commandParts[1]; // Now properly extracted even if empty","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"        TaskType taskType \u003d getTaskType(commandWord);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"        return handleTaskType(taskType, commandArgs); // Refactored handling logic","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tyxiangs"},"content":"     * Splits the full command into command word and command arguments.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tyxiangs"},"content":"     * @param fullCommand The user\u0027s full input command.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tyxiangs"},"content":"     * @return A string array with the command word and the arguments.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tyxiangs"},"content":"    private static String[] splitCommand(String fullCommand) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tyxiangs"},"content":"        String[] commandParts \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tyxiangs"},"content":"        String commandArgs \u003d commandParts.length \u003e 1 ? commandParts[1] : \"\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tyxiangs"},"content":"        return new String[]{commandParts[0], commandArgs}; // Ensure both parts are always present","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tyxiangs"},"content":"     * Handles the task type processing based on the provided task type.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tyxiangs"},"content":"     * @param taskType The task type derived from the command word.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tyxiangs"},"content":"     * @param commandArgs The arguments passed along with the command.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tyxiangs"},"content":"     * @return The corresponding {@code Command} object.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tyxiangs"},"content":"     * @throws InvalidDescriptionException if the task arguments are invalid.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tyxiangs"},"content":"    private static Command handleTaskType(TaskType taskType, String commandArgs) throws InvalidDescriptionException, InvalidCommandException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tyxiangs"},"content":"        assert taskType !\u003d null : \"TaskType should not be null at this point\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tyxiangs"},"content":"        switch (taskType) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tyxiangs"},"content":"        case todo:","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tyxiangs"},"content":"            return new AddCommand(new Todo(commandArgs));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tyxiangs"},"content":"        case deadline:","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tyxiangs"},"content":"            return handleDeadline(commandArgs);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tyxiangs"},"content":"        case event:","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tyxiangs"},"content":"            return handleEvent(commandArgs);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tyxiangs"},"content":"        case delete:","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tyxiangs"},"content":"            return handleNumberCommand(commandArgs, DeleteCommand::new);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tyxiangs"},"content":"        case mark:","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tyxiangs"},"content":"            return handleNumberCommand(commandArgs, MarkCommand::new);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tyxiangs"},"content":"        case unmark:","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tyxiangs"},"content":"            return handleNumberCommand(commandArgs, UnmarkCommand::new);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tyxiangs"},"content":"        case find:","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tyxiangs"},"content":"            return new FindCommand(commandArgs);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tyxiangs"},"content":"        case list:","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tyxiangs"},"content":"            return new ListCommand();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tyxiangs"},"content":"        case bye:","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tyxiangs"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tyxiangs"},"content":"        case reminder:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tyxiangs"},"content":"            return new ReminderCommand(commandArgs);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tyxiangs"},"content":"        default:","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tyxiangs"},"content":"            throw new InvalidCommandException(\"Unsupported command type.\");","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tyxiangs"},"content":"     * Handles the deadline command and wraps potential date-time parsing exceptions.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tyxiangs"},"content":"     * @param commandArgs The arguments for the deadline task.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tyxiangs"},"content":"     * @return A new {@code AddCommand} with a {@code Deadline} task.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tyxiangs"},"content":"     * @throws InvalidDescriptionException if date-time format is invalid.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tyxiangs"},"content":"    private static Command handleDeadline(String commandArgs) throws InvalidDescriptionException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tyxiangs"},"content":"        try {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tyxiangs"},"content":"            return new AddCommand(new Deadline(commandArgs));","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tyxiangs"},"content":"        } catch (InvalidDescriptionException e) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tyxiangs"},"content":"            throw new InvalidDescriptionException(e.getMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tyxiangs"},"content":"     * Handles the event command and wraps potential date-time parsing exceptions.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tyxiangs"},"content":"     * @param commandArgs The arguments for the event task.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tyxiangs"},"content":"     * @return A new {@code AddCommand} with an {@code Event} task.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tyxiangs"},"content":"     * @throws InvalidDescriptionException if date-time format is invalid.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tyxiangs"},"content":"    private static Command handleEvent(String commandArgs) throws InvalidDescriptionException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tyxiangs"},"content":"        try {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tyxiangs"},"content":"            return new AddCommand(new Event(commandArgs));","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tyxiangs"},"content":"        } catch (InvalidDateTimeFormatException e) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tyxiangs"},"content":"            throw new InvalidDescriptionException(e.getMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"tyxiangs"},"content":"     * Gets the {@code TaskType} based on the user\u0027s command word.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"tyxiangs"},"content":"     * @param commandWord The command word input by the user (e.g., \"todo\", \"deadline\").","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"tyxiangs"},"content":"     * @return The corresponding {@code TaskType}.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"tyxiangs"},"content":"     * @throws InvalidCommandException if the command word does not match any known task type.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"tyxiangs"},"content":"    private static TaskType getTaskType(String commandWord) throws InvalidCommandException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"tyxiangs"},"content":"        try {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"tyxiangs"},"content":"            return TaskType.valueOf(commandWord);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"tyxiangs"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"tyxiangs"},"content":"            throw new InvalidCommandException(","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"tyxiangs"},"content":"                    \"Are you joking? Here are the missions I accept: todo, deadline, event, list, mark, unmark, delete, find, bye\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"tyxiangs"},"content":"     * Handles commands that require numerical arguments (such as mark, unmark, delete) and ensures proper formatting.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"tyxiangs"},"content":"     * @param commandArgs The string containing the numerical argument for the command.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"tyxiangs"},"content":"     * @param constructor A function that constructs the command using the integer argument.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"tyxiangs"},"content":"     * @return The constructed {@code Command} object.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"tyxiangs"},"content":"     * @throws InvalidDescriptionException If the numerical argument is improperly formatted or missing.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"tyxiangs"},"content":"    private static Command handleNumberCommand(String commandArgs, Function\u003cInteger, Command\u003e constructor) throws InvalidDescriptionException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"tyxiangs"},"content":"        try {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"tyxiangs"},"content":"            return constructor.apply(Integer.parseInt(commandArgs));","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"tyxiangs"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"tyxiangs"},"content":"            throw new InvalidDescriptionException(\"Please provide a valid number.\");","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"tyxiangs":164}},{"path":"src/main/java/dave/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package dave.storage;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"import java.io.File;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"import dave.exceptions.InvalidDateTimeFormatException;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"import dave.exceptions.InvalidDescriptionException;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"import dave.task.Deadline;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"import dave.task.Event;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"import dave.task.Task;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"import dave.task.TaskList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"import dave.task.Todo;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":" * The Storage class handles the loading and saving of tasks to and from a file.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"public class Storage {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"    private static String filePath;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"     * Constructs a Storage object and loads tasks from the specified file into the given TaskList.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"     * @param filePath The file path to load tasks from and save tasks to.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"     * @param taskList The TaskList to populate with tasks loaded from the file.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"    public Storage(String filePath, TaskList taskList) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"        assert filePath !\u003d null \u0026\u0026 !filePath.isEmpty() : \"File path must not be null or empty\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"        Storage.filePath \u003d filePath;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"        loadTasks(taskList);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"     * Loads tasks from the file and populates the TaskList.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"     * @param taskList The TaskList to populate with tasks.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"    private void loadTasks(TaskList taskList) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"        try {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"            taskList.setTaskList(loadFile());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"            System.out.println(\"Error occurred while loading tasks: \" + e.getMessage());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"     * Saves the given TaskList to the file.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"     * @param dataList The TaskList containing tasks to be saved.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tyxiangs"},"content":"    public static void saveFile(TaskList dataList) throws IOException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tyxiangs"},"content":"        File fileObj \u003d createFile();","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tyxiangs"},"content":"        writeTasksToFile(dataList, fileObj);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tyxiangs"},"content":"     * Creates the file if it doesn\u0027t already exist.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tyxiangs"},"content":"     * @return The File object for the file path.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tyxiangs"},"content":"     * @throws IOException If an I/O error occurs while creating the file.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tyxiangs"},"content":"    private static File createFile() throws IOException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tyxiangs"},"content":"        assert filePath !\u003d null : \"File path must not be null\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tyxiangs"},"content":"        File fileObj \u003d new File(filePath);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tyxiangs"},"content":"        fileObj.getParentFile().mkdirs();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tyxiangs"},"content":"        if (!fileObj.exists()) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tyxiangs"},"content":"            fileObj.createNewFile();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tyxiangs"},"content":"        return fileObj;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tyxiangs"},"content":"     * Writes tasks from the TaskList to the specified file.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tyxiangs"},"content":"     * @param dataList The TaskList containing tasks to be written to the file.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tyxiangs"},"content":"     * @param fileObj  The File object representing the file to be written to.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tyxiangs"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tyxiangs"},"content":"    private static void writeTasksToFile(TaskList dataList, File fileObj) throws IOException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tyxiangs"},"content":"        try (FileWriter fw \u003d new FileWriter(fileObj)) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tyxiangs"},"content":"            for (int i \u003d 0; i \u003c dataList.getSize(); i++) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tyxiangs"},"content":"                fw.write(dataList.getTask(i).write());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tyxiangs"},"content":"            }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tyxiangs"},"content":"     * Clears the contents of the file.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tyxiangs"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tyxiangs"},"content":"    public static void clearFile() throws IOException {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tyxiangs"},"content":"        writeToFile(\"\");","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tyxiangs"},"content":"     * Writes content to the file, overwriting the existing contents.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tyxiangs"},"content":"     * @param content The content to be written to the file.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tyxiangs"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tyxiangs"},"content":"    private static void writeToFile(String content) throws IOException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tyxiangs"},"content":"        assert filePath !\u003d null : \"File path must not be null\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tyxiangs"},"content":"        try (FileWriter fw \u003d new FileWriter(filePath, false)) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tyxiangs"},"content":"            fw.write(content);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tyxiangs"},"content":"     * Appends a task to the file.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tyxiangs"},"content":"     * @param task The Task to be appended to the file.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tyxiangs"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tyxiangs"},"content":"    public static void amendFile(Task task) throws IOException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tyxiangs"},"content":"        assert filePath !\u003d null : \"File path must not be null\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tyxiangs"},"content":"        File fileObj \u003d createFile();","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tyxiangs"},"content":"        try (FileWriter fw \u003d new FileWriter(fileObj, true)) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tyxiangs"},"content":"            fw.write(task.write());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tyxiangs"},"content":"     * Loads tasks from the file and returns them as an ArrayList.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tyxiangs"},"content":"     * @return An ArrayList of tasks loaded from the file.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"tyxiangs"},"content":"     * @throws IOException If an I/O error occurs while reading from the file.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"tyxiangs"},"content":"    public ArrayList\u003cTask\u003e loadFile() throws IOException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"tyxiangs"},"content":"        assert filePath !\u003d null : \"File path must not be null\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"tyxiangs"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"tyxiangs"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"tyxiangs"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"tyxiangs"},"content":"            return tasks; // Return empty list if file doesn\u0027t exist","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"tyxiangs"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"tyxiangs"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"tyxiangs"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"tyxiangs"},"content":"                Task task \u003d parseTask(line);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"tyxiangs"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"tyxiangs"},"content":"                    tasks.add(task);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"tyxiangs"},"content":"                }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"tyxiangs"},"content":"            }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"tyxiangs"},"content":"        return tasks;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"tyxiangs"},"content":"     * Parses a task from a line of text from the file.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"tyxiangs"},"content":"     * @param line The line of text representing a task.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"tyxiangs"},"content":"     * @return The parsed Task.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"tyxiangs"},"content":"     * @throws IOException If an error occurs while parsing the task.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"tyxiangs"},"content":"    private Task parseTask(String line) throws IOException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"tyxiangs"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"tyxiangs"},"content":"        String taskType \u003d parts[0].trim();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"tyxiangs"},"content":"        boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"tyxiangs"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"tyxiangs"},"content":"        try {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"tyxiangs"},"content":"            return createTask(taskType, isDone, description, parts);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"tyxiangs"},"content":"        } catch (InvalidDateTimeFormatException | InvalidDescriptionException e) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"tyxiangs"},"content":"            System.out.println(\"Error occurred while loading task: \" + e.getMessage());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"tyxiangs"},"content":"            return null;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"tyxiangs"},"content":"     * Creates a task based on the task type and parsed data.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"tyxiangs"},"content":"     * @param taskType    The type of the task (T, D, or E).","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"tyxiangs"},"content":"     * @param isDone      Whether the task is marked as done.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"tyxiangs"},"content":"     * @param description The task description.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"tyxiangs"},"content":"     * @param parts       Additional parts of the task for deadlines or events.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"tyxiangs"},"content":"     * @return The created Task.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"tyxiangs"},"content":"     * @throws IOException                    If an I/O error occurs while creating the task.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"tyxiangs"},"content":"     * @throws InvalidDescriptionException    If the description is invalid.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"tyxiangs"},"content":"     * @throws InvalidDateTimeFormatException If the date or time format is invalid.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"tyxiangs"},"content":"    private Task createTask(String taskType, boolean isDone, String description, String[] parts)","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"tyxiangs"},"content":"            throws IOException, InvalidDescriptionException, InvalidDateTimeFormatException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"tyxiangs"},"content":"        switch (taskType) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"tyxiangs"},"content":"        case \"T\":","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"tyxiangs"},"content":"            return createTodoTask(description, isDone);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"tyxiangs"},"content":"        case \"D\":","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"tyxiangs"},"content":"            return createDeadlineTask(description, isDone, parts[3]);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"tyxiangs"},"content":"        case \"E\":","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"tyxiangs"},"content":"            return createEventTask(description, isDone, parts[3]);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"tyxiangs"},"content":"        default:","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"tyxiangs"},"content":"            throw new IOException(\"Unrecognized task type: \" + taskType);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"tyxiangs"},"content":"    private Todo createTodoTask(String description, boolean isDone) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"tyxiangs"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"tyxiangs"},"content":"        if (isDone) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"tyxiangs"},"content":"            todo.markAsDone();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"tyxiangs"},"content":"        return todo;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"tyxiangs"},"content":"    private Deadline createDeadlineTask(String description, boolean isDone, String datePart)","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"tyxiangs"},"content":"            throws InvalidDateTimeFormatException, InvalidDescriptionException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"tyxiangs"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"tyxiangs"},"content":"        LocalDateTime dueDate \u003d LocalDateTime.parse(datePart.trim(), formatter);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"tyxiangs"},"content":"        Deadline deadline \u003d new Deadline(description + \" /by \"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"tyxiangs"},"content":"                + dueDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")));","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"tyxiangs"},"content":"        if (isDone) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"tyxiangs"},"content":"            deadline.markAsDone();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"tyxiangs"},"content":"        return deadline;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"tyxiangs"},"content":"    private Event createEventTask(String description, boolean isDone, String eventPart)","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"tyxiangs"},"content":"            throws InvalidDateTimeFormatException, InvalidDescriptionException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"tyxiangs"},"content":"        String[] eventParts \u003d eventPart.split(\" - \");","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"tyxiangs"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"tyxiangs"},"content":"        LocalDateTime fromDate \u003d LocalDateTime.parse(eventParts[0], formatter);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"tyxiangs"},"content":"        Event event \u003d new Event(description + \" /from \"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"tyxiangs"},"content":"                + fromDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")) + \" /to \" + eventParts[1]);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"tyxiangs"},"content":"        if (isDone) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"tyxiangs"},"content":"            event.markAsDone();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"tyxiangs"},"content":"        return event;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"tyxiangs":234}},{"path":"src/main/java/dave/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package dave.task;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"import dave.exceptions.InvalidDescriptionException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":" * Represents a deadline task. A deadline task contains a description and a due date/time.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":" * It inherits from the Task class.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"    /** The due date and time of the task */","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"    private final LocalDateTime dueDateTime;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"     * Constructs a Deadline task with the specified description and due date/time.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"     * @param description The description of the deadline task, which includes the due date and time.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"     * @throws InvalidDescriptionException If the format of the description is invalid.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"    public Deadline(String description) throws InvalidDescriptionException {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"        super(description.split(\"/by \")[0].trim());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"        String[] arguments \u003d description.split(\"/by \");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"        if (arguments.length \u003c 2 || arguments[1].trim().isEmpty()) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"            throw new InvalidDescriptionException(\"Huh! Please provide a deadline task in the format: \"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"                    + \"\u003ctask\u003e /by yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"        // Try parsing the dueDateTime directly in yyyy-MM-dd HHmm format","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"        this.dueDateTime \u003d parseDateTime(arguments[1].trim());","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"     * Parses the provided date and time string into a LocalDateTime.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"     * @param dateTime The date and time string in yyyy-MM-dd HHmm format.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"     * @return The parsed LocalDateTime.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"     * @throws InvalidDescriptionException If the date and time format is incorrect.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"    private LocalDateTime parseDateTime(String dateTime) throws InvalidDescriptionException {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"            return LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"            throw new InvalidDescriptionException(\"Invalid date/time format. \"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"                    + \"Please use yyyy-MM-dd HHmm (e.g., 2024-09-14 1800)\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tyxiangs"},"content":"     * Returns the due date and time of the task.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tyxiangs"},"content":"     * @return The due date and time as a {@code LocalDateTime}.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tyxiangs"},"content":"    public LocalDateTime getDueDateTime() {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tyxiangs"},"content":"        return dueDateTime;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tyxiangs"},"content":"     * Converts the deadline into a string format that is suitable for saving to a file.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tyxiangs"},"content":"     * @return The formatted string representing the deadline task.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tyxiangs"},"content":"    public String write() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tyxiangs"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tyxiangs"},"content":"        String formattedDateTime \u003d dueDateTime !\u003d null ? dueDateTime.format(formatter) : \"unknown date\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tyxiangs"},"content":"        return String.format(\"D | %d | %s | %s\\n\", this.getIsDone() ? 1 : 0,","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tyxiangs"},"content":"                this.getDescription(), formattedDateTime);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tyxiangs"},"content":"     * Returns the string representation of the deadline task for display purposes.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tyxiangs"},"content":"     * @return The string representation of the deadline task.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tyxiangs"},"content":"    public String toString() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tyxiangs"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tyxiangs"},"content":"        String formattedDateTime \u003d dueDateTime !\u003d null ? dueDateTime.format(formatter) : \"unknown date\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tyxiangs"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDateTime + \")\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"tyxiangs":87}},{"path":"src/main/java/dave/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package dave.task;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"import dave.exceptions.InvalidDateTimeFormatException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"import dave.exceptions.InvalidDescriptionException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":" * Represents an event task. An event task contains a description, a start date and time,","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":" * and an end time. It inherits from the Task class.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"    /** The date the event starts */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"    private final LocalDate fromDate;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"    /** The time the event starts */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"    private final LocalTime fromTime;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"    /** The time the event ends */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"    private final LocalTime toTime;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"     * Creates an event task with the specified description, start date/time, and end time.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"     * @param description The description of the event task, which includes the start and end times.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"     * @throws InvalidDescriptionException If the format of the description is invalid.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"     * @throws InvalidDateTimeFormatException If the date or time is not in the required format.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"    public Event(String description) throws InvalidDescriptionException, InvalidDateTimeFormatException {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"        super(description.split(\"/from\")[0].trim());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"Event description must not be null or empty\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"        String[] arguments \u003d description.split(\"/from \");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"        if (arguments.length \u003c 2 || arguments[1].trim().isEmpty()) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"            throw new InvalidDescriptionException(\"Huh! Please provide an event \"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"                    + \"in the format: \u003ctask\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"        String[] timeParts \u003d arguments[1].split(\" /to \");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"        if (timeParts.length \u003c 2) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"            throw new InvalidDescriptionException(\"Huh! Please provide a valid time range \"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"                    + \"in the format: from \u003cstart date\u003e \u003cstart time\u003e /to \u003cend time\u003e\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"        String[] fromParts \u003d timeParts[0].trim().split(\" \");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"        if (fromParts.length \u003c 2) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"            throw new InvalidDescriptionException(\"Huh! Please provide a valid time range \"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"                    + \"in the format: from \u003cstart date\u003e \u003cstart time\u003e /to \u003cend time\u003e\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tyxiangs"},"content":"        this.fromDate \u003d parseDate(fromParts[0]);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tyxiangs"},"content":"        this.fromTime \u003d parseTime(fromParts[1]);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tyxiangs"},"content":"        this.toTime \u003d parseTime(timeParts[1].trim());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tyxiangs"},"content":"     * Parses the provided date string into a LocalDate.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tyxiangs"},"content":"     * @param date The date string in yyyy-MM-dd format.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tyxiangs"},"content":"     * @return The parsed LocalDate.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tyxiangs"},"content":"     * @throws InvalidDateTimeFormatException If the date is in an incorrect format.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tyxiangs"},"content":"    private LocalDate parseDate(String date) throws InvalidDateTimeFormatException {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tyxiangs"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tyxiangs"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tyxiangs"},"content":"            return LocalDate.parse(date, formatter);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tyxiangs"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tyxiangs"},"content":"            throw new InvalidDateTimeFormatException(\"Invalid date format. Please use yyyy-MM-dd\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tyxiangs"},"content":"    public LocalDateTime getFromDateTime() {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tyxiangs"},"content":"        // If dueTime is null, we assume the deadline is at midnight (00:00).","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tyxiangs"},"content":"        LocalTime time \u003d (fromTime !\u003d null) ? fromTime : LocalTime.MIDNIGHT;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tyxiangs"},"content":"        return LocalDateTime.of(fromDate, time);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tyxiangs"},"content":"     * Returns the start date of the event.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tyxiangs"},"content":"     * @return The start date as a {@code LocalDate}.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tyxiangs"},"content":"    public LocalDate getFromDate() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tyxiangs"},"content":"        return fromDate;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tyxiangs"},"content":"     * Returns the start time of the event.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tyxiangs"},"content":"     * @return The start time as a {@code LocalTime}.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tyxiangs"},"content":"    public LocalTime getFromTime() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tyxiangs"},"content":"        return fromTime;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tyxiangs"},"content":"     * Returns the end time of the event.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tyxiangs"},"content":"     * @return The end time as a {@code LocalTime}.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tyxiangs"},"content":"    public LocalTime getToTime() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tyxiangs"},"content":"        return toTime;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tyxiangs"},"content":"     * Parses the provided time string into a LocalTime.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tyxiangs"},"content":"     * @param time The time string in HHmm format.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tyxiangs"},"content":"     * @return The parsed LocalTime.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tyxiangs"},"content":"     * @throws InvalidDateTimeFormatException If the time is in an incorrect format.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tyxiangs"},"content":"    private LocalTime parseTime(String time) throws InvalidDateTimeFormatException {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tyxiangs"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tyxiangs"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tyxiangs"},"content":"            return LocalTime.parse(time, timeFormatter);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tyxiangs"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tyxiangs"},"content":"            throw new InvalidDateTimeFormatException(\"Invalid time format. Please use HHmm (e.g., 1800 for 6:00 PM)\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tyxiangs"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tyxiangs"},"content":"     * Converts the event into a string format that is suitable for saving to a file.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tyxiangs"},"content":"     * @return The formatted string representing the event.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tyxiangs"},"content":"    public String write() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"tyxiangs"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"tyxiangs"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"tyxiangs"},"content":"        String fromDateString \u003d fromDate !\u003d null ? fromDate.format(dateFormatter) : \"unknown date\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"tyxiangs"},"content":"        String fromTimeString \u003d fromTime !\u003d null ? fromTime.format(timeFormatter) : \"no specific time\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"tyxiangs"},"content":"        String toTimeString \u003d toTime !\u003d null ? toTime.format(timeFormatter) : \"no specific time\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"tyxiangs"},"content":"        return String.format(\"E | %d | %s | %s %s - %s\\n\", this.getIsDone() ? 1 : 0,","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"tyxiangs"},"content":"                this.getDescription(), fromDateString, fromTimeString, toTimeString);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"tyxiangs"},"content":"     * Returns the string representation of the event task for display purposes.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"tyxiangs"},"content":"     * @return The string representation of the event task.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"tyxiangs"},"content":"    public String toString() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"tyxiangs"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"tyxiangs"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"tyxiangs"},"content":"        String fromDateString \u003d fromDate !\u003d null ? fromDate.format(dateFormatter) : \"unknown date\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"tyxiangs"},"content":"        String fromTimeString \u003d fromTime !\u003d null ? fromTime.format(timeFormatter) : \"\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"tyxiangs"},"content":"        String toTimeString \u003d toTime !\u003d null ? toTime.format(timeFormatter) : \"\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"tyxiangs"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + fromDateString + \" \" + fromTimeString","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"tyxiangs"},"content":"                + \" to: \" + toTimeString + \")\";","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"tyxiangs":156}},{"path":"src/main/java/dave/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package dave.task;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":" * Represents a task that has a description and a completion status.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":" * This is an abstract class and is meant to be extended by specific task types.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"public abstract class Task {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"    /** The description of the task */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"    private String description;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"    /** The status of whether the task is done or not */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"    private boolean isDone;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"     * Constructs a Task with the given description. The task is initially marked as not done.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"Task description should not be null or empty\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"     * Retrieves the current status of the task.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"     * @return \"X\" if the task is done, otherwise a blank space.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"    public String getStatus() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"     * Converts the task into a string format suitable for saving to a file.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"     * This is an abstract method that must be implemented by subclasses.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"     * @return A string representation of the task for saving.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tyxiangs"},"content":"    public abstract String write();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tyxiangs"},"content":"     * Returns the status of the task indicating if it is done or not.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tyxiangs"},"content":"     * @return {@code true} if the task is marked as done, {@code false} otherwise.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tyxiangs"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tyxiangs"},"content":"        return this.isDone;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tyxiangs"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tyxiangs"},"content":"     * @return The description of the task as a {@code String}.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tyxiangs"},"content":"    public String getDescription() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tyxiangs"},"content":"        return this.description;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tyxiangs"},"content":"     * Returns the string representation of the task for display purposes.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tyxiangs"},"content":"     * @return A formatted string showing the status and description of the task.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tyxiangs"},"content":"    public String toString() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tyxiangs"},"content":"        return String.format(\"[%s] %s\", getStatus(), description);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"tyxiangs":85}},{"path":"src/main/java/dave/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package dave.task;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":" * Represents a list of tasks. The TaskList class allows for adding, removing,","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":" * and accessing tasks in a list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"public class TaskList {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"    /** The list of tasks stored in this TaskList */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"     * Creates an empty TaskList.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"    public TaskList() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"     * Sets the task list with a new list of tasks.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"     * @param inputTasks the new list of tasks to be set.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"    public void setTaskList(ArrayList\u003cTask\u003e inputTasks) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"        assert inputTasks !\u003d null : \"Input task list should not be null\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"        this.tasks \u003d inputTasks;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"     * @param task the task to be added.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"        assert task !\u003d null : \"Task being added should not be null\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"        tasks.add(task);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"     * Deletes a task from the task list based on its index.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"     * @param index the index of the task to be deleted.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index out of bounds\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tyxiangs"},"content":"     * Retrieves a task from the task list by its index.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tyxiangs"},"content":"     * @param index the index of the task to be retrieved.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tyxiangs"},"content":"     * @return the task at the specified index.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tyxiangs"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tyxiangs"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index out of bounds\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tyxiangs"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tyxiangs"},"content":"     * Gets the number of tasks in the task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tyxiangs"},"content":"     * @return the size of the task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tyxiangs"},"content":"    public int getSize() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tyxiangs"},"content":"        return tasks.size();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tyxiangs"},"content":"     * Retrieves all the tasks in the task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tyxiangs"},"content":"     * @return an ArrayList containing all the tasks.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tyxiangs"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tyxiangs"},"content":"        return tasks;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tyxiangs"},"content":"     * Finds tasks that contain the specified keyword in their description.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tyxiangs"},"content":"     * Iterates through the list of tasks and checks if the task\u0027s string representation","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tyxiangs"},"content":"     * contains the given keyword. If a match is found, the task is added to the list of","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tyxiangs"},"content":"     * matching tasks.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tyxiangs"},"content":"     * @param keyword The keyword to search for in the task descriptions.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tyxiangs"},"content":"     * @return An {@code ArrayList} of tasks that contain the keyword in their description.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tyxiangs"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tyxiangs"},"content":"        assert keyword !\u003d null \u0026\u0026 !keyword.trim().isEmpty() : \"Keyword should not be null or empty\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tyxiangs"},"content":"        return tasks.stream()","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tyxiangs"},"content":"                .filter(task -\u003e task.toString().contains(keyword))","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tyxiangs"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tyxiangs"},"content":"     * Finds and returns a list of undone tasks that are deadlines.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tyxiangs"},"content":"     * This method filters the tasks by checking if they are marked as deadlines","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tyxiangs"},"content":"     * (denoted by the \"[D]\" symbol at the start of the task\u0027s string representation)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tyxiangs"},"content":"     * and whether they are not marked as done.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tyxiangs"},"content":"     * The result is collected into a new ArrayList.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tyxiangs"},"content":"     * @return an ArrayList containing tasks that are deadlines and are not completed.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tyxiangs"},"content":"    public ArrayList\u003cTask\u003e findUndoneDeadlineTasks() {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tyxiangs"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tyxiangs"},"content":"        return tasks.stream()","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tyxiangs"},"content":"                .filter(task -\u003e task instanceof Deadline)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tyxiangs"},"content":"                .filter(task -\u003e !task.getIsDone())","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tyxiangs"},"content":"                .filter(task -\u003e ((Deadline) task).getDueDateTime().isBefore(now))","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tyxiangs"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tyxiangs"},"content":"     * Finds and returns a list of undone tasks that are deadlines.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tyxiangs"},"content":"     * This method filters the tasks by checking if they are not marked as done.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tyxiangs"},"content":"     * The result is collected into a new ArrayList.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tyxiangs"},"content":"     * @return an ArrayList containing tasks that are not completed.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tyxiangs"},"content":"    public ArrayList\u003cTask\u003e findUndoneTasks() {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tyxiangs"},"content":"        return tasks.stream()","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tyxiangs"},"content":"                .filter(task -\u003e !task.getIsDone())","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tyxiangs"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"tyxiangs":132}},{"path":"src/main/java/dave/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package dave.task;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":" * Represents a Todo task. A Todo task contains a description and a completion status.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":" * It inherits from the Task class.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"    /** Stores the formatted statement for writing to file */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"    private String statement;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"     * Constructs a Todo task with the specified description.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"        super(description);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"Description of Todo cannot be null or empty\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"     * Converts the Todo task into a string format that is suitable for saving to a file.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"     * @return The formatted string representing the Todo task.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"    public String write() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"        statement \u003d String.format(\"T | %d | %s\\n\", this.getIsDone() ? 1 : 0, this.getDescription());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"        return statement;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"     * Returns the string representation of the Todo task for display purposes.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"     * @return The string representation of the Todo task.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"    public String toString() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"tyxiangs":41}},{"path":"src/main/java/dave/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"package dave.ui;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":" * Handles user interaction, input, and output in the console for the Dave program.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"public class Ui {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"     * Represents the logo for the Dave application.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"    private static final String LOGO \u003d \" ____    _    __     ______\\n\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"            + \"|  _ \\\\  / \\\\   \\\\ \\\\   / / ___|\\n\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"            + \"| | | |/ _ \\\\   \\\\ \\\\ / /|  _|\\n\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"            + \"| |_| / ___ \\\\   \\\\ V / | |___\\n\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"            + \"|____/_/   \\\\_\\\\   \\\\_/  |_____|\\n\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"     * Constructs a new {@code Ui} object with a scanner for reading user input.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"    public Ui() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"     * Displays the welcome message and the logo of the application.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"        showLine();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"        System.out.println(\"Hello! I\u0027m Dave.\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"        showLine();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"     * Displays a horizontal line as a separator in the console output.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"    public void showLine() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"     * Displays an error message in the console.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"    public void showError(String message) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"        System.out.println(message);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"     * Reads and returns the user\u0027s input command from the console.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tyxiangs"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tyxiangs"},"content":"     * @return The input string from the user.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tyxiangs"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tyxiangs"},"content":"    public String readCommand() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tyxiangs"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"tyxiangs":61}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"                \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"                \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false}],"authorContributionMap":{"tyxiangs":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"        \u003c!-- User Input TextField --\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"        \u003c!-- Send Button --\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"        \u003c!-- ScrollPane to contain dialog boxes --\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"                    AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"                    AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"                \u003c!-- VBox to dynamically hold dialog boxes --\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" spacing\u003d\"10\" /\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false}],"authorContributionMap":{"tyxiangs":27}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"import dave.exceptions.InvalidDateTimeFormatException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"import dave.exceptions.InvalidDescriptionException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"import dave.task.Deadline;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":" * Test class for {@code Deadline}.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"    @Test","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"    public void testDeadlineCreation_validDateTime()","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"            throws InvalidDescriptionException, InvalidDateTimeFormatException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report /by 2024-08-02 1800\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"        LocalDate expectedDate \u003d LocalDate.of(2024, 8, 2);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"        LocalTime expectedTime \u003d LocalTime.of(18, 0);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"        assertEquals(expectedDate, deadline.getDueDate());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"        assertEquals(expectedTime, deadline.getDueTime());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"    @Test","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"    public void testDeadlineCreation_invalidDate() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"        assertThrows(InvalidDateTimeFormatException.class, () -\u003e {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"            new Deadline(\"Submit report /by 02-08-2024 1800\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"        });","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"    @Test","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"    public void testDeadlineCreation_invalidTime() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"        assertThrows(InvalidDateTimeFormatException.class, () -\u003e {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"            new Deadline(\"Submit report /by 2024-08-02 18:00\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"        });","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"    public void testDeadlineCreation_missingByKeyword() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"        assertThrows(InvalidDescriptionException.class, () -\u003e {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"            new Deadline(\"Submit report 2024-08-02 1800\"); // Missing \u0027/by\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"        });","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"    @Test","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"    public void testDeadlineToString()","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tyxiangs"},"content":"            throws InvalidDescriptionException, InvalidDateTimeFormatException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tyxiangs"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report /by 2024-08-02 1800\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tyxiangs"},"content":"        String expectedString \u003d \"[D][ ] Submit report (by: Aug 02 2024 18:00)\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tyxiangs"},"content":"        assertEquals(expectedString, deadline.toString());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tyxiangs"},"content":"        deadline.markAsDone();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tyxiangs"},"content":"        expectedString \u003d \"[D][X] Submit report (by: Aug 02 2024 18:00)\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tyxiangs"},"content":"        assertEquals(expectedString, deadline.toString());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tyxiangs"},"content":"    @Test","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tyxiangs"},"content":"    public void testDeadlineWrite()","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tyxiangs"},"content":"            throws InvalidDescriptionException, InvalidDateTimeFormatException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tyxiangs"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report /by 2024-08-02 1800\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tyxiangs"},"content":"        String expectedOutput \u003d \"D | 0 | Submit report | Aug 02 2024 1800\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tyxiangs"},"content":"        assertEquals(expectedOutput, deadline.write());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tyxiangs"},"content":"        deadline.markAsDone();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tyxiangs"},"content":"        expectedOutput \u003d \"D | 1 | Submit report | Aug 02 2024 1800\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tyxiangs"},"content":"        assertEquals(expectedOutput, deadline.write());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"tyxiangs":76}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"import dave.exceptions.InvalidDateTimeFormatException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"import dave.exceptions.InvalidDescriptionException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"import dave.task.Event;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"public class EventTest {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"    @Test","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"    public void testParseDate_validDate() throws InvalidDescriptionException, InvalidDateTimeFormatException {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"        Event event \u003d new Event(\"Meeting /from 2024-08-02 1800 /to 1900\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"        LocalDate expectedDate \u003d LocalDate.of(2024, 8, 2);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"        assertEquals(expectedDate, event.getFromDate());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"    @Test","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"    public void testParseDate_invalidDate() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"        assertThrows(InvalidDateTimeFormatException.class, () -\u003e {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"            new Event(\"Meeting /from 09-02-2024 1800 /to 1900\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"        });","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"    @Test","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"    public void testParseTime_validTime() throws InvalidDescriptionException, InvalidDateTimeFormatException {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"        Event event \u003d new Event(\"Meeting /from 2024-08-02 1800 /to 1900\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"        LocalTime expectedTime \u003d LocalTime.of(18, 0);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"        assertEquals(expectedTime, event.getFromTime());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"    public void testEventCreation_missingFromKeyword() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"        assertThrows(InvalidDescriptionException.class, () -\u003e {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"            new Event(\"Meeting 2024-08-02 1800 /to 1900\"); // Missing \u0027/from\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"        });","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tyxiangs"},"content":"    public void testEventCreation_missingToKeyword() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tyxiangs"},"content":"        assertThrows(InvalidDescriptionException.class, () -\u003e {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tyxiangs"},"content":"            new Event(\"Meeting /from 2024-08-02 1800 1900\"); // Missing \u0027/to\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tyxiangs"},"content":"        });","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tyxiangs"},"content":"    @Test","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tyxiangs"},"content":"    public void testParseTime_invalidTime() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tyxiangs"},"content":"        assertThrows(InvalidDateTimeFormatException.class, () -\u003e {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tyxiangs"},"content":"            new Event(\"Meeting /from 2024-08-02 18:00 /to 1900\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tyxiangs"},"content":"        });","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"tyxiangs":57}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tyxiangs"},"content":"import dave.task.Todo;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"public class TodoTest {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tyxiangs"},"content":"    @Test","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tyxiangs"},"content":"    public void testTodoCreation() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"        Todo todo \u003d new Todo(\"Finish assignment\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"        assertEquals(\"Finish assignment\", todo.getDescription());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tyxiangs"},"content":"        assertFalse(todo.getIsDone());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"    @Test","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"        Todo todo \u003d new Todo(\"Finish assignment\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tyxiangs"},"content":"        todo.markAsDone();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"        assertTrue(todo.getIsDone());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"    @Test","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"    public void testTodoToString() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"        Todo todo \u003d new Todo(\"Finish assignment\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"        assertEquals(\"[T][ ] Finish assignment\", todo.toString());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tyxiangs"},"content":"        todo.markAsDone();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tyxiangs"},"content":"        assertEquals(\"[T][X] Finish assignment\", todo.toString());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tyxiangs"},"content":"    @Test","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tyxiangs"},"content":"    public void testTodoWrite() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tyxiangs"},"content":"        Todo todo \u003d new Todo(\"Finish assignment\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tyxiangs"},"content":"        String expectedOutput \u003d \"T | 0 | Finish assignment\\n\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tyxiangs"},"content":"        assertEquals(expectedOutput, todo.write());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tyxiangs"},"content":"        todo.markAsDone();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tyxiangs"},"content":"        expectedOutput \u003d \"T | 1 | Finish assignment\\n\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tyxiangs"},"content":"        assertEquals(expectedOutput, todo.write());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tyxiangs"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tyxiangs"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"tyxiangs":44}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tyxiangs"},"content":"todo borrow book","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tyxiangs"},"content":"list","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tyxiangs"},"content":"bye","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"tyxiangs":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tyxiangs"},"content":"java -classpath ..\\bin Dave \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"tyxiangs":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tyxiangs"},"content":"# Create bin directory if it doesn\u0027t exist","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tyxiangs"},"content":"if [ ! -d \"../bin\" ]; then","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tyxiangs"},"content":"# Delete output from previous run","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tyxiangs"},"content":"if [ -e \"./ACTUAL.TXT\" ]; then","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tyxiangs"},"content":"# Compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tyxiangs"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java; then","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tyxiangs"},"content":"# Run the program, feed commands from input.txt file, and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tyxiangs"},"content":"java -classpath ../bin Dave \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tyxiangs"},"content":"# Convert files to UNIX format (if needed)","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tyxiangs"},"content":"dos2unix ACTUAL.TXT EXPECTED.TXT 2\u003e/dev/null","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tyxiangs"},"content":"# Compare the output to the expected output","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tyxiangs"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tyxiangs"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tyxiangs"},"content":"if [ $diff_exit_code -eq 0 ]; then","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"tyxiangs":14,"-":20}}]
