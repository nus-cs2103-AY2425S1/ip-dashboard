[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"# SigmaBot project template","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wxy2003-xy"},"content":"This is a project template for a greenfield Java project. It\u0027s named so to embody the basedness of the author Wxy2003-xy. Given below are instructions on how to use it.","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wxy2003-xy"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wxy2003-xy"},"content":"3. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wxy2003-xy"},"content":"4. After that, locate the `src/main/java/SigmaBot.java` file, right-click it, and choose `Run SigmaBot.main()` (if the code editor is showing compile errors, try restarting the IDE, anyway that is not my problem). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wxy2003-xy"},"content":"   \u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wxy2003-xy"},"content":"\tHello! I\u0027m SigmaBot","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wxy2003-xy"},"content":"\tWhat can I do for you?","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wxy2003-xy"},"content":"   ——————————————————————————————————————————————————————————————————————————————","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wxy2003-xy"},"content":"   Where you can start dialog with it. (By now it\u0027s not yet very based)","lastModifiedDate":"2024-08-24","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":10,"-":13}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wxy2003-xy"},"content":"    implementation \u0027org.testng:testng:7.1.0\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wxy2003-xy"},"content":"    mainClass.set(\"sigmabot.SigmaBot\")","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wxy2003-xy"},"content":"    archiveBaseName \u003d \"sigmaBot\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":3,"-":39}},{"path":"src/main/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"[T] [X] a","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wxy2003-xy"},"content":"\tDescription: b","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":2}},{"path":"src/main/java/sigmabot/Dialogue.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"package sigmabot;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.command.Command;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.command.Greeting;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.command.ListOperation;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.command.Terminate;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.util.ListReader;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wxy2003-xy"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wxy2003-xy"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wxy2003-xy"},"content":" * The Dialogue class manages the interaction between the user and the chatbot.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wxy2003-xy"},"content":" * It processes user commands and controls the flow of conversation until the user decides to exit.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wxy2003-xy"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wxy2003-xy"},"content":"public class Dialogue {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wxy2003-xy"},"content":"    private static final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wxy2003-xy"},"content":"     * Private constructor to prevent direct instantiation.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wxy2003-xy"},"content":"     * Use the defaultDialogue() method to create a new Dialogue instance.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wxy2003-xy"},"content":"    private Dialogue() {}","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wxy2003-xy"},"content":"     * Creates a new instance of the Dialogue class.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wxy2003-xy"},"content":"     * @return A new Dialogue object.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wxy2003-xy"},"content":"    public static Dialogue defaultDialogue() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wxy2003-xy"},"content":"        return new Dialogue();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wxy2003-xy"},"content":"     * Starts the dialogue session with the user.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wxy2003-xy"},"content":"     * Greets the user and then continuously reads commands from the user until a Terminate command is issued.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wxy2003-xy"},"content":"    public void run() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wxy2003-xy"},"content":"        Greeting.greet();  // Initial greeting to the user","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wxy2003-xy"},"content":"        Command command;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wxy2003-xy"},"content":"        do {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wxy2003-xy"},"content":"            System.out.println(\"Enter a command (/list, /exit): \");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wxy2003-xy"},"content":"            command \u003d readCommand();  // Read the user\u0027s command","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wxy2003-xy"},"content":"            command.execute(scanner);  // Execute the user\u0027s command","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wxy2003-xy"},"content":"        } while (!(command instanceof Terminate));  // Continue until a Terminate command is received","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wxy2003-xy"},"content":"     * Reads a command from the user input.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wxy2003-xy"},"content":"     * The method loops until a valid command is entered by the user.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wxy2003-xy"},"content":"     * @return A Command object that represents the user\u0027s input.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wxy2003-xy"},"content":"    private Command readCommand() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wxy2003-xy"},"content":"        while (true) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wxy2003-xy"},"content":"            String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wxy2003-xy"},"content":"            switch (input) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wxy2003-xy"},"content":"            case \"/exit\":","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wxy2003-xy"},"content":"                return new Terminate();  // Return a Terminate command if the user types \u0027/exit\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wxy2003-xy"},"content":"            case \"/list\":","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wxy2003-xy"},"content":"                return new ListOperation();  // Return a ListOperation command if the user types \u0027/list\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wxy2003-xy"},"content":"            default:","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wxy2003-xy"},"content":"                System.out.println(\"Unknown command. Please enter \u0027/list\u0027 or \u0027/exit\u0027.\");  // Prompt for a valid command if input is unknown","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wxy2003-xy"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wxy2003-xy"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wxy2003-xy"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":66}},{"path":"src/main/java/sigmabot/SigmaBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"package sigmabot;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wxy2003-xy"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wxy2003-xy"},"content":" * The {@code SigmaBot} class serves as the main entry point for the application.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wxy2003-xy"},"content":" * It initializes and starts a dialogue session, allowing the user to interact with the bot.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wxy2003-xy"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wxy2003-xy"},"content":"public class SigmaBot {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wxy2003-xy"},"content":"    private Dialogue dialogue;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wxy2003-xy"},"content":"     * Constructs a new {@code SigmaBot} instance.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wxy2003-xy"},"content":"     * Initializes the dialogue component that manages user interactions.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wxy2003-xy"},"content":"    public SigmaBot() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wxy2003-xy"},"content":"        this.dialogue \u003d Dialogue.defaultDialogue();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wxy2003-xy"},"content":"     * Starts the dialogue session, initiating interaction with the user.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wxy2003-xy"},"content":"    public void start() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wxy2003-xy"},"content":"        this.dialogue.run();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wxy2003-xy"},"content":"     * The main method that serves as the entry point of the application.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wxy2003-xy"},"content":"     * It creates an instance of {@code SigmaBot} and starts the dialogue session.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param args Command-line arguments (not used in this application).","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wxy2003-xy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wxy2003-xy"},"content":"        SigmaBot bot \u003d new SigmaBot();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wxy2003-xy"},"content":"        bot.start();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wxy2003-xy"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":35}},{"path":"src/main/java/sigmabot/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"package sigmabot.command;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wxy2003-xy"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wxy2003-xy"},"content":"public abstract class Command {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wxy2003-xy"},"content":"    public abstract void execute(Scanner sc);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wxy2003-xy"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":7}},{"path":"src/main/java/sigmabot/command/Echo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"package sigmabot.command;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.ui.UiComponent;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wxy2003-xy"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wxy2003-xy"},"content":"public class Echo extends Command {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wxy2003-xy"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wxy2003-xy"},"content":"    public void execute(Scanner sc) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wxy2003-xy"},"content":"        String echoMessage \u003d sc.nextLine().trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wxy2003-xy"},"content":"        System.out.println(echoMessage);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wxy2003-xy"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":12}},{"path":"src/main/java/sigmabot/command/Exit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"package sigmabot.command;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.ui.UiComponent;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wxy2003-xy"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wxy2003-xy"},"content":"public class Exit extends Command {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wxy2003-xy"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wxy2003-xy"},"content":"    public void execute(Scanner sc) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wxy2003-xy"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":12}},{"path":"src/main/java/sigmabot/command/Greeting.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"package sigmabot.command;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wxy2003-xy"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wxy2003-xy"},"content":"public class Greeting extends Command {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wxy2003-xy"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wxy2003-xy"},"content":"    public void execute(Scanner sc) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wxy2003-xy"},"content":"        System.out.println(\"Hello! Welcome to SigmaBot. How can I assist you today?\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wxy2003-xy"},"content":"    public static void greet() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wxy2003-xy"},"content":"        System.out.println(\"Hello! Welcome to SigmaBot. How can I assist you today?\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wxy2003-xy"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":14}},{"path":"src/main/java/sigmabot/command/Joke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"package sigmabot.command;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.ui.UiComponent;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wxy2003-xy"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wxy2003-xy"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wxy2003-xy"},"content":" * The Joke class represents a command that triggers a joke to be told.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wxy2003-xy"},"content":" * It provides the functionality to execute the joke-telling process,","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wxy2003-xy"},"content":" * which, in this case, outputs a joke to the console.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wxy2003-xy"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wxy2003-xy"},"content":"public class Joke extends Command {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wxy2003-xy"},"content":"     * Executes the joke command.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wxy2003-xy"},"content":"     * This method outputs a placeholder joke message to the console.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wxy2003-xy"},"content":"     * The actual implementation can be extended to provide a variety of jokes.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wxy2003-xy"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wxy2003-xy"},"content":"    public void execute(Scanner sc) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wxy2003-xy"},"content":"        System.out.println(\"tell joke\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wxy2003-xy"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":23}},{"path":"src/main/java/sigmabot/command/ListOperation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"package sigmabot.command;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.task.Deadline;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.task.Event;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.task.Task;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.task.Todo;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.util.ListMapWriter;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.util.ListReader;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wxy2003-xy"},"content":"import java.io.File;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wxy2003-xy"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wxy2003-xy"},"content":"import java.util.Map;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wxy2003-xy"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wxy2003-xy"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wxy2003-xy"},"content":" * The {@code ListOperation} class provides functionality for managing a task list.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wxy2003-xy"},"content":" * It includes methods for creating, querying, finding, marking, unmarking, and deleting tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wxy2003-xy"},"content":" * The tasks are read from and written to a file specified by the {@code filePath}.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wxy2003-xy"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wxy2003-xy"},"content":"public class ListOperation extends Command {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wxy2003-xy"},"content":"    private ListReader reader \u003d new ListReader();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wxy2003-xy"},"content":"    private ListMapWriter writer \u003d new ListMapWriter();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wxy2003-xy"},"content":"    private String filePath \u003d \"/Users/wxy/Desktop/ip/src/main/data/tasks.txt\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wxy2003-xy"},"content":"    private Map\u003cString, Task\u003e taskList \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wxy2003-xy"},"content":"     * Executes the main command loop, providing options to create, query, mark, unmark, or delete tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wxy2003-xy"},"content":"     * Also loads existing tasks from the file at startup.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param sc The {@code Scanner} object for reading user input.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wxy2003-xy"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wxy2003-xy"},"content":"    public void execute(Scanner sc) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wxy2003-xy"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wxy2003-xy"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wxy2003-xy"},"content":"            System.out.println(\"No tasks file found. A new one will be created upon saving tasks.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wxy2003-xy"},"content":"        } else if (file.length() \u003d\u003d 0) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wxy2003-xy"},"content":"            System.out.println(\"Tasks file is empty. You can create a new task.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wxy2003-xy"},"content":"        } else {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wxy2003-xy"},"content":"            try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wxy2003-xy"},"content":"                taskList.putAll(reader.readTasksFromFile(filePath));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wxy2003-xy"},"content":"                if (taskList.isEmpty()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wxy2003-xy"},"content":"                    System.out.println(\"No tasks found. The file might be corrupted or empty.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wxy2003-xy"},"content":"                } else {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wxy2003-xy"},"content":"                    System.out.println(\"Tasks loaded from file: \" + filePath);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wxy2003-xy"},"content":"                }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wxy2003-xy"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wxy2003-xy"},"content":"                System.out.println(\"An error occurred while reading the tasks file: \" + e.getMessage());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wxy2003-xy"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wxy2003-xy"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wxy2003-xy"},"content":"        while (true) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wxy2003-xy"},"content":"            System.out.println(\"Enter operation command (create, query, find, mark, unmark, delete, exit): \");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wxy2003-xy"},"content":"            if (!sc.hasNextLine()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wxy2003-xy"},"content":"                break;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wxy2003-xy"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wxy2003-xy"},"content":"            String command \u003d sc.nextLine();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wxy2003-xy"},"content":"            switch (command) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wxy2003-xy"},"content":"            case \"create\":","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wxy2003-xy"},"content":"                createNewTask(sc);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wxy2003-xy"},"content":"                break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wxy2003-xy"},"content":"            case \"query\":","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wxy2003-xy"},"content":"                queryTasks();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wxy2003-xy"},"content":"                break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wxy2003-xy"},"content":"            case \"find\":","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wxy2003-xy"},"content":"                findTasks(sc);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wxy2003-xy"},"content":"                break;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wxy2003-xy"},"content":"            case \"mark\":","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wxy2003-xy"},"content":"                handleMarkDone(sc);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wxy2003-xy"},"content":"                break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wxy2003-xy"},"content":"            case \"unmark\":","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wxy2003-xy"},"content":"                handleMarkUndone(sc);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wxy2003-xy"},"content":"                break;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wxy2003-xy"},"content":"            case \"delete\":","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wxy2003-xy"},"content":"                handleDeleteTask(sc);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wxy2003-xy"},"content":"                break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wxy2003-xy"},"content":"            case \"exit\":","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wxy2003-xy"},"content":"                System.out.println(\"Exiting List Operations...\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wxy2003-xy"},"content":"                return;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Wxy2003-xy"},"content":"            default:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Wxy2003-xy"},"content":"                System.out.println(\"Invalid command. Please enter \u0027create\u0027, \u0027query\u0027, \u0027find\u0027, \u0027mark\u0027, \u0027unmark\u0027, \u0027delete\u0027, or \u0027exit\u0027.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Wxy2003-xy"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Wxy2003-xy"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Wxy2003-xy"},"content":"     * Creates a new task based on user input and adds it to the task list.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Wxy2003-xy"},"content":"     * The task list is then saved to the file.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param sc The {@code Scanner} object for reading user input.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Wxy2003-xy"},"content":"    public void createNewTask(Scanner sc) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Wxy2003-xy"},"content":"        while (true) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Wxy2003-xy"},"content":"            System.out.println(\"Enter task type (todo, deadline, event) or \u0027/exit\u0027 to finish: \");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Wxy2003-xy"},"content":"            String input \u003d sc.nextLine().trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Wxy2003-xy"},"content":"            if (input.equalsIgnoreCase(\"/exit\")) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Wxy2003-xy"},"content":"                break;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Wxy2003-xy"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Wxy2003-xy"},"content":"            Task task \u003d null;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Wxy2003-xy"},"content":"            switch (input.toLowerCase()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Wxy2003-xy"},"content":"            case \"todo\":","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Wxy2003-xy"},"content":"                task \u003d Todo.createTodo(sc);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Wxy2003-xy"},"content":"                break;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Wxy2003-xy"},"content":"            case \"deadline\":","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Wxy2003-xy"},"content":"                task \u003d Deadline.createDeadline(sc);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Wxy2003-xy"},"content":"                break;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Wxy2003-xy"},"content":"            case \"event\":","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Wxy2003-xy"},"content":"                task \u003d Event.createEvent(sc);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Wxy2003-xy"},"content":"                break;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Wxy2003-xy"},"content":"            default:","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Wxy2003-xy"},"content":"                System.out.println(\"Invalid task type. Please enter \u0027todo\u0027, \u0027deadline\u0027, or \u0027event\u0027.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Wxy2003-xy"},"content":"                continue;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Wxy2003-xy"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Wxy2003-xy"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Wxy2003-xy"},"content":"                taskList.put(task.getName(), task);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Wxy2003-xy"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Wxy2003-xy"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Wxy2003-xy"},"content":"        System.out.println(\"New tasks added.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Wxy2003-xy"},"content":"        writer.writeMapToFile(taskList, filePath);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Wxy2003-xy"},"content":"     * Displays all tasks in the current task list.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Wxy2003-xy"},"content":"     * If the task list is empty, prompts the user to create a new task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Wxy2003-xy"},"content":"    public void queryTasks() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Wxy2003-xy"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Wxy2003-xy"},"content":"            System.out.println(\"No tasks available. You can create a new task.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Wxy2003-xy"},"content":"        } else {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Wxy2003-xy"},"content":"            System.out.println(\"Current tasks:\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Wxy2003-xy"},"content":"            for (Task task : taskList.values()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Wxy2003-xy"},"content":"                System.out.println(task.toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Wxy2003-xy"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Wxy2003-xy"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Wxy2003-xy"},"content":"     * Finds and displays tasks that contain a specific substring in their names.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param sc The {@code Scanner} object for reading user input.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Wxy2003-xy"},"content":"    public void findTasks(Scanner sc) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Wxy2003-xy"},"content":"        System.out.println(\"Enter the substring to search for in task names: \");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Wxy2003-xy"},"content":"        String substring \u003d sc.nextLine().trim().toLowerCase();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Wxy2003-xy"},"content":"        boolean found \u003d false;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Wxy2003-xy"},"content":"        for (Task task : taskList.values()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Wxy2003-xy"},"content":"            if (task.getName().toLowerCase().contains(substring)) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Wxy2003-xy"},"content":"                System.out.println(task.toString());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Wxy2003-xy"},"content":"                found \u003d true;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Wxy2003-xy"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Wxy2003-xy"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Wxy2003-xy"},"content":"        if (!found) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Wxy2003-xy"},"content":"            System.out.println(\"No tasks found containing the substring: \" + substring);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Wxy2003-xy"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Wxy2003-xy"},"content":"   /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Wxy2003-xy"},"content":"     * Marks a specified task as done based on user input.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Wxy2003-xy"},"content":"     * The task list is then saved to the file.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param sc The {@code Scanner} object for reading user input.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Wxy2003-xy"},"content":"    public void markDone(Scanner sc) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Wxy2003-xy"},"content":"        System.out.println(\"Enter the name of the task to mark as done: \");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Wxy2003-xy"},"content":"        String taskName \u003d sc.nextLine().trim();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Wxy2003-xy"},"content":"        Task task \u003d taskList.get(taskName);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Wxy2003-xy"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Wxy2003-xy"},"content":"            task.markDone();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Wxy2003-xy"},"content":"            System.out.println(\"Task \u0027\" + taskName + \"\u0027 marked as done.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Wxy2003-xy"},"content":"        } else {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Wxy2003-xy"},"content":"            System.out.println(\"Task \u0027\" + taskName + \"\u0027 not found.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Wxy2003-xy"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Wxy2003-xy"},"content":"        writer.writeMapToFile(taskList, filePath);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Wxy2003-xy"},"content":"     * Marks a specified task as undone based on user input.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Wxy2003-xy"},"content":"     * The task list is then saved to the file.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param sc The {@code Scanner} object for reading user input.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Wxy2003-xy"},"content":"    public void markUndone(Scanner sc) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Wxy2003-xy"},"content":"        System.out.println(\"Enter the name of the task to mark as undone: \");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Wxy2003-xy"},"content":"        String taskName \u003d sc.nextLine().trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Wxy2003-xy"},"content":"        Task task \u003d taskList.get(taskName);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Wxy2003-xy"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Wxy2003-xy"},"content":"            task.markUndone();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Wxy2003-xy"},"content":"            System.out.println(\"Task \u0027\" + taskName + \"\u0027 marked as undone.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Wxy2003-xy"},"content":"        } else {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Wxy2003-xy"},"content":"            System.out.println(\"Task \u0027\" + taskName + \"\u0027 not found.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Wxy2003-xy"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Wxy2003-xy"},"content":"        writer.writeMapToFile(taskList, filePath);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Wxy2003-xy"},"content":"     * Deletes a specified task based on user input.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Wxy2003-xy"},"content":"     * The task list is then saved to the file.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param sc The {@code Scanner} object for reading user input.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Wxy2003-xy"},"content":"    public void deleteTask(Scanner sc) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Wxy2003-xy"},"content":"        System.out.println(\"Enter the name of the task to delete: \");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Wxy2003-xy"},"content":"        String taskName \u003d sc.nextLine().trim();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Wxy2003-xy"},"content":"        if (taskList.remove(taskName) !\u003d null) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Wxy2003-xy"},"content":"            System.out.println(\"Task \u0027\" + taskName + \"\u0027 deleted.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Wxy2003-xy"},"content":"        } else {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Wxy2003-xy"},"content":"            System.out.println(\"Task \u0027\" + taskName + \"\u0027 not found.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Wxy2003-xy"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Wxy2003-xy"},"content":"        writer.writeMapToFile(taskList, filePath);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Wxy2003-xy"},"content":"     * Handles the process of marking a task as done.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Wxy2003-xy"},"content":"     * Prompts the user to select the task to be marked as done.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param sc The {@code Scanner} object for reading user input.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Wxy2003-xy"},"content":"    private void handleMarkDone(Scanner sc) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Wxy2003-xy"},"content":"        markDone(sc);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Wxy2003-xy"},"content":"     * Handles the process of marking a task as undone.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Wxy2003-xy"},"content":"     * Prompts the user to select the task to be marked as undone.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param sc The {@code Scanner} object for reading user input.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Wxy2003-xy"},"content":"    private void handleMarkUndone(Scanner sc) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Wxy2003-xy"},"content":"        markUndone(sc);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Wxy2003-xy"},"content":"     * Handles the process of deleting a task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Wxy2003-xy"},"content":"     * Prompts the user to select the task to be deleted.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param sc The {@code Scanner} object for reading user input.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Wxy2003-xy"},"content":"    private void handleDeleteTask(Scanner sc) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Wxy2003-xy"},"content":"        deleteTask(sc);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Wxy2003-xy"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":242}},{"path":"src/main/java/sigmabot/command/Terminate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"package sigmabot.command;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wxy2003-xy"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wxy2003-xy"},"content":"public class Terminate extends Command {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wxy2003-xy"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wxy2003-xy"},"content":"    public void execute(Scanner sc) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wxy2003-xy"},"content":"        System.out.println(\"Goodbye!\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wxy2003-xy"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":10}},{"path":"src/main/java/sigmabot/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"package sigmabot.exceptions;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wxy2003-xy"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wxy2003-xy"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wxy2003-xy"},"content":"        super(message);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wxy2003-xy"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":7}},{"path":"src/main/java/sigmabot/exceptions/InvalidTaskTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"package sigmabot.exceptions;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wxy2003-xy"},"content":"public class InvalidTaskTypeException extends SigmaBotExceptions {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wxy2003-xy"},"content":"    public InvalidTaskTypeException(String message) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wxy2003-xy"},"content":"        super(message);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wxy2003-xy"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":7}},{"path":"src/main/java/sigmabot/exceptions/ListNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"package sigmabot.exceptions;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wxy2003-xy"},"content":"public class ListNotFoundException extends SigmaBotExceptions {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wxy2003-xy"},"content":"    public ListNotFoundException(String message) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wxy2003-xy"},"content":"        super(message);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wxy2003-xy"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":7}},{"path":"src/main/java/sigmabot/exceptions/SigmaBotExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"package sigmabot.exceptions;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wxy2003-xy"},"content":"public class SigmaBotExceptions extends Exception {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wxy2003-xy"},"content":"    public SigmaBotExceptions(String message) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wxy2003-xy"},"content":"        super(message);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wxy2003-xy"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":7}},{"path":"src/main/java/sigmabot/exceptions/TaskAlreadyDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"package sigmabot.exceptions;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wxy2003-xy"},"content":"public class TaskAlreadyDoneException extends SigmaBotExceptions {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wxy2003-xy"},"content":"    public TaskAlreadyDoneException(String message) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wxy2003-xy"},"content":"        super(message);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wxy2003-xy"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":7}},{"path":"src/main/java/sigmabot/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"package sigmabot.task;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wxy2003-xy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wxy2003-xy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wxy2003-xy"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wxy2003-xy"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wxy2003-xy"},"content":" * The {@code Deadline} class represents a task that needs to be completed by a specific date.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wxy2003-xy"},"content":" * It extends the {@link Task} class by adding a deadline date to the task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wxy2003-xy"},"content":" * This class provides constructors for creating deadlines and methods for user input creation and string representation.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wxy2003-xy"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wxy2003-xy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wxy2003-xy"},"content":"    private LocalDate byTime;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wxy2003-xy"},"content":"     * Constructs a new {@code Deadline} object with the specified name, description, and deadline date.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param name The name of the deadline task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param byTime The date by which the task needs to be completed.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wxy2003-xy"},"content":"    public Deadline(String name, String description, LocalDate byTime) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wxy2003-xy"},"content":"        super(name, description);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wxy2003-xy"},"content":"        this.byTime \u003d byTime;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wxy2003-xy"},"content":"     * Constructs a new {@code Deadline} object with the specified name, description, deadline date, and completion status.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param name The name of the deadline task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param byTime The date by which the task needs to be completed.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param isDone The completion status of the task. If {@code true}, the task is marked as done; otherwise, it is not done.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wxy2003-xy"},"content":"    public Deadline(String name, String description, LocalDate byTime, boolean isDone) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wxy2003-xy"},"content":"        super(name, description);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wxy2003-xy"},"content":"        this.byTime \u003d byTime;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wxy2003-xy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wxy2003-xy"},"content":"     * Prompts the user to enter the details for a new {@code Deadline} and creates a new {@code Deadline} object.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param sc The {@link Scanner} object used to read user input.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wxy2003-xy"},"content":"     * @return A new {@code Deadline} object created based on user input.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wxy2003-xy"},"content":"    public static Deadline createDeadline(Scanner sc) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wxy2003-xy"},"content":"        System.out.println(\"Enter name: \");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wxy2003-xy"},"content":"        String name \u003d sc.nextLine().trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wxy2003-xy"},"content":"        System.out.println(\"Enter description: \");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wxy2003-xy"},"content":"        String description \u003d sc.nextLine().trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wxy2003-xy"},"content":"        LocalDate byTime \u003d null;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wxy2003-xy"},"content":"        // Loop to prompt user for a valid deadline date","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wxy2003-xy"},"content":"        while (true) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wxy2003-xy"},"content":"            try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wxy2003-xy"},"content":"                System.out.println(\"Enter deadline (yyyy-MM-dd): \");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wxy2003-xy"},"content":"                byTime \u003d LocalDate.parse(sc.nextLine().trim());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wxy2003-xy"},"content":"                break;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wxy2003-xy"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wxy2003-xy"},"content":"                System.out.println(\"Invalid date format. Please enter in the format yyyy-MM-dd.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wxy2003-xy"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wxy2003-xy"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wxy2003-xy"},"content":"        return new Deadline(name, description, byTime);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wxy2003-xy"},"content":"    public LocalDate getByTime() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wxy2003-xy"},"content":"        return this.byTime;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wxy2003-xy"},"content":"     * Returns a string representation of the {@code Deadline} task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wxy2003-xy"},"content":"     * The format includes the type of task (Deadline) and the information about its completion status, name, description, and deadline date.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wxy2003-xy"},"content":"     * @return A string representation of the {@code Deadline} task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wxy2003-xy"},"content":"    @Override","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wxy2003-xy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wxy2003-xy"},"content":"        return \"[D] \" + super.toString() + \"\\n\\tBy: \" + byTime.getDayOfMonth() + \"/\" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Wxy2003-xy"},"content":"                byTime.getMonth().toString().substring(0, 3) + \"/\" + byTime.getYear();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Wxy2003-xy"},"content":"}","lastModifiedDate":"2024-08-24","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":82}},{"path":"src/main/java/sigmabot/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"package sigmabot.task;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wxy2003-xy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wxy2003-xy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wxy2003-xy"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wxy2003-xy"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wxy2003-xy"},"content":" * The {@code Event} class represents an event with a name, description, start time, end time, and location.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wxy2003-xy"},"content":" * It extends the {@link Task} class to include specific details pertinent to events.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wxy2003-xy"},"content":" * This class provides constructors for creating events and methods for user input creation and string representation.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wxy2003-xy"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wxy2003-xy"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wxy2003-xy"},"content":"    private String location;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wxy2003-xy"},"content":"    private LocalDate startTime;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wxy2003-xy"},"content":"    private LocalDate endTime;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wxy2003-xy"},"content":"     * Constructs a new {@code Event} object with the specified name, description, start time, end time, and location.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param name The name of the event.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param startTime The start time of the event.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param endTime The end time of the event.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param location The location of the event.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wxy2003-xy"},"content":"    public Event(String name, String description, LocalDate startTime, LocalDate endTime, String location) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wxy2003-xy"},"content":"        super(name, description);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wxy2003-xy"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wxy2003-xy"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wxy2003-xy"},"content":"        this.location \u003d location;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wxy2003-xy"},"content":"     * Constructs a new {@code Event} object with the specified name, description, start time, end time, location, and completion status.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param name The name of the event.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param startTime The start time of the event.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param endTime The end time of the event.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param location The location of the event.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param isDone The completion status of the event. If {@code true}, the event is marked as done; otherwise, it is not done.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wxy2003-xy"},"content":"    public Event(String name, String description, LocalDate startTime, LocalDate endTime, String location, boolean isDone) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wxy2003-xy"},"content":"        super(name, description);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wxy2003-xy"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wxy2003-xy"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wxy2003-xy"},"content":"        this.location \u003d location;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wxy2003-xy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wxy2003-xy"},"content":"     * Prompts the user to enter the details for a new {@code Event} and creates a new {@code Event} object.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param sc The {@link Scanner} object used to read user input.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wxy2003-xy"},"content":"     * @return A new {@code Event} object created based on user input.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wxy2003-xy"},"content":"    public static Event createEvent(Scanner sc) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wxy2003-xy"},"content":"        System.out.println(\"Enter name: \");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wxy2003-xy"},"content":"        String name \u003d sc.nextLine().trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wxy2003-xy"},"content":"        System.out.println(\"Enter description: \");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wxy2003-xy"},"content":"        String description \u003d sc.nextLine().trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wxy2003-xy"},"content":"        LocalDate startTime \u003d null;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wxy2003-xy"},"content":"        LocalDate endTime \u003d null;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wxy2003-xy"},"content":"        String location;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wxy2003-xy"},"content":"        // Loop to prompt user for a valid start time","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wxy2003-xy"},"content":"        while (true) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wxy2003-xy"},"content":"            try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wxy2003-xy"},"content":"                System.out.println(\"Enter start time (yyyy-MM-dd): \");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wxy2003-xy"},"content":"                startTime \u003d LocalDate.parse(sc.nextLine().trim());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wxy2003-xy"},"content":"                break;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wxy2003-xy"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wxy2003-xy"},"content":"                System.out.println(\"Invalid date format. Please enter in the format yyyy-MM-dd.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wxy2003-xy"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wxy2003-xy"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wxy2003-xy"},"content":"        // Loop to prompt user for a valid end time","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wxy2003-xy"},"content":"        while (true) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wxy2003-xy"},"content":"            try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Wxy2003-xy"},"content":"                System.out.println(\"Enter end time (yyyy-MM-dd): \");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Wxy2003-xy"},"content":"                endTime \u003d LocalDate.parse(sc.nextLine().trim());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Wxy2003-xy"},"content":"                if (endTime.isBefore(startTime)) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Wxy2003-xy"},"content":"                    System.out.println(\"End time cannot be before start time. Please enter a valid end time.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Wxy2003-xy"},"content":"                } else {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Wxy2003-xy"},"content":"                    break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Wxy2003-xy"},"content":"                }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Wxy2003-xy"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Wxy2003-xy"},"content":"                System.out.println(\"Invalid date format. Please enter in the format yyyy-MM-dd.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Wxy2003-xy"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Wxy2003-xy"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Wxy2003-xy"},"content":"        System.out.println(\"Enter location: \");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Wxy2003-xy"},"content":"        location \u003d sc.nextLine().trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Wxy2003-xy"},"content":"        return new Event(name, description, startTime, endTime, location);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Wxy2003-xy"},"content":"     * Returns the location of the event.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Wxy2003-xy"},"content":"     * @return The location of the event.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Wxy2003-xy"},"content":"    public String getLocation() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Wxy2003-xy"},"content":"        return location;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Wxy2003-xy"},"content":"     * Returns the start time of the event.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Wxy2003-xy"},"content":"     * @return The start time of the event.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Wxy2003-xy"},"content":"    public LocalDate getStartTime() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Wxy2003-xy"},"content":"        return startTime;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Wxy2003-xy"},"content":"     * Returns the end time of the event.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Wxy2003-xy"},"content":"     * @return The end time of the event.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Wxy2003-xy"},"content":"    public LocalDate getEndTime() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Wxy2003-xy"},"content":"        return endTime;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Wxy2003-xy"},"content":"     * Returns a string representation of the {@code Event} task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Wxy2003-xy"},"content":"     * The format includes the type of task (Event) and the information about its completion status, name, description, start time, end time, and location.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Wxy2003-xy"},"content":"     * @return A string representation of the {@code Event} task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Wxy2003-xy"},"content":"    @Override","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Wxy2003-xy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Wxy2003-xy"},"content":"        return \"[E] \" + super.toString() +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Wxy2003-xy"},"content":"                \"\\n\\tStart Time: \" + startTime +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Wxy2003-xy"},"content":"                \"\\n\\tEnd Time: \" + endTime +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Wxy2003-xy"},"content":"                \"\\n\\tLocation: \" + location;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Wxy2003-xy"},"content":"}","lastModifiedDate":"2024-08-24","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":137}},{"path":"src/main/java/sigmabot/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"package sigmabot.task;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wxy2003-xy"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wxy2003-xy"},"content":" * The {@code Task} class is an abstract base class that represents a generic task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wxy2003-xy"},"content":" * It provides common properties and methods for all tasks, including a name, description, and completion status.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wxy2003-xy"},"content":" * Subclasses of {@code Task} should provide specific implementations for different types of tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wxy2003-xy"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wxy2003-xy"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wxy2003-xy"},"content":"    protected String name;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wxy2003-xy"},"content":"    protected String description;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wxy2003-xy"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wxy2003-xy"},"content":"     * Constructs a new {@code Task} with the specified name and description.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wxy2003-xy"},"content":"     * By default, the task is not marked as done.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param name        The name of the task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wxy2003-xy"},"content":"    public Task(String name, String description) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wxy2003-xy"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wxy2003-xy"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wxy2003-xy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wxy2003-xy"},"content":"     * Returns the name of the task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wxy2003-xy"},"content":"     * @return The name of the task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wxy2003-xy"},"content":"    public String getName() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wxy2003-xy"},"content":"        return name;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wxy2003-xy"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wxy2003-xy"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wxy2003-xy"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wxy2003-xy"},"content":"        return description;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wxy2003-xy"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wxy2003-xy"},"content":"     * @return {@code true} if the task is marked as done; {@code false} otherwise.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wxy2003-xy"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wxy2003-xy"},"content":"        return isDone;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wxy2003-xy"},"content":"     * Marks the task as done by setting the {@code isDone} flag to {@code true}.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wxy2003-xy"},"content":"    public void markDone() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wxy2003-xy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wxy2003-xy"},"content":"     * Marks the task as not done by setting the {@code isDone} flag to {@code false}.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wxy2003-xy"},"content":"    public void markUndone() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wxy2003-xy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wxy2003-xy"},"content":"     * Returns a string representation of the task, including its completion status, name, and description.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wxy2003-xy"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wxy2003-xy"},"content":"    @Override","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wxy2003-xy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wxy2003-xy"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + name + \"\\n\\tDescription: \" + description;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wxy2003-xy"},"content":"}","lastModifiedDate":"2024-08-24","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":76}},{"path":"src/main/java/sigmabot/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"package sigmabot.task;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wxy2003-xy"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wxy2003-xy"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wxy2003-xy"},"content":" * The {@code Todo} class represents a simple task with a name and description.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wxy2003-xy"},"content":" * It can be marked as done or not done. This class extends the {@link Task} class.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wxy2003-xy"},"content":" * The {@code Todo} class provides constructors to create a new task and a static method to create a task through user input.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wxy2003-xy"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wxy2003-xy"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wxy2003-xy"},"content":"     * Constructs a new {@code Todo} object with the specified name and description.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wxy2003-xy"},"content":"     * By default, the task is not marked as done.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param name The name of the task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wxy2003-xy"},"content":"    public Todo(String name, String description) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wxy2003-xy"},"content":"        super(name, description);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wxy2003-xy"},"content":"     * Constructs a new {@code Todo} object with the specified name, description, and completion status.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param name The name of the task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param isDone The completion status of the task. If {@code true}, the task is marked as done; otherwise, it is not done.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wxy2003-xy"},"content":"    public Todo(String name, String description, boolean isDone) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wxy2003-xy"},"content":"        super(name, description);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wxy2003-xy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wxy2003-xy"},"content":"     * Prompts the user to enter the details for a new {@code Todo} task and creates a new {@code Todo} object.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param sc The {@link Scanner} object used to read user input.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wxy2003-xy"},"content":"     * @return A new {@code Todo} object created based on user input.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wxy2003-xy"},"content":"    public static Todo createTodo(Scanner sc) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wxy2003-xy"},"content":"        System.out.println(\"Enter name: \");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wxy2003-xy"},"content":"        String name \u003d sc.nextLine().trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wxy2003-xy"},"content":"        System.out.println(\"Enter description: \");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wxy2003-xy"},"content":"        String description \u003d sc.nextLine().trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wxy2003-xy"},"content":"        return new Todo(name, description);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wxy2003-xy"},"content":"     * Returns a string representation of the {@code Todo} task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wxy2003-xy"},"content":"     * The format includes the type of task (Todo) and the information about its completion status, name, and description.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wxy2003-xy"},"content":"     * @return A string representation of the {@code Todo} task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wxy2003-xy"},"content":"    @Override","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wxy2003-xy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wxy2003-xy"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wxy2003-xy"},"content":"}","lastModifiedDate":"2024-08-24","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":59}},{"path":"src/main/java/sigmabot/ui/UiComponent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"package sigmabot.ui;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.command.Command;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.command.Exit;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.command.Joke;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.command.ListOperation;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.exceptions.InvalidInputException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wxy2003-xy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wxy2003-xy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wxy2003-xy"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wxy2003-xy"},"content":"public class UiComponent {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wxy2003-xy"},"content":"    public static final String HR_LINE_IN \u003d \"\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\\n\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wxy2003-xy"},"content":"    public static final String HR_LINE_OUT \u003d \"\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\\n\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wxy2003-xy"},"content":"    public static final String HR_LINE \u003d \"——————————————————————————————————————————————————————————————————————————————\\n\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wxy2003-xy"},"content":"    public static final String HR_LINE_DOUBLE \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wxy2003-xy"},"content":"    public static final String RESET \u003d \"\\u001B[0m\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wxy2003-xy"},"content":"    public static final String BLACK \u003d \"\\u001B[30m\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wxy2003-xy"},"content":"    public static final String RED \u003d \"\\u001B[31m\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wxy2003-xy"},"content":"    public static final String GREEN \u003d \"\\u001B[32m\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wxy2003-xy"},"content":"    public static final String YELLOW \u003d \"\\u001B[33m\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wxy2003-xy"},"content":"    public static final String BLUE \u003d \"\\u001B[34m\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wxy2003-xy"},"content":"    public static final String PURPLE \u003d \"\\u001B[35m\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wxy2003-xy"},"content":"    public static final String CYAN \u003d \"\\u001B[36m\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wxy2003-xy"},"content":"    public static final String WHITE \u003d \"\\u001B[37m\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wxy2003-xy"},"content":"    private static final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wxy2003-xy"},"content":"    public void closeScanner() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wxy2003-xy"},"content":"        scanner.close();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wxy2003-xy"},"content":"    public void printDialogue(String message) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wxy2003-xy"},"content":"        System.out.println(HR_LINE);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wxy2003-xy"},"content":"        System.out.println(message);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wxy2003-xy"},"content":"    public Command readCommand() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wxy2003-xy"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wxy2003-xy"},"content":"            String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wxy2003-xy"},"content":"            return switch (input) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wxy2003-xy"},"content":"                case \"/exit\" -\u003e new Exit();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wxy2003-xy"},"content":"                case \"/list\" -\u003e new ListOperation();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wxy2003-xy"},"content":"                case \"/joke\" -\u003e new Joke();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wxy2003-xy"},"content":"                default -\u003e throw new InvalidInputException(\"Unknown command: \" + input);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wxy2003-xy"},"content":"            };","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wxy2003-xy"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wxy2003-xy"},"content":"            System.err.println(\"Unknown command\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wxy2003-xy"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wxy2003-xy"},"content":"        return new Exit();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wxy2003-xy"},"content":"    public String readInput() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wxy2003-xy"},"content":"        String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wxy2003-xy"},"content":"        return input;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wxy2003-xy"},"content":"    public LocalDate readDate() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wxy2003-xy"},"content":"        while (true) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wxy2003-xy"},"content":"            System.out.println(\"Please enter a date (yyyy-mm-dd) or type \u0027/exit\u0027 to quit:\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wxy2003-xy"},"content":"            String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wxy2003-xy"},"content":"            if (input.equalsIgnoreCase(\"/exit\")) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wxy2003-xy"},"content":"                return LocalDate.now(); // Return current date if the user types \"/exit\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wxy2003-xy"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wxy2003-xy"},"content":"            try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wxy2003-xy"},"content":"                LocalDate date \u003d LocalDate.parse(input);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wxy2003-xy"},"content":"                return date; // Return the parsed date if it\u0027s valid","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wxy2003-xy"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wxy2003-xy"},"content":"                System.err.println(\"Invalid Date format. Please enter a valid date in yyyy-mm-dd format.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wxy2003-xy"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wxy2003-xy"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wxy2003-xy"},"content":"    public static Command readListCommand() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wxy2003-xy"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wxy2003-xy"},"content":"            if (scanner.hasNextLine()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Wxy2003-xy"},"content":"                String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Wxy2003-xy"},"content":"                return switch (input) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Wxy2003-xy"},"content":"                    case \"/exit\" -\u003e new Exit();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Wxy2003-xy"},"content":"                    case \"/list\" -\u003e new ListOperation();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Wxy2003-xy"},"content":"                    case \"/joke\" -\u003e new Joke();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Wxy2003-xy"},"content":"                    default -\u003e throw new InvalidInputException(\"Unknown command: \" + input);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Wxy2003-xy"},"content":"                };","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Wxy2003-xy"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Wxy2003-xy"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Wxy2003-xy"},"content":"            System.err.println(\"Unknown command\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Wxy2003-xy"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Wxy2003-xy"},"content":"        return new Exit();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Wxy2003-xy"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":93}},{"path":"src/main/java/sigmabot/util/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"package sigmabot.util;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wxy2003-xy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wxy2003-xy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wxy2003-xy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wxy2003-xy"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wxy2003-xy"},"content":"import java.util.Map;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wxy2003-xy"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wxy2003-xy"},"content":" * The DateParser class provides utility functions to parse date strings in various formats.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wxy2003-xy"},"content":" * It supports converting dates from formats with abbreviated month names to the standard \"yyyy-MM-dd\" format.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wxy2003-xy"},"content":" *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wxy2003-xy"},"content":" * Supported input formats include \"d/MMM/yyyy\" and \"dd/MMM/yyyy\" where:","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wxy2003-xy"},"content":" * - \"d\" or \"dd\" represents a day (1-31)","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wxy2003-xy"},"content":" * - \"MMM\" represents a three-letter month abbreviation (e.g., \"JAN\", \"FEB\")","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wxy2003-xy"},"content":" * - \"yyyy\" represents a four-digit year","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wxy2003-xy"},"content":" *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wxy2003-xy"},"content":" * Example input: \"1/FEB/2099\", \"01/FEB/2099\"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wxy2003-xy"},"content":" * Example output: \"2099-02-01\"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wxy2003-xy"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wxy2003-xy"},"content":"public class DateParser {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wxy2003-xy"},"content":"\t// Mapping of month abbreviations to month numbers","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wxy2003-xy"},"content":"\tprivate static final Map\u003cString, String\u003e MONTH_ABBREVIATIONS \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wxy2003-xy"},"content":"\tstatic {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tMONTH_ABBREVIATIONS.put(\"JAN\", \"01\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tMONTH_ABBREVIATIONS.put(\"FEB\", \"02\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tMONTH_ABBREVIATIONS.put(\"MAR\", \"03\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tMONTH_ABBREVIATIONS.put(\"APR\", \"04\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tMONTH_ABBREVIATIONS.put(\"MAY\", \"05\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tMONTH_ABBREVIATIONS.put(\"JUN\", \"06\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tMONTH_ABBREVIATIONS.put(\"JUL\", \"07\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tMONTH_ABBREVIATIONS.put(\"AUG\", \"08\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tMONTH_ABBREVIATIONS.put(\"SEP\", \"09\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tMONTH_ABBREVIATIONS.put(\"OCT\", \"10\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tMONTH_ABBREVIATIONS.put(\"NOV\", \"11\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tMONTH_ABBREVIATIONS.put(\"DEC\", \"12\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wxy2003-xy"},"content":"\t}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wxy2003-xy"},"content":"\t/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wxy2003-xy"},"content":"\t * Parses a date string from the format \"d/MMM/yyyy\" or \"dd/MMM/yyyy\" (e.g., \"1/FEB/2099\" or \"01/FEB/2099\")","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wxy2003-xy"},"content":"\t * to the standard \"yyyy-MM-dd\" format.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wxy2003-xy"},"content":"\t *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wxy2003-xy"},"content":"\t * This method first splits the input date string by the \"/\" character, extracts and converts the day, month, and year,","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wxy2003-xy"},"content":"\t * then constructs a date string in the \"yyyy-MM-dd\" format. It also validates the final date format using the","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wxy2003-xy"},"content":"\t * standard ISO_LOCAL_DATE formatter.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wxy2003-xy"},"content":"\t *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wxy2003-xy"},"content":"\t * @param dateStr The date string in the format \"d/MMM/yyyy\" or \"dd/MMM/yyyy\".","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wxy2003-xy"},"content":"\t * @return A formatted date string in the format \"yyyy-MM-dd\".","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wxy2003-xy"},"content":"\t * @throws IllegalArgumentException If the date string cannot be parsed due to invalid format or unrecognized month abbreviation.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wxy2003-xy"},"content":"\t */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wxy2003-xy"},"content":"\tpublic static String parseDate(String dateStr) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t// Split the date string by \"/\"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tString[] parts \u003d dateStr.split(\"/\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t// Check if the date string is in the expected format","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tif (parts.length !\u003d 3) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t\tthrow new IllegalArgumentException(\"Invalid date format: \" + dateStr);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t// Ensure the day is two digits","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tString day \u003d parts[0].length() \u003d\u003d 1 ? \"0\" + parts[0] : parts[0];","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tString monthAbbreviation \u003d parts[1].toUpperCase(); // Convert the month abbreviation to uppercase","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tString year \u003d parts[2]; // Extract the year part","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t// Convert the month abbreviation to its numeric equivalent using the predefined map","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tString month \u003d MONTH_ABBREVIATIONS.get(monthAbbreviation);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t// Throw an exception if the month abbreviation is not recognized","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tif (month \u003d\u003d null) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t\tthrow new IllegalArgumentException(\"Invalid month abbreviation: \" + monthAbbreviation);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t// Construct the date in \"yyyy-MM-dd\" format","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tString formattedDate \u003d year + \"-\" + month + \"-\" + day;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t// Validate the formatted date using the ISO_LOCAL_DATE formatter","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wxy2003-xy"},"content":"\t\ttry {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t\tLocalDate.parse(formattedDate, DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t} catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t\t// Throw an exception if the date format is invalid","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t\tthrow new IllegalArgumentException(\"Invalid date format: \" + dateStr, e);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t// Return the formatted date","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Wxy2003-xy"},"content":"\t\treturn formattedDate;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Wxy2003-xy"},"content":"\t}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Wxy2003-xy"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":89}},{"path":"src/main/java/sigmabot/util/ListMapWriter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"package sigmabot.util;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.task.Task;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wxy2003-xy"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wxy2003-xy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wxy2003-xy"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wxy2003-xy"},"content":"import java.util.Map;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wxy2003-xy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wxy2003-xy"},"content":" * The ListMapWriter class provides functionality to write a map of tasks to a file.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wxy2003-xy"},"content":" * This class handles the serialization of tasks from a map structure into a plain text file.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wxy2003-xy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wxy2003-xy"},"content":"public class ListMapWriter {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wxy2003-xy"},"content":"     * Writes the provided map of tasks to the specified file.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wxy2003-xy"},"content":"     * Each task is written on a new line in the file.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param taskMap  A map where the key is a string representing the task name and the value is a Task object.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param filePath The path to the file where the tasks will be written.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wxy2003-xy"},"content":"    public void writeMapToFile(Map\u003cString, Task\u003e taskMap, String filePath) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wxy2003-xy"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wxy2003-xy"},"content":"            for (Task task : taskMap.values()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wxy2003-xy"},"content":"                writer.write(task.toString());  // Write the string representation of the task to the file","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wxy2003-xy"},"content":"                writer.newLine();  // Write a new line after each task","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wxy2003-xy"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wxy2003-xy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wxy2003-xy"},"content":"            e.printStackTrace();  // Print stack trace if an IOException occurs","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wxy2003-xy"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wxy2003-xy"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":33}},{"path":"src/main/java/sigmabot/util/ListReader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"package sigmabot.util;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.task.Task;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.task.Todo;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.task.Deadline;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.task.Event;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wxy2003-xy"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wxy2003-xy"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wxy2003-xy"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wxy2003-xy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wxy2003-xy"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wxy2003-xy"},"content":"import java.util.Map;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wxy2003-xy"},"content":"public class ListReader {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wxy2003-xy"},"content":"     * Reads tasks from a file and parses them into a Map.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param filePath The path to the file containing the tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wxy2003-xy"},"content":"     * @return A map where the key is the task name and the value is the Task object.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wxy2003-xy"},"content":"     * @throws IOException If an I/O error occurs reading from the file.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wxy2003-xy"},"content":"    public Map\u003cString, Task\u003e readTasksFromFile(String filePath) throws IOException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wxy2003-xy"},"content":"        Map\u003cString, Task\u003e taskList \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wxy2003-xy"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wxy2003-xy"},"content":"            String line;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wxy2003-xy"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wxy2003-xy"},"content":"                line \u003d line.trim();  // Remove leading and trailing whitespace","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wxy2003-xy"},"content":"                if (line.isEmpty()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wxy2003-xy"},"content":"                    continue;  // Skip empty lines","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wxy2003-xy"},"content":"                }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wxy2003-xy"},"content":"                if (line.startsWith(\"[T]\")) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wxy2003-xy"},"content":"                    Task task \u003d parseTodoTask(line, br);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wxy2003-xy"},"content":"                    taskList.put(task.getName(), task);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wxy2003-xy"},"content":"                } else if (line.startsWith(\"[D]\")) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wxy2003-xy"},"content":"                    Task task \u003d parseDeadlineTask(line, br);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wxy2003-xy"},"content":"                    taskList.put(task.getName(), task);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wxy2003-xy"},"content":"                } else if (line.startsWith(\"[E]\")) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wxy2003-xy"},"content":"                    Task task \u003d parseEventTask(line, br);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wxy2003-xy"},"content":"                    taskList.put(task.getName(), task);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wxy2003-xy"},"content":"                } else {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wxy2003-xy"},"content":"                    System.out.println(\"Unknown task format: \" + line);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wxy2003-xy"},"content":"                }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wxy2003-xy"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wxy2003-xy"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wxy2003-xy"},"content":"        return taskList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wxy2003-xy"},"content":"     * Parses a Todo task from the input line.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param line The line containing the task type and status.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param br   The BufferedReader to read the next line for the description.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wxy2003-xy"},"content":"     * @return A Todo task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wxy2003-xy"},"content":"     * @throws IOException If an I/O error occurs reading from the BufferedReader.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wxy2003-xy"},"content":"    private Task parseTodoTask(String line, BufferedReader br) throws IOException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wxy2003-xy"},"content":"        boolean isDone \u003d line.contains(\"[X]\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wxy2003-xy"},"content":"        String[] parts \u003d line.split(\"]\", 2);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wxy2003-xy"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wxy2003-xy"},"content":"            throw new IllegalArgumentException(\"Invalid format for Todo task: \" + line);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wxy2003-xy"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wxy2003-xy"},"content":"        String name \u003d parts[1].trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wxy2003-xy"},"content":"        String descriptionLine \u003d br.readLine().trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wxy2003-xy"},"content":"        String description \u003d descriptionLine.replaceFirst(\"Description: \", \"\").trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wxy2003-xy"},"content":"        return new Todo(name, description, isDone);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wxy2003-xy"},"content":"     * Parses a Deadline task from the input line.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param line The line containing the task type and status.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param br   The BufferedReader to read the next lines for the description and byTime.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wxy2003-xy"},"content":"     * @return A Deadline task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wxy2003-xy"},"content":"     * @throws IOException If an I/O error occurs reading from the BufferedReader.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wxy2003-xy"},"content":"    private Task parseDeadlineTask(String line, BufferedReader br) throws IOException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wxy2003-xy"},"content":"        boolean isDone \u003d line.contains(\"[X]\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wxy2003-xy"},"content":"        String[] parts \u003d line.split(\"]\", 2);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wxy2003-xy"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Wxy2003-xy"},"content":"            throw new IllegalArgumentException(\"Invalid format for Deadline task: \" + line);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Wxy2003-xy"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Wxy2003-xy"},"content":"        String name \u003d parts[1].trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Wxy2003-xy"},"content":"        String descriptionLine \u003d br.readLine().trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Wxy2003-xy"},"content":"        String description \u003d descriptionLine.replaceFirst(\"Description: \", \"\").trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Wxy2003-xy"},"content":"        String byTimeLine \u003d br.readLine().trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Wxy2003-xy"},"content":"        String byTimeStr \u003d byTimeLine.replaceFirst(\"By: \", \"\").trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Wxy2003-xy"},"content":"        String formattedByTimeStr \u003d DateParser.parseDate(byTimeStr);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Wxy2003-xy"},"content":"        LocalDate byTime \u003d LocalDate.parse(formattedByTimeStr);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Wxy2003-xy"},"content":"        return new Deadline(name, description, byTime, isDone);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Wxy2003-xy"},"content":"     * Parses an Event task from the input line.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param line The line containing the task type and status.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param br   The BufferedReader to read the next lines for the description, startTime, endTime, and location.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Wxy2003-xy"},"content":"     * @return An Event task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Wxy2003-xy"},"content":"     * @throws IOException If an I/O error occurs reading from the BufferedReader.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Wxy2003-xy"},"content":"    private Task parseEventTask(String line, BufferedReader br) throws IOException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Wxy2003-xy"},"content":"        boolean isDone \u003d line.contains(\"[X]\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Wxy2003-xy"},"content":"        String[] parts \u003d line.split(\"]\", 2);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Wxy2003-xy"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Wxy2003-xy"},"content":"            throw new IllegalArgumentException(\"Invalid format for Event task: \" + line);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Wxy2003-xy"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Wxy2003-xy"},"content":"        String name \u003d parts[1].trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Wxy2003-xy"},"content":"        String descriptionLine \u003d br.readLine().trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Wxy2003-xy"},"content":"        String description \u003d descriptionLine.replaceFirst(\"Description: \", \"\").trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Wxy2003-xy"},"content":"        String startTimeLine \u003d br.readLine().trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Wxy2003-xy"},"content":"        String startTimeStr \u003d startTimeLine.replaceFirst(\"Start Time: \", \"\").trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Wxy2003-xy"},"content":"        String formattedStartTimeStr \u003d DateParser.parseDate(startTimeStr);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Wxy2003-xy"},"content":"        LocalDate startTime \u003d LocalDate.parse(formattedStartTimeStr);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Wxy2003-xy"},"content":"        String endTimeLine \u003d br.readLine().trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Wxy2003-xy"},"content":"        String endTimeStr \u003d endTimeLine.replaceFirst(\"End Time: \", \"\").trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Wxy2003-xy"},"content":"        String formattedEndTimeStr \u003d DateParser.parseDate(endTimeStr);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Wxy2003-xy"},"content":"        LocalDate endTime \u003d LocalDate.parse(formattedEndTimeStr);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Wxy2003-xy"},"content":"        String locationLine \u003d br.readLine().trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Wxy2003-xy"},"content":"        String location \u003d locationLine.replaceFirst(\"Location: \", \"\").trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Wxy2003-xy"},"content":"        return new Event(name, description, startTime, endTime, location, isDone);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Wxy2003-xy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Wxy2003-xy"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":124}},{"path":"src/main/java/sigmabot/util/Reader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"package sigmabot.util;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.ui.UiComponent;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wxy2003-xy"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wxy2003-xy"},"content":" * The Reader class serves as an abstract base class for reading files in the application.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wxy2003-xy"},"content":" * It provides a standard interface for reading files, allowing different types of readers","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wxy2003-xy"},"content":" * to be implemented for various file formats or data sources.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wxy2003-xy"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wxy2003-xy"},"content":"public abstract class Reader {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wxy2003-xy"},"content":"     * Reads the content of a file specified by its file path.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wxy2003-xy"},"content":"     * This abstract method must be implemented by all subclasses to define the specific behavior","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wxy2003-xy"},"content":"     * for reading files. The implementation can vary depending on the file format and content.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param filePath The path to the file that needs to be read.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wxy2003-xy"},"content":"    public abstract void readFile(String filePath);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wxy2003-xy"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":20}},{"path":"src/main/java/sigmabot/util/Writer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"package sigmabot.util;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.ui.UiComponent;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wxy2003-xy"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wxy2003-xy"},"content":" * The Writer class serves as an abstract base class for writing data to files in the application.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wxy2003-xy"},"content":" * It provides a standard interface for writing data to files, allowing for different types","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wxy2003-xy"},"content":" * of writers to be implemented depending on the file format or data requirements.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wxy2003-xy"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wxy2003-xy"},"content":"public abstract class Writer {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wxy2003-xy"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wxy2003-xy"},"content":"     * Writes data to the file specified by its file path.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wxy2003-xy"},"content":"     * This abstract method must be implemented by all subclasses to define the specific behavior","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wxy2003-xy"},"content":"     * for writing data to files. The implementation can vary depending on the data format and requirements.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wxy2003-xy"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wxy2003-xy"},"content":"     * @param filePath The path to the file where the data needs to be written.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wxy2003-xy"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wxy2003-xy"},"content":"    public abstract void write(String filePath);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wxy2003-xy"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":20}},{"path":"src/test/DateParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"package sigmabot.util;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wxy2003-xy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wxy2003-xy"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wxy2003-xy"},"content":"public class DateParserTest {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wxy2003-xy"},"content":"\t@Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wxy2003-xy"},"content":"\tpublic void testValidDates() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertEquals(\"2099-02-01\", DateParser.parseDate(\"1/FEB/2099\"));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertEquals(\"2099-02-01\", DateParser.parseDate(\"01/FEB/2099\"));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertEquals(\"2024-12-31\", DateParser.parseDate(\"31/DEC/2024\"));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wxy2003-xy"},"content":"\t}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wxy2003-xy"},"content":"\t@Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wxy2003-xy"},"content":"\tpublic void testInvalidMonth() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tException exception \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t\tDateParser.parseDate(\"1/ABC/2099\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t});","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertEquals(\"Invalid month abbreviation: ABC\", exception.getMessage());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wxy2003-xy"},"content":"\t}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wxy2003-xy"},"content":"\t@Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wxy2003-xy"},"content":"\tpublic void testInvalidDateFormat() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tException exception1 \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t\tDateParser.parseDate(\"FEB/1/2099\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t});","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertTrue(exception1.getMessage().startsWith(\"Invalid date format\"));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tException exception2 \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t\tDateParser.parseDate(\"2099/02/01\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t});","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertTrue(exception2.getMessage().startsWith(\"Invalid date format\"));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tException exception3 \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t\tDateParser.parseDate(\"31/DEC\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t});","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertTrue(exception3.getMessage().startsWith(\"Invalid date format\"));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wxy2003-xy"},"content":"\t}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wxy2003-xy"},"content":"\t@Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wxy2003-xy"},"content":"\tpublic void testNonExistentDate() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tException exception1 \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t\tDateParser.parseDate(\"31/FEB/2024\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t});","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertTrue(exception1.getMessage().contains(\"Invalid date format\"));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tException exception2 \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t\tDateParser.parseDate(\"32/JAN/2024\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t});","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertTrue(exception2.getMessage().contains(\"Invalid date format\"));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wxy2003-xy"},"content":"\t}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wxy2003-xy"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":53}},{"path":"src/test/ListReaderTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"package sigmabot.util;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wxy2003-xy"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wxy2003-xy"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wxy2003-xy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.task.Deadline;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.task.Event;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.task.Task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wxy2003-xy"},"content":"import sigmabot.task.Todo;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wxy2003-xy"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wxy2003-xy"},"content":"import java.io.File;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wxy2003-xy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wxy2003-xy"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wxy2003-xy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wxy2003-xy"},"content":"import java.util.Map;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wxy2003-xy"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wxy2003-xy"},"content":"public class ListReaderTest {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wxy2003-xy"},"content":"\tprivate File tempFile;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wxy2003-xy"},"content":"\t@BeforeEach","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wxy2003-xy"},"content":"\tpublic void setUp() throws Exception {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t// Create a temporary file before each test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wxy2003-xy"},"content":"\t\ttempFile \u003d File.createTempFile(\"tasks\", \".txt\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wxy2003-xy"},"content":"\t}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wxy2003-xy"},"content":"\t@AfterEach","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wxy2003-xy"},"content":"\tpublic void tearDown() throws Exception {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t// Delete the temporary file after each test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tif (tempFile.exists()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t\ttempFile.delete();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wxy2003-xy"},"content":"\t}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wxy2003-xy"},"content":"\t@Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wxy2003-xy"},"content":"\tpublic void testReadTodoTask() throws Exception {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tString content \u003d \"[T] [ ] a\\n\\tDescription: b\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wxy2003-xy"},"content":"\t\twriteToFile(tempFile, content);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tListReader listReader \u003d new ListReader();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tMap\u003cString, Task\u003e tasks \u003d listReader.readTasksFromFile(tempFile.getAbsolutePath());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertEquals(1, tasks.size());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertTrue(tasks.containsKey(\"a\"));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tTask task \u003d tasks.get(\"a\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertTrue(task instanceof Todo);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertEquals(\"a\", task.getName());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertEquals(\"b\", task.getDescription());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertFalse(task.isDone());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wxy2003-xy"},"content":"\t}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wxy2003-xy"},"content":"\t@Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wxy2003-xy"},"content":"\tpublic void testReadMarkedTodoTask() throws Exception {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tString content \u003d \"[T] [X] a\\n\\tDescription: b\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wxy2003-xy"},"content":"\t\twriteToFile(tempFile, content);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tListReader listReader \u003d new ListReader();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tMap\u003cString, Task\u003e tasks \u003d listReader.readTasksFromFile(tempFile.getAbsolutePath());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertEquals(1, tasks.size());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertTrue(tasks.containsKey(\"a\"));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tTask task \u003d tasks.get(\"a\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertTrue(task instanceof Todo);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertEquals(\"a\", task.getName());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertEquals(\"b\", task.getDescription());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertTrue(task.isDone());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wxy2003-xy"},"content":"\t}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wxy2003-xy"},"content":"\t@Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wxy2003-xy"},"content":"\tpublic void testReadDeadlineTask() throws Exception {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tString content \u003d \"[D] [ ] d\\n\\tDescription: desc\\n\\tBy: 01/FEB/2099\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wxy2003-xy"},"content":"\t\twriteToFile(tempFile, content);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tListReader listReader \u003d new ListReader();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tMap\u003cString, Task\u003e tasks \u003d listReader.readTasksFromFile(tempFile.getAbsolutePath());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertEquals(1, tasks.size());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertTrue(tasks.containsKey(\"d\"));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tTask task \u003d tasks.get(\"d\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertTrue(task instanceof Deadline);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertEquals(\"d\", task.getName());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertEquals(\"desc\", task.getDescription());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertFalse(task.isDone());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertEquals(LocalDate.of(2099, 2, 1), ((Deadline) task).getByTime());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Wxy2003-xy"},"content":"\t}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Wxy2003-xy"},"content":"\t@Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Wxy2003-xy"},"content":"\tpublic void testReadEventTask() throws Exception {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tString content \u003d \"[E] [ ] e\\n\\tDescription: desc\\n\\tStart Time: 01/JAN/2099\\n\\tEnd Time: 02/JAN/2099\\n\\tLocation: Somewhere\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Wxy2003-xy"},"content":"\t\twriteToFile(tempFile, content);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tListReader listReader \u003d new ListReader();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tMap\u003cString, Task\u003e tasks \u003d listReader.readTasksFromFile(tempFile.getAbsolutePath());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertEquals(1, tasks.size());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertTrue(tasks.containsKey(\"e\"));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tTask task \u003d tasks.get(\"e\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertTrue(task instanceof Event);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertEquals(\"e\", task.getName());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertEquals(\"desc\", task.getDescription());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertFalse(task.isDone());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertEquals(LocalDate.of(2099, 1, 1), ((Event) task).getStartTime());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertEquals(LocalDate.of(2099, 1, 2), ((Event) task).getEndTime());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Wxy2003-xy"},"content":"\t\tassertEquals(\"Somewhere\", ((Event) task).getLocation());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Wxy2003-xy"},"content":"\t}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Wxy2003-xy"},"content":"\tprivate void writeToFile(File file, String content) throws Exception {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Wxy2003-xy"},"content":"\t\ttry (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file))) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t\twriter.write(content);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Wxy2003-xy"},"content":"\t\t}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Wxy2003-xy"},"content":"\t}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Wxy2003-xy"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":119}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Wxy2003-xy"},"content":"list","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wxy2003-xy"},"content":"y","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wxy2003-xy"},"content":"my todo list","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wxy2003-xy"},"content":"todo Buy groceries","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wxy2003-xy"},"content":"Buy milk, eggs, and bread","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wxy2003-xy"},"content":"event Team meeting","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wxy2003-xy"},"content":"Discuss project milestones","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wxy2003-xy"},"content":"9:00 AM","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wxy2003-xy"},"content":"10:30 AM","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wxy2003-xy"},"content":"Conference Room 1","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wxy2003-xy"},"content":"deadline Submit assignment","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wxy2003-xy"},"content":"Complete the programming assignment","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wxy2003-xy"},"content":"2024-09-01","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wxy2003-xy"},"content":"exit","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wxy2003-xy"},"content":"list","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wxy2003-xy"},"content":"a","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wxy2003-xy"},"content":"my second list","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wxy2003-xy"},"content":"todo Write report","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wxy2003-xy"},"content":"Complete the project report","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wxy2003-xy"},"content":"exit","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wxy2003-xy"},"content":"list","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wxy2003-xy"},"content":"b","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wxy2003-xy"},"content":"my todo list","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wxy2003-xy"},"content":"2","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wxy2003-xy"},"content":"3","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wxy2003-xy"},"content":"-1","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wxy2003-xy"},"content":"list","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wxy2003-xy"},"content":"b","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wxy2003-xy"},"content":"my todo list","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wxy2003-xy"},"content":"-1","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wxy2003-xy"},"content":"bye","lastModifiedDate":"2024-08-24","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":31}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wxy2003-xy"},"content":"java -classpath ../bin SigmaBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wxy2003-xy"},"content":"# strip out ANSI color codes from ACTUAL.TXT","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wxy2003-xy"},"content":"sed -E \u0027s/\\x1b\\[[0-9;]*m//g\u0027 ACTUAL.TXT \u003e ACTUAL-NO-COLOR.TXT","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wxy2003-xy"},"content":"# strip out ANSI color codes from EXPECTED.TXT (if it contains any)","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wxy2003-xy"},"content":"sed -E \u0027s/\\x1b\\[[0-9;]*m//g\u0027 EXPECTED-UNIX.TXT \u003e EXPECTED-NO-COLOR.TXT","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wxy2003-xy"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wxy2003-xy"},"content":"# convert to UNIX format","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wxy2003-xy"},"content":"dos2unix ACTUAL-NO-COLOR.TXT EXPECTED-NO-COLOR.TXT","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wxy2003-xy"},"content":"diff ACTUAL-NO-COLOR.TXT EXPECTED-NO-COLOR.TXT","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Wxy2003-xy":10,"-":34}}]
