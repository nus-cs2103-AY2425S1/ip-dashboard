{"authorDailyContributionsMap":{"chuajunyu":[{"date":"2024-08-23","commitResults":[{"hash":"1613049018fa59b16ff750d9114701fb177b95bf","isMergeCommit":false,"messageTitle":"add new name Garfield and greeting and exit","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":10}}},{"hash":"f0f9d917ceba800bd84710188030dfd4e1199ca8","isMergeCommit":false,"messageTitle":"add user input and echo functionality","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":1}}},{"hash":"bc6ee7b121cb5cd73f0b69a38e84a195a1dc56c4","isMergeCommit":false,"messageTitle":"add `add` and `list` functionality","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":12}}},{"hash":"07a7e64a73c2eaa61c04e0d6eaf2d75c7e4d9ead","isMergeCommit":false,"messageTitle":"add `Task` class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":3}}},{"hash":"f42b269b7b7248d31d66c5209326b48e5d5a0aaa","isMergeCommit":false,"messageTitle":"add indicator of whether task is done or not in `Task` class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":1}}},{"hash":"275ba9144c62014c5fec05fd4aeb0a1f5c2c0b93","isMergeCommit":false,"messageTitle":"add functionality to `mark` and `unmark` tasks as done","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":0}}},{"hash":"221989d1467a4b6fdb8b8c3491cc756d4357d01f","isMergeCommit":false,"messageTitle":"add `Todo` subclass","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":3}}},{"hash":"9b63bc32b317001bfdb931318221f280081db04c","isMergeCommit":false,"messageTitle":"add `Deadline` class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":1}}},{"hash":"06df59ebf2dfd97cb84865ddf06aa31c1ac50eb5","isMergeCommit":false,"messageTitle":"add `event` class","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":0}}},{"hash":"e4e6bce934a0b3dd8ce069e333340519c0296cd0","isMergeCommit":false,"messageTitle":"add basic happy path test cases","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":8,"deletions":0},"bat":{"insertions":1,"deletions":1}}},{"hash":"698beb1243e622b8432d79fcc30ff7d8ec5509ea","isMergeCommit":false,"messageTitle":"simplify `Garfield` greeting ascii text","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":9}}},{"hash":"ac10ef4aa5f769b7f79768173a19814c82f1ed63","isMergeCommit":false,"messageTitle":"add naive error handling","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":0}}},{"hash":"5bfa49139e5366117262e5c739f8217aab43fb2b","isMergeCommit":false,"messageTitle":"add `delete` functionality","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}}]},{"date":"2024-08-27","commitResults":[{"hash":"c2ca40c36ad3003002845f3e1e556b817b73386e","isMergeCommit":false,"messageTitle":"Feature: Load saved task list on chatbot startup from a persistent .txt file","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0},"java":{"insertions":47,"deletions":0}}},{"hash":"3349605a684daa2a5cbdb070afe2d3704bea6355","isMergeCommit":false,"messageTitle":"Feature: Save current tasklist to persistent storage on local machine after every change","messageBody":"Previously, the tasklist only existed on local memory and would be erased each time the chatbot was restarted.\nCurrently, there is already a `./data/save.txt` file storing a representation of a tasklist, and the chatbot will\nload up the saved tasks in this list upon startup. But this list can only be manually editted.\n\nIt would be better if the save file is automatically updated programatically after every change the user made to\nthe in memory task list while the chatbot was running.\n\nLet\u0027s add an additional function `toSaveRepresentation` to the `Task` class and it\u0027s subclasses (`Todo`, `Deadline` and `Event`)\nwhich will generate a String save representation to be stored in the save file. At the start of the user input loop\nin the chatbot, Let\u0027s store the save representation of every task in the taskList into the save file.\n","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":4},"java":{"insertions":42,"deletions":1}}},{"hash":"7f78886a823f31a3931b51d679dbdb7c58834599","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"5cfe1177aa0047e96fce6231c2ab469554ffe4ae","isMergeCommit":false,"messageTitle":"Chore: Remove `data/save.txt` from being tracked and add it to `.gitignore`","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":0}}}]},{"date":"2024-08-28","commitResults":[{"hash":"8ab5b53c1e85468e48e26791801e360421d441c2","isMergeCommit":false,"messageTitle":"Feature: Add datetime parsing and formatting for `Deadline` and `Event` classes","messageBody":"Previously, the DateTime for the Deadline and Event classes were stored as string. This made it\nnot very clear on the DateTime and also means we cannot implement features such as search by DateTime\nin the future.\n\nLet\u0027s standardise the DateTime input to YYYY-MM-DD HH:mm (24 hour format). We can then parse this into\na Java `LocalDateTime` object and format it into a more clear and informative string.\n","fileTypesAndContributionMap":{"java":{"insertions":64,"deletions":14}}},{"hash":"2fd236241acc2497653c853f58c87b549b3b1008","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"dfd57d1a89cad517951d437a7bb238fa885803e0","isMergeCommit":false,"messageTitle":"Refactor: Add Ui class to handle all interactions with the user.","messageBody":"Previously, the Garfield class handled all interactions with the user such as printing to screen and\nscanning for user input.\n\nThis makes the Garfield class bloated as it also contained other logic such as parsing the user input commands and\nexecuting the services for those commands.\n\nLet\u0027s abstract all user interactions such as the printing of messages to the screen and scanning of user input\ninto a new ui class.\n","fileTypesAndContributionMap":{"java":{"insertions":104,"deletions":59}}}]},{"date":"2024-08-29","commitResults":[{"hash":"e0efe55d41f26583c7d9623d3fd6482b7fdff1aa","isMergeCommit":false,"messageTitle":"Feature: Add Storage class to deal with loading and saving tasks from file","messageBody":"Previously, the loading and saving of tasks was handled directly in the Garfield class. This made\nthe class bloated and hard to maintain.\n\nThe loading and saving of tasks should be abstracted into a separate class to be handled.\n\nLet\u0027s create a Storage class to handle this abstraction.\n","fileTypesAndContributionMap":{"java":{"insertions":112,"deletions":67}}},{"hash":"9cb67fa2b1a3ae91ed5a8743319a38e9dd6af19a","isMergeCommit":false,"messageTitle":"Feature: Add TaskList class to wrap the task list","messageBody":"Previously, the task list was implemented as an ArrayList object in the Garfield class, and the Garfield class\u0027s logic\ndirectly interfaced with it.\n\nA better way would be to encapsulate the ArrayList in a class and provide methods that would handle the details of adding,\ndeleting, marking and unmarking tasks.\n\nLet\u0027s create a TaskList class to do that.\n","fileTypesAndContributionMap":{"java":{"insertions":89,"deletions":26}}},{"hash":"86902d5965a617127327379f1a1e0fb6e0072aaa","isMergeCommit":false,"messageTitle":"Feature: Add `getTaskDescription` getter method to `Task` class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"cfb1eb040e6ca996d7ff3c3039b6fcd97334d7bc","isMergeCommit":false,"messageTitle":"Feature: Add new `GarfieldException` class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"bfd3e4903b5d98f65e17305d27b2742e836dcdfd","isMergeCommit":false,"messageTitle":"Refactor: Add `Parser` Class and `Command` abstract class and subclasses","messageBody":"Previously, parsing of user input was handled by Garfield class. This made the Garfield class bloated\nand hard to maintain, with lack of abstraction.\n\nIdeally, the Garfield class should be simpler, by abstracting out the parsing logic into another class,\nand also abstracting out the logic of executing the commands into another class.\n\nLet\u0027s add the `Parser` and `Command` classes to handle the former and latter abstractions respectively.\n","fileTypesAndContributionMap":{"java":{"insertions":263,"deletions":172}}},{"hash":"9b67e62242bc9207fd51bdb56f2abe322ef9c8de","isMergeCommit":false,"messageTitle":"Add `showError` and `showEnding` methods to Ui class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":2}}},{"hash":"5d84c9511cb32c1a3e32bd17e27f299285f76510","isMergeCommit":false,"messageTitle":"Feature: Throw GarfieldException where appropriate and add better error messages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":56}}},{"hash":"177feb46b6e731309624c776cfd6f75b10fa38dc","isMergeCommit":false,"messageTitle":"Documentation: Add javadocs for Parser class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":0}}},{"hash":"bd749d058768edb5da15403e461c0458752d65da","isMergeCommit":false,"messageTitle":"Documentation: Add javadocs to TaskList class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":59,"deletions":0}}},{"hash":"9ca30565ab958f42a18e7087057352ebda47ce1a","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-MoreOOP\u0027","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"chuajunyu":{"java":747,"md":0,"fxml":0,"sh":0,"bat":1,"gradle":0,"txt":8}},"authorContributionVariance":{"chuajunyu":66284.945},"authorDisplayNameMap":{"chuajunyu":"CS2103T-F09-2 CHUA..N YU"}}
