{"authorDailyContributionsMap":{"muller317":[{"date":"2024-08-23","commitResults":[{"hash":"fd310298b1bd6c56557afd98f15c16ebe4ff9b24","isMergeCommit":false,"messageTitle":"deleted duke","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":10}}},{"hash":"7d6688b7cf0d190d33f49a127a7d9c0ab7947421","isMergeCommit":false,"messageTitle":"Level-0","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"b10c5c3f11d59641f6071dd33082f87fd8c64fa5","isMergeCommit":false,"messageTitle":"Level-1","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":1}}},{"hash":"9619f3c69e67d359ada3002fb012f213663cf5da","isMergeCommit":false,"messageTitle":"level-2","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":1}}},{"hash":"7192d05c117186737ebc099f42757a629c703b76","isMergeCommit":false,"messageTitle":"Level-3","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":3}}},{"hash":"093e0bfeb2e26f7cfe3cdbfb292e82a0215b2312","isMergeCommit":false,"messageTitle":"Level 4","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":4}}},{"hash":"aa05a5cdb7f0de9795187025b495bd0b96181e84","isMergeCommit":false,"messageTitle":"close scanner","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"4c12f9e114e2be7f11d03a32c8ce297108b8c9bb","isMergeCommit":false,"messageTitle":"A-TextUiTesting","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"bat":{"insertions":3,"deletions":1}}}]},{"date":"2024-08-24","commitResults":[{"hash":"0009b3972af93da18eaf3671a62ab4881fb2fa10","isMergeCommit":false,"messageTitle":"Level-5","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":106,"deletions":33}}},{"hash":"1996c0bdd3589e199c6accb403e537c1a5d6c3ca","isMergeCommit":false,"messageTitle":"Level-6","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":13}}}]},{"date":"2024-08-29","commitResults":[{"hash":"0ea9b01ce6a3f6f68e75749dbfff0ffa46c8ac46","isMergeCommit":false,"messageTitle":"bug","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"762496d86123d75e62429fe560f5c23d4dc85167","isMergeCommit":false,"messageTitle":"bug","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1},"bat":{"insertions":2,"deletions":3}}}]},{"date":"2024-08-31","commitResults":[{"hash":"1e341a3154775664b7c36b872dbbfb3dedb8e37b","isMergeCommit":false,"messageTitle":"reformat try and catch block","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":48}}},{"hash":"d3d2732e6b81cb2fe1c2c2a2f0a988cd2ec0a2fe","isMergeCommit":false,"messageTitle":"Level-7","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":0},"java":{"insertions":62,"deletions":3}}},{"hash":"d8d1e41fd48e7f7922d3afe9461d6f96c1cfeedf","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}}]},{"date":"2024-09-01","commitResults":[{"hash":"5459a88d6df6945272b48d94feecdb32b4aa37ac","isMergeCommit":false,"messageTitle":"Level 8. Dates and Times","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":311,"deletions":151}}},{"hash":"b2585290b5dec79f521b66f1896a6842bcbd42ce","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"53c9a84155da0f2e4cd889d4061563995110aa82","isMergeCommit":false,"messageTitle":"refactor: restructure Muller chatbot using OOP principles","messageBody":"- Extracted core functionality into separate classes to improve modularity:\n  - `Ui`: Handles all user interactions (input/output).\n  - `Storage`: Manages loading and saving tasks to/from a file.\n  - `Parser`: Parses user commands and creates corresponding Command objects.\n  - `TaskList`: Encapsulates the task list and provides methods for managing tasks.\n  - `Command` classes (`AddCommand`, `DeleteCommand`, `MarkCommand`, etc.): Implement specific actions and inherit from an abstract `Command` class.\n","fileTypesAndContributionMap":{"java":{"insertions":429,"deletions":263}}},{"hash":"3157c277da62268e154bcdf87cedcb5d98367fa8","isMergeCommit":true,"messageTitle":"Merge branch \u0027Branch-A-MoreOOP\u0027","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"7bbea65107c399104ece5919892059cd0b11f23d","isMergeCommit":false,"messageTitle":"refactor: organize classes into appropriate packages","messageBody":"- Moved classes into specific packages to improve modularity and maintainability:\n  - `muller.ui`: Contains classes related to user interaction.\n  - `muller.storage`: Manages loading and saving tasks from/to files.\n  - `muller.parser`: Handles command parsing.\n  - `muller.task`: Encapsulates task-related classes, including `Task` and `TaskList`.\n  - `muller.command`: Contains command execution classes such as `AddCommand`, `DeleteCommand`, `MarkCommand`, etc.\n\n- Updated import statements and compilation paths to reflect the new package structure.\n\nThis reorganization enhances the clarity of the codebase, making it easier to navigate.\n","fileTypesAndContributionMap":{"java":{"insertions":639,"deletions":564}}},{"hash":"4f2c156fecc6a088b336ac4392a2c50cab482d9a","isMergeCommit":true,"messageTitle":"Merge branch \u0027Branch-A-Packages\u0027","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{}},{"hash":"cdd3f088d23519fcf7c5a1d03689aff14d5815a5","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"e0226f9811be58791d50c5d11c907fa5e3e41740","isMergeCommit":false,"messageTitle":"build: add Gradle support to automate project builds","messageBody":"- Integrated Gradle into the project to automate build tasks, following the SE-EDU Gradle tutorial.\n- Configured the `build.gradle` file to handle project compilation, execution, and dependency management.\n- Added tasks to build and run the Muller application using Gradle.\n- Updated the project structure to be compatible with Gradle\u0027s build system.\n- This setup lays the foundation for further automation, including running JUnit tests and other tasks as the project progresses.\n\nThis change streamlines the build process and enhances project maintainability.\n","fileTypesAndContributionMap":{"gradle":{"insertions":6,"deletions":1},"java":{"insertions":377,"deletions":74}}},{"hash":"21487643dc164999554fdb6a810f658a94765681","isMergeCommit":true,"messageTitle":"Merge branch \u0027Branch-A-Gradle\u0027","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{}},{"hash":"b7d1278762780934e0a62c6b3ad60dc6f7588919","isMergeCommit":false,"messageTitle":"test: add JUnit tests for Task and TaskList classes","messageBody":"- Added JUnit tests for the Task class, covering methods like setDate().\n- Added JUnit tests for the TaskList class, covering methods like addTask() and deleteTask().\n- Configured Gradle to include JUnit for running tests.\n- Ensured tests are placed in the correct directory structure under src/test/java/muller.\n\nThese tests help ensure the reliability of the core task management functionalities.\n","fileTypesAndContributionMap":{"java":{"insertions":59,"deletions":1}}},{"hash":"7120c2657e2b0f177bb7d41330e31e7e1eb2b20c","isMergeCommit":true,"messageTitle":"Merge branch \u0027Branch-A-JUnit\u0027","messageBody":"","tags":["v1.0","A-Jar","A-JUnit"],"fileTypesAndContributionMap":{}},{"hash":"cfab8ca007d2f198521160d18c51eb8d2aa654ce","isMergeCommit":false,"messageTitle":"docs: add JavaDoc comments to classes and methods","messageBody":"- Added JavaDoc comments to all non-private classes and methods across the project.\n- Provided detailed descriptions of the purpose, parameters, and return values for each method.\n- Included comments for non-trivial private methods to improve code readability and maintainability.\n- Ensured that the JavaDoc comments adhere to standard conventions, making the codebase easier to understand for future developers.\n\nThis documentation enhances the clarity of the code and facilitates better collaboration and maintenance.\n","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":1}}},{"hash":"890e7fe94eb3363c8ff9e1f3ef25a0aa3cbb1a4c","isMergeCommit":true,"messageTitle":"Merge branch \u0027Branch-A-JavaDoc\u0027","messageBody":"","tags":["A-JavaDoc","A-CodingStandard"],"fileTypesAndContributionMap":{}},{"hash":"07005b09882a8e348a08013e7c65a501af70f2e7","isMergeCommit":false,"messageTitle":"feat: add find command to search tasks by keyword","messageBody":"- Implemented FindCommand to allow users to search for tasks by a keyword in the task description.\n- Updated Parser to recognize the \u0027find\u0027 command.\n- Added findTasksByKeyword method to TaskList to search tasks based on the keyword.\n- Enhanced Ui to display the list of tasks that match the search criteria.\n\nThis feature allows users to quickly locate specific tasks by searching for keywords in their descriptions.\n","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":82,"deletions":0}}},{"hash":"cbfc70e28cb12be69bdb7dbf68d51d8c575de1b0","isMergeCommit":true,"messageTitle":"Merge branch \u0027Branch-Level-9\u0027","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{}}]},{"date":"2024-09-05","commitResults":[{"hash":"14d41fd1a028b0e988617271ce2eec56544794cb","isMergeCommit":false,"messageTitle":"feat: implemented multiple name changes to variables and function names","messageBody":"-changed the variable name from c and p to command and parser respectively under run() in Muller.java.\n-changed the variable name inputs and type to commandInputs and taskType respectively under AddCommand.java.\n-delegated the print method under Ui.java by adding a new method showTaskAdded.\n-changed the variable name found to inFound under execute() in OnCommand.java\n-changed the function name doneIcon() to getDoneIcon() in Task.java\n-changed the function name toFileString() to converttoFileString() in Task.java\n-changed the function name size() to getSize() in TaskList.java\n\nOverall these changes increased the readability of the code\n","fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":46}}}]},{"date":"2024-09-06","commitResults":[{"hash":"65b0fcee0337869c087c7ed67d081bd96c040f1d","isMergeCommit":false,"messageTitle":"feat: implemented multiple name changes to variables and function names","messageBody":"-changed the variable name from c and p to command and parser respectively under run() in Muller.java.\n-changed the variable name inputs and type to commandInputs and taskType respectively under AddCommand.java.\n-delegated the print method under Ui.java by adding a new method showTaskAdded.\n-changed the variable name found to inFound under execute() in OnCommand.java\n-changed the function name doneIcon() to getDoneIcon() in Task.java\n-changed the function name toFileString() to converttoFileString() in Task.java\n-changed the function name size() to getSize() in TaskList.java\n\nOverall these changes increased the readability of the code\n","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1},"java":{"insertions":54,"deletions":46}}},{"hash":"6f80066ab7e776bb4b64cf160a7c6dfe2677bb5f","isMergeCommit":false,"messageTitle":"Revert \"feat: implemented multiple name changes to variables and function names\"","messageBody":"This reverts commit 65b0fcee0337869c087c7ed67d081bd96c040f1d.\n","fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":54}}},{"hash":"e8bfd2d3430c9dc8453d13e95274da6eca5a8d66","isMergeCommit":true,"messageTitle":"Merge branch \u0027Branch-A-Checkstyle\u0027","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{}}]},{"date":"2024-09-07","commitResults":[{"hash":"dd714ad39f729ceb66a942927b486876d045933e","isMergeCommit":false,"messageTitle":"feat: integrate JavaFX for GUI in the chatbot","messageBody":"- Implemented a graphical user interface (GUI) for the chatbot using JavaFX.\n- Created a basic layout for the chatbot with a text input field, a display area for messages, and a submit button.\n- Added event handling for user input to process commands and display chatbot responses in the GUI.\n- Refactored existing chatbot logic to work with the JavaFX.\n\nThis integration improves the user experience by replacing the text-based interface with a more intuitive graphical interface.\n","fileTypesAndContributionMap":{"gradle":{"insertions":16,"deletions":1},"txt":{"insertions":2,"deletions":1},"fxml":{"insertions":66,"deletions":0},"java":{"insertions":274,"deletions":121}}},{"hash":"cce284b30351e77b860edc9b695094ee7cc57d96","isMergeCommit":true,"messageTitle":"Merge branch \u0027Branch-A-Level-10\u0027","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{}}]},{"date":"2024-09-16","commitResults":[{"hash":"0f7529e4c60e0c9f745248f1f17b2fb5326f1fbb","isMergeCommit":false,"messageTitle":"Add assertions to ensure consistency","messageBody":"Several methods across the Parser, Task, Storage, and Ui classes currently rely on assumptions about valid input or object state that are not explicitly enforced.\n\nAssertions help catch programmer errors during development by ensuring that these assumptions are always met.\n\nThis commit introduces assertions to:\n\n    Validate non-null parameters in tasks, command, UI methods\n    Confirm task names are never null or empty\n    Check that internal states (e.g., task lists, input strings) are valid\n\nUsing assertions improves the reliability of the codebase by ensuring internal consistency and preventing unnoticed programmer mistakes during development. These assertions are disabled in production to avoid performance overhead.\n","fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":0}}},{"hash":"590eeec624c4265797e75a1467811579765a564b","isMergeCommit":true,"messageTitle":"Merge pull request #2 from muller317/branch-A-Assertions","messageBody":"Add assertions to ensure consistency","tags":["A-Assertions"],"fileTypesAndContributionMap":{}},{"hash":"c6079d00a92e023270d3f4f5cc48a18ae6394b50","isMergeCommit":false,"messageTitle":"Refactor command classes to reduce code duplication","messageBody":"The DeleteCommand, MarkCommand, and UnmarkCommand classes have duplicate code for validating task indices and checking numeric input.\n\nDuplicated validation logic can introduce inconsistencies and makes maintaining the codebase harder, as changes to validation logic need to be repeated across multiple files.\n\nThis commit extracts the common validation logic into a utility class CommandUtils to:\n\n    Centralize index and numeric validation\n    Improve code maintainability\n    Reduce duplication\n\nBy doing this, we ensure the validation logic is consistent across all relevant commands, making future changes easier to implement and reducing the risk of bugs.\n","fileTypesAndContributionMap":{"java":{"insertions":116,"deletions":53}}},{"hash":"e648bfc7cef48505bdb38683c8c547198012a3be","isMergeCommit":true,"messageTitle":"Merge pull request #3 from muller317/branch-A-CodeQuality","messageBody":"Refactor command classes to reduce code duplication","fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"muller317":{"java":1356,"md":0,"fxml":66,"sh":0,"bat":4,"gradle":23,"txt":6}},"authorContributionVariance":{"muller317":267355.03},"authorDisplayNameMap":{"muller317":"CS2103T-T17-2 HU H.. RUI"}}
