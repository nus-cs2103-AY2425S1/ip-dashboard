[{"path":"src/main/java/DeadlinesTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthiiii03"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shruthiiii03"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shruthiiii03"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shruthiiii03"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shruthiiii03"},"content":"public class DeadlinesTask extends Task{","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shruthiiii03"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shruthiiii03"},"content":"    // need to create the formatter that will be the same for all the different dates and times throughout","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shruthiiii03"},"content":"    // hence the formatter needs to be static and final","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shruthiiii03"},"content":"    // but depends on whether time is given or not, so 2 different methods","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shruthiiii03"},"content":"    protected static final DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shruthiiii03"},"content":"    protected static final DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shruthiiii03"},"content":"    public DeadlinesTask(String description, String deadline) throws InvalidDeadlineException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shruthiiii03"},"content":"        super(description);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shruthiiii03"},"content":"        DateTimeFormatter toLocalDateTimeF \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shruthiiii03"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shruthiiii03"},"content":"            this.deadline \u003d LocalDateTime.parse(deadline, toLocalDateTimeF);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shruthiiii03"},"content":"            // if this doesnt work, prompt users to send the task correctly","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shruthiiii03"},"content":"        } catch(DateTimeParseException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shruthiiii03"},"content":"            throw new InvalidDeadlineException(\"Error saving task. You have given an invalid date-time format.\\n\" +","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shruthiiii03"},"content":"                    \"Please use this format, yyyy-MM-dd HHmm.\\n\" + \"An example is 2024-10-15 1800\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shruthiiii03"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shruthiiii03"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shruthiiii03"},"content":"        return this.deadline;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shruthiiii03"},"content":"    public String getDeadlineToString(LocalDateTime time) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shruthiiii03"},"content":"        //toLocalTime() extracts time from datetime object","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Shruthiiii03"},"content":"        //create default time","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shruthiiii03"},"content":"        if (deadline \u003d\u003d null) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Shruthiiii03"},"content":"            return \"No deadline set\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Shruthiiii03"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Shruthiiii03"},"content":"        LocalTime timeChecker \u003d LocalDateTime.of(0, 1, 1, 0, 0).toLocalTime();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Shruthiiii03"},"content":"        if(time.toLocalTime() \u003d\u003d timeChecker) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Shruthiiii03"},"content":"            // means dont have time specified","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Shruthiiii03"},"content":"            return time.format(dateFormatter);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Shruthiiii03"},"content":"        } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Shruthiiii03"},"content":"            return time.format(dateTimeFormatter);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Shruthiiii03"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Shruthiiii03"},"content":"    @Override","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Shruthiiii03"},"content":"    public String printTask() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Shruthiiii03"},"content":"        return \"[D]\" + super.printTask() + \" (by: \" + getDeadlineToString(this.deadline) + \")\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Shruthiiii03"},"content":"    } // this is for human readable string","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Shruthiiii03"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Shruthiiii03"},"content":"    public String printFileFormat() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Shruthiiii03"},"content":"        return \"D | \" + (isDone ? 1 : 0) + \" | \" + this.description + \" | \" + getDeadlineToString(this.deadline);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Shruthiiii03"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"Shruthiiii03":59}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthiiii03"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shruthiiii03"},"content":"public class EventTask extends Task {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shruthiiii03"},"content":"    protected String start;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shruthiiii03"},"content":"    protected String end;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shruthiiii03"},"content":"    public EventTask(String description, String start, String end) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shruthiiii03"},"content":"        super(description);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shruthiiii03"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shruthiiii03"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shruthiiii03"},"content":"    // must make the description correctly","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shruthiiii03"},"content":"    @Override","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shruthiiii03"},"content":"    public String printTask() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shruthiiii03"},"content":"        return \"[E]\" + super.printTask() +  \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shruthiiii03"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shruthiiii03"},"content":"    public String printFileFormat() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shruthiiii03"},"content":"        return \"E | \" + (isDone ? 1 : 0) + \" | \" + description + \" | \" + start + \" | \" + end;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shruthiiii03"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"Shruthiiii03":23}},{"path":"src/main/java/IncompleteDescException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthiiii03"},"content":"public class IncompleteDescException extends Exception {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shruthiiii03"},"content":"    public IncompleteDescException(String message) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shruthiiii03"},"content":"        super(message);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shruthiiii03"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"Shruthiiii03":5}},{"path":"src/main/java/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthiiii03"},"content":"public class InvalidDeadlineException extends Exception {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shruthiiii03"},"content":"    public InvalidDeadlineException(String message) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shruthiiii03"},"content":"        super(message);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shruthiiii03"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"Shruthiiii03":5}},{"path":"src/main/java/Prince.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthiiii03"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shruthiiii03"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shruthiiii03"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shruthiiii03"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shruthiiii03"},"content":"import java.util.ArrayList; // because i need to create a list of String items","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shruthiiii03"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shruthiiii03"},"content":"import java.io.File;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shruthiiii03"},"content":"public class Prince {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shruthiiii03"},"content":"    private static final String dirPath \u003d \"./data\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shruthiiii03"},"content":"    private static final String filePath \u003d dirPath + File.separator + \"prince.txt\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shruthiiii03"},"content":"    //prince.txt is a file that will automatically be created if it doesnt exist","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shruthiiii03"},"content":"    //stores the tasks","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shruthiiii03"},"content":"    public enum TaskType {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shruthiiii03"},"content":"        todo,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shruthiiii03"},"content":"        deadline,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shruthiiii03"},"content":"        event","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shruthiiii03"},"content":"    static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e(); //static variable","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shruthiiii03"},"content":"    public static String conversation(String command) throws UnknownWordException, IncompleteDescException{","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shruthiiii03"},"content":"        /*if(command.equals(\"bye\")) { //string cannot do \u003d\u003d","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shruthiiii03"},"content":"            return \"Bye! Hope to see you again soon!\";*/","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shruthiiii03"},"content":"        if(command.equals(\"list\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shruthiiii03"},"content":"            return listDisplay(list);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shruthiiii03"},"content":"        } else if(command.startsWith(\"mark\") || command.startsWith(\"unmark\") || command.startsWith(\"delete\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shruthiiii03"},"content":"            // used the library function .startsWith() to match the prefix to mark/unmark","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shruthiiii03"},"content":"            // use.split(\"\") to split up the words","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shruthiiii03"},"content":"            // use.parseInt(num) to extract integer from the string","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shruthiiii03"},"content":"            // if mark, then extract integer and mark that task of the list as done","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Shruthiiii03"},"content":"            // if unmark then extract integer and unmark that task of the list as not done","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Shruthiiii03"},"content":"            String[] stringList \u003d command.split(\" \");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Shruthiiii03"},"content":"            int taskNum \u003d Integer.parseInt(stringList[1]); //second word is the number","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Shruthiiii03"},"content":"            Task t \u003d list.get(taskNum - 1);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Shruthiiii03"},"content":"            if (taskNum \u003c 1 || taskNum \u003e list.size()) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Shruthiiii03"},"content":"                return \"Task number is out of range. Please retry.\";","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Shruthiiii03"},"content":"            }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Shruthiiii03"},"content":"            if(stringList[0].equals(\"mark\")) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Shruthiiii03"},"content":"                return t.markDone();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Shruthiiii03"},"content":"            } else if(stringList[0].equals(\"unmark\")){","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Shruthiiii03"},"content":"                return t.markIncomplete();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Shruthiiii03"},"content":"            } else {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Shruthiiii03"},"content":"                return taskDelDescription(taskNum, t);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Shruthiiii03"},"content":"            }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Shruthiiii03"},"content":"        } else if(checkCommandLength(command)) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Shruthiiii03"},"content":"            if(command.equals(\"todo\") || command.equals(\"deadline\") || command.equals(\"event\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Shruthiiii03"},"content":"                throw new IncompleteDescException(\"OH NO! Description of the task cannot be empty!\\n \" +","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Shruthiiii03"},"content":"                        \"Please retry with a command like this format \u003ctask type\u003e \u003ctask\u003e\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Shruthiiii03"},"content":"            } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Shruthiiii03"},"content":"                throw new UnknownWordException(\"Sorry, I do not know what that means :(\\n \" +","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Shruthiiii03"},"content":"                        \"Please try again with a proper command.\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Shruthiiii03"},"content":"            }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Shruthiiii03"},"content":"        } else {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Shruthiiii03"},"content":"            // according to the first word, create a new specific task","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Shruthiiii03"},"content":"            // split into two, first word is type, and the second phrase is task","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Shruthiiii03"},"content":"            String[] split \u003d command.split(\" \", 2);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Shruthiiii03"},"content":"            String type \u003d split[0];","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Shruthiiii03"},"content":"            String stringTask \u003d split[1];","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Shruthiiii03"},"content":"            if(type.equals(TaskType.todo.toString())) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Shruthiiii03"},"content":"                ToDoTask tsk \u003d new ToDoTask(stringTask);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Shruthiiii03"},"content":"                addTask(tsk);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Shruthiiii03"},"content":"                return taskAddDescription(tsk);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Shruthiiii03"},"content":"            } else if (type.equals(TaskType.deadline.toString())) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Shruthiiii03"},"content":"                // before splitting further in the deadline, need to check if correct format","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Shruthiiii03"},"content":"                try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Shruthiiii03"},"content":"                    // split again after by","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Shruthiiii03"},"content":"                    String[] splitAgain \u003d stringTask.split(\" /by \", 2);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Shruthiiii03"},"content":"                    String taskDes \u003d splitAgain[0];","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Shruthiiii03"},"content":"                    String deadline \u003d splitAgain[1];","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Shruthiiii03"},"content":"                    DeadlinesTask tsk \u003d new DeadlinesTask(taskDes, deadline);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Shruthiiii03"},"content":"                    addTask(tsk);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Shruthiiii03"},"content":"                    return taskAddDescription(tsk);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Shruthiiii03"},"content":"                } catch(InvalidDeadlineException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Shruthiiii03"},"content":"                    return e.getMessage();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Shruthiiii03"},"content":"                }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Shruthiiii03"},"content":"            } else {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Shruthiiii03"},"content":"                // split again after from","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Shruthiiii03"},"content":"                // split again after to","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Shruthiiii03"},"content":"                String[] firstSplit \u003d stringTask.split(\" /from \", 2);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Shruthiiii03"},"content":"                String taskDes \u003d firstSplit[0];","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Shruthiiii03"},"content":"                String second \u003d firstSplit[1];","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Shruthiiii03"},"content":"                String[] secondSplit \u003d second.split(\" /to \", 2);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Shruthiiii03"},"content":"                String from \u003d secondSplit[0];","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Shruthiiii03"},"content":"                String to \u003d secondSplit[1];","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Shruthiiii03"},"content":"                EventTask tsk \u003d new EventTask(taskDes, from, to);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Shruthiiii03"},"content":"                addTask(tsk);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Shruthiiii03"},"content":"                return taskAddDescription(tsk);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Shruthiiii03"},"content":"            }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Shruthiiii03"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Shruthiiii03"},"content":"    public static boolean checkCommandLength(String command) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Shruthiiii03"},"content":"        String[] split \u003d command.split(\" \");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Shruthiiii03"},"content":"        return split.length \u003d\u003d 1;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Shruthiiii03"},"content":"    public static String listDisplay(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Shruthiiii03"},"content":"        int length \u003d list.size();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Shruthiiii03"},"content":"        // use String Builder to ensure that the string can be created on another line","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Shruthiiii03"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Shruthiiii03"},"content":"        for(int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Shruthiiii03"},"content":"            sb.append(i + 1 + \". \" + list.get(i).printTask()).append(\"\\n\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Shruthiiii03"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Shruthiiii03"},"content":"        return \"Here are the tasks in your list:\\n\" + sb.toString();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Shruthiiii03"},"content":"    public static void addTask(Task task){","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Shruthiiii03"},"content":"        // add task to the List","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Shruthiiii03"},"content":"        // return a string","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Shruthiiii03"},"content":"        list.add(task);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Shruthiiii03"},"content":"        //return \"added: \" + task.getDescription();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Shruthiiii03"},"content":"    public static String taskAddDescription(Task task) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Shruthiiii03"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + \"  \" + task.printTask() + \"\\n\" +","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Shruthiiii03"},"content":"                \"Now you have \" + list.size() + \" tasks in the list\";","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Shruthiiii03"},"content":"    public static String taskDelDescription(int num, Task task){","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Shruthiiii03"},"content":"        list.remove(num - 1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Shruthiiii03"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + \"  \" + task.printTask() + \"\\n\" +","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Shruthiiii03"},"content":"                \"Now you have \" + list.size() + \" tasks in the list\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Shruthiiii03"},"content":"    public static void createListFile() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Shruthiiii03"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Shruthiiii03"},"content":"            //create a directory called data and if it doesnt exist then create it using the function .mkdir()","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Shruthiiii03"},"content":"            File dir \u003d new File(dirPath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Shruthiiii03"},"content":"            if(!dir.exists()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Shruthiiii03"},"content":"                dir.mkdir();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Shruthiiii03"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Shruthiiii03"},"content":"            //create the file and if the file doesnt exist then create using .createNewFile()","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Shruthiiii03"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Shruthiiii03"},"content":"            if(!file.exists()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Shruthiiii03"},"content":"                file.createNewFile();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Shruthiiii03"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Shruthiiii03"},"content":"        } catch (IOException e) { //unchecked exception","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Shruthiiii03"},"content":"            System.out.println(\"Error creating file. Please try again later.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Shruthiiii03"},"content":"            // to have a clearer idea of what the exception is and where the error is, use the printStackTrace()","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Shruthiiii03"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Shruthiiii03"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Shruthiiii03"},"content":"    public static void pushTasksToFile(String filePath, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Shruthiiii03"},"content":"        //use inbuilt functions like FileWriter - that opens file at filepath, if doesnt exist, creates one","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Shruthiiii03"},"content":"        //PrintWriter - wraps filewriter with printwriter so that can use inbuilt functions for formatting","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Shruthiiii03"},"content":"        try(PrintWriter printwriter \u003d new PrintWriter(new FileWriter(filePath))) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Shruthiiii03"},"content":"            int length \u003d list.size();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Shruthiiii03"},"content":"            for(int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Shruthiiii03"},"content":"                printwriter.println(list.get(i).printFileFormat());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Shruthiiii03"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Shruthiiii03"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Shruthiiii03"},"content":"            System.out.println(\"There was an error saving tasks, please try again later.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Shruthiiii03"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Shruthiiii03"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Shruthiiii03"},"content":"    public static void loadTasksFromFile(String filePath) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Shruthiiii03"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Shruthiiii03"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Shruthiiii03"},"content":"            if(!file.exists()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Shruthiiii03"},"content":"                System.out.println(\"No file found, list is empty so far.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Shruthiiii03"},"content":"            } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Shruthiiii03"},"content":"                Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Shruthiiii03"},"content":"                while(sc.hasNextLine()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Shruthiiii03"},"content":"                    String taskString \u003d sc.nextLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Shruthiiii03"},"content":"                    Task task \u003d getTaskFromFile(taskString);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Shruthiiii03"},"content":"                    if(task !\u003d null) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Shruthiiii03"},"content":"                        addTask(task);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Shruthiiii03"},"content":"                    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Shruthiiii03"},"content":"                }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Shruthiiii03"},"content":"                sc.close();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Shruthiiii03"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Shruthiiii03"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Shruthiiii03"},"content":"            System.out.println(\"There was an error loading tasks, please try again later.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Shruthiiii03"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Shruthiiii03"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Shruthiiii03"},"content":"    public static Task getTaskFromFile(String taskString) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Shruthiiii03"},"content":"        // need to split and add accordingly","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Shruthiiii03"},"content":"        // first is the tasktype, then the progress, then the description, then the deadlines","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Shruthiiii03"},"content":"        // but splitting according to \" | \" does not work as it has a special meaning","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Shruthiiii03"},"content":"        // to take it as literal character, u need to put \\\\ in front","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Shruthiiii03"},"content":"        String[] splits \u003d taskString.split(\" \\\\| \");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Shruthiiii03"},"content":"        String taskType \u003d splits[0];","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Shruthiiii03"},"content":"        String progress \u003d splits[1];","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Shruthiiii03"},"content":"        String taskdes \u003d splits[2];","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Shruthiiii03"},"content":"        boolean isDone \u003d splits[1].equals(\"1\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Shruthiiii03"},"content":"        if(taskType.equals(\"T\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Shruthiiii03"},"content":"            ToDoTask task \u003d new ToDoTask(taskdes);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Shruthiiii03"},"content":"            if(isDone) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Shruthiiii03"},"content":"                task.markDone();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Shruthiiii03"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Shruthiiii03"},"content":"            return task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Shruthiiii03"},"content":"        } else if(taskType.equals(\"D\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Shruthiiii03"},"content":"            try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Shruthiiii03"},"content":"                String deadline \u003d splits[3];","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Shruthiiii03"},"content":"                DeadlinesTask task \u003d new DeadlinesTask(taskdes, deadline);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Shruthiiii03"},"content":"                if (isDone) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Shruthiiii03"},"content":"                    task.markDone();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Shruthiiii03"},"content":"                }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Shruthiiii03"},"content":"                return task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Shruthiiii03"},"content":"            } catch(InvalidDeadlineException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Shruthiiii03"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Shruthiiii03"},"content":"                return null;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Shruthiiii03"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Shruthiiii03"},"content":"        } else if(taskType.equals(\"E\")){","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Shruthiiii03"},"content":"            String from \u003d splits[3];","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Shruthiiii03"},"content":"            String to \u003d splits[4];","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Shruthiiii03"},"content":"            EventTask task \u003d new EventTask(taskdes, from, to);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Shruthiiii03"},"content":"            if(isDone) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Shruthiiii03"},"content":"                task.markDone();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Shruthiiii03"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Shruthiiii03"},"content":"            return task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Shruthiiii03"},"content":"        } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Shruthiiii03"},"content":"            System.out.println(\"Unknown task description included. Use only existing task types - T, D, E\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Shruthiiii03"},"content":"            return null;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Shruthiiii03"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Shruthiiii03"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Shruthiiii03"},"content":"        createListFile();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Shruthiiii03"},"content":"        loadTasksFromFile(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Shruthiiii03"},"content":"        // if any words, repeat scanning, but the moment the word is bye,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Shruthiiii03"},"content":"        // then exit and print bye","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Shruthiiii03"},"content":"        String line \u003d \"\";","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Shruthiiii03"},"content":"        System.out.println(\"Hello! I\u0027m Prince!\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Shruthiiii03"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Shruthiiii03"},"content":"        System.out.println(\"What would you like me to add to your TODO list today?\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Shruthiiii03"},"content":"        line \u003d scanner.nextLine(); // what the user replied","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Shruthiiii03"},"content":"        while(!line.equals(\"bye\")) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Shruthiiii03"},"content":"            try {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Shruthiiii03"},"content":"                System.out.println(conversation(line));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Shruthiiii03"},"content":"            } catch (IncompleteDescException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Shruthiiii03"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Shruthiiii03"},"content":"            } catch (UnknownWordException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Shruthiiii03"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Shruthiiii03"},"content":"            }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Shruthiiii03"},"content":"            System.out.println(\"How else would you like me to edit your TODO list today?\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Shruthiiii03"},"content":"            line \u003d scanner.nextLine();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Shruthiiii03"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Shruthiiii03"},"content":"        //when bye is said","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Shruthiiii03"},"content":"        pushTasksToFile(filePath, list);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Shruthiiii03"},"content":"        System.out.println(\"Bye! Hope to see you again soon!\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Shruthiiii03"},"content":"        /*try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Shruthiiii03"},"content":"            System.out.println(conversation(line));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Shruthiiii03"},"content":"        } catch (IncompleteDescException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Shruthiiii03"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Shruthiiii03"},"content":"        } catch (UnknownWordException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Shruthiiii03"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Shruthiiii03"},"content":"        }*/","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Shruthiiii03"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"Shruthiiii03":286}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthiiii03"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shruthiiii03"},"content":"    protected String description;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shruthiiii03"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shruthiiii03"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shruthiiii03"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shruthiiii03"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shruthiiii03"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shruthiiii03"},"content":"        return this.description;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shruthiiii03"},"content":"    public void setProgress(boolean b) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shruthiiii03"},"content":"        this.isDone \u003d b;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shruthiiii03"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Shruthiiii03"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Shruthiiii03"},"content":"    public String printTask() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Shruthiiii03"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Shruthiiii03"},"content":"    public abstract String printFileFormat();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Shruthiiii03"},"content":"    public String markDone() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Shruthiiii03"},"content":"        this.setProgress(true);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Shruthiiii03"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n  \" + this.printTask();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Shruthiiii03"},"content":"    public String markIncomplete() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Shruthiiii03"},"content":"        this.setProgress(false);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Shruthiiii03"},"content":"        return \"OK! I\u0027ve marked this task as not done yet:\\n  \" + this.printTask();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Shruthiiii03"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"Shruthiiii03":36}},{"path":"src/main/java/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthiiii03"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shruthiiii03"},"content":"    public ToDoTask(String description) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shruthiiii03"},"content":"        super(description);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shruthiiii03"},"content":"    @Override","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shruthiiii03"},"content":"    public String printTask() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shruthiiii03"},"content":"        return \"[T]\" + super.printTask();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shruthiiii03"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shruthiiii03"},"content":"    public String printFileFormat() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Shruthiiii03"},"content":"        return \"T | \" + (isDone ? 1 : 0) + \" | \" + description;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Shruthiiii03"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"Shruthiiii03":16}},{"path":"src/main/java/UnknownWordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthiiii03"},"content":"public class UnknownWordException extends Exception {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shruthiiii03"},"content":"    public UnknownWordException(String message) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shruthiiii03"},"content":"        super(message);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shruthiiii03"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shruthiiii03"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shruthiiii03"},"content":"// just create a method in prince, called exceptionscaller then for each issue throw the speciifc exception","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Shruthiiii03"},"content":"// have a exception for (not knowing a particular command)","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Shruthiiii03"},"content":"// have an exception for (only giving the first task type)","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Shruthiiii03"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Shruthiiii03"},"content":"// try splitting, if cnanot split then raises error, i wanna go to a method first that will check","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Shruthiiii03"},"content":"// if the word is either of the types, then throw incomeplete exception","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Shruthiiii03"},"content":"// if not throw unknown exception","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"Shruthiiii03":13}},{"path":"src/main/java/data/prince.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Shruthiiii03"},"content":"T | 0 | print task","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shruthiiii03"},"content":"D | 1 | shower | Dec 21 2023, 6:00 pm","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"Shruthiiii03":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Shruthiiii03"},"content":"todo play basketball","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Shruthiiii03"},"content":"deadline return book /by Tuesday","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Shruthiiii03"},"content":"event project meeting /from Mon 9pm /to 12am","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Shruthiiii03"},"content":"list","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Shruthiiii03"},"content":"mark 1","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Shruthiiii03"},"content":"unmark 1","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Shruthiiii03"},"content":"bye","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"Shruthiiii03":7}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Shruthiiii03"},"content":"java -classpath ../bin Prince \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Shruthiiii03":1,"-":37}}]
