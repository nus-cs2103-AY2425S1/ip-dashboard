{"authorDailyContributionsMap":{"zzawook":[{"date":"2024-08-22","commitResults":[{"hash":"6cd9572825bf8c61f5b37181ca709ce802d6e4f7","isMergeCommit":false,"messageTitle":"Renamed the project to \"Dongji\", which means a friend in Korean, and changed all reference to Duke correspondingly","messageBody":"Added exit message, and separated greeting and exit message to separate function\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":10},"bat":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1},"md":{"insertions":4,"deletions":4}}},{"hash":"14fe527c8413b2e83cba057a196142230bc95d28","isMergeCommit":false,"messageTitle":"Added echo feature to echo the user input","messageBody":"Created class declaration Dongji and moved all chatbot functionalities to object level declaration\n","fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":5}}},{"hash":"f175ebcbab5fb80eceabdeeb8b3ef84d69b7bcb0","isMergeCommit":false,"messageTitle":"Added \u0027add task\u0027 feature and \u0027list task\u0027 feature as new functions","messageBody":"Commented out unused \u0027echo\u0027 function\n","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":3}}},{"hash":"7fce568f43f75f8737af13f0f57aa316567ada6f","isMergeCommit":false,"messageTitle":"Encapsulated task as new Task class, and defined its behaviors","messageBody":"Organized the printing messages\n","fileTypesAndContributionMap":{"java":{"insertions":79,"deletions":11}}},{"hash":"a0cc56e1f90e7aee8af50e0da2ac02cc7e10a39c","isMergeCommit":false,"messageTitle":"Added 3 types of new Tasks (Event, Todo, Deadline) as subclass of Task, and muted Tasks as abstract.","messageBody":"Implemented corresponding toString behaviors according to property of each type.\n","fileTypesAndContributionMap":{"java":{"insertions":88,"deletions":5}}},{"hash":"e50513479c6a5dc571f58b130adbf4ac8564548a","isMergeCommit":false,"messageTitle":"Implemented error-handling using Exceptions.","messageBody":"Created custom exceptions to handle exceptions encountered in Dongji project\n","fileTypesAndContributionMap":{"java":{"insertions":132,"deletions":40}}},{"hash":"b49aa469d63064162ffe962caa56cf20b5e46493","isMergeCommit":false,"messageTitle":"Added \u0027delete\u0027 feature","messageBody":"Added new exception that handles deleting, marking, and unmarking invalid task index.\n","tags":["v0.1"],"fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":5}}},{"hash":"dd56952147e39c6cf06b385c2a6926862153fe4f","isMergeCommit":false,"messageTitle":"Resolved compilation error in previous version","messageBody":"","tags":["v0.1.1"],"fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":5}}},{"hash":"f3e038dba021b43a14c35449e54b406de0c7083c","isMergeCommit":false,"messageTitle":"Created static factory of each task type and moved all object generation logic to each respective task type\u0027s class.","messageBody":"","tags":["v0.1.2"],"fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":41}}},{"hash":"df93d3d7b69e7b68b19c2fa6a3efaae4f644d640","isMergeCommit":false,"messageTitle":"Added semi-automated testing using shell script","messageBody":"Improved Deadline\u0027s exception message\n","fileTypesAndContributionMap":{"txt":{"insertions":18,"deletions":0},"java":{"insertions":10,"deletions":2},"sh":{"insertions":34,"deletions":0}}},{"hash":"f071404e6b337875c3caedc19795d48419c4c0b4","isMergeCommit":false,"messageTitle":"Refactored Dongji class by creating TaskList and encapsulating list related operations into TaskList class","messageBody":"Changed to use default runtest.sh provided from scaffold code given.\n","tags":["v0.1.3"],"fileTypesAndContributionMap":{"txt":{"insertions":18,"deletions":18},"java":{"insertions":176,"deletions":96},"bat":{"insertions":0,"deletions":21},"sh":{"insertions":2,"deletions":40}}}]},{"date":"2024-08-29","commitResults":[{"hash":"0495e1e8cf78c057fb0669a87c57f4e08ef6ee5a","isMergeCommit":false,"messageTitle":"Refactor the code to use higher level of OOP","messageBody":"Classes in the project, especially the Dongji class, are undertaking several roles and \"reasons to change\" thus going against Single Responsibility Principle.\n\nThe design has low scalability and will make feature addition and future changes difficult.\n\nIntroduce new component \u0027Parser\u0027 to undertake parsing of the string command and generate corresponding Command instance. Introduce the Command interface and its implementations to represent Command internally, thus take advantage of polymorphism. Introduce Ui component which undertakes displaying of informations.\n\nDividing the role of Dongji to only undertake the entrance point role will improve scalabilitty and maintainability by dividing the high level logic (Command, Task) and low level logic (Ui) in separate component. This will also make the code in Dongji class more simple and legible as well.\n\nLet\u0027s,\n* Separate display logic into Ui component\n* Separate parsing logic into Parser component\n* Separate command specific execution details into Command interface and its implementations\n","fileTypesAndContributionMap":{"java":{"insertions":340,"deletions":176}}},{"hash":"d8c9ec36654b9294890156269f8cb633ab88c241","isMergeCommit":false,"messageTitle":"Add new feature: Saving of working tasks","messageBody":"When the application terminates, all the task data user is working on gets deleted because the application didn\u0027t have persistence layer.\n\nFor flawless user experience, the task should be able to persist even after the application terminates, so that when user comes back they can continue working on their tasks.\n\nAdd interface Persistence that defines how persistence layer should behave, and an implentation Txt that defines logics to save onto .txt file format.\n\nProgramming on interface Persistence will enable future addition of saving on other file formats, which grant additional scalability and flexibility. Adding Txt implementation will grant basic savings functionality based on Persistence interface without losing significant feature at the moment.\n\nLet\u0027s add Saving feature by adding Persistence interface and its implementation Txt.\n","fileTypesAndContributionMap":{"java":{"insertions":198,"deletions":14}}}]}]},"authorFileTypeContributionMap":{"zzawook":{"java":816,"md":4,"fxml":0,"sh":2,"bat":0,"gradle":0,"txt":18}},"authorContributionVariance":{"zzawook":102737.73},"authorDisplayNameMap":{"zzawook":"CS2103T-T08-2 KIM ..YEOK"}}
