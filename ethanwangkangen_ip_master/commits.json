{"authorDailyContributionsMap":{"ethanwangkangen":[{"date":"2024-08-21","commitResults":[{"hash":"eb2d142eef4c0ce8f17fc3cfb14b13992b13ce64","isMergeCommit":false,"messageTitle":"Create basic chatbot skeleton","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":10}}},{"hash":"e4ee4165e50a9f0862a320b86ddc0f74890df636","isMergeCommit":false,"messageTitle":"Add echoing function to chatbot","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":2}}},{"hash":"06a60118b94234f5d6cd58d45869e577a657056b","isMergeCommit":false,"messageTitle":"Add list function to chatbot","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":2}}}]},{"date":"2024-08-23","commitResults":[{"hash":"52ddf696680d0b0a60159ea995770f81e1b9c0cd","isMergeCommit":false,"messageTitle":"Add mark as done","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":52,"deletions":5}}},{"hash":"2e0eb42eb6d69db06cfb04373952eb3b85fbebfa","isMergeCommit":false,"messageTitle":"Add Todo, Deadline, Event","messageBody":"","tags":["Level-4","A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":98,"deletions":6}}},{"hash":"fdd465fcd1818b5ddd019c9bf6b780b123d08060","isMergeCommit":false,"messageTitle":"Add exceptions","messageBody":"","tags":["Level-5","A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":92,"deletions":55}}},{"hash":"53823e4a7937e1b149494f368b31c6f89089a7ac","isMergeCommit":false,"messageTitle":"Add delete function","messageBody":"","tags":["Level-6","A-Collections"],"fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"3f132de6131cd0cf44c0918ff3e77b75bbf0f45d","isMergeCommit":false,"messageTitle":"Add testing script","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":0},"sh":{"insertions":38,"deletions":0}}}]},{"date":"2024-08-25","commitResults":[{"hash":"3634fe084b1af7175b785c0c0230296cfe750907","isMergeCommit":false,"messageTitle":"Add save function","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":68,"deletions":6}}},{"hash":"b835259fcbc149b23ced2afaf07e7a567307ae64","isMergeCommit":false,"messageTitle":"Add javadocs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"66230a954a1def196052d4a88791dfd2c91a4481","isMergeCommit":true,"messageTitle":"Merge branch-Level-7 into master","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}}]},{"date":"2024-08-26","commitResults":[{"hash":"f816b6cc870915eb1e418efca43270489989bcdc","isMergeCommit":false,"messageTitle":"Add dateTime feature","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":2}}},{"hash":"05fefc88ba776aaba14b834673543b2d24a1f601","isMergeCommit":true,"messageTitle":"Merge branch-Level-8","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"daf4812b1aeafc9a533afa10a2f4b575260c7854","isMergeCommit":false,"messageTitle":"Refactor into more classes","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":341,"deletions":182}}},{"hash":"69829135dbe2a83028cae695541678e6cd0b8e20","isMergeCommit":false,"messageTitle":"Add into echochat package","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":24}}},{"hash":"2d998c0164f4ac3e1b9b12d411fcf86d9d9c3f04","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into add-gradle-support","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{}},{"hash":"16e3e93738843d37dfcc3b0976257d1b8d1a97c6","isMergeCommit":false,"messageTitle":"Fix issue with gradle","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":22}}}]},{"date":"2024-08-30","commitResults":[{"hash":"9ae7f7fc6fbd01e460f1141920f7b5382b49c3ab","isMergeCommit":false,"messageTitle":"Add Junit tests","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":167,"deletions":11}}}]},{"date":"2024-08-31","commitResults":[{"hash":"13e717fb5a3949489ba2e77be6616c37f410d33f","isMergeCommit":false,"messageTitle":"Add JavaDocs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":126,"deletions":25}}},{"hash":"98900da95adc134e3cb09a8cb69e788dc1d36bce","isMergeCommit":false,"messageTitle":"Reformat code","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":61,"deletions":62}}},{"hash":"384db48381f5ec9d0923f523e4f2e5c112ff3e8d","isMergeCommit":false,"messageTitle":"Change code to fit coding standard","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":61,"deletions":61}}},{"hash":"d8c0a2b8a2c6e41f8ade53498d4e3bb3a7b672a5","isMergeCommit":false,"messageTitle":"Add find command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":1}}},{"hash":"36982573feb6f8a233e3be911f7fa21ac2f7b089","isMergeCommit":false,"messageTitle":"Change code to fit coding standard again","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":13}}},{"hash":"56d8aceeab41f78d36086b8ecce061f667cebbf6","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{}},{"hash":"7df1a30effed1066954ccca321efb877c64d5883","isMergeCommit":true,"messageTitle":"Merge JavaDoc branch","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{}},{"hash":"df5f873e1fbea1668e59914b9c0028548493f3b0","isMergeCommit":false,"messageTitle":"Add getDesc() function to Command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"56460ce286fb17a3a4b29b0d042e1fe612a7659a","isMergeCommit":false,"messageTitle":"Finish Level 9","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"7285df69a48afeef9d0334326e4760c0033c82fa","isMergeCommit":true,"messageTitle":"Merge branch level 9","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{}}]},{"date":"2024-09-06","commitResults":[{"hash":"76cab4498782000ac7a2356318f7a681426e609f","isMergeCommit":false,"messageTitle":"Add GUI to chatbot","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":22,"deletions":1},"java":{"insertions":263,"deletions":45}}},{"hash":"c63b189bec3fbac9ff79f9ae0bc877fe31273553","isMergeCommit":true,"messageTitle":"Merge branch-Level-10 into master","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{}}]},{"date":"2024-09-09","commitResults":[{"hash":"bcb8537e51fa48bb3097c1f2d86a70f303eb2cc5","isMergeCommit":false,"messageTitle":"Add assertions to Parser class for internal consistency checks","messageBody":"- Added assertions to ensure that input parsing logic and task creation follow expected conditions. These checks validate assumptions that should always hold true during the execution of the program.\n\n  - Added assertion after splitting the user input to ensure that the `parts` array contains at least one element.\n  - Added assertion to verify that the `type` parameter passed to `parseTask` is either \"todo\", \"deadline\", or \"event\", ensuring that only valid task types are processed.\n  - Added assertion to ensure that a non-null task is created before returning from the `parseTask` method.\n  - For `Deadline` tasks, added an assertion to check that the \"by\" date is not null.\n  - For `Event` tasks, added assertions to check that both \"from\" and \"to\" dates are present.\n\n- These assertions will help catch logical errors and invalid internal states during development and debugging.\n- Assertions are meant for development/debugging environments and will not be triggered in production unless explicitly enabled.\n\nThis change ensures that invalid inputs or internal inconsistencies are caught early during the development phase, leading to more robust and reliable code.\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":11}}}]},{"date":"2024-09-16","commitResults":[{"hash":"694e7b97e383574baf4c6975c38e1de0a999bd65","isMergeCommit":false,"messageTitle":"Improve code quality","messageBody":"","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":253,"deletions":164}}},{"hash":"52b457ade7d1d7d8c58788c6912158011e0adcee","isMergeCommit":false,"messageTitle":"Parser class: add assertions for internal consistency checks","messageBody":"The parsing logic in the Parser class assumes certain conditions\n(e.g. valid task types, non-null task creation) but does not explicitly\nenforce them.\n\nFailing to enforce these assumptions could lead to silent failures or\nunexpected behavior when the input is not as expected, particularly in\nedge cases.\n\nLet\u0027s add assertions to enforce key assumptions in the input parsing\nprocess:\n- Assert that the `parts` array contains at least one element after\n  splitting user input.\n- Assert that the `type` parameter passed to `parseTask` is either\n  \"todo\", \"deadline\", or \"event\".\n- Ensure a non-null task is created before returning from `parseTask`.\n- For `Deadline` tasks, ensure that the \"by\" date is not null.\n- For `Event` tasks, ensure that both \"from\" and \"to\" dates are present.\n\nAssertions are appropriate here as they allow us to verify that internal\ninvariants hold, helping to catch bugs early without affecting\nproduction behavior.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"9f42930f5205920000ce8a72632db1304ed2be13","isMergeCommit":false,"messageTitle":"Refactor Main and Parser Classes for Improved Maintainability","messageBody":"The Main class handles user interface setup and event handling, while the Parser class is responsible for parsing commands and creating tasks.\n\nThe Main class\u0027s start method mixes UI setup, formatting, and input handling, leading to a complex and difficult-to-maintain method. Similarly, the Parser class’s parse method combines parsing logic with task creation, which complicates testing and debugging.\n\nRefactoring is needed to improve code readability and adherence to the Single Responsibility Principle (SRP). By separating these concerns, we ensure that each class and method has a clear, single purpose.\n\nLet\u0027s:\n\n    Extract setupStage method from Main to handle stage setup separately.\n    Extract formatWindow method from Main to handle window formatting separately.\n    Add assertions in Parser to ensure consistency:\n        Verify that parsed input splits correctly.\n        Ensure only valid task types are processed.\n        Confirm that non-null tasks are created before returning.\n        For Deadline tasks, check that the \"by\" date is not null.\n        For Event tasks, ensure both \"from\" and \"to\" dates are provided.\n\nThis refactoring enhances maintainability by isolating responsibilities and ensuring consistency in the Parser class. It aligns with best practices for cleaner, more manageable code.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"9324b17eda3057876bf52ddf90fe50140cb99229","isMergeCommit":true,"messageTitle":"Merge pull request #2 from ethanwangkangen/branch-A-Assertions","messageBody":"Branch A-assertions","tags":["A-Assertions"],"fileTypesAndContributionMap":{}},{"hash":"d0d98ff2bd5250602770288e2ae4bad8c79b1ae3","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-CodeQuality","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"3fad9aa407bc0c332e342b16eb9ed5142bc30a6f","isMergeCommit":true,"messageTitle":"Merge pull request #3 from ethanwangkangen/branch-A-CodeQuality","messageBody":"Branch A-code quality","fileTypesAndContributionMap":{}},{"hash":"378ad58ec5f0037ddf5a116c2b282958ec6cf041","isMergeCommit":false,"messageTitle":"Add isDuplicate Method to ChatBot Class","messageBody":"The ChatBot class does not have a mechanism to prevent duplicate tasks from being added to the task list. This lack of functionality allows for multiple instances of identical tasks, which can clutter the task list and hinder user experience.\n\nTo improve task management and maintain a clean task list, we need to implement a check for duplicate tasks.\n\nAdd the isDuplicate method to the ChatBot class to identify and handle duplicate tasks before they are added. This method compares the new task with existing tasks based on their description and other properties.\n\nImplement this method in the getResponse method to ensure that duplicate tasks are not added. If a task is detected as a duplicate, the user receives a notification to inform them of the duplicate entry.\n\nThis change enhances task management by preventing duplicate entries, which improves data integrity and overall user experience. By checking for duplicates before adding new tasks, the task list remains organized and user interactions become more efficient.\n","fileTypesAndContributionMap":{"java":{"insertions":116,"deletions":26}}},{"hash":"9ae736ba435dc0420d108812838abd8cddf3d0ac","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/ethanwangkangen/ip","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"8fbe903ebfc433727709ceed8bae2ddb1ce9fe81","isMergeCommit":false,"messageTitle":"Update README","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3},"md":{"insertions":32,"deletions":24}}},{"hash":"b30712d1feb90eca7e1736de7786a5cfcc775202","isMergeCommit":false,"messageTitle":"Add comments for extension","messageBody":"","tags":["BCD-Extension"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}}]}]},"authorFileTypeContributionMap":{"ethanwangkangen":{"java":1207,"md":27,"fxml":0,"sh":38,"bat":0,"gradle":22,"txt":10}},"authorContributionVariance":{"ethanwangkangen":33247.008},"authorDisplayNameMap":{"ethanwangkangen":"CS2103T-W11-3 WANG..THAN"}}
