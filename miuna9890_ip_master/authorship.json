[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"checkstyle {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"miuna9890"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"miuna9890"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"miuna9890"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"miuna9890"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"miuna9890"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"miuna9890"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"miuna9890"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"miuna9890"},"content":"    mainClass.set(\"Main.Launcher\")","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"miuna9890"},"content":"    applicationDefaultJvmArgs \u003d [\u0027-ea\u0027] // Enable assertions","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"miuna9890"},"content":"    archiveBaseName \u003d \"flash\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"miuna9890":23,"-":39}},{"path":"data/flash.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"D|X| /by 2020-04-05","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"T| | read book","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"T|X| read book","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"T| | read book","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"D| | book /by 2020-04-05","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"E| | meeting /from 16:00 /to 18:00 /on 2020-04-05","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"T| | book","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"D| | book /by 2020-04-05","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"E| | meeting /from 16:00 /to 19:00 /on 2020-04-05","lastModifiedDate":"2024-09-11","isFullCredit":false}],"authorContributionMap":{"miuna9890":9}},{"path":"src/main/java/Commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Commands;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"import Data.StoreList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"import Exceptions.InvalidIndexException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":" * Parent class for all types of commands","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"public abstract class Command {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"    protected StoreList storeList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"    public void setData(StoreList storeList) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"        this.storeList \u003d storeList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"    public abstract String execute() throws InvalidIndexException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"miuna9890":20}},{"path":"src/main/java/Commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Commands;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"import Main.Ui;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"    String userInput;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"    public DeadlineCommand(String userInput) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"     * Adds items to list via method in storelist class","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"     * @return a string","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"    public String execute() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"        return storeList.addItem(userInput.substring(8), \"deadline\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"miuna9890"},"content":"        return false;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"miuna9890":29}},{"path":"src/main/java/Commands/DefaultCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Commands;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"public class DefaultCommand extends Command {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"    String userInput;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"    public DefaultCommand(String userInput) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"     * print default command","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"     * @return a string","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"    public String execute() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"        return userInput;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"        return false;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"miuna9890":27}},{"path":"src/main/java/Commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Commands;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"import Exceptions.InvalidIndexException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"import Main.Ui;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"    String userInput;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"    public DeleteCommand(String userInput) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"     * deletes item in list via method in storelist class","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"     * @return a string","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"    public String execute() throws InvalidIndexException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"        // Split the string by spaces","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"        String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"        int itemNum \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"        return storeList.deleteItem(itemNum);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"miuna9890"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"miuna9890"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"miuna9890"},"content":"        return false;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"miuna9890":32}},{"path":"src/main/java/Commands/DueCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Commands;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"import Main.Ui;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"public class DueCommand extends Command {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"    String userInput;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"    public DueCommand(String userInput) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"     * Displays items due via method in storelist class","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"     * @return a string","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"    public String execute() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"        return storeList.dueOnDate(userInput.substring(4).trim());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"        return false;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"miuna9890":28}},{"path":"src/main/java/Commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Commands;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"import Main.Ui;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"    String userInput;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"    public EventCommand(String userInput) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"     * Adds items to list via method in storelist class","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"     * @return a string","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"    public String execute() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"        return storeList.addItem(userInput.substring(5), \"event\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"        return false;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"miuna9890":28}},{"path":"src/main/java/Commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Commands;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"    String userInput;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"    public ExitCommand(String userInput) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"        return true;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"     * @return a string of exit message","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"    public String execute() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"        return \"    Bye. Hope to see ya again soon!\";","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"miuna9890":25}},{"path":"src/main/java/Commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Commands;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"import Main.Ui;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"    private String userInput;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"    public FindCommand(String userInput) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"     * Displays items in list with matching word via method in storelist class","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"     * @return a string","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"    public String execute() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"       ","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"        String[] keywords \u003d userInput.substring(4).trim().split(\"\\\\s+\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"        return storeList.displayItemsWithWord(keywords);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"miuna9890"},"content":"        return false;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"miuna9890":29}},{"path":"src/main/java/Commands/IntroCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Commands;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"public class IntroCommand extends Command {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"    private final String userInput;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"    public IntroCommand(String userInput) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"            this.userInput \u003d userInput;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"        @Override","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"        public boolean isExit() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"            return false;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"        /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"         *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"         * @return a string of intro message","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"         */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"        @Override","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"        public String execute() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"            return \"    Hi!! I am EmoteX!! How can I help ya tdy?\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"miuna9890":26}},{"path":"src/main/java/Commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Commands;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"import Main.Ui;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"    String userInput;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"    public ListCommand(String userInput) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"     * Displays items in list via method in storelist class","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"     * @return","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"    public String execute() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"        return storeList.displayItems();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"        return false;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"miuna9890":28}},{"path":"src/main/java/Commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Commands;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"import Exceptions.InvalidIndexException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"import Main.Ui;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"    String userInput;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"    public MarkCommand(String userInput) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"     * Marks item as completed via method in storelist class","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"    public String execute() throws InvalidIndexException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"        // Split the string by spaces","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"        String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"        System.out.println(Ui.LINE);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"        int itemNum \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"        // Execute the mark item logic and get the result message","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"        return storeList.markItem(itemNum);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"miuna9890"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"miuna9890"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"miuna9890"},"content":"        return false;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"miuna9890":36}},{"path":"src/main/java/Commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Commands;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"import Main.Ui;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"    String userInput;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"    public ToDoCommand(String userInput) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"     * Adds items to list via method in storelist class","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"     * @return","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"    public String execute() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"        return storeList.addItem(userInput.substring(4), \"todo\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"        return false;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"miuna9890":28}},{"path":"src/main/java/Commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Commands;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"import Exceptions.InvalidIndexException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"import Main.Ui;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"    String userInput;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"    public UnmarkCommand(String userInput) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"     * Marks item as incomplete","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"     * @return","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"    public String execute() throws InvalidIndexException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"        // Split the string by spaces","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"        String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"        int itemNum \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"        return storeList.UnmarkItem(itemNum);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"miuna9890"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"miuna9890"},"content":"        return false;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"miuna9890":31}},{"path":"src/main/java/Data/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Data;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"import Tasks.*;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"import Main.FileUI;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"public class Storage {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"    protected static ArrayList\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"     * loads tasks from file and adds to list","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"     * Catch all the relevant exceptions when trying to add invalid tasks","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"    public static ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"        FileUI.createFileIfNotPresent();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"            FileReader fr \u003d new FileReader(FileUI.FILE_PATH);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"            BufferedReader br \u003d new BufferedReader(fr);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"            String line \u003d br.readLine();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"miuna9890"},"content":"            // loop runs till file is empty","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"miuna9890"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"miuna9890"},"content":"                String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"miuna9890"},"content":"                //extract the diff parts of a task","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"miuna9890"},"content":"                String taskType \u003d parts[0];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"miuna9890"},"content":"                String taskStatus \u003d parts[1];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"miuna9890"},"content":"                String taskDesc \u003d parts[2];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"miuna9890"},"content":"                Task task \u003d null;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"miuna9890"},"content":"                switch (taskType) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"miuna9890"},"content":"                    case \"T\":","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"miuna9890"},"content":"                        task \u003d new ToDos(taskDesc);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"miuna9890"},"content":"                        break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"miuna9890"},"content":"                    case \"D\":","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"miuna9890"},"content":"                        task \u003d new Deadlines(taskDesc);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"miuna9890"},"content":"                        break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"miuna9890"},"content":"                    case \"E\":","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"miuna9890"},"content":"                        task \u003d new Events(taskDesc);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"miuna9890"},"content":"                        break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"miuna9890"},"content":"                    default:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"miuna9890"},"content":"                        System.out.println(\"Unknown taskType\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"miuna9890"},"content":"                        continue;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"miuna9890"},"content":"                }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"miuna9890"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"miuna9890"},"content":"                    if (taskStatus.equals(\"X\")) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"miuna9890"},"content":"                        task.mark();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"miuna9890"},"content":"                    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"miuna9890"},"content":"                    items.add(task);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"miuna9890"},"content":"                }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"miuna9890"},"content":"                line \u003d br.readLine();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"miuna9890"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"miuna9890"},"content":"            br.close();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"miuna9890"},"content":"            return items;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"miuna9890"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"miuna9890"},"content":"            System.out.println(\"Error saving tasks\" + e.getMessage());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"miuna9890"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"miuna9890"},"content":"            System.out.println(\"Unknown error occurred\" + e.getMessage());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"miuna9890"},"content":"        // return empty list in case of failure","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"miuna9890"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"miuna9890"},"content":"     * Saves appropriate task to file","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"miuna9890"},"content":"     * Catch all the relevant exceptions when trying to save invalid tasks","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"miuna9890"},"content":"     * @param updatedTasks changed list which needs to be overwritten into file","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"miuna9890"},"content":"    public static void saveTasksToFile(ArrayList\u003cTask\u003e updatedTasks) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"miuna9890"},"content":"        FileUI.createFileIfNotPresent();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"miuna9890"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"miuna9890"},"content":"            FileWriter fw \u003d new FileWriter(FileUI.FILE_PATH);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"miuna9890"},"content":"            for (Task task : updatedTasks) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"miuna9890"},"content":"                String taskType \u003d task instanceof ToDos ? \"T\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"miuna9890"},"content":"                        : task instanceof Deadlines ? \"D\" : \"E\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"miuna9890"},"content":"                String taskStatus \u003d task.getStatusIcon();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"miuna9890"},"content":"                String taskDesc \u003d task.getTaskDesc();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"miuna9890"},"content":"                String taskInfo \u003d taskType + \"|\" + taskStatus + \"|\" + taskDesc + \"\\n\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"miuna9890"},"content":"                fw.write(taskInfo);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"miuna9890"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"miuna9890"},"content":"            fw.close();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"miuna9890"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"miuna9890"},"content":"            System.out.println(\"Error saving tasks\" + e.getMessage());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"miuna9890":102}},{"path":"src/main/java/Data/StoreList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Data;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"import Exceptions.*;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"import Tasks.*;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"public class StoreList {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"    //declare array to store tasks","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"    protected ArrayList\u003cTask\u003e items;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"    //declare Tasks.Task","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"    protected Task t;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"    //initialize items array","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"    public StoreList(ArrayList\u003cTask\u003e items) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"        this.items \u003d items;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"    public ArrayList\u003cTask\u003e getItems() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"        return items;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"miuna9890"},"content":"    public Task get(int i) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"miuna9890"},"content":"        assert i \u003e\u003d 0 \u0026\u0026 i \u003c items.size() : \"Index out of bounds\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"miuna9890"},"content":"        return items.get(i);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"miuna9890"},"content":"     * Adds appropriate task to list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"miuna9890"},"content":"     * Catch all the relevant exceptions when trying to add invalid tasks","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"miuna9890"},"content":"     * @param item task to be added.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"miuna9890"},"content":"     * @param type tasktype to be created and stores.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"miuna9890"},"content":"     * @return","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"miuna9890"},"content":"    public String addItem(String item, String type) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"miuna9890"},"content":"        try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"miuna9890"},"content":"            assert type.equals(\"todo\") || type.equals(\"deadline\") || type.equals(\"event\") : \"Invalid task type\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"miuna9890"},"content":"            if (type.equals(\"todo\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"miuna9890"},"content":"                // create a Tasks.ToDos object","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"miuna9890"},"content":"                t \u003d new ToDos(item);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"miuna9890"},"content":"                items.add(t);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"miuna9890"},"content":"            } else if (type.equals(\"deadline\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"miuna9890"},"content":"                // create a Tasks.Deadlines object","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"miuna9890"},"content":"                t \u003d new Deadlines(item); // Constructor might throw Exceptions.EmptyDeadlineException","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"miuna9890"},"content":"                items.add(t);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"miuna9890"},"content":"            } else {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"miuna9890"},"content":"                // create an Tasks.Events object","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"miuna9890"},"content":"                t \u003d new Events(item); // Constructor might throw Exceptions.EmptyEventException","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"miuna9890"},"content":"                items.add(t);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"miuna9890"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"miuna9890"},"content":"            return \"    Got it. I\u0027ve added this task:\\n\" + \"      \" + t.print() +","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"miuna9890"},"content":"                    \"\\n    Now you have \" + this.getSize() + \" tasks in the list.\";","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"miuna9890"},"content":"        } catch (EmptyDescException | EmptyDeadlineException","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"miuna9890"},"content":"                 | EmptyEventException | EmptyDeadlineDateException","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"miuna9890"},"content":"                 | EmptyEventTimingException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"miuna9890"},"content":"            return e.getMessage();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"miuna9890"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"miuna9890"},"content":"            return \"An unexpected error occurred: \" + e.getMessage();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"miuna9890"},"content":"    //getter","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"miuna9890"},"content":"    public int getSize() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"miuna9890"},"content":"        return items.size();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"miuna9890"},"content":"     * Marks item as completed","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"miuna9890"},"content":"     * @param num Index of task to be marked.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"miuna9890"},"content":"    public String markItem(int num) throws InvalidIndexException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"miuna9890"},"content":"        assert num \u003e 0 : \"Task number does not exist\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"miuna9890"},"content":"        if (num \u003e items.size()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"miuna9890"},"content":"            throw new InvalidIndexException(\"Task number does not exist\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"miuna9890"},"content":"        items.get(num - 1).mark();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"miuna9890"},"content":"        return \"    Wohoo! I\u0027ve marked this task as done! WELL DONE!:\\n\" +","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"miuna9890"},"content":"                \"      \" + items.get(num - 1).print();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"miuna9890"},"content":"     * Unmarks item as incomplete","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"miuna9890"},"content":"     * @param num Index of task to be unmarked.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"miuna9890"},"content":"    public String UnmarkItem(int num) throws InvalidIndexException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"miuna9890"},"content":"        assert num \u003e 0 : \"Task number does not exist\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"miuna9890"},"content":"        if (num \u003e items.size()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"miuna9890"},"content":"            throw new InvalidIndexException(\"Task number does not exist\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"miuna9890"},"content":"        items.get(num - 1).unMark();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"miuna9890"},"content":"        return \"    \" + \"Aww:( I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"miuna9890"},"content":"                \"      \" + items.get(num - 1).print();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"miuna9890"},"content":"     * Deletes item","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"miuna9890"},"content":"     * @param num Index of task to be deleted.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"miuna9890"},"content":"    public String deleteItem(int num) throws InvalidIndexException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"miuna9890"},"content":"        assert num \u003e 0 : \"Task number does not exist\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"miuna9890"},"content":"        if (num \u003e\u003d items.size()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"miuna9890"},"content":"            throw new InvalidIndexException(\"Task number does not exist\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"miuna9890"},"content":"        Task temp \u003d items.get(num - 1);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"miuna9890"},"content":"        items.remove(num - 1);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"miuna9890"},"content":"        return \"    \" + \"Noted! I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"miuna9890"},"content":"                \"      \" + temp.print() + \"\\n    Now you have \" + this.getSize() + \" tasks in the list.\";","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"miuna9890"},"content":"     * Displays items in list","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"miuna9890"},"content":"    public String displayItems() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"miuna9890"},"content":"        StringBuilder result \u003d new StringBuilder(\"    Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"miuna9890"},"content":"        for (int i \u003d 0; i \u003c items.size(); i++) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"miuna9890"},"content":"            result.append(\"    \").append(i + 1).append(\".\").append(items.get(i).print()).append(\"\\n\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"miuna9890"},"content":"        return result.toString();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"miuna9890"},"content":"     * Returns a formatted string representing the tasks due on the specified date.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"miuna9890"},"content":"     * @param date The date to check deadlines against (in format yyyy-MM-dd or dd/MM/yyyy).","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"miuna9890"},"content":"    public String dueOnDate(String date) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"miuna9890"},"content":"        LocalDate inputDate;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"miuna9890"},"content":"        //StringBuilder to append tasks due on the date","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"miuna9890"},"content":"        StringBuilder tasksDueOnDate \u003d new StringBuilder();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"miuna9890"},"content":"        // variable to store if tasks found","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"miuna9890"},"content":"        boolean found \u003d false;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"miuna9890"},"content":"        // check if input date matches format of stored date","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"miuna9890"},"content":"        inputDate \u003d parseDeadline(date);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"miuna9890"},"content":"        if (inputDate \u003d\u003d null) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"miuna9890"},"content":"            return \"invalid date format! pls use yyyy-MM-dd or dd/MM/yyyy\";","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"miuna9890"},"content":"        return tasksDue(date, tasksDueOnDate, inputDate, found);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"miuna9890"},"content":"     * Returns true if any tasks were found, false otherwise.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"miuna9890"},"content":"     * Helper method to find and append tasks due on a specific date.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"miuna9890"},"content":"     * @param date           The original date string used in the request.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"miuna9890"},"content":"     * @param tasksDueOnDate StringBuilder to append tasks due on the date.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"miuna9890"},"content":"     * @param inputDate      The parsed LocalDate of the input date.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"miuna9890"},"content":"     * @param found          A boolean indicating if any tasks were found due on the date.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"miuna9890"},"content":"    private String tasksDue(String date, StringBuilder tasksDueOnDate, LocalDate inputDate, boolean found) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"miuna9890"},"content":"        String tasksDue \u003d items.stream()","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"miuna9890"},"content":"                .filter(task -\u003e task instanceof Deadlines \u0026\u0026 ((Deadlines) task).getLocalDate().equals(inputDate)","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"miuna9890"},"content":"                        || task instanceof Events \u0026\u0026 ((Events) task).getLocalDate().equals(inputDate))","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"miuna9890"},"content":"                .map(task -\u003e \"    \" + (items.indexOf(task) + 1) + \".\" + task.print() + \"\\n\")","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"miuna9890"},"content":"                .collect(Collectors.joining());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"miuna9890"},"content":"        tasksDueOnDate.append(\"    Here are the tasks due on \").append(date).append(\":\\n\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"miuna9890"},"content":"        if (tasksDue.isEmpty()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"miuna9890"},"content":"            return \"No tasks due on \" + date;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"miuna9890"},"content":"        } else {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"miuna9890"},"content":"            return \"    Here are the tasks due on \" + date + \":\\n\" + tasksDue;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"miuna9890"},"content":"     * Parses a date string and returns a LocalDate object.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"miuna9890"},"content":"     * @param date The date string to be parsed (formats supported: yyyy-MM-dd or dd/MM/yyyy).","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"miuna9890"},"content":"     * @return A LocalDate object if the date is valid, or null if the format is invalid.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"miuna9890"},"content":"    private static LocalDate parseDeadline(String date) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"miuna9890"},"content":"        LocalDate inputDate;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"miuna9890"},"content":"        try {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"miuna9890"},"content":"            // check if input date matches format of stored date","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"miuna9890"},"content":"            inputDate \u003d ParseTasks.parseDateFormat1(date);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"miuna9890"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"miuna9890"},"content":"            try {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"miuna9890"},"content":"                // check if input date matches format of stored date","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"miuna9890"},"content":"                inputDate \u003d ParseTasks.parseDateFormat2(date);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"miuna9890"},"content":"            } catch (Exception e2) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"miuna9890"},"content":"                return null;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"miuna9890"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"miuna9890"},"content":"        return inputDate;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"miuna9890"},"content":"     * Displays items in list based on keyword","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"miuna9890"},"content":"     * @param substrings the keywords to search against.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"miuna9890"},"content":"    public String displayItemsWithWord(String... substrings) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"miuna9890"},"content":"        String result \u003d items.stream()","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"miuna9890"},"content":"                .filter(task -\u003e {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"miuna9890"},"content":"                    String taskDesc \u003d task.getTaskDesc();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"miuna9890"},"content":"                    return Arrays.stream(substrings)","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"miuna9890"},"content":"                            .anyMatch(taskDesc::contains);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"miuna9890"},"content":"                })","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"miuna9890"},"content":"                .map(task -\u003e \"    \" + (items.indexOf(task) + 1) + \".\" + task.print() + \"\\n\")","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"miuna9890"},"content":"                .collect(Collectors.joining());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"miuna9890"},"content":"        return \"    Here are the tasks in your list that match your search:\\n\" + result;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false}],"authorContributionMap":{"miuna9890":232}},{"path":"src/main/java/Exceptions/EmptyDeadlineDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Exceptions;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"public class EmptyDeadlineDateException extends Exception{","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"    public EmptyDeadlineDateException(String message) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"        super(message);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"miuna9890":9}},{"path":"src/main/java/Exceptions/EmptyDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Exceptions;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"public class EmptyDeadlineException extends Exception{","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"    public EmptyDeadlineException(String desc) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"        super(desc);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"miuna9890":9}},{"path":"src/main/java/Exceptions/EmptyDescException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Exceptions;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"public class EmptyDescException extends Exception{","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"    public EmptyDescException(String desc) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"        super(desc);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"miuna9890":10}},{"path":"src/main/java/Exceptions/EmptyEventDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Exceptions;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"public class EmptyEventDateException extends Exception {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"    public EmptyEventDateException(String desc) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"        super(desc);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"miuna9890":7}},{"path":"src/main/java/Exceptions/EmptyEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Exceptions;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"public class EmptyEventException extends Exception{","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"    public EmptyEventException(String desc) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"        super(desc);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"miuna9890":9}},{"path":"src/main/java/Exceptions/EmptyEventTimingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Exceptions;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"public class EmptyEventTimingException extends Exception{","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"    public EmptyEventTimingException(String message) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"        super(message);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"miuna9890":9}},{"path":"src/main/java/Exceptions/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Exceptions;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"public class InvalidIndexException extends Exception {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"    public InvalidIndexException(String desc) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"        super(desc);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"miuna9890":7}},{"path":"src/main/java/Exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Exceptions;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"public class UnknownCommandException extends Exception{","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"    public UnknownCommandException(String message) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"        super(message);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"miuna9890":8}},{"path":"src/main/java/Main/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Main;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":" * The DialogBox class represents a custom control for displaying user input and Duke\u0027s responses in a dialog box.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":" * It handles the display of both text and images, with an option to flip the dialog box to position the image","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":" * on either side. The profile picture of each dialog can be displayed as a circular image.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"miuna9890"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"miuna9890"},"content":"    private Circle displayPicture;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"miuna9890"},"content":"    // Predefined images for different emotions","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"miuna9890"},"content":"    private Image sadJoy \u003d new Image(this.getClass().getResourceAsStream(\"/images/sadJoy.png\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"miuna9890"},"content":"    private Image angryJoy \u003d new Image(this.getClass().getResourceAsStream(\"/images/angryJoy.png\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"miuna9890"},"content":"    private Image anxiousJoy \u003d new Image(this.getClass().getResourceAsStream(\"/images/Anxiety.png\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"miuna9890"},"content":"    private Image happyJoy \u003d new Image(this.getClass().getResourceAsStream(\"/images/happyJoy.png\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"miuna9890"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Joy.png\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"miuna9890"},"content":"     * Constructs a DialogBox object that displays the specified text and image.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"miuna9890"},"content":"     * The image is displayed inside a circular container.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"miuna9890"},"content":"     * @param s The text to display in the dialog.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"miuna9890"},"content":"     * @param i The image to display as the profile picture.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"miuna9890"},"content":"    public DialogBox(String s, Image i) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"miuna9890"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"miuna9890"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"miuna9890"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"miuna9890"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"miuna9890"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"miuna9890"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"miuna9890"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"miuna9890"},"content":"        dialog.setText(s);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"miuna9890"},"content":"        // Create a circle and set the ImagePattern to display the profile picture","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"miuna9890"},"content":"        displayPicture.setRadius(40);  // Adjust the radius as needed","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"miuna9890"},"content":"        displayPicture.setFill(new ImagePattern(i));  // Set the image in the circle","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"miuna9890"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"miuna9890"},"content":"    private void flip() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"miuna9890"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"miuna9890"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"miuna9890"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"miuna9890"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"miuna9890"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"miuna9890"},"content":"     * Creates and returns a dialog box for the user with the specified text and image.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"miuna9890"},"content":"     * @param s The text to display.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"miuna9890"},"content":"     * @param i The user\u0027s profile picture.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"miuna9890"},"content":"     * @return A DialogBox representing the user\u0027s input.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"miuna9890"},"content":"    public static DialogBox getUserDialog(String s, Image i) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"miuna9890"},"content":"        return new DialogBox(s, i);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"miuna9890"},"content":"     * Changes the dialog style and profile picture based on the type of command executed.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"miuna9890"},"content":"     * Different command types will change the appearance of the dialog.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"miuna9890"},"content":"     * @param commandType The type of command executed by the user.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"miuna9890"},"content":"     * @return The corresponding image to display based on the command type.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"miuna9890"},"content":"    private void changeDialogStyle(String commandType) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"miuna9890"},"content":"        switch (commandType) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"miuna9890"},"content":"            case \"ToDoCommand\":","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"miuna9890"},"content":"            case \"DeadlineCommand\":","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"miuna9890"},"content":"            case \"EventCommand\":","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"miuna9890"},"content":"                dialog.getStyleClass().add(\"add-label\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"miuna9890"},"content":"                displayPicture.setFill(new ImagePattern(sadJoy));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"miuna9890"},"content":"                break;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"miuna9890"},"content":"            case \"MarkCommand\":","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"miuna9890"},"content":"                dialog.getStyleClass().add(\"marked-label\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"miuna9890"},"content":"                displayPicture.setFill(new ImagePattern(happyJoy));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"miuna9890"},"content":"                break;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"miuna9890"},"content":"            case \"DeleteCommand\":","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"miuna9890"},"content":"                dialog.getStyleClass().add(\"delete-label\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"miuna9890"},"content":"                displayPicture.setFill(new ImagePattern(happyJoy));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"miuna9890"},"content":"                break;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"miuna9890"},"content":"            case \"UnmarkCommand\":","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"miuna9890"},"content":"                dialog.getStyleClass().add(\"unmark-label\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"miuna9890"},"content":"                displayPicture.setFill(new ImagePattern(angryJoy));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"miuna9890"},"content":"                break;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"miuna9890"},"content":"            case \"DueCommand\":","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"miuna9890"},"content":"                dialog.getStyleClass().add(\"due-label\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"miuna9890"},"content":"                displayPicture.setFill(new ImagePattern(anxiousJoy));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"miuna9890"},"content":"                break;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"miuna9890"},"content":"            default:","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"miuna9890"},"content":"                displayPicture.setFill(new ImagePattern(dukeImage));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"miuna9890"},"content":"                break;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"miuna9890"},"content":"     * Creates and returns a dialog box for Duke with the specified text, image, and command type.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"miuna9890"},"content":"     * This method flips the dialog box and changes the style based on the command type.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"miuna9890"},"content":"     * @param text The text to display.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"miuna9890"},"content":"     * @param img The initial image to display.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"miuna9890"},"content":"     * @param commandType The type of command executed, used to determine the style.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"miuna9890"},"content":"     * @return A DialogBox representing Duke\u0027s response with the appropriate style and image.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"miuna9890"},"content":"    public static DialogBox getDukeDialog(String text, Image img, String commandType) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"miuna9890"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"miuna9890"},"content":"        // Update the existing dialog style and image","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"miuna9890"},"content":"        db.changeDialogStyle(commandType);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"miuna9890"},"content":"        db.flip();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"miuna9890"},"content":"        return db;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"miuna9890":138}},{"path":"src/main/java/Main/FileUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Main;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"import java.io.File;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"public class FileUI {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"    public static final String FILE_PATH \u003d \"./data/flash.txt\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"     * Creates new file if file does not exist","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"     * catches relevant exception","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"    public static void createFileIfNotPresent() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"        File file \u003d new File(FILE_PATH); //initializes a file object in path","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"        File parentDir \u003d file.getParentFile(); //get dir of file","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"        //if dir doesn\u0027t exists, create directory","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"        if (!parentDir.exists()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"            parentDir.mkdir();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"            //if file doesn\u0027t exist, create file","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"                file.createNewFile();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"miuna9890"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"miuna9890"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"miuna9890"},"content":"            System.out.println(\"Error creating file\" + e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"miuna9890":32}},{"path":"src/main/java/Main/Flash.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Main;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"import Commands.Command;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"import Data.Storage;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"import Data.StoreList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"import Exceptions.InvalidIndexException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"import Parser.Parser;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":" * Entry point of the chatbot.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":" * Initializes the application and starts the interaction with the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"public class Flash {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"    private Ui ui;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"    private StoreList storeList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"    private final static String FILE_PATH \u003d \"./data/flash.txt\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"    /* chatbot runs till user inputs bye */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"    public void run() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"        start();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"        runLoopTillExitCommand();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"        exit();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"miuna9890"},"content":"     * Sets up the required objects,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"miuna9890"},"content":"     * loads up the data from the storage file,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"miuna9890"},"content":"     * prints the intro message.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"miuna9890"},"content":"    private void start() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"miuna9890"},"content":"            //initiliaze ui","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"miuna9890"},"content":"            this.ui \u003d new Ui();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"miuna9890"},"content":"            // list is instantiated with tasks loaded from storage","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"miuna9890"},"content":"            this.storeList \u003d new StoreList(storage.loadTasks());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"miuna9890"},"content":"            // show the starting message","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"miuna9890"},"content":"            ui.showIntroMessage();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"miuna9890"},"content":"    /* Prints goodbye and exits */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"miuna9890"},"content":"    private void exit() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"miuna9890"},"content":"        // show exit message once user says bye","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"miuna9890"},"content":"        ui.showExitMessage();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"miuna9890"},"content":"        ui.closeScanner();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"miuna9890"},"content":"        System.exit(0);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"miuna9890"},"content":"    /* Reads and Executes user input till user says bye */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"miuna9890"},"content":"    private void runLoopTillExitCommand() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"miuna9890"},"content":"        Command command;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"miuna9890"},"content":"        String userInput \u003d ui.getUserInput();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"miuna9890"},"content":"        command \u003d new Parser().makeSenseOfUserInput(userInput);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"miuna9890"},"content":"        // while the command is not equal to the exit command (the loop runs)","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"miuna9890"},"content":"        while (!command.isExit()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"miuna9890"},"content":"            executeCommand(command);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"miuna9890"},"content":"            userInput \u003d ui.getUserInput();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"miuna9890"},"content":"            command \u003d new Parser().makeSenseOfUserInput(userInput);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"miuna9890"},"content":"     * Executes the command and outputs(prints) the result.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"miuna9890"},"content":"     * @param command user command","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"miuna9890"},"content":"    private void executeCommand(Command command) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"miuna9890"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"miuna9890"},"content":"            command.setData(storeList);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"miuna9890"},"content":"            command.execute();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"miuna9890"},"content":"            storage.saveTasksToFile(storeList.getItems());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"miuna9890"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"miuna9890"},"content":"            System.out.println(\"Failed to execute request\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"miuna9890"},"content":"            throw new RuntimeException();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"miuna9890"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"miuna9890"},"content":"        new Flash().run();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"miuna9890":86}},{"path":"src/main/java/Main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Main;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"public class Launcher {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"miuna9890":12}},{"path":"src/main/java/Main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Main;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"import Data.Storage;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"import Data.StoreList;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"import Parser.Parser;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":" * The Main class serves as the entry point for the JavaFX application.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":" * It initializes the primary stage and loads the main user interface from FXML.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":" * It also sets up the parser and storage required for the application to run.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"public class Main extends Application {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"    Image title \u003d new Image(this.getClass().getResourceAsStream(\"/images/Title.png\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"     * The start method is called when the JavaFX application is launched.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"miuna9890"},"content":"     * It sets up the primary stage by loading the FXML layout and configuring","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"miuna9890"},"content":"     * the application window\u0027s title, icon, and scene. The method also injects","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"miuna9890"},"content":"     * the parser and store list into the controller for further use.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"miuna9890"},"content":"     * @param stage The primary stage for the application.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"miuna9890"},"content":"    @Override","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"miuna9890"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"miuna9890"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"miuna9890"},"content":"            // Load the main layout from the FXML file","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"miuna9890"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"miuna9890"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"miuna9890"},"content":"            // Create and set the scene using the loaded layout","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"miuna9890"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"miuna9890"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"miuna9890"},"content":"            // Set the application window\u0027s icon and title","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"miuna9890"},"content":"            stage.getIcons().add(title);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"miuna9890"},"content":"            stage.setTitle(\"EmoteX\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"miuna9890"},"content":"            // Inject the parser and store list into the MainWindow controller","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"miuna9890"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setFlash(parser, new StoreList(Storage.loadTasks()));  // inject the Duke instance","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"miuna9890"},"content":"            // Display the stage","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"miuna9890"},"content":"            stage.show();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"miuna9890"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"miuna9890"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"miuna9890":57}},{"path":"src/main/java/Main/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Main;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"import Commands.Command;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"import Data.Storage;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"import Data.StoreList;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"import Exceptions.InvalidIndexException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"import Parser.Parser;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"import javafx.scene.control.ContentDisplay;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":" * The MainWindow class is responsible for managing the main user interface of the application.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":" * It handles user interactions, processes commands, and updates the dialog container with responses.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":" * It integrates the user interface with the parser and storage systems for managing tasks.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"public class MainWindow extends AnchorPane{","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Joy.png\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"miuna9890"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"miuna9890"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"miuna9890"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"miuna9890"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"miuna9890"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"miuna9890"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"miuna9890"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"miuna9890"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"miuna9890"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"miuna9890"},"content":"    private Parser parser;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"miuna9890"},"content":"    private StoreList storeList;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"miuna9890"},"content":"    private String commandType;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"miuna9890"},"content":"     * Initializes the MainWindow by binding the scroll pane\u0027s vertical value to","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"miuna9890"},"content":"     * the height property of the dialog container and setting up the send button\u0027s","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"miuna9890"},"content":"     * graphic with an image.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"miuna9890"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"miuna9890"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"miuna9890"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"miuna9890"},"content":"        ImageView imageView \u003d new ImageView(getClass().getResource(\"/images/MemoryBall.png\").toExternalForm());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"miuna9890"},"content":"        sendButton.setGraphic(imageView);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"miuna9890"},"content":"        sendButton.setContentDisplay(ContentDisplay.GRAPHIC_ONLY);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"miuna9890"},"content":"        imageView.fitWidthProperty().bind(sendButton.widthProperty().divide(2));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"miuna9890"},"content":"        imageView.setPreserveRatio(true);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"miuna9890"},"content":"        //Important otherwise button will wrap to text + graphic size (no resizing on scaling).","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"miuna9890"},"content":"        sendButton.setMaxWidth(Double.MAX_VALUE);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"miuna9890"},"content":"     * Injects the parser and the store list into the MainWindow.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"miuna9890"},"content":"     * These will be used to process user commands and manage task data.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"miuna9890"},"content":"     * @param parser The parser responsible for interpreting user input.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"miuna9890"},"content":"     * @param storeList The list of tasks to be managed.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"miuna9890"},"content":"    public void setFlash(Parser parser, StoreList storeList) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"miuna9890"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"miuna9890"},"content":"        this.storeList \u003d storeList;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"miuna9890"},"content":"     * Handles the user\u0027s input by parsing the command, executing it, and displaying","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"miuna9890"},"content":"     * both the user\u0027s input and the application\u0027s response in the dialog container.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"miuna9890"},"content":"     * Also saves the updated task list to the storage file.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"miuna9890"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"miuna9890"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"miuna9890"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"miuna9890"},"content":"        Command flashCommand \u003d parser.makeSenseOfUserInput(userInput.getText());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"miuna9890"},"content":"        String flashText;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"miuna9890"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"miuna9890"},"content":"            flashCommand.setData(storeList);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"miuna9890"},"content":"            flashText \u003d flashCommand.execute();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"miuna9890"},"content":"            commandType \u003d flashCommand.getClass().getSimpleName();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"miuna9890"},"content":"            Storage.saveTasksToFile(storeList.getItems());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"miuna9890"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"miuna9890"},"content":"            flashText \u003d e.getMessage();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"miuna9890"},"content":"        // Display both user input and the command output in the dialog box","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"miuna9890"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"miuna9890"},"content":"                DialogBox.getUserDialog(userText, userImage),","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"miuna9890"},"content":"                DialogBox.getDukeDialog(flashText, dukeImage, commandType)","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"miuna9890"},"content":"        );","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"miuna9890"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"miuna9890":102}},{"path":"src/main/java/Main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Main;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"public class Ui {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"    //Horizontal line for better readability","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"    public static String LINE \u003d \"    __________________________________________\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"    /* create an instance of scanner class to read userinput */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"    public Ui () {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"        //initliaze an instance of scanner class","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"     * Prints the welcome message upon the start of the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"    public void showIntroMessage() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"        // print intro","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"        System.out.println(\"    Hey! I\u0027m Main.Flash\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"        System.out.println(\"    What can I do for ya?\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"miuna9890"},"content":"     * Prints the exit message of the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"miuna9890"},"content":"    public void showExitMessage() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"miuna9890"},"content":"        //if user inputs bye, exit","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"miuna9890"},"content":"        System.out.println(\"    Bye. Hope to see ya again soon!\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"miuna9890"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"miuna9890"},"content":"     * Prompts for the command and reads the text entered by the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"miuna9890"},"content":"     * @return userInput (full line) entered by the user","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"miuna9890"},"content":"    public String getUserInput() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"miuna9890"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"miuna9890"},"content":"        return userInput;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"miuna9890"},"content":"    // close scanner","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"miuna9890"},"content":"    public void closeScanner() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"miuna9890"},"content":"        scanner.close();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"miuna9890":52}},{"path":"src/main/java/Parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Parser;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"import Commands.*;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"public class Parser {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"    public Parser() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"     * Makes sense of input and creates relevant objects","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"     * if userinput does not match print deafult message","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"     * @param userInput string input of user","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"    public static Command makeSenseOfUserInput(String userInput) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"        // Split the string by spaces","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"        String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"        //if user inputs mark, mark task and update file","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"        if (words[0].equals(\"mark\")) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"            return new MarkCommand(userInput);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"miuna9890"},"content":"        //if user inputs unmark, unmark task and update file","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"miuna9890"},"content":"        else if (words[0].equals(\"unmark\")) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"miuna9890"},"content":"            return new UnmarkCommand(userInput);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"miuna9890"},"content":"        //if user inputs list, display tasks and update file","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"miuna9890"},"content":"        else if (userInput.equals(\"list\")) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"miuna9890"},"content":"            return new ListCommand(userInput);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"miuna9890"},"content":"        //if user inputs delete, delete task and update file","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"miuna9890"},"content":"        else if (words[0].equals(\"delete\")) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"miuna9890"},"content":"            return new DeleteCommand(userInput);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"miuna9890"},"content":"        //if user inputs to do, add item of type to do and update file","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"miuna9890"},"content":"        else if (words[0].equals(\"todo\")) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"miuna9890"},"content":"            return new ToDoCommand(userInput);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"miuna9890"},"content":"            //if user inputs deadline, add item of type deadline and update file","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"miuna9890"},"content":"        } else if (words[0].equals(\"deadline\")) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"miuna9890"},"content":"            return new DeadlineCommand(userInput);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"miuna9890"},"content":"            //if user inputs event, add item of type event and update file","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"miuna9890"},"content":"        } else if (words[0].equals(\"event\")) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"miuna9890"},"content":"            return new EventCommand(userInput);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"miuna9890"},"content":"            //if user inputs due, list of tasks due on date is given","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"miuna9890"},"content":"        } else if (words[0].equals(\"due\")) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"miuna9890"},"content":"            return new DueCommand(userInput);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"miuna9890"},"content":"            //if user inputs bye","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"miuna9890"},"content":"        } else if (words[0].equals(\"bye\")) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"miuna9890"},"content":"            return new ExitCommand(userInput);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"miuna9890"},"content":"            //if user inputs find","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"miuna9890"},"content":"        } else if (words[0].equals(\"find\")) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"miuna9890"},"content":"            return new FindCommand(userInput);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"miuna9890"},"content":"            //if user inputs hi","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"miuna9890"},"content":"        } else if (words[0].equals(\"hi\")) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"miuna9890"},"content":"            return new IntroCommand(userInput);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"miuna9890"},"content":"        } else {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"miuna9890"},"content":"            return new DefaultCommand(\"     OOPS!!! Sorry leh, but IDK what that means :-\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"miuna9890":74}},{"path":"src/main/java/Tasks/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Tasks;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"import Exceptions.EmptyDeadlineDateException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"import Exceptions.EmptyDeadlineException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"// Deadline class","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"    private LocalDateTime localDateTime; // Stores full date and time","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"    private LocalDate localDate; // Stores date only","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"    private LocalTime localTime; // Stores time only","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"    private String rawDeadline; // Stores the raw string if it doesn\u0027t match any format","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"     * Calls constructor of super class","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"     * handles different potential formats of datetime input","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"     * @param desc of task","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"     * @throws EmptyDeadlineException If desc is empty.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"     * @throws EmptyDeadlineDateException if split desc string has \u003c 2 parts(no date)","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"miuna9890"},"content":"     * or second part(date) is empty","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"miuna9890"},"content":"    public Deadlines(String desc) throws EmptyDeadlineException, EmptyDeadlineDateException {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"miuna9890"},"content":"        super(desc);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"miuna9890"},"content":"        //throw exception if task desc not given","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"miuna9890"},"content":"        if (desc.isEmpty()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"miuna9890"},"content":"            throw new EmptyDeadlineException","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"miuna9890"},"content":"                    (\"     OOPS!!! The description of a deadline cannot be empty leh. \" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"miuna9890"},"content":"                            \"Pls provide in the following format: \" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"miuna9890"},"content":"                            \"deadline read book /by yyyy-MM-dd or dd/MM/yyy 16:00\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"miuna9890"},"content":"        //throw exception if date not given","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"miuna9890"},"content":"        String[] parts \u003d desc.split(\" /by \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"miuna9890"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"miuna9890"},"content":"            throw new EmptyDeadlineDateException","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"miuna9890"},"content":"                    (\"     OOPS!! Deadline date not given leh! \" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"miuna9890"},"content":"                            \"Pls provide in the following format: \" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"miuna9890"},"content":"                            \"deadline read book /by yyyy-MM-dd or dd/MM/yyy 16:00\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"miuna9890"},"content":"        parseDeadline(parts);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"miuna9890"},"content":"     * Parses the deadline date and time from the provided description string and","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"miuna9890"},"content":"     * attempts to convert it into `LocalDateTime`, `LocalDate`, or `LocalTime` objects.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"miuna9890"},"content":"     * If the first format fails, it will try other formats until it either succeeds","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"miuna9890"},"content":"     * or stores the raw deadline string.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"miuna9890"},"content":"     * @param parts The array containing the task description and deadline string.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"miuna9890"},"content":"    private void parseDeadline(String[] parts) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"miuna9890"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"miuna9890"},"content":"            // input of format 2020-12-10 16:00","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"miuna9890"},"content":"            localDateTime \u003d ParseTasks.parseDateTimeFormat1(parts[1]);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"miuna9890"},"content":"        } catch (DateTimeParseException e1) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"miuna9890"},"content":"            try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"miuna9890"},"content":"                // input of format 2020-12-10","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"miuna9890"},"content":"                localDate \u003d ParseTasks.parseDateFormat1(parts[1]);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"miuna9890"},"content":"            } catch (DateTimeParseException e2) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"miuna9890"},"content":"                try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"miuna9890"},"content":"                    // input of format 10/12/2020","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"miuna9890"},"content":"                    localDate \u003d ParseTasks.parseDateFormat2(parts[1]);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"miuna9890"},"content":"                } catch (DateTimeParseException e3) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"miuna9890"},"content":"                    try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"miuna9890"},"content":"                        // input of format 10/12/2020 16:00","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"miuna9890"},"content":"                        localDateTime \u003d ParseTasks.parseDateTimeFormat2(parts[1]);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"miuna9890"},"content":"                    } catch (DateTimeParseException e4) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"miuna9890"},"content":"                        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"miuna9890"},"content":"                            // input of format 16:00","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"miuna9890"},"content":"                            localTime \u003d ParseTasks.parseTime(parts[1]);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"miuna9890"},"content":"                        } catch (DateTimeParseException e5) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"miuna9890"},"content":"                            // if wrong format, just print the string","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"miuna9890"},"content":"                            rawDeadline \u003d parts[1];","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"miuna9890"},"content":"                        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"miuna9890"},"content":"                    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"miuna9890"},"content":"                }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"miuna9890"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"miuna9890"},"content":"     * Returns string representation of deadline in word formats","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"miuna9890"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"miuna9890"},"content":"    public String print() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"miuna9890"},"content":"        //splits string to get the due date","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"miuna9890"},"content":"        String[] parts \u003d super.print().split(\" /by \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"miuna9890"},"content":"        String dateTimeEdited \u003d \"\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"miuna9890"},"content":"        if (localDateTime !\u003d null) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"miuna9890"},"content":"            // input of format 2020-12-10 16:00 || 10/12/2020 16:00 changed to Dec 12 2020, 4:00 pm","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"miuna9890"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"miuna9890"},"content":"            dateTimeEdited \u003d localDateTime.format(dateTimeFormatter);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"miuna9890"},"content":"        } else if (localDate !\u003d null) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"miuna9890"},"content":"            // input of format 2020-12-10 || 10/12/2020 changed to Dec 12 2020","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"miuna9890"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"miuna9890"},"content":"            dateTimeEdited \u003d localDate.format(dateTimeFormatter);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"miuna9890"},"content":"        } else if (localTime !\u003d null) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"miuna9890"},"content":"            // input of format 16:00 || changed to 4:00 pm","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"miuna9890"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"h:mm a\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"miuna9890"},"content":"            dateTimeEdited \u003d localTime.format(dateTimeFormatter);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"miuna9890"},"content":"        } else if (rawDeadline !\u003d null) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"miuna9890"},"content":"            dateTimeEdited \u003d rawDeadline;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"miuna9890"},"content":"        return \"[D]\" + parts[0] + \" (by: \" + dateTimeEdited + \")\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"miuna9890"},"content":"     * Returns date of deadline task in LocalDate type","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"miuna9890"},"content":"    public LocalDate getLocalDate() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"miuna9890"},"content":"        if (localDate !\u003d null) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"miuna9890"},"content":"            return localDate;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"miuna9890"},"content":"        } else if (localDateTime !\u003d null) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"miuna9890"},"content":"            return localDateTime.toLocalDate();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"miuna9890"},"content":"        } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"miuna9890"},"content":"            return null;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"miuna9890":137}},{"path":"src/main/java/Tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Tasks;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"import Exceptions.EmptyEventDateException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"import Exceptions.EmptyEventException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"import Exceptions.EmptyEventTimingException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"public class Events extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"    private LocalDate localDate; // Stores date only","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"    private LocalTime localStartTime; // Stores time only","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"    private LocalTime localEndTime; // Stores time only","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"    private String rawDeadline; // Stores the raw string if it doesn\u0027t match any format","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"     * Calls constructor of super class","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"     * @throws EmptyEventException       If desc is empty.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"     * @throws EmptyEventTimingException if split desc string has \u003c 2 parts(no time)","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"     *                                   or second part(start time) or third part(end time) is empty","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"miuna9890"},"content":"    public Events(String desc) throws EmptyEventException, EmptyEventTimingException, EmptyEventDateException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"miuna9890"},"content":"        super(desc);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"miuna9890"},"content":"        // Split the description to extract the timings","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"miuna9890"},"content":"        String[] parts1 \u003d desc.split(\" /from \");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"miuna9890"},"content":"        String[] parts2 \u003d parts1[1].split(\" /to \");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"miuna9890"},"content":"        String[] parts3 \u003d parts2[1].split(\" /on \");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"miuna9890"},"content":"        checkValidityOfEventInput(desc, parts1, parts2, parts3);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"miuna9890"},"content":"        parseEvent(parts2, parts3);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"miuna9890"},"content":"     * Parses the event date and time from the provided description strings and","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"miuna9890"},"content":"     * attempts to convert them into `LocalDate` and `LocalTime` objects.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"miuna9890"},"content":"     * If the first format fails, it will try a second format, and if that fails,","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"miuna9890"},"content":"     * it stores the raw deadline string instead.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"miuna9890"},"content":"     * @param parts2 The array containing the start and end time strings.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"miuna9890"},"content":"     * @param parts3 The array containing the end time and date strings.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"miuna9890"},"content":"    private void parseEvent(String[] parts2, String[] parts3) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"miuna9890"},"content":"        try {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"miuna9890"},"content":"            //input of format 16:00","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"miuna9890"},"content":"            localStartTime \u003d ParseTasks.parseTime(parts2[0]);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"miuna9890"},"content":"            localEndTime \u003d ParseTasks.parseTime(parts3[0]);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"miuna9890"},"content":"            // input of format 2020-12-10","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"miuna9890"},"content":"            localDate \u003d ParseTasks.parseDateFormat1(parts3[1]);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"miuna9890"},"content":"        } catch (DateTimeParseException e1) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"miuna9890"},"content":"            try {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"miuna9890"},"content":"                //input of format 16:00","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"miuna9890"},"content":"                localStartTime \u003d ParseTasks.parseTime(parts2[0]);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"miuna9890"},"content":"                localEndTime \u003d ParseTasks.parseTime(parts3[0]);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"miuna9890"},"content":"                // input of format 10/12/2020","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"miuna9890"},"content":"                localDate \u003d ParseTasks.parseDateFormat2(parts3[1]);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"miuna9890"},"content":"            } catch (DateTimeParseException e2) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"miuna9890"},"content":"                // if wrong format, just print the string","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"miuna9890"},"content":"                rawDeadline \u003d parts2[0];","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"miuna9890"},"content":"            }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"miuna9890"},"content":"     * Validates the event description input by checking if the description,","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"miuna9890"},"content":"     * start time, end time, and date are present and correctly formatted.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"miuna9890"},"content":"     * Throws exceptions if any part of the input is missing or invalid.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"miuna9890"},"content":"     * @param desc   The original event description string.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"miuna9890"},"content":"     * @param parts1 The array containing the event description and start time.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"miuna9890"},"content":"     * @param parts2 The array containing the start time and end time.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"miuna9890"},"content":"     * @param parts3 The array containing the end time and date.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"miuna9890"},"content":"     * @throws EmptyEventException       If the event description is empty.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"miuna9890"},"content":"     * @throws EmptyEventTimingException If the start or end time is missing or invalid.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"miuna9890"},"content":"     * @throws EmptyEventDateException   If the date is missing or invalid.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"miuna9890"},"content":"    private static void checkValidityOfEventInput(String desc, String[] parts1, String[] parts2, String[] parts3) throws EmptyEventException, EmptyEventTimingException, EmptyEventDateException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"miuna9890"},"content":"        if (desc.isEmpty()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"miuna9890"},"content":"            throw new EmptyEventException","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"miuna9890"},"content":"                    (\"     OOPS! Event start time not given leh. \" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"miuna9890"},"content":"                            \"Pls provide in the following format: \" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"miuna9890"},"content":"                            \"event project meeting /from 16:00 /to 18:00 /on yyyy-MM-dd or dd/MM/yyyy\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"miuna9890"},"content":"        //throw exception if start time not given, or it is whitespace","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"miuna9890"},"content":"        if (parts1.length \u003c 2 || parts1[1].trim().isEmpty()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"miuna9890"},"content":"            throw new EmptyEventTimingException","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"miuna9890"},"content":"                    (\"     OOPS! Event start time not given leh. \" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"miuna9890"},"content":"                            \"Pls provide in the following format: \" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"miuna9890"},"content":"                            \"event project meeting /from 16:00 /to 18:00 /on yyyy-MM-dd or dd/MM/yyyy\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"miuna9890"},"content":"        //throw exception if end time not given or it is whitespace","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"miuna9890"},"content":"        if (parts2.length \u003c 2 || parts2[1].trim().isEmpty()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"miuna9890"},"content":"            throw new EmptyEventTimingException","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"miuna9890"},"content":"                    (\"     OOPS! Event end time not given leh. \" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"miuna9890"},"content":"                            \"Pls provide in the following format: \" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"miuna9890"},"content":"                            \"event project meeting /from 16:00 /to 18:00 /on yyyy-MM-dd or dd/MM/yyyy\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"miuna9890"},"content":"        //throw exception if date not given or it is whitespace","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"miuna9890"},"content":"        if (parts3.length \u003c 2 || parts3[1].trim().isEmpty()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"miuna9890"},"content":"            throw new EmptyEventDateException","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"miuna9890"},"content":"                    (\"     OOPS! Event date not given leh. \" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"miuna9890"},"content":"                            \"Pls provide in the following format: \" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"miuna9890"},"content":"                            \"event project meeting /from 16:00 /to 18:00 /on yyyy-MM-dd or dd/MM/yyyy\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"miuna9890"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"miuna9890"},"content":"    public String print() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"miuna9890"},"content":"        //splits string to get the timings and desc","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"miuna9890"},"content":"        String[] parts1 \u003d super.print().split(\" /from \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"miuna9890"},"content":"        String[] parts2 \u003d parts1[1].split(\" /to \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"miuna9890"},"content":"        String[] parts3 \u003d parts2[1].split(\" /on \");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"miuna9890"},"content":"        String dateEdited \u003d \"\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"miuna9890"},"content":"        String startTimeEdited \u003d \"\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"miuna9890"},"content":"        String endTimeEdited \u003d \"\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"miuna9890"},"content":"        if (localDate !\u003d null \u0026\u0026 localStartTime !\u003d null \u0026\u0026 localEndTime !\u003d null) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"miuna9890"},"content":"            // input of format /from 16:00 /to 18:00 /on 2020-12-10 || 10/12/2020 16:00 changed to Dec 12 2020, 4:00 pm to 6:00 pm","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"miuna9890"},"content":"            DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"miuna9890"},"content":"            dateEdited \u003d localDate.format(dateFormatter);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"miuna9890"},"content":"            DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"h:mm a\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"miuna9890"},"content":"            startTimeEdited \u003d localStartTime.format(timeFormatter);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"miuna9890"},"content":"            endTimeEdited \u003d localEndTime.format(timeFormatter);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"miuna9890"},"content":"            return \"[E]\" + parts1[0] + \" (from: \" + startTimeEdited + \" to: \"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"miuna9890"},"content":"                    + endTimeEdited + \" on: \" + dateEdited + \")\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"miuna9890"},"content":"        } else if (rawDeadline !\u003d null) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"miuna9890"},"content":"            dateEdited \u003d rawDeadline;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"miuna9890"},"content":"            return \"[E]\" + parts1[0] + \"( \" + dateEdited + \" )\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"miuna9890"},"content":"        // Default return statement if none of the conditions are met","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"miuna9890"},"content":"        return \"[E]\" + super.print();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"miuna9890"},"content":"     * Returns date of event in LocalDate type","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"miuna9890"},"content":"    public LocalDate getLocalDate() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"miuna9890"},"content":"        if (localDate !\u003d null) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"miuna9890"},"content":"            return localDate;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"miuna9890"},"content":"        } else {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"miuna9890"},"content":"            return null;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"miuna9890":170}},{"path":"src/main/java/Tasks/ParseTasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Tasks;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"public class ParseTasks {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"     * Parses a time string in the format \"HH:mm\" (e.g., \"16:00\") and returns","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"     * a `LocalTime` object.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"     * @param time The time string to be parsed.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"     * @return A `LocalTime` object representing the parsed time.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"    public static LocalTime parseTime(String time) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"        //input of format 16:00","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"        return LocalTime.parse(time, timeFormatter);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"     * Parses a date string in the format \"yyyy-MM-dd\" (e.g., \"2020-12-10\") and returns","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"     * a `LocalDate` object.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"miuna9890"},"content":"     * @param date The date string to be parsed.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"miuna9890"},"content":"     * @return A `LocalDate` object representing the parsed date.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"miuna9890"},"content":"    public static LocalDate parseDateFormat1(String date) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"miuna9890"},"content":"        // input of format 2020-12-10","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"miuna9890"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"miuna9890"},"content":"        return LocalDate.parse(date, dateFormatter);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"miuna9890"},"content":"     * Parses a date string in the format \"dd/MM/yyyy\" (e.g., \"10/12/2020\") and returns","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"miuna9890"},"content":"     * a `LocalDate` object.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"miuna9890"},"content":"     * @param date The date string to be parsed.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"miuna9890"},"content":"     * @return A `LocalDate` object representing the parsed date.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"miuna9890"},"content":"    public static LocalDate parseDateFormat2(String date) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"miuna9890"},"content":"        // input of format 10/12/2020","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"miuna9890"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"miuna9890"},"content":"        return LocalDate.parse(date, dateFormatter);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"miuna9890"},"content":"     * Parses a date and time string in the format \"yyyy-MM-dd HH:mm\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"miuna9890"},"content":"     * (e.g., \"2020-12-10 16:00\") and returns a `LocalDateTime` object.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"miuna9890"},"content":"     * @param dateTime The date and time string to be parsed.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"miuna9890"},"content":"     * @return A `LocalDateTime` object representing the parsed date and time.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"miuna9890"},"content":"    public static LocalDateTime parseDateTimeFormat1(String dateTime) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"miuna9890"},"content":"        // input of format 2020-12-10 16:00","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"miuna9890"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"miuna9890"},"content":"        return LocalDateTime.parse(dateTime, dateTimeFormatter);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"miuna9890"},"content":"     * Parses a date and time string in the format \"dd/MM/yyyy HH:mm\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"miuna9890"},"content":"     * (e.g., \"10/12/2020 16:00\") and returns a `LocalDateTime` object.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"miuna9890"},"content":"     * @param dateTime The date and time string to be parsed.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"miuna9890"},"content":"     * @return A `LocalDateTime` object representing the parsed date and time.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"miuna9890"},"content":"    public static LocalDateTime parseDateTimeFormat2(String dateTime) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"miuna9890"},"content":"        // input of format 10/12/2020 16:00","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"miuna9890"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"miuna9890"},"content":"        return LocalDateTime.parse(dateTime, dateTimeFormatter);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-09-11","isFullCredit":false}],"authorContributionMap":{"miuna9890":79}},{"path":"src/main/java/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Tasks;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"    //var that describes task","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"    protected String desc;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"    //var that stores status of task","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"    public Task(String desc) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"     * marks item as complete","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"    public void mark() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"     * Unmarks item as incomplete","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"    public void unMark() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"miuna9890"},"content":"     * Returns string representation of task completion status","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"miuna9890"},"content":"     * If done, return X, else return \" \"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"miuna9890"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"miuna9890"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"miuna9890"},"content":"    //getter","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"miuna9890"},"content":"    public String getTaskDesc() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"miuna9890"},"content":"        return desc; // mark done task with X","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"miuna9890"},"content":"     * Returns string representation of task","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"miuna9890"},"content":"    public String print() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"miuna9890"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + desc;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"miuna9890":47}},{"path":"src/main/java/Tasks/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Tasks;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"import Exceptions.EmptyDescException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"public class ToDos extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"     * Calls constructor of super class","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"     * @throws EmptyDescException If desc is empty.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"    public ToDos(String desc) throws EmptyDescException {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"        super(desc);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"        if (desc.isEmpty()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"            //throws exception if not desc is given","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"            throw new EmptyDescException","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"                    (\"     OOPS!!! The description of a todo cannot be empty leh. \" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"                            \"Pls provide in the following format: \" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"                            \"todo read book\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"    public String print() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"        return \"[T]\" + super.print();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"miuna9890":29}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"4.0\" top\u003d\"4.0\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"        \u003c!-- Use Circle for circular profile picture --\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"        \u003cCircle fx:id\u003d\"displayPicture\" radius\u003d\"40\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"miuna9890":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"Main.MainWindow\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" promptText\u003d\"Type here\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"miuna9890":19}},{"path":"src/test/java/Data/StorelistTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Data;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"import Exceptions.EmptyDescException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"import Exceptions.InvalidIndexException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"import Tasks.Task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"import Tasks.ToDos;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"public class StorelistTest {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"    public void addToDoItemCheck() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"        ArrayList\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"        StoreList storeList \u003d new StoreList(items);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"        // Create a new ToDo task and add it to the StoreList","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"        storeList.addItem(\"read book\", \"todo\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"        int size \u003d storeList.getSize();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"        // Assert that the task was added correctly","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"        assertEquals(\"[T][ ] read book\", storeList.get(size - 1).print());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"miuna9890"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"miuna9890"},"content":"    public void addEventItemCheck() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"miuna9890"},"content":"        ArrayList\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"miuna9890"},"content":"        StoreList storeList \u003d new StoreList(items);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"miuna9890"},"content":"        // Create a new event task and add it to the StoreList","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"miuna9890"},"content":"        storeList.addItem(\"project /from 16:00 /to 18:00 /on 2020-04-05\", \"event\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"miuna9890"},"content":"        int size \u003d storeList.getSize();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"miuna9890"},"content":"        // Assert that the task was added correctly","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"miuna9890"},"content":"        assertEquals(\"[E][ ] project (from: 4:00 pm to: 6:00 pm on: Apr 05 2020)\", storeList.get(size - 1).print());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"miuna9890"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"miuna9890"},"content":"    public void addDeadlineItemCheck() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"miuna9890"},"content":"        ArrayList\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"miuna9890"},"content":"        StoreList storeList \u003d new StoreList(items);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"miuna9890"},"content":"        // Create a new deadline task and add it to the StoreList","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"miuna9890"},"content":"        storeList.addItem(\"read book /by 2020-04-05 16:00\", \"deadline\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"miuna9890"},"content":"        int size \u003d storeList.getSize();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"miuna9890"},"content":"        // Assert that the task was added correctly","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"miuna9890"},"content":"        assertEquals(\"[D][ ] read book (by: Apr 05 2020, 4:00 pm)\", storeList.get(size - 1).print());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"miuna9890"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"miuna9890"},"content":"    public void markItemCheck() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"miuna9890"},"content":"        ArrayList\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"miuna9890"},"content":"        StoreList storeList \u003d new StoreList(items);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"miuna9890"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"miuna9890"},"content":"            // Create a new deadline task and add it to the StoreList","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"miuna9890"},"content":"            storeList.addItem(\"read book /by 2020-04-05 16:00\", \"deadline\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"miuna9890"},"content":"            int size \u003d storeList.getSize();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"miuna9890"},"content":"            storeList.markItem(size);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"miuna9890"},"content":"            // Assert that the task was marked correctly","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"miuna9890"},"content":"            assertEquals(\"[D][X] read book (by: Apr 05 2020, 4:00 pm)\", storeList.get(size - 1).print());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"miuna9890"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"miuna9890"},"content":"            assertEquals(\"Task number does not exist\", e.getMessage());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"miuna9890"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"miuna9890"},"content":"    public void unmarkItemCheck() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"miuna9890"},"content":"        ArrayList\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"miuna9890"},"content":"        StoreList storeList \u003d new StoreList(items);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"miuna9890"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"miuna9890"},"content":"            // Create a new deadline task and add it to the StoreList","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"miuna9890"},"content":"            storeList.addItem(\"read book /by 2020-04-05 16:00\", \"deadline\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"miuna9890"},"content":"            int size \u003d storeList.getSize();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"miuna9890"},"content":"            storeList.UnmarkItem(size);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"miuna9890"},"content":"            // Assert that the task was unmarked correctly","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"miuna9890"},"content":"            assertEquals(\"[D][ ] read book (by: Apr 05 2020, 4:00 pm)\", storeList.get(size - 1).print());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"miuna9890"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"miuna9890"},"content":"            assertEquals(\"Task number does not exist\", e.getMessage());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"miuna9890"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"miuna9890"},"content":"    public void deleteItemCheck() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"miuna9890"},"content":"        ArrayList\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"miuna9890"},"content":"        StoreList storeList \u003d new StoreList(items);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"miuna9890"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"miuna9890"},"content":"            // Create a new deadline task and add it to the StoreList","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"miuna9890"},"content":"            storeList.addItem(\"read book /by 2020-04-05 16:00\", \"deadline\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"miuna9890"},"content":"            int size \u003d storeList.getSize();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"miuna9890"},"content":"            storeList.deleteItem(size);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"miuna9890"},"content":"            // Assert that the task was deleted correctly","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"miuna9890"},"content":"            storeList.get(size).print();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"miuna9890"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"miuna9890"},"content":"            assertEquals(\"Task number does not exist\", e.getMessage());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"miuna9890"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"miuna9890"},"content":"    public void displayItemCheck() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"miuna9890"},"content":"        ArrayList\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"miuna9890"},"content":"        StoreList storeList \u003d new StoreList(items);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"miuna9890"},"content":"        // Create a new deadline task and add it to the StoreList","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"miuna9890"},"content":"        storeList.addItem(\"read book /by 2020-04-05 16:00\", \"deadline\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"miuna9890"},"content":"        // Create a new event task and add it to the StoreList","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"miuna9890"},"content":"        storeList.addItem(\"project /from 16:00 /to 18:00 /on 2020-04-05\", \"event\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"miuna9890"},"content":"        // Create a new ToDo task and add it to the StoreList","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"miuna9890"},"content":"        storeList.addItem(\"read book\", \"todo\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"miuna9890"},"content":"        // Capture the console output","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"miuna9890"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"miuna9890"},"content":"        PrintStream originalOut \u003d System.out; // Save the original System.out","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"miuna9890"},"content":"        System.setOut(new PrintStream(outContent)); // Redirect System.out to outContent","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"miuna9890"},"content":"        // Call the method that prints to the console","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"miuna9890"},"content":"        storeList.displayItems();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"miuna9890"},"content":"        assertEquals(\"    Here are the tasks in your list:\\r\\n\" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"miuna9890"},"content":"                \"    1.[D][ ] read book (by: Apr 05 2020, 4:00 pm)\\r\\n\" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"miuna9890"},"content":"                \"    2.[E][ ] project (from: 4:00 pm to: 6:00 pm on: Apr 05 2020)\\r\\n\" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"miuna9890"},"content":"                \"    3.[T][ ] read book\\r\\n\", outContent.toString());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"miuna9890"},"content":"        // Restore original System.out","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"miuna9890"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"miuna9890"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"miuna9890"},"content":"    public void dueCheck() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"miuna9890"},"content":"        ArrayList\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"miuna9890"},"content":"        StoreList storeList \u003d new StoreList(items);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"miuna9890"},"content":"        // Create a new deadline task and add it to the StoreList","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"miuna9890"},"content":"        storeList.addItem(\"read book /by 2020-04-05 16:00\", \"deadline\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"miuna9890"},"content":"        // Create a new event task and add it to the StoreList","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"miuna9890"},"content":"        storeList.addItem(\"project /from 16:00 /to 18:00 /on 2020-04-05\", \"event\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"miuna9890"},"content":"        // Create a new ToDo task and add it to the StoreList","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"miuna9890"},"content":"        storeList.addItem(\"read book\", \"todo\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"miuna9890"},"content":"        // Capture the console output","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"miuna9890"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"miuna9890"},"content":"        PrintStream originalOut \u003d System.out; // Save the original System.out","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"miuna9890"},"content":"        System.setOut(new PrintStream(outContent)); // Redirect System.out to outContent","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"miuna9890"},"content":"        // Call the method that prints to the console","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"miuna9890"},"content":"        storeList.dueOnDate(\"2020-04-05\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"miuna9890"},"content":"        assertEquals(\"    Here are the tasks due on 2020-04-05:\\r\\n\" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"miuna9890"},"content":"                \"    1.[D][ ] read book (by: Apr 05 2020, 4:00 pm)\\r\\n\" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"miuna9890"},"content":"                \"    2.[E][ ] project (from: 4:00 pm to: 6:00 pm on: Apr 05 2020)\\r\\n\", outContent.toString());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"miuna9890"},"content":"        // Restore original System.out","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"miuna9890"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"miuna9890"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"miuna9890"},"content":"    public void findCheck() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"miuna9890"},"content":"        ArrayList\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"miuna9890"},"content":"        StoreList storeList \u003d new StoreList(items);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"miuna9890"},"content":"        // Create a new deadline task and add it to the StoreList","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"miuna9890"},"content":"        storeList.addItem(\"read book /by 2020-04-05 16:00\", \"deadline\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"miuna9890"},"content":"        // Create a new event task and add it to the StoreList","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"miuna9890"},"content":"        storeList.addItem(\"project /from 16:00 /to 18:00 /on 2020-04-05\", \"event\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"miuna9890"},"content":"        // Create a new ToDo task and add it to the StoreList","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"miuna9890"},"content":"        storeList.addItem(\"read book\", \"todo\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"miuna9890"},"content":"        // Capture the console output","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"miuna9890"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"miuna9890"},"content":"        PrintStream originalOut \u003d System.out; // Save the original System.out","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"miuna9890"},"content":"        System.setOut(new PrintStream(outContent)); // Redirect System.out to outContent","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"miuna9890"},"content":"        // Call the method that prints to the console","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"miuna9890"},"content":"        storeList.displayItemsWithWord(\"book\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"miuna9890"},"content":"        assertEquals(\"    Here are the tasks in your list that match book:\\r\\n\" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"miuna9890"},"content":"                \"    1.[D][ ] read book (by: Apr 05 2020, 4:00 pm)\\r\\n\" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"miuna9890"},"content":"                \"    3.[T][ ] read book\\r\\n\", outContent.toString());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"miuna9890"},"content":"        // Restore original System.out","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"miuna9890"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"miuna9890":200}},{"path":"src/test/java/Tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Tasks;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"import Exceptions.*;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"    public void deadlinePrintCheck(){","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"            assertEquals(\"[D][ ] read book (by: Apr 10 2020, 4:00 pm)\", new Deadlines(\"read book /by 2020-04-10 16:00\").print());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"        } catch (EmptyDeadlineDateException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"            assertEquals(\"     OOPS!! Deadline date not given leh! \" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"                    \"Pls provide in the following format: \" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"                    \"deadline read book /by yyyy-MM-dd or dd/MM/yyy 16:00\", e.getMessage());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"        } catch (EmptyDeadlineException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"            assertEquals(\"     OOPS!!! The description of a deadline cannot be empty leh. Pls provide in the following format: deadline read book /by yyyy-MM-dd or dd/MM/yyy 16:00\", e.getMessage());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"    public void invalidDeadlineCheck1() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"            assertEquals(\"[E][ ] read book (from: 4:00 pm to: 6:00 pm on: Apr 05 2020\", new Deadlines(\"\").print());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"        } catch (EmptyDeadlineException | EmptyDeadlineDateException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"miuna9890"},"content":"            assertEquals(\"     OOPS!!! The description of a deadline cannot be empty leh. Pls provide in the following format: deadline read book /by yyyy-MM-dd or dd/MM/yyy 16:00\", e.getMessage());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"miuna9890"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"miuna9890"},"content":"    public void invalidDeadlineCheck2() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"miuna9890"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"miuna9890"},"content":"            assertEquals(\"[E][ ] read book (from: 4:00 pm to: 6:00 pm on: Apr 05 2020\", new Deadlines(\"read book /by \").print());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"miuna9890"},"content":"        } catch (EmptyDeadlineException | EmptyDeadlineDateException e)  {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"miuna9890"},"content":"            assertEquals(\"     OOPS!! Deadline date not given leh! \" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"miuna9890"},"content":"                    \"Pls provide in the following format: \" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"miuna9890"},"content":"                    \"deadline read book /by yyyy-MM-dd or dd/MM/yyy 16:00\", e.getMessage());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"miuna9890":41}},{"path":"src/test/java/Tasks/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Tasks;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"import Exceptions.*;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"public class EventsTest {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"    public void eventPrintCheck() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"            assertEquals(\"[E][ ] read book (from: 4:00 pm to: 6:00 pm on: Apr 05 2020)\", new Events(\"read book /from 16:00 /to 18:00 /on 2020-04-05\").print());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"        } catch (EmptyEventException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"            assertEquals(\"      OOPS!!! The description of a event cannot be empty leh.\", e.getMessage());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"        } catch (EmptyEventDateException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"        } catch (EmptyEventTimingException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"    public void invalidEventCheck1() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"            assertEquals(\"[E][ ] read book (from: 4:00 pm to: 6:00 pm on: Apr 05 2020\", new Events(\"read book /from \").print());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"        } catch (EmptyEventTimingException | EmptyEventException | EmptyEventDateException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"miuna9890"},"content":"            assertEquals(\"     OOPS! Event start time not given leh. Pls provide in the following format: event project meeting /from 16:00 /to 18:00 /on yyyy-MM-dd or dd/MM/yyyy\", e.getMessage());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"miuna9890"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"miuna9890"},"content":"    public void invalidEventCheck2() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"miuna9890"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"miuna9890"},"content":"            assertEquals(\"[E][ ] read book (from: 4:00 pm to: 6:00 pm on: Apr 05 2020\", new Events(\"read book /from 16:00  \").print());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"miuna9890"},"content":"        } catch (EmptyEventTimingException | EmptyEventException | EmptyEventDateException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"miuna9890"},"content":"            assertEquals(\"     OOPS! Event end time not given leh. Pls provide in the following format: event project meeting /from 16:00 /to 18:00 /on yyyy-MM-dd or dd/MM/yyyy\", e.getMessage());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"miuna9890"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"miuna9890"},"content":"    public void invalidEventCheck3() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"miuna9890"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"miuna9890"},"content":"            assertEquals(\"[E][ ] read book (from: 4:00 pm to: 6:00 pm on: Apr 05 2020\", new Events(\"read book /from 16:00 /to 18:00\").print());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"miuna9890"},"content":"        } catch (EmptyEventDateException | EmptyEventException | EmptyEventTimingException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"miuna9890"},"content":"            assertEquals(\"     OOPS! Event date not given leh. Pls provide in the following format: event project meeting /from 16:00 /to 18:00 /on yyyy-MM-dd or dd/MM/yyyy\", e.getMessage());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"miuna9890":48}},{"path":"src/test/java/Tasks/ToDosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"package Tasks;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"import Exceptions.EmptyDescException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"public class ToDosTest {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"    public void todoPrintCheck(){","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"            assertEquals(\"[T][ ] read book\", new ToDos(\"read book\").print());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"        } catch (EmptyDescException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"            assertEquals(\"    OOPS!!! The description of a todo cannot be empty leh.\", e.getMessage());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"miuna9890"},"content":"    public void invalidTodoCheck(){","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"miuna9890"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"miuna9890"},"content":"            assertEquals(\"[T][ ] read book\", new ToDos(\"\").print());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"miuna9890"},"content":"        } catch (EmptyDescException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"            assertEquals(\"     OOPS!!! The description of a todo cannot be empty leh. Pls provide in the following format: todo read book\", e.getMessage());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"miuna9890"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"miuna9890"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"miuna9890"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"miuna9890":26}},{"path":"text-ui-test/data/flash.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"D|X| project1 /by 2020-05-12","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"D| | project2 /by 16:00","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"D| | project /by Sunday","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"D| | project /by 12/05/2020 16:00","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"D| | project /by 12/05/2021","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"E| | project meeting /from 5pm /to 6pm","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"T| | read book","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"D| | project /by 2020-05-12 16:00","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"D| | project1 /by 2020-05-12","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"D| | project2 /by 16:00","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"D| | project /by Sunday","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"D| | project /by 12/05/2020 16:00","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"D| | project /by 12/05/2021","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"E| | project meeting /from 5pm /to 6pm","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"miuna9890":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"miuna9890"},"content":"blah","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"miuna9890"},"content":"todo read book","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"miuna9890"},"content":"deadline project /by 2020-05-12 16:00","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"miuna9890"},"content":"deadline project1 /by 2020-05-12","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"miuna9890"},"content":"deadline project2 /by 16:00","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"miuna9890"},"content":"deadline project /by Sunday","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"miuna9890"},"content":"deadline project /by 12/05/2020 16:00","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"miuna9890"},"content":"deadline project /by 12/05/2021","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"miuna9890"},"content":"event project meeting /from 5pm /to 6pm","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"miuna9890"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"miuna9890"},"content":"mark 1","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"miuna9890"},"content":"mark 2","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"miuna9890"},"content":"unmark 1","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"miuna9890"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"miuna9890"},"content":"delete 1","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"list","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"miuna9890"},"content":"due 2020-05-12","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"bye","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"miuna9890":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"miuna9890"},"content":"java -classpath ..\\bin Main.Flash \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"miuna9890":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"miuna9890"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/**/*.java","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"miuna9890"},"content":"java -classpath ../bin Flash \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"miuna9890":2,"-":36}}]
