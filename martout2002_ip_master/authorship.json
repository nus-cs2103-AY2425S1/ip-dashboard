[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"martout2002"},"content":"# brainrot PRO","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"martout2002"},"content":"\u003e\"Home is where you don\u0027t have to wipe your toilet seat before shitting\" -Martin Ng([source](https://www.youtube.com/watch?v\u003dxvFZjo5PgG0))","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"martout2002"},"content":"brainrot PRO can","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"martout2002"},"content":"- skibidi gyat","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"martout2002"},"content":"- ohio rizz","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"martout2002"},"content":"- fanum tax","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"martout2002"},"content":"- sigma chode","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"martout2002"},"content":"But first, how much aura do you have?","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"martout2002"},"content":"1. Check your vbucks","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"martout2002"},"content":"2. Then check your robux","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"martout2002"},"content":"3. ~~Comment in the code down below your 16 numbers infront of your credit card and the 3 cool numbers behind as well as the expiry date ðŸ˜¸~~","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"martout2002"},"content":"If you are a Java programmer, you can try practicing, might be too hard for you:","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"martout2002"},"content":"```java","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"martout2002"},"content":"public class Main {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"martout2002"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"martout2002"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"martout2002"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"martout2002"},"content":"Features of this bot:","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"martout2002"},"content":"- [ ] Make you happy","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"martout2002"},"content":"- [ ] keep you company","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"martout2002"},"content":"- [x] Teach you brainrot","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"martout2002":25,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"martout2002"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"martout2002"},"content":"}","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"martout2002"},"content":"checkstyle {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"martout2002"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"martout2002"},"content":"    // This should match the package and class name","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"martout2002"},"content":"    mainClass.set(\"BrainRot.Main\")","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"martout2002"},"content":"    archiveBaseName \u003d \"BrainRot\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"martout2002":8,"-":39}},{"path":"data/brainRot.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"martout2002"},"content":"[T][ ]/borrow books","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"martout2002"},"content":"[T][ ]/sell books","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"martout2002"},"content":"[T][ ]/sell books","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"martout2002"},"content":"[T][ ]/create books","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"martout2002":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"martout2002"},"content":"# brainrot PRO","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"martout2002"},"content":"\u003e\"Home is where you don\u0027t have to wipe your toilet seat before shitting\" -Martin Ng([source](https://www.youtube.com/watch?v\u003dxvFZjo5PgG0))","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"martout2002"},"content":"brainrot PRO can","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"martout2002"},"content":"- skibidi gyat","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"martout2002"},"content":"- ohio rizz","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"martout2002"},"content":"- fanum tax","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"martout2002"},"content":"- sigma chode","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"martout2002"},"content":"But first, how much aura do you have?","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"martout2002"},"content":"1. Check your vbucks","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"martout2002"},"content":"2. Then check your robux","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"martout2002"},"content":"3. ~~Comment in the code down below your 16 numbers infront of your credit card and the 3 cool numbers behind as well as the expiry date ðŸ˜¸~~","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"martout2002"},"content":"If you are a Java programmer, you can try practicing, might be too hard for you:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"martout2002"},"content":"```java","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"martout2002"},"content":"public class Main {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"martout2002"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"martout2002"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"martout2002"},"content":"}","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"martout2002"},"content":"Features of this bot:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"martout2002"},"content":"- [ ] Make you happy","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"martout2002"},"content":"- [ ] keep you company","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"martout2002"},"content":"- [x] Teach you brainrot","lastModifiedDate":"2024-09-18","isFullCredit":false}],"authorContributionMap":{"martout2002":22,"-":8}},{"path":"src/main/java/BrainRot/BrainRot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martout2002"},"content":"package brainrot;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"martout2002"},"content":"import brainrot.exceptions.*;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"martout2002"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"martout2002"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"martout2002"},"content":" * BrainRot class is the main controller for the task management system.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"martout2002"},"content":" * It coordinates between the UI, task storage, and task operations.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"martout2002"},"content":" * This class handles user commands, manages the task list, and ensures data is saved to storage.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"martout2002"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"martout2002"},"content":"public class BrainRot {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"martout2002"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"martout2002"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"martout2002"},"content":"    private Ui ui;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"martout2002"},"content":"     * Constructs a BrainRot.BrainRot object that initializes the user interface, storage, and task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"martout2002"},"content":"     * @param filePath The file path where tasks are stored.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"martout2002"},"content":"    public BrainRot(String filePath) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"martout2002"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"martout2002"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"martout2002"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"martout2002"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"martout2002"},"content":"        } catch (UnknownLoadingError e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"martout2002"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"martout2002"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"martout2002"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"martout2002"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"martout2002"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"martout2002"},"content":"     * Starts the main loop to process user commands.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"martout2002"},"content":"     * This method continually reads user input and performs the appropriate actions.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"martout2002"},"content":"    public String run(String userInput) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"martout2002"},"content":"        String[] parsedInput \u003d Parser.parse(userInput);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"martout2002"},"content":"        assert parsedInput.length \u003d\u003d 2 : \"There should only be two parts of the input\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"martout2002"},"content":"        String action \u003d parsedInput[0];","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"martout2002"},"content":"        String details \u003d parsedInput[1];","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"martout2002"},"content":"        System.out.println(action);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"martout2002"},"content":"        System.out.println(details);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"martout2002"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"martout2002"},"content":"            return switch (action) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"martout2002"},"content":"                case \"list\" -\u003e ui.showTaskList(tasks);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"martout2002"},"content":"                case \"bye\" -\u003e ui.showExit();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"martout2002"},"content":"                case \"find\" -\u003e findTask(details);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"martout2002"},"content":"                case \"mark\" -\u003e markTask(details);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"martout2002"},"content":"                case \"unmark\" -\u003e unmarkTask(details);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"martout2002"},"content":"                case \"delete\" -\u003e deleteTask(details);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"martout2002"},"content":"                case \"add\" -\u003e addTask(details);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"martout2002"},"content":"                default -\u003e throw new UnknownCommandException(\"Unknown command\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"martout2002"},"content":"            };","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"martout2002"},"content":"        } catch (UnknownCommandException | UnknownActivityException | IOException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"martout2002"},"content":"            return ui.showCommandError();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"martout2002"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"martout2002"},"content":"     * Marks a task as completed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"martout2002"},"content":"     * @param details The index of the task to be marked.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"martout2002"},"content":"     * @throws IOException If an I/O error occurs during task saving.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"martout2002"},"content":"    private String markTask(String details) throws IOException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"martout2002"},"content":"        int markIndex \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"martout2002"},"content":"        tasks.getTask(markIndex).mark();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"martout2002"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"martout2002"},"content":"        return ui.showMarkMsg(tasks.getTask(markIndex).toString());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"martout2002"},"content":"     * Unmarks a task, setting it as not completed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"martout2002"},"content":"     * @param details The index of the task to be unmarked.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"martout2002"},"content":"     * @throws IOException If an I/O error occurs during task saving.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"martout2002"},"content":"    private String unmarkTask(String details) throws IOException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"martout2002"},"content":"        int unmarkIndex \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"martout2002"},"content":"        tasks.getTask(unmarkIndex).unmark();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"martout2002"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"martout2002"},"content":"        return ui.showUnMarkMsg(tasks.getTask(unmarkIndex).toString());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"martout2002"},"content":"     * Finds and displays tasks that match the given search criteria.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"martout2002"},"content":"     * If no matching tasks are found, the UI will notify the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"martout2002"},"content":"     * @param details The search term used to match against task descriptions.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"martout2002"},"content":"     * @throws IOException If an I/O error occurs during the task searching process.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"martout2002"},"content":"    private String findTask(String details) throws IOException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"martout2002"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"martout2002"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"martout2002"},"content":"            Task unchecked \u003d tasks.getTask(i);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"martout2002"},"content":"            if (unchecked.description.contains(details)) {  // Use contains for partial matches","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"martout2002"},"content":"                matchingTasks.addTask(unchecked);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"martout2002"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"martout2002"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"martout2002"},"content":"        return ui.showFind(matchingTasks);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"martout2002"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"martout2002"},"content":"     * @param details The index of the task to be deleted.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"martout2002"},"content":"     * @throws IOException If an I/O error occurs during task saving.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"martout2002"},"content":"    private String deleteTask(String details) throws IOException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"martout2002"},"content":"        int deleteIndex \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"martout2002"},"content":"        String taskDetails \u003d tasks.getTask(deleteIndex).toString();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"martout2002"},"content":"        tasks.removeTask(deleteIndex);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"martout2002"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"martout2002"},"content":"        return ui.showDeleteMsg(taskDetails);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"martout2002"},"content":"     * Adds a new task to the task list based on the details provided.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"martout2002"},"content":"     * @param details The details of the task to be added.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"martout2002"},"content":"     * @throws UnknownCommandException If the command to add the task is unknown.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"martout2002"},"content":"     * @throws UnknownActivityException If the task description is invalid.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"martout2002"},"content":"     * @throws IOException If an I/O error occurs during task saving.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"martout2002"},"content":"    private String addTask(String details) throws UnknownCommandException, UnknownActivityException, IOException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"martout2002"},"content":"        Task newTask;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"martout2002"},"content":"        if (details.startsWith(\"todo\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"martout2002"},"content":"            newTask \u003d new ToDo(details.substring(5).trim());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"martout2002"},"content":"        } else if (details.startsWith(\"deadline\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"martout2002"},"content":"            String[] parts \u003d details.split(\"/by\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"martout2002"},"content":"            newTask \u003d new Deadline(parts[0].substring(9).trim(), parts[1].trim());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"martout2002"},"content":"        } else if (details.startsWith(\"event\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"martout2002"},"content":"            String[] parts \u003d details.split(\"/to\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"martout2002"},"content":"            newTask \u003d new Event(parts[0].substring(6).trim(), parts[1].trim(), parts[2].trim());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"martout2002"},"content":"        } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"martout2002"},"content":"            throw new UnknownCommandException(\"Unknown command\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"martout2002"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"martout2002"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"martout2002"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"martout2002"},"content":"        return ui.showAddTaskMsg(newTask.toString());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"martout2002"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"martout2002":149}},{"path":"src/main/java/BrainRot/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martout2002"},"content":"package brainrot;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"martout2002"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"martout2002"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"martout2002"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"martout2002"},"content":" * The Deadline class represents a task with a deadline.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"martout2002"},"content":" * It extends the Task class and includes a deadline by which the task must be completed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"martout2002"},"content":" * The deadline is stored as a formatted string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"martout2002"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"martout2002"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"martout2002"},"content":"    // The end time of the task, formatted as a string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"martout2002"},"content":"    protected String end;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"martout2002"},"content":"     * Constructs a new Deadline task with a specified description and deadline.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"martout2002"},"content":"     * @param command The description of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"martout2002"},"content":"     * @param end The deadline for the task in the format \"MMM dd yyyy HH:mm\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"martout2002"},"content":"     *            Example: \"Dec 02 2019 18:00\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"martout2002"},"content":"    public Deadline(String command, String end) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"martout2002"},"content":"        super(command);  // Pass task description to BrainRot.Task class","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"martout2002"},"content":"        // Define the correct formatter that matches \"Dec 02 2019 18:00\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"martout2002"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"martout2002"},"content":"        // Parse the input string using the correct formatter","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"martout2002"},"content":"        LocalDateTime endDate \u003d LocalDateTime.parse(end.trim(), formatter);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"martout2002"},"content":"        // Store the formatted date as a string in the desired format","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"martout2002"},"content":"        this.end \u003d endDate.format(formatter);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"martout2002"},"content":"     * Constructs a new Deadline task with a specified description and deadline,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"martout2002"},"content":"     * used when the deadline string is already in the correct format (e.g., when loading from a file).","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"martout2002"},"content":"     * @param command The description of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"martout2002"},"content":"     * @param end The deadline for the task as a formatted string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"martout2002"},"content":"     * @param fromFile A boolean indicating whether this constructor is used when loading from a file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"martout2002"},"content":"    public Deadline(String command, String end, boolean fromFile) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"martout2002"},"content":"        super(command);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"martout2002"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"martout2002"},"content":"     * Converts the Deadline task into a formatted string suitable for saving to a file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"martout2002"},"content":"     * @return A string representing the Deadline task in the format \"[D][X or  ]/description/end\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"martout2002"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"martout2002"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"martout2002"},"content":"        return \"[D][\" + (isDone ? \"X\" : \" \") + \"]/\" + description + \"/\" + end;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"martout2002"},"content":"     * Converts the Deadline task into a formatted string for display.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"martout2002"},"content":"     * @return A string representing the Deadline task in the format \"[D][X or  ] description (by: end)\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"martout2002"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"martout2002"},"content":"    public String toString() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"martout2002"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + end + \")\";  // Ensure the end time is displayed","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"martout2002"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"martout2002":67}},{"path":"src/main/java/BrainRot/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martout2002"},"content":"package brainrot;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"martout2002"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"martout2002"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"martout2002"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"martout2002"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"martout2002"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"martout2002"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"martout2002"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"martout2002"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"martout2002"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"martout2002"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"martout2002"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"martout2002"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"martout2002"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"martout2002"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"martout2002"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"martout2002"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"martout2002"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"martout2002"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"martout2002"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"martout2002"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"martout2002"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"martout2002"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"martout2002"},"content":"        try {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"martout2002"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"martout2002"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"martout2002"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"martout2002"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"martout2002"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"martout2002"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"martout2002"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"martout2002"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"martout2002"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"martout2002"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"martout2002"},"content":"    private void flip() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"martout2002"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"martout2002"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"martout2002"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"martout2002"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"martout2002"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"martout2002"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"martout2002"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"martout2002"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"martout2002"},"content":"        db.flip();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"martout2002"},"content":"        return db;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"martout2002"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"martout2002":61}},{"path":"src/main/java/BrainRot/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martout2002"},"content":"package brainrot;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"martout2002"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"martout2002"},"content":" * The Event class represents a task that occurs over a specific time period.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"martout2002"},"content":" * It extends the Task class and includes both a start and an end time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"martout2002"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"martout2002"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"martout2002"},"content":"    protected String end;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"martout2002"},"content":"    protected String start;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"martout2002"},"content":"     * Constructs a new Event task with the specified description, start time, and end time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"martout2002"},"content":"     * @param command The description of the event.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"martout2002"},"content":"     * @param start The start time of the event.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"martout2002"},"content":"     * @param end The end time of the event.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"martout2002"},"content":"    public Event(String command, String start, String end) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"martout2002"},"content":"        super(command);  // Only pass the task part to BrainRot.Task","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"martout2002"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"martout2002"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"martout2002"},"content":"     * Converts the Event task into a formatted string suitable for saving to a file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"martout2002"},"content":"     * @return A string representing the Event task in the format \"[E][1 or 0]/description/start/end\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"martout2002"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"martout2002"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"martout2002"},"content":"        return \"[E][\" + (isDone ? \"1\" : \"0\") + \"]/\" + description + \"/\" + start + \"/\" + end;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"martout2002"},"content":"     * Converts the Event task into a formatted string for display.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"martout2002"},"content":"     * @return A string representing the Event task in the format \"[E][1 or 0] description (from: start to: end)\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"martout2002"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"martout2002"},"content":"    public String toString() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"martout2002"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.start + \" to: \" + this.end + \")\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"martout2002"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"martout2002":43}},{"path":"src/main/java/BrainRot/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martout2002"},"content":"package brainrot;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"martout2002"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"martout2002"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"martout2002"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"martout2002"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"martout2002"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"martout2002"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"martout2002"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"martout2002"},"content":" * The BrainRot.Main class serves as the entry point for the application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"martout2002"},"content":" * It initializes the BrainRot.BrainRot instance with the file path where tasks are stored","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"martout2002"},"content":" * and then starts the main loop to process user commands.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"martout2002"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"martout2002"},"content":"public class Main extends Application{","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"martout2002"},"content":"    private BrainRot brainRot;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"martout2002"},"content":"//    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"martout2002"},"content":"//     * The main method is the entry point of the Java application.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"martout2002"},"content":"//     * It constructs a BrainRot.BrainRot instance with the specified file path for task storage","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"martout2002"},"content":"//     * and then runs the application.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"martout2002"},"content":"//     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"martout2002"},"content":"//     * @param args Command-line arguments passed to the program (not used).","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"martout2002"},"content":"//     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"martout2002"},"content":"//","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"martout2002"},"content":"    @Override","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"martout2002"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"martout2002"},"content":"        try {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"martout2002"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"martout2002"},"content":"            // Initialize BrainRot instance","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"martout2002"},"content":"            String filePath \u003d System.getProperty(\"user.home\") + \"/ip/data/brainRot.txt\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"martout2002"},"content":"            brainRot \u003d new BrainRot(filePath);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"martout2002"},"content":"            AnchorPane root \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"martout2002"},"content":"            // Set the Duke instance in the controller","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"martout2002"},"content":"            MainWindow controller \u003d fxmlLoader.getController();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"martout2002"},"content":"            controller.setBrainRot(brainRot);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"martout2002"},"content":"            // Create a new scene with the AnchorPane as the root node","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"martout2002"},"content":"            Scene scene \u003d new Scene(root);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"martout2002"},"content":"            // Set up the stage","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"martout2002"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"martout2002"},"content":"            stage.setTitle(\"brainrot\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"martout2002"},"content":"            stage.show();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"martout2002"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"martout2002"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"martout2002"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"martout2002"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"martout2002":53}},{"path":"src/main/java/BrainRot/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martout2002"},"content":"package brainrot;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"martout2002"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"martout2002"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"martout2002"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"martout2002"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"martout2002"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"martout2002"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"martout2002"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"martout2002"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"martout2002"},"content":" * Controller for the main GUI.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"martout2002"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"martout2002"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"martout2002"},"content":"    protected static final String GREETING \u003d","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"martout2002"},"content":"        \"Hello! I\u0027m fanumTaxRizzlerOhioSigmaLooksmaxxer\\n\"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"martout2002"},"content":"                + \"What can I do for you?\\n\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"martout2002"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"martout2002"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"martout2002"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"martout2002"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"martout2002"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"martout2002"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"martout2002"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"martout2002"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"martout2002"},"content":"    private BrainRot brainRot;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"martout2002"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"martout2002"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"martout2002"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"martout2002"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"martout2002"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"martout2002"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(GREETING, dukeImage));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"martout2002"},"content":"    /** Injects the Duke instance */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"martout2002"},"content":"    public void setBrainRot(BrainRot b) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"martout2002"},"content":"        brainRot \u003d b;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"martout2002"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"martout2002"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"martout2002"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"martout2002"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"martout2002"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"martout2002"},"content":"        String response \u003d brainRot.run(input);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"martout2002"},"content":"        System.out.println(response);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"martout2002"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"martout2002"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"martout2002"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"martout2002"},"content":"        );","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"martout2002"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"martout2002"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"martout2002":61}},{"path":"src/main/java/BrainRot/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martout2002"},"content":"package brainrot;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"martout2002"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"martout2002"},"content":" * The Parser class is responsible for interpreting user input and breaking it down","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"martout2002"},"content":" * into commands and details that can be processed by the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"martout2002"},"content":" * It categorizes the input into different command types such as \"list\", \"bye\", \"mark\", \"unmark\",","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"martout2002"},"content":" * \"delete\", and \"add\", and returns these as a structured array.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"martout2002"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"martout2002"},"content":"public class Parser {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"martout2002"},"content":"     * Parses the user\u0027s input and categorizes it into a command and its details.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"martout2002"},"content":"     * The method returns a string array where the first element is the command type","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"martout2002"},"content":"     * and the second element (if applicable) contains additional details such as the index","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"martout2002"},"content":"     * for \"mark\", \"unmark\", or \"delete\" commands, or the task details for \"add\" commands.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"martout2002"},"content":"     * @param userInput The raw input string from the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"martout2002"},"content":"     * @return A string array where the first element is the command type and the second","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"martout2002"},"content":"     * element is the command\u0027s details or the task description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"martout2002"},"content":"    public static String[] parse(String userInput) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"martout2002"},"content":"        String[] result \u003d new String[2];","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"martout2002"},"content":"        if (userInput.equals(\"list\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"martout2002"},"content":"            result[0] \u003d \"list\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"martout2002"},"content":"        } else if (userInput.equals(\"bye\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"martout2002"},"content":"            result[0] \u003d \"bye\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"martout2002"},"content":"        } else if (userInput.startsWith(\"find\")) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"martout2002"},"content":"            result[0] \u003d \"find\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"martout2002"},"content":"            result[1] \u003d userInput.substring(5).trim();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"martout2002"},"content":"        } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"martout2002"},"content":"            result[0] \u003d \"mark\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"martout2002"},"content":"            result[1] \u003d userInput.substring(5).trim();  // Get the index","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"martout2002"},"content":"        } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"martout2002"},"content":"            result[0] \u003d \"unmark\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"martout2002"},"content":"            result[1] \u003d userInput.substring(7).trim();  // Get the index","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"martout2002"},"content":"        } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"martout2002"},"content":"            result[0] \u003d \"delete\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"martout2002"},"content":"            result[1] \u003d userInput.substring(7).trim();  // Get the index","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"martout2002"},"content":"        } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"martout2002"},"content":"            result[0] \u003d \"add\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"martout2002"},"content":"            result[1] \u003d userInput;  // Add task with the entire input as details","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"martout2002"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"martout2002"},"content":"        return result;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"martout2002"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"martout2002":47}},{"path":"src/main/java/BrainRot/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martout2002"},"content":"package brainrot;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"martout2002"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"martout2002"},"content":"import java.io.File;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"martout2002"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"martout2002"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"martout2002"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"martout2002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"martout2002"},"content":"import brainrot.exceptions.UnknownLoadingError;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"martout2002"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"martout2002"},"content":" * The Storage class handles the reading and writing of tasks to and from a file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"martout2002"},"content":" * It allows tasks to be saved persistently and loaded when the application is started.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"martout2002"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"martout2002"},"content":"public class Storage {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"martout2002"},"content":"    private final String filePath;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"martout2002"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"martout2002"},"content":"     * @param filePath The path of the file where tasks will be saved and loaded from.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"martout2002"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"martout2002"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"martout2002"},"content":"     * Loads the list of tasks from the file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"martout2002"},"content":"     * @return An ArrayList of Task objects loaded from the file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"martout2002"},"content":"     * @throws IOException If an I/O error occurs while reading the file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"martout2002"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"martout2002"},"content":"        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"martout2002"},"content":"        File myData \u003d new File(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"martout2002"},"content":"        try (BufferedReader dataR \u003d new BufferedReader(new FileReader(myData))) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"martout2002"},"content":"            String line;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"martout2002"},"content":"            while ((line \u003d dataR.readLine()) !\u003d null) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"martout2002"},"content":"                String[] dataFromDisk \u003d line.split(\"/\", 4);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"martout2002"},"content":"                char eventType \u003d dataFromDisk[0].charAt(1);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"martout2002"},"content":"                switch (eventType) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"martout2002"},"content":"                    case \u0027T\u0027:","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"martout2002"},"content":"                        ToDo T \u003d new ToDo(dataFromDisk[1]);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"martout2002"},"content":"                        if (dataFromDisk[1].equals(\"[X]\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"martout2002"},"content":"                            T.isDone \u003d true;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"martout2002"},"content":"                        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"martout2002"},"content":"                        arr.add(T);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"martout2002"},"content":"                        break;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"martout2002"},"content":"                    case \u0027D\u0027:","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"martout2002"},"content":"                        Deadline D \u003d new Deadline(dataFromDisk[1], dataFromDisk[2], true);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"martout2002"},"content":"                        if (dataFromDisk[1].equals(\"[X]\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"martout2002"},"content":"                            D.isDone \u003d true;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"martout2002"},"content":"                        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"martout2002"},"content":"                        arr.add(D);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"martout2002"},"content":"                        break;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"martout2002"},"content":"                    case \u0027E\u0027:","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"martout2002"},"content":"                        Event E \u003d new Event(dataFromDisk[1], dataFromDisk[2], dataFromDisk[3]);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"martout2002"},"content":"                        if (dataFromDisk[1].equals(\"[X]\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"martout2002"},"content":"                            E.isDone \u003d true;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"martout2002"},"content":"                        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"martout2002"},"content":"                        arr.add(E);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"martout2002"},"content":"                        break;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"martout2002"},"content":"                    default :","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"martout2002"},"content":"                        System.out.println(\"error\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"martout2002"},"content":"                }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"martout2002"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"martout2002"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"martout2002"},"content":"            throw new UnknownLoadingError(e);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"martout2002"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"martout2002"},"content":"        return arr;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"martout2002"},"content":"     * Saves the list of tasks to the file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"martout2002"},"content":"     * @param tasks An ArrayList of Task objects to be saved to the file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"martout2002"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"martout2002"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"martout2002"},"content":"        try (FileWriter dataW \u003d new FileWriter(filePath)) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"martout2002"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"martout2002"},"content":"                dataW.write(task.toFileString() + \"\\n\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"martout2002"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"martout2002"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"martout2002"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"martout2002":90}},{"path":"src/main/java/BrainRot/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martout2002"},"content":"package brainrot;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"martout2002"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"martout2002"},"content":" * The BrainRot.Task class represents a generic task with a description and a completion status.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"martout2002"},"content":" * It serves as a base class for specific types of tasks, such as BrainRot.ToDo, BrainRot.Deadline, and BrainRot.Event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"martout2002"},"content":" * This class provides common functionality to mark and unmark tasks as well as to represent","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"martout2002"},"content":" * the task\u0027s status as a string.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"martout2002"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"martout2002"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"martout2002"},"content":"    protected String description;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"martout2002"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"martout2002"},"content":"     * Constructs a new BrainRot.Task with the specified description.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"martout2002"},"content":"     * By default, the task is not marked as completed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"martout2002"},"content":"     * @param task The description of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"martout2002"},"content":"    public Task(String task) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"martout2002"},"content":"        this.description \u003d task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"martout2002"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"martout2002"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"martout2002"},"content":"     * An \"X\" indicates that the task is completed, and a blank space indicates it is not.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"martout2002"},"content":"     * @return A string representing the status of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"martout2002"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"martout2002"},"content":"        return (isDone ? \"X\" : \" \"); // Mark done task with X","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"martout2002"},"content":"     * Converts the task to a string format suitable for saving to a file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"martout2002"},"content":"     * This method must be implemented by subclasses to include their specific details.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"martout2002"},"content":"     * @return A string representation of the task for file storage.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"martout2002"},"content":"    public abstract String toFileString();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"martout2002"},"content":"     * Marks the task as completed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"martout2002"},"content":"    public void mark() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"martout2002"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"martout2002"},"content":"     * Unmarks the task, setting it as not completed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"martout2002"},"content":"    public void unmark() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"martout2002"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"martout2002"},"content":"     * Returns a string representation of the task, including its status and description.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"martout2002"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"martout2002"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"martout2002"},"content":"    public String toString() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"martout2002"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"martout2002"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"martout2002":65}},{"path":"src/main/java/BrainRot/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martout2002"},"content":"package brainrot;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"martout2002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"martout2002"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"martout2002"},"content":" * The TaskList class manages a collection of tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"martout2002"},"content":" * It provides methods for adding, removing, and accessing tasks, as well as retrieving the size of the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"martout2002"},"content":" * The tasks are stored in an ArrayList.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"martout2002"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"martout2002"},"content":"public class TaskList {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"martout2002"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"martout2002"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"martout2002"},"content":"     * This initializes the internal ArrayList to store tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"martout2002"},"content":"    public TaskList() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"martout2002"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"martout2002"},"content":"     * Constructs a TaskList with an existing list of tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"martout2002"},"content":"     * This is useful when loading tasks from storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"martout2002"},"content":"     * @param tasks An ArrayList of Task objects to initialize the TaskList with.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"martout2002"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"martout2002"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"martout2002"},"content":"     * Adds a new task to the TaskList.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"martout2002"},"content":"     * @param task The Task object to be added to the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"martout2002"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"martout2002"},"content":"        tasks.add(task);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"martout2002"},"content":"     * Removes a task from the TaskList based on its index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"martout2002"},"content":"     * @param index The index of the Task to be removed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"martout2002"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range (index \u003c 0 || index \u003e\u003d size()).","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"martout2002"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"martout2002"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"martout2002"},"content":"     * Retrieves a task from the TaskList based on its index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"martout2002"},"content":"     * @param index The index of the Task to retrieve.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"martout2002"},"content":"     * @return The Task object at the specified index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"martout2002"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range (index \u003c 0 || index \u003e\u003d size()).","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"martout2002"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"martout2002"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"martout2002"},"content":"     * Returns the number of tasks currently in the TaskList.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"martout2002"},"content":"     * @return The size of the TaskList.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"martout2002"},"content":"    public int size() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"martout2002"},"content":"        return tasks.size();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"martout2002"},"content":"     * Retrieves the entire list of tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"martout2002"},"content":"     * @return An ArrayList of all Task objects in the TaskList.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"martout2002"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"martout2002"},"content":"        return tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"martout2002"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"martout2002":78}},{"path":"src/main/java/BrainRot/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martout2002"},"content":"package brainrot;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"martout2002"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"martout2002"},"content":" * The ToDo class represents a basic task without a specific deadline.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"martout2002"},"content":" * It extends the Task class and provides a simple implementation for tasks that","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"martout2002"},"content":" * are meant to be done without any time constraints.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"martout2002"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"martout2002"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"martout2002"},"content":"     * Constructs a new ToDo task with the specified description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"martout2002"},"content":"     * @param task The description of the task to be done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"martout2002"},"content":"    public ToDo(String task) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"martout2002"},"content":"        super(task);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"martout2002"},"content":"     * Converts the ToDo task into a formatted string suitable for saving to a file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"martout2002"},"content":"     * @return A string representing the ToDo task in the format \"[T][X or  ]/description\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"martout2002"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"martout2002"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"martout2002"},"content":"        return \"[T][\" + (isDone ? \"X\" : \" \") + \"]/\" + description;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"martout2002"},"content":"     * Converts the ToDo task into a formatted string for display.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"martout2002"},"content":"     * @return A string representing the ToDo task in the format \"[T][X or  ] description\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"martout2002"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"martout2002"},"content":"    public String toString() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"martout2002"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"martout2002"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"martout2002":39}},{"path":"src/main/java/BrainRot/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martout2002"},"content":"package brainrot;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"martout2002"},"content":"import java.io.InputStream;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"martout2002"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"martout2002"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"martout2002"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"martout2002"},"content":" * The BrainRot.Ui class handles all user interactions for the application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"martout2002"},"content":" * It is responsible for displaying messages to the user, prompting for input,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"martout2002"},"content":" * and formatting the output. The BrainRot.Ui class abstracts away the details of input/output","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"martout2002"},"content":" * operations, allowing the rest of the application to focus on core logic.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"martout2002"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"martout2002"},"content":"public class Ui {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"martout2002"},"content":"    protected static final String ACTIVITYERROR \u003d","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"martout2002"},"content":"            \"OOPS!!! The description of an activity cannot be empty.\\n\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"martout2002"},"content":"    protected static final String COMMANDERROR \u003d","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"martout2002"},"content":"            \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"martout2002"},"content":"    protected static final String GREETING \u003d","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"martout2002"},"content":"            \"Hello! I\u0027m fanumTaxRizzlerOhioSigmaLooksmaxxer\\n\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"martout2002"},"content":"                    + \"What can I do for you?\\n\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"martout2002"},"content":"    protected static final String GOODBYE \u003d","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"martout2002"},"content":"            \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"martout2002"},"content":"    private static final String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"martout2002"},"content":"    protected static final String LOADINGERROR \u003d","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"martout2002"},"content":"            \"OOPS!!! I\u0027m sorry, your database is not loading properly :-(\\n\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"martout2002"},"content":"    /** A platform-independent line separator. */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"martout2002"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"martout2002"},"content":"    private final Scanner in;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"martout2002"},"content":"    private final PrintStream out;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"martout2002"},"content":"     * Constructs a BrainRot.Ui object using the default input and output streams.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"martout2002"},"content":"     * The default streams are System.in for input and System.out for output.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"martout2002"},"content":"    public Ui() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"martout2002"},"content":"        this(System.in, System.out);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"martout2002"},"content":"     * Constructs a BrainRot.Ui object with specified input and output streams.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"martout2002"},"content":"     * @param in  The input stream to be used by the UI.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"martout2002"},"content":"     * @param out The output stream to be used by the UI.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"martout2002"},"content":"    public Ui(InputStream in, PrintStream out) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"martout2002"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"martout2002"},"content":"        this.out \u003d out;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"martout2002"},"content":"    /** Shows the welcome message to the user. */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"martout2002"},"content":"    public String showWelcomeMessage() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"martout2002"},"content":"        return showToUser(LINE + GREETING + LINE);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"martout2002"},"content":"    /** Shows the exit message to the user. */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"martout2002"},"content":"    public String showExit() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"martout2002"},"content":"        return showToUser(GOODBYE + LINE);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"martout2002"},"content":"    /** Shows the loading error message if the database fails to load. */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"martout2002"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"martout2002"},"content":"        showToUser(LINE + LOADINGERROR + LINE);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"martout2002"},"content":"    /** Shows the activity error message if the task description is empty. */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"martout2002"},"content":"    public void showActivityError() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"martout2002"},"content":"        showToUser(LINE + ACTIVITYERROR + LINE);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"martout2002"},"content":"    /** Shows the command error message if the user enters an unrecognized command. */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"martout2002"},"content":"    public String showCommandError() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"martout2002"},"content":"        return showToUser(LINE + COMMANDERROR + LINE);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"martout2002"},"content":"     * Shows a message when a task is marked as done.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"martout2002"},"content":"     * @param taskDetails The details of the task that was marked as done.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"martout2002"},"content":"    public String showMarkMsg(String taskDetails) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"martout2002"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n  \" + taskDetails + LS);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"martout2002"},"content":"        return showToUser(\"Nice! I\u0027ve marked this task as done:\\n  \" + taskDetails + LS);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"martout2002"},"content":"     * Shows a message when a task is unmarked as not done.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"martout2002"},"content":"     * @param taskDetails The details of the task that was unmarked.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"martout2002"},"content":"    public String showUnMarkMsg(String taskDetails) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"martout2002"},"content":"        return showToUser(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + taskDetails + LS);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"martout2002"},"content":"     * Shows a message when a task is deleted.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"martout2002"},"content":"     * @param taskDetails The details of the task that was deleted.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"martout2002"},"content":"    public String showDeleteMsg(String taskDetails) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"martout2002"},"content":"        return showToUser(\"Noted. I\u0027ve removed this task:\\n  \" + taskDetails + LS);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"martout2002"},"content":"     * Shows a message when a task is added.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"martout2002"},"content":"     * @param taskDetails The details of the task that was added.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"martout2002"},"content":"    public String showAddTaskMsg(String taskDetails) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"martout2002"},"content":"        return showToUser(\"Got it. I\u0027ve added this task:\\n  \" + taskDetails + LS);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"martout2002"},"content":"     * Prompts the user for input and returns the entered command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"martout2002"},"content":"     * This method will ignore empty or whitespace-only inputs.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"martout2002"},"content":"     * @return The command entered by the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"martout2002"},"content":"    public String getUserCommand() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"martout2002"},"content":"//        out.print(\"Enter command: \");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"martout2002"},"content":"        String fullInputLine \u003d in.nextLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"martout2002"},"content":"        // Silently consume all ignored lines","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"martout2002"},"content":"        while (shouldIgnore(fullInputLine)) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"martout2002"},"content":"            fullInputLine \u003d in.nextLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"martout2002"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"martout2002"},"content":"        showToUser(\"[Command entered:\" + fullInputLine + \"]\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"martout2002"},"content":"        return fullInputLine;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"martout2002"},"content":"     * Displays the list of tasks that match the search criteria to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"martout2002"},"content":"     * @param matchingTasks The TaskList containing tasks that match the search criteria.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"martout2002"},"content":"    public String showFind(TaskList matchingTasks) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"martout2002"},"content":"        if (matchingTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"martout2002"},"content":"            return showToUser(LINE + \"No matching tasks found.\" + LS + LINE);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"martout2002"},"content":"        } else {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"martout2002"},"content":"            StringBuilder sb \u003d new StringBuilder(LINE + \"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"martout2002"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"martout2002"},"content":"                sb.append((i + 1)).append(\". \").append(matchingTasks.getTask(i).toString()).append(LS);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"martout2002"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"martout2002"},"content":"            sb.append(LINE);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"martout2002"},"content":"            return showToUser(sb.toString());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"martout2002"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"martout2002"},"content":"     * Returns true if the user input line should be ignored.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"martout2002"},"content":"     * Input should be ignored if it is only whitespace or is empty.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"martout2002"},"content":"     * @param rawInputLine Full raw user input line.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"martout2002"},"content":"     * @return true if the entire user input line should be ignored.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"martout2002"},"content":"    private boolean shouldIgnore(String rawInputLine) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"martout2002"},"content":"        return rawInputLine.trim().isEmpty();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"martout2002"},"content":"     * Shows one or more messages to the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"martout2002"},"content":"     * This method handles formatting and ensures consistent output.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"martout2002"},"content":"     * @param messages The messages to be displayed to the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"martout2002"},"content":"    public String showToUser(String... messages) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"martout2002"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"martout2002"},"content":"        for (String message : messages) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"martout2002"},"content":"            sb.append(message.replace(\"\\n\", LS)); // Append the formatted message","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"martout2002"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"martout2002"},"content":"        return sb.toString(); // Return the final concatenated string","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"martout2002"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"martout2002"},"content":"     * @param tasks The BrainRot.TaskList containing tasks to be displayed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"martout2002"},"content":"    public String showTaskList(TaskList tasks) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"martout2002"},"content":"        StringBuilder sb \u003d new StringBuilder(LINE + \"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"martout2002"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"martout2002"},"content":"            sb.append((i + 1)).append(\". \").append(tasks.getTask(i).toString()).append(LS);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"martout2002"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"martout2002"},"content":"        sb.append(LINE);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"martout2002"},"content":"        return showToUser(sb.toString());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"martout2002"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"martout2002":201}},{"path":"src/main/java/BrainRot/exceptions/UnknownActivityException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martout2002"},"content":"package brainrot.exceptions;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"martout2002"},"content":"/**","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"martout2002"},"content":" * The UnknownActivityException class represents an UnknownActivity","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"martout2002"},"content":" * It extends the Exception class and includes a constructor to throw the exception message","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"martout2002"},"content":" */","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"martout2002"},"content":"public class UnknownActivityException extends Exception {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"martout2002"},"content":"     * Constructs a new Unknown Activity Exception with a specific message.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"martout2002"},"content":"     * @param message The message of the exception","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"martout2002"},"content":"    public UnknownActivityException(String message) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"martout2002"},"content":"        super(message);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"martout2002"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"martout2002":17}},{"path":"src/main/java/BrainRot/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martout2002"},"content":"package brainrot.exceptions;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"martout2002"},"content":"/**","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"martout2002"},"content":" * The UnknownCommandException class represents an Unknown Command","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"martout2002"},"content":" * It extends the Exception class and includes a constructor to throw the exception message","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"martout2002"},"content":" */","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"martout2002"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"martout2002"},"content":"     * Constructs a new Unknown Command Exception with a specific message.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"martout2002"},"content":"     * @param message The message of the exception","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"martout2002"},"content":"    public UnknownCommandException(String message) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"martout2002"},"content":"        super(message);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"martout2002"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"martout2002":16}},{"path":"src/main/java/BrainRot/exceptions/UnknownLoadingError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martout2002"},"content":"package brainrot.exceptions;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"martout2002"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"martout2002"},"content":"/**","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"martout2002"},"content":" * The UnknownLaodingError class represents an Unknown Loading Error","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"martout2002"},"content":" * It extends the Exception class and includes a constructor to throw the exception message","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"martout2002"},"content":" */","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"martout2002"},"content":"public class UnknownLoadingError extends IOException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"martout2002"},"content":"    /**","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"martout2002"},"content":"     * Constructs a new Unknown Loading Error with a specific message.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"martout2002"},"content":"     *","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"martout2002"},"content":"     * @param message The message of the exception","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"martout2002"},"content":"     */","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"martout2002"},"content":"    public UnknownLoadingError(IOException message) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"martout2002"},"content":"        super(message);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"martout2002"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"martout2002":18}},{"path":"src/main/resources/view/Dialogbox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"martout2002"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"martout2002"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"martout2002"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"martout2002"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"martout2002"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"martout2002"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"martout2002"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"martout2002"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"martout2002"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"martout2002"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"martout2002"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"martout2002"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"martout2002"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"martout2002"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"martout2002"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"martout2002"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"martout2002"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"martout2002"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"martout2002"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"martout2002"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"martout2002":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"martout2002"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"martout2002"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"martout2002"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"martout2002"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"martout2002"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"martout2002"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"martout2002"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"martout2002"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"martout2002"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"martout2002"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"martout2002"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"martout2002"},"content":"            fx:controller\u003d\"brainrot.MainWindow\"\u003e","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"martout2002"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"martout2002"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"martout2002"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"martout2002"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"martout2002"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"martout2002"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"martout2002"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"martout2002"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"martout2002"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"martout2002"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"martout2002"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"martout2002"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"martout2002"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"martout2002"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"martout2002"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"martout2002"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"martout2002"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"martout2002"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"martout2002"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"martout2002"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"martout2002"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"martout2002"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"martout2002"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"martout2002"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"martout2002"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"martout2002"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"martout2002"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"martout2002"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"martout2002"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"martout2002":44}},{"path":"src/test/java/BrainRot/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martout2002"},"content":"package brainrot;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"martout2002"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"martout2002"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"martout2002"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"martout2002"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"martout2002"},"content":"    private Deadline deadline;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"martout2002"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"martout2002"},"content":"    public void setUp() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"martout2002"},"content":"        // Initialize the Deadline object with a specific date and mark it as done","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"martout2002"},"content":"        deadline \u003d new Deadline(\"Submit assignment\" , \"Nov 15 2020 23:59\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"martout2002"},"content":"        deadline.mark();  // Mark the deadline as done","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"martout2002"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"martout2002"},"content":"    public void testToString_markedTask() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"martout2002"},"content":"        // Test the string representation of the deadline when marked as done","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"martout2002"},"content":"        String expected \u003d \"[D][X] Submit assignment (by: Nov 15 2020 23:59)\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"martout2002"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"martout2002"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"martout2002"},"content":"    public void testToFileString_markedTask() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"martout2002"},"content":"        // Test the file string representation of the marked deadline","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"martout2002"},"content":"        String expected \u003d \"[D][X]/Submit assignment/Nov 15 2020 23:59\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"martout2002"},"content":"        assertEquals(expected, deadline.toFileString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"martout2002"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"martout2002":33}},{"path":"src/test/java/BrainRot/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martout2002"},"content":"package brainrot;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"martout2002"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"martout2002"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"martout2002"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"martout2002"},"content":"public class ToDoTest {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"martout2002"},"content":"    private ToDo todo;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"martout2002"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"martout2002"},"content":"    public void setUp() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"martout2002"},"content":"        // Initialize the ToDo object before each test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"martout2002"},"content":"        todo \u003d new ToDo(\"Read book\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"martout2002"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"martout2002"},"content":"    public void testToString_notDone() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"martout2002"},"content":"        String expected \u003d \"[T][ ] Read book\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"martout2002"},"content":"        assertEquals(expected, todo.toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"martout2002"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"martout2002"},"content":"    public void testToFileString_done() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"martout2002"},"content":"        // Mark the task as done and then test the toFileString method","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"martout2002"},"content":"        todo.mark();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"martout2002"},"content":"        String expected \u003d \"[T][X]/Read book\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"martout2002"},"content":"        assertEquals(expected, todo.toFileString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"martout2002"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"martout2002"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"martout2002"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"martout2002":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"martout2002"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"martout2002":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"martout2002"},"content":"java -classpath ../bin brainRot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"martout2002":1,"-":37}}]
