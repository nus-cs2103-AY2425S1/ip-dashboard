{"authorDailyContributionsMap":{"cth06-Github":[{"date":"2024-08-20","commitResults":[{"hash":"49084c75da33f187a51e3919f21c52bd8367f4df","isMergeCommit":false,"messageTitle":"Rename Chatbot","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"db60d0ae1265b2f1b4bffcbdd00486d0cda90098","isMergeCommit":false,"messageTitle":"greet \u0026 exit","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":6}}}]},{"date":"2024-08-21","commitResults":[{"hash":"c1e3379bd1d28d0885d6141c2cefb8e6bb9218e0","isMergeCommit":false,"messageTitle":"echo success","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":7}}},{"hash":"7dc3882de675c3d97628275003cbf59d31601519","isMergeCommit":false,"messageTitle":"add \u0026 list success","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":2}}},{"hash":"b7a92ccd1da98a2c763200334d1c8d4ee7d6113e","isMergeCommit":false,"messageTitle":"Task class created","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"9ad226fb8a36d31d02775b274d163705652ee38b","isMergeCommit":false,"messageTitle":"enable isDone toggling","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"7bfe346890f5000bfe5a23ca79d6166a4fda232e","isMergeCommit":false,"messageTitle":"modified object string output","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"24a536f183de972342f3270e3ed5b97bbf41cc77","isMergeCommit":false,"messageTitle":"done marking success","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":5}}},{"hash":"37c5175e10c00a7f4ef9283f94b5bbb9a6591355","isMergeCommit":false,"messageTitle":"add Todo class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"f3af5e06c9b8b06bac62f07e20d0a88bb2712fb1","isMergeCommit":false,"messageTitle":"added Deadline class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"5590194789205fb6ca0069b73cd1a3f6d2c23dfb","isMergeCommit":false,"messageTitle":"added Event class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"b2b1263d6aa7be06580696f1963e5bb3e03edc66","isMergeCommit":false,"messageTitle":"case switch, level 4 complete","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":20}}},{"hash":"9718d8b6cc28139e9d454d097386d7b98e6d05ae","isMergeCommit":false,"messageTitle":"figuring out testing semi-auto","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":0},"bat":{"insertions":5,"deletions":1}}},{"hash":"6ee3d013f37df8eb67d140808692a0c436b4fc65","isMergeCommit":false,"messageTitle":"automate test complete","messageBody":"","fileTypesAndContributionMap":{"bat":{"insertions":1,"deletions":1}}},{"hash":"e9efd44bfa15a6b4d7399265581996bc8799c00a","isMergeCommit":false,"messageTitle":"spacing issues","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"03b4b6f16bca4d897cd51a8e4d5c1ee1182cd646","isMergeCommit":false,"messageTitle":"Exception handling done","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":35}}},{"hash":"42aea8548325898555e311e41824247e57fa824f","isMergeCommit":false,"messageTitle":"delete function done","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":19}}}]},{"date":"2024-08-28","commitResults":[{"hash":"22206c1dd07421f4c0df5736e36b0f459f56f910","isMergeCommit":false,"messageTitle":"Add read \u0026 load files functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":108,"deletions":0}}},{"hash":"98cef34bc320c1bec0be389964e6e4c8d1651d21","isMergeCommit":false,"messageTitle":"Improve load file functionality with Optional and exceptions","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":0},"java":{"insertions":34,"deletions":16}}},{"hash":"057ebe2d71fa9ce4351b709b1a8fcb40bb0c34ec","isMergeCommit":false,"messageTitle":"loadTaskList function: Use ifPresent() function","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":4}}},{"hash":"b2f228abde92b88ed654140cc9c6d4589c29079d","isMergeCommit":false,"messageTitle":"Update with save functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":93,"deletions":62}}},{"hash":"5c7f890f5ed4c28e1a8935b19692d95c1b813a73","isMergeCommit":false,"messageTitle":"bug fix: Prevent auto-clearing of file contents","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":3}}},{"hash":"eac89d55cdb1c105967048c3d971ebbc09e3d23a","isMergeCommit":false,"messageTitle":"bug fix: Prevent tasks duplicates saved and Separate exceptions type","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":25}}},{"hash":"1c4ba3b8fe6a5de72c0500796e6b918e97e6d30b","isMergeCommit":false,"messageTitle":"Enable append when writing files","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":12}}},{"hash":"accd7010f698abbd9a62194ab9bf886a57f28f70","isMergeCommit":false,"messageTitle":"Include savedTaskList.txt in .gitignore","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":6}}},{"hash":"835655095a1dc0d0d7879f02005ede19c5743e7b","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"4e56b2756d409145f37b725a907e3ad3cab8fb55","isMergeCommit":false,"messageTitle":"Deadline class: Change date format from string to LocalDate","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":2},"java":{"insertions":36,"deletions":21}}},{"hash":"b4651828f5486a746c0f522cb0a7026014b26395","isMergeCommit":false,"messageTitle":"event class: Change time properties into LocalDateTime type","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":4},"java":{"insertions":19,"deletions":9}}},{"hash":"33c9dea62324a372bd020cb9d6d701702520d7f1","isMergeCommit":false,"messageTitle":"Add exception for catching for Event class","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":2},"java":{"insertions":13,"deletions":7}}},{"hash":"005119dc0990dfb07daba6c70f6b40c501923b85","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"01f5973d9c8e2de04d179e3e3cb2dc3f1f327d4a","isMergeCommit":false,"messageTitle":"Create Ui class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":0}}},{"hash":"b8bc695acb0174ebbcec3ac0511d315a4a1df698","isMergeCommit":false,"messageTitle":"Add Storage class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":0}}},{"hash":"857d5d8f99d04ff50e3639a23843a2be33efacde","isMergeCommit":false,"messageTitle":"Shift code in respective classes (Parser, TaskList, Ui)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":248,"deletions":123}}},{"hash":"eaa3066f882afca4c83ee0c8d678a98b3eac7151","isMergeCommit":false,"messageTitle":"Refactor to OOP, include add Command class","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":249,"deletions":42}}}]},{"date":"2024-08-29","commitResults":[{"hash":"a35d188e6fa1a895d642732c7e4876381860adf0","isMergeCommit":false,"messageTitle":"Refactor code for parsing lines in file into Task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":52}}},{"hash":"f3a378838c3fe993bfa53493054da5c6b198c832","isMergeCommit":false,"messageTitle":"Update exceptions","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":1},"java":{"insertions":2,"deletions":179}}},{"hash":"41c67c82d72cae0ef86f0480898b77dd117af62a","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-MoreOOP\u0027","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"cd580234fddfb4cec0240620919955acb305412b","isMergeCommit":false,"messageTitle":"Create and sort classess into packages","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":4},"java":{"insertions":85,"deletions":18},"bat":{"insertions":2,"deletions":2}}},{"hash":"63c73407d59501acf0e84f24f80d29db000d2232","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Packages\u0027","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{}},{"hash":"5b92fcd7f36235c353e202611bba7c3bd91b1b19","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"2e553bba81fa837230f961d23bb9b70b59e7379d","isMergeCommit":false,"messageTitle":"Update gradle build","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":1},"txt":{"insertions":1,"deletions":1}}},{"hash":"6f74ba98fbc4d333ac8405313bc21676599c0904","isMergeCommit":false,"messageTitle":"Add StorageTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":0}}},{"hash":"cae95e492c96e6baadc29562357ee6644207d4e8","isMergeCommit":false,"messageTitle":"Add code to include exceptions for invalid integers in command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":3}}},{"hash":"6ce8a346be86c56f08ed6cccf8accf40fca9be3c","isMergeCommit":false,"messageTitle":"bug fix: Change to IndexOutOfBoundsException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"04bd46ab8d7f46f460efc57805e732e562fab130","isMergeCommit":false,"messageTitle":"Add unit test cases","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":85,"deletions":2}}},{"hash":"e5c2da854e2c6c7776d900a75f22f6735a7024f6","isMergeCommit":false,"messageTitle":"Update code to allow creation of Jar file","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":1},"java":{"insertions":1,"deletions":1}}},{"hash":"98df72387d95f9fd80b22e28e9b7a34fb11e4a7b","isMergeCommit":false,"messageTitle":"Add JavaDoc comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":167,"deletions":11}}}]},{"date":"2024-08-30","commitResults":[{"hash":"f65c7fc29f069542ad4f84b3eb4c5d6bfa831935","isMergeCommit":false,"messageTitle":"Follow format style","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":88,"deletions":80}}},{"hash":"bcc3bd6dfed31f8c0fc053839c26d581d3b486dc","isMergeCommit":false,"messageTitle":"Add find functionality","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":70,"deletions":3}}},{"hash":"2efbb76bf5f0172415b0c8813300f692503456d6","isMergeCommit":false,"messageTitle":"Add JavaDoc comments primarily for constructors","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":3}}},{"hash":"10a3d1795daef0ddcfd55183c433509d10c4cbec","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JavaDoc\u0027","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{}},{"hash":"0bf958c1879dc6c0523b151573e67f8f7af250d6","isMergeCommit":true,"messageTitle":"Resolve conflict","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"9a4d0ed0081759ccf16c2b9d53afe694a6ba6c75","isMergeCommit":false,"messageTitle":"Replace wildcard imports with the specifics","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":4}}},{"hash":"75b5d97c81a511f7784c973bbf4d83ab0aa04e22","isMergeCommit":false,"messageTitle":"Resolve conflicts in Parser.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":24}}},{"hash":"e22e88b6c6769032de59ee742b4595c1748b715a","isMergeCommit":true,"messageTitle":"Resolve conflicts in Level-9","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"1b062c2b7dc97fde9b472ef024142d84fb514ec5","isMergeCommit":false,"messageTitle":"Change variable name taskList to tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":83,"deletions":73}}},{"hash":"465fbbb2c254c89f9366516277113edf9b47bf2a","isMergeCommit":false,"messageTitle":"Add more JavaDoc comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":6}}},{"hash":"c2eab02b368960ad4c1faad1e209d35d03dca7d7","isMergeCommit":false,"messageTitle":"Edit file","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"1cace3360caa657a6e1630bb70357e1cc9083462","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{}},{"hash":"d9249c4ce2dff7504ae85663ddfec204ed8da496","isMergeCommit":false,"messageTitle":"Remove redundant comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"d5de843ff3e13f0500313c250453458d303a357c","isMergeCommit":false,"messageTitle":"Remove comment","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"826196a68ac8a2cd8870ac622df1989bf0ad96e1","isMergeCommit":true,"messageTitle":"Resolve conflict","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{}}]},{"date":"2024-09-06","commitResults":[{"hash":"e1004633323a11eeee33c01ebec43fa78afe4335","isMergeCommit":false,"messageTitle":"Set up GUI skeleton code","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":25,"deletions":2},"txt":{"insertions":2,"deletions":2},"fxml":{"insertions":120,"deletions":0},"java":{"insertions":270,"deletions":0}}},{"hash":"3a8b895fa058c6aa83233568acd8a9e179c80650","isMergeCommit":false,"messageTitle":"Update files to make the GUI work like the JavaFX tutorial","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"fxml":{"insertions":23,"deletions":77},"java":{"insertions":56,"deletions":162}}},{"hash":"6c96af975977ea8bd3147f88235be58f9f86a1c7","isMergeCommit":false,"messageTitle":"Change return type from void to String","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":22}}},{"hash":"7057df4ab8f9d96fb3d539d1aa7689922f9516db","isMergeCommit":false,"messageTitle":"Change return type from void to String for the commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":28}}},{"hash":"d2eb6d40989a119f5a9d6abd52e959ae125fca2a","isMergeCommit":false,"messageTitle":"Allow Chatbot to show Welcome and delete some irrelevant code","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":4},"fxml":{"insertions":1,"deletions":0},"java":{"insertions":33,"deletions":50}}},{"hash":"cbd16a4f00ee4db1cd6f3573f6632cfd2a822278","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-10\u0027","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{}}]},{"date":"2024-09-07","commitResults":[{"hash":"f846bfa8907384e1a340913a62d960b8c37f929e","isMergeCommit":false,"messageTitle":"Delete most commented unused code","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":12},"txt":{"insertions":0,"deletions":1},"java":{"insertions":1,"deletions":37}}},{"hash":"331caccce538490c7d80bd5651f2c6db74febed1","isMergeCommit":false,"messageTitle":"ModifyCommand class: Add assertion","messageBody":"The if-elseif-else block works as expected only if the assumption holds\ntrue that the code in the else block is executed only if\nthis.verb \u003d\u003d CommandVerb.DELETE.\n\nHowever, there may be bugs elsewhere in the programme which results\nin the ModifyCommand object to be instantiated such that this.verb\naccepts a CommandVerb Enum other than MARK, UNMARK or DELETE, rendering\nthe assumption to be invalid.\n\nLet\u0027s add an assert statement to inform programmers when the assumption\nfails to hold.\n\nThis is to ensure that bugs are caught early on and prevent an\naccumulation of bugs as the programme continues to be developed.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"1d6f8b5af0d04a4e91e10b04e43a5d10b742a16a","isMergeCommit":false,"messageTitle":"Command class: Remove isExit() function","messageBody":"The code that drives the application in Main.java does not require to\ncheck whether commands parsed is a kind that require exit of\napplication. This has simplified the codebase.\n\nTo increase readability of code, isExit() can be deleted.\n\nLet\u0027s remove isExit() in all Command class and subclasses to improve\nreadability.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":37}}},{"hash":"5969d3654d97e536d00c3834c79c7ddcc361d7a4","isMergeCommit":false,"messageTitle":"Enable FileNotFoundException message shown in GUI","messageBody":"When storage files to be read by the application to load the tasks are\nnot found, an exception is thrown and the error message is not shown in\nthe GUI by the chatbot, but shown in the terminal.\n\nThis is poor user feedback, undermining user experience as app users\nwill not know that a new file is created rather than loading a\nsupposedly existing file for saving or loading tasks.\n\nLet\u0027s add the exception message into the dialog Container text parameter,\nallowing the message to be shown in the GUI. To do that:\n* enable the chatbot to have a welcome Message attribute which changes\n  if there is an exception\n* modify code in Main.java and MainWindow.java such that the UI element\n  that indicates the exception message is only rendered after the\n  instance of the bot is addded to the MainWindow.\n\nThis allows the Exception message to be shown in the GUI to the users.\n","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":1},"java":{"insertions":69,"deletions":57}}},{"hash":"dcaf985573e76d8cd7f70522fb416c5c3d7bde0a","isMergeCommit":false,"messageTitle":"Change naming of exceptions","messageBody":"Exception was named as FileContentsInvalid or CommandInvalid, without\nthe word Exception.\n\nIt may not be the most readable.\n\nLet\u0027s change the name of exceptions.\n\nTo make the code more readable.\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":18}}},{"hash":"eec2dec867e71cc6e961afee9d82d7a0ff250744","isMergeCommit":false,"messageTitle":"Change code to allow exceptions message to be shown in GUI (partial attempt)","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":7},"java":{"insertions":71,"deletions":72}}},{"hash":"fb78c50f58580f1ff24b5c2f43899a7947c4bf06","isMergeCommit":false,"messageTitle":"Add Pair class","messageBody":"It is not possible to return two items of different types in a function\nin a pair easily.\n\nSome functions in Storage class need to return an Optional either\ncontaining something or nothing, and an accompanying String message\nwhich may be needed for Knight2103 as an error message.\n\nLet\u0027s Add a Pair class which represents like a type that contains 2\ndifferent types.\n\nSo that it is possible to return 2 items of different types\nsimultaneously from a single function.\n","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":0}}},{"hash":"d51463d1eb6b9bbfede95c56f370a7f09e261742","isMergeCommit":false,"messageTitle":"Storage class: Change return type to Pair","messageBody":"The bot is not be able to show all error messages to the users in the\nGUI when the storage file is loaded, especially for errors that arise\ndue to incorrect formatting of contents in the storage file.\n\nIt is important that a comprehensive user feedback is given in the GUI,\nthus code change is needed to enable that. While throwing an exception\nworks as well, it is not done that way because once an exception is\nthrown, the entire code just stops -- i.e. the loading of file contents\nwill end prematurely where the next few lines in the file which are in\nthe correct format are not processed to create the list as comprehensive\nas possible. We want to process every line in the file regardless if the\nline with wrong formatting is in the middle of the correct lines.\n\nLet\u0027s change the return type of the function such that errors in the\nfile contents formatting are not exactly shown as exceptions, but\nsaved in the bot\u0027s attribute called error message.\n\nThese error messages are created in the functions of the Storage class\nwhich will be eventually be passed into the bot\u0027s error message\nattribute, enabling the bot to show the exception message when the app\nis first started.\n","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":20}}},{"hash":"69dc3e30786d98ebe4a3e091406678e5ef5acb64","isMergeCommit":false,"messageTitle":"Enhance input GUI functionality","messageBody":"When the bye command is executed, users can still interact with the\nchatbot. There must be some indication that the bot is not active,\notherwise, the bye command defeats its purpose. In addition, when\nusers open the chatbot, the input field is automatically selected,\nwhich obscures any placeholder text put there. Placeholder text are\nimportant to inform users where they can write their commands in the\nbot.\n\nLet\u0027s modify the input box such that it is locked after user type in the\nbye command. By doing so, user feedback about why users cannot type in\ntheir commands should be shown to inform users. Hence, let\u0027s also have\ninput placeholder text to inform users as well. In summary:\n* lock the input to prevent users from using further after bye command\n* inform users that the input is locked and what they should do via the\n  input placeholder text\n* placeholder text should be enabled in the input textfield\n* input textfield to be not automatically selected so that the\n  placeholder text can be seen (focusTraversable attribute)\n","fileTypesAndContributionMap":{"fxml":{"insertions":3,"deletions":1},"java":{"insertions":7,"deletions":7}}}]},{"date":"2024-09-08","commitResults":[{"hash":"cba3f105c95bbcd0c4bc3a15aadc3d638b075cc8","isMergeCommit":false,"messageTitle":"Remove ArrayIndexOutOfBounds Exception in catch","messageBody":"Catching of ArrayIndexOutOfBounds Exception in ModifyCommand class is to\ncatch for any errors where the command are not segmented in less than 2\nparts. However, such errors should have been surfaced in the Parser.java\nfile and to be caught at that point in time.\n\nThus, there is no need to duplicate code.\n\nLet\u0027s remove the catch statement for ArrayIndexOutOfBounds Exception in\nModifyCommand.java\n\nThis is to prevent code duplication.\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":8}}},{"hash":"682c5d1bc97debd9f7283d68f43b547e941493ad","isMergeCommit":false,"messageTitle":"Detect blank lines in Storage File not as errors","messageBody":"If the Storage textfile contains blank lines in between the list of\ntasks written in the textfile, the code will detect these blank lines\nas errors as they do not start with \"T\", \"D\", or \"E\".\n\nThis will confuse users as user feedback will say there is a need to\nchange the storage file contents formatting due to an error, but such\nblank lines are minute deviations from the ideal formatting and may\nfrustrate users the limited flexibility of the formatting required in\nthe text file.\n\nLet\u0027s remove such a restriction by allowing the code to check if it is a\nblank line. If so, the code will automatically read the next line in the\nfile without further checking.\n\nThis is to allow users to be able to leave blank lines in the storage\ntext file, enabling flexibility in the file contents formatting,\nenhancing user experience.\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":2}}},{"hash":"64d05991584e106536337392bb54813725fa8b55","isMergeCommit":false,"messageTitle":"Update Exception messages shown in GUI","messageBody":"Messages written by the bot is not very user friendly as users do not\nexactly know what went wrong. It will be better if these messages\nindicate clearly for users to understand how they can input the correct\ncommands.\n\nLet\u0027s edit the exception messages with more clarity.\n\nThis is to enhance user experience.\n","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":17}}},{"hash":"04fd7890aa381a3423529b3f49e11018a86de6a5","isMergeCommit":false,"messageTitle":"Refactor code via inline method","messageBody":"checkForMarkedFormat() is a helper function to check if the task to be\nadded should be marked or unmarked. If marked, the task to be added\nneed to have its isDone status to be updated before the task is added\ninto the list of tasks.\n\nFor code readability, SLAP principle is to be adhered and it seems that\nsuch code violates SLAP principle. Since this helper function code\nmanages the interpretation of each line, of the same level of\nabstraction as that in convertLineToTask(). Thus, this code will not be\nextracted as a helper function but directly placed in\nconvertLineToTask().\n\nLet\u0027s shift the code in the helper function checkForMarkedFormat()\ninto convertLineToTask() function.\n\nThis is to adhere to SLAP principle as much as possible.\n","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":32}}},{"hash":"4d7ea52161bafaa5a6d497010cbdb256534c64d6","isMergeCommit":false,"messageTitle":"Rename functions and class names for readability","messageBody":"Certain functions are not very clear in conveying the meaning or their\npurpose. Classes as well. For example, the fact that Todo class is\ninherited from Task class can be made clear by having the Todo class\nbeing named as TodoTask. The word \"print\" in a function name may\nsuggest that the function return type is void as the statement is to be\nprinted only in the console. But for some functions with this \"print\"\nword, it was meant to return a string.\n\nLet\u0027s change the namining to convey more clearly about the\nfunctionality and relationships of these functions and classes.\n\nThis is to improve code quality.\n","fileTypesAndContributionMap":{"java":{"insertions":93,"deletions":107}}},{"hash":"0ceb3d8028ff970dfbaf66cb469e375efc051218","isMergeCommit":false,"messageTitle":"Move functions that stringify TaskList elsewhere","messageBody":"Functions formatToFullList(), formatToMatchedList(), formatToFileList()\nare functions that make the TaskList into String format depending on\nwhether the list of tasks to be written is in the File Storage, or in\nthe GUI. And if it is in the GUI, if it is the full list of task or\nselected tasks only. These functions are dependent on the context\ntaskList is to be shown, thus these functions may not be the best to be\nin the TaskList class, and to be shifted to the Ui class and Storage\nclass -- the class that is relevant.\n\nFor formatToFullList() and formatToMatchedList(), both have similar code\nlogic which can be extracted out into a helper function, adhering to\nDRY princniple.\n\nLet\u0027s\n* extract the common patterns of formatToFullList() and\n  formatToMatchedList()\n* shift the code to more relevant classes\n\nThis is to adhere to DRY principle and OOP design practices better.\nHopefully.\n","fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":40}}},{"hash":"6de293127fc15de3eaeeb6f91919c4c4e757c637","isMergeCommit":false,"messageTitle":"Remove magic numbers or literals","messageBody":"Some code use certain numbers or literals which its meaning may not\nbe the most obvious. To make the code more readable and understandable,\nthese numbers or literals are stored in constant variables named in\nsuch a way that represents the meaning.\n\nLet\u0027s replace these magic numbers or literals with constants.\n\nThis is to make the code more easy to understand.\n","fileTypesAndContributionMap":{"java":{"insertions":108,"deletions":49}}},{"hash":"7e3b8997e8e5de21674eea5d918152f3cb1e066e","isMergeCommit":false,"messageTitle":"Standardise import order","messageBody":"The order of imports are not standardised.\n\nThere is a need to standardise to enhance readability.\n\nLet\u0027s standardise the order of imports.\n\nThis is to enhance code readability.\n","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":32}}},{"hash":"6f3f71e451461e25c36be37b4d8371ec2fd9da79","isMergeCommit":false,"messageTitle":"Include JavaDoc comments","messageBody":"JavaDoc comments are missing in some public methods or classses. This\nviolates coding conventions.\n\nLet\u0027s add JavaDoc comments.\n\nThis is to inform users the functionality of the public methods.\n","fileTypesAndContributionMap":{"fxml":{"insertions":3,"deletions":3},"java":{"insertions":307,"deletions":123}}},{"hash":"9a896e95af17952483ce562579f9bfb35dc00e57","isMergeCommit":true,"messageTitle":"Merge pull request #1 from cth06-Github/branch-A-CodeQuality","messageBody":"Merge branch-A-CodeQuality","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{}},{"hash":"aefb675b63107dc3ccfda0446771a28a9dd129ad","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/cth06-Github/ip into branch-A-Assertions","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"48992cf776ee467f28286edf0e295f8ab002b9c2","isMergeCommit":false,"messageTitle":"Add assertions","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":5}}},{"hash":"2f8781aed374ca1ffaa0855d50efa20d6c07daaa","isMergeCommit":true,"messageTitle":"Merge pull request #2 from cth06-Github/branch-A-Assertions","messageBody":"Add assertion round 1","tags":["A-Assertions"],"fileTypesAndContributionMap":{}}]},{"date":"2024-09-10","commitResults":[{"hash":"106a1848054054e5e60b1500813c39130b6ce214","isMergeCommit":false,"messageTitle":"Add sorting functionality (halfway)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":8}}},{"hash":"8592b6ed81d163262df395e5f1df4eeb1db34d46","isMergeCommit":false,"messageTitle":"Move code on format list in Ui.java to elsewhere","messageBody":"formatToList(), formatToFullList(), formatToMatchedList() are private\nmethods in Ui class. But the Ui is to show the output of the GUI bot,\nnot meant to further modify the task list format. Such further\nprocessing should be done during the execution of the command.\n\nThis is to organise the code better.\n\nLet\u0027s\n* Create FormatListCommand class which extends Command class\n* Add formatToList() function in FormatListCommand class as a protected\n  method\n* Extend ListCommand, FindCommand class from FormatListCommand class\n* Delete formatToFullList() and formatToMatchedList()\n\nFormatListCommand class represents Commands that require formatting the\nlist of tasks and output the formatted list. All these commands will\nneed to use the formatToList(), so this function should be protected so\nthat commands belonging to FormatListCommand() can use this method.\nformatToFullList() and formatToMatchedList() are pretty similar to\nformatToList(), thus there is no need to extract it (although\ntechnically the naming is more representative).\n","fileTypesAndContributionMap":{"java":{"insertions":70,"deletions":46}}},{"hash":"a03f6d57a854681f0033896527465f00517b15cc","isMergeCommit":false,"messageTitle":"Add SortCommand to build sorting functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":3}}},{"hash":"95d8e5db70999ddab3fd5b2fa26ceadbb2ae80c5","isMergeCommit":false,"messageTitle":"Move formatToList() code as a method of TaskList","messageBody":"formatToList(), formatToFileList() are placed in FormatListCommand and\nStorage class respectively. But these methods can be a characteristic of\nthe taskList object representation, similar to how it is done for Task\nobjects. Moreover, code can be written in a more declarative style by\nmaking use of Streams.\n\nLet\u0027s\n* Move formatToList() and formatToFileList() as methods for TaskList\n  class\n* Rewrite in declarative style, for loops to traverse through the list\n  can be rewritten to make use of streams\n\nThis is to enhance code readability and better organisation of code.\n","fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":71}}},{"hash":"7a2f27e839dfc0bd7fce2eb9e53226d2014a35f1","isMergeCommit":false,"messageTitle":"Add sorting functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":116,"deletions":17}}}]},{"date":"2024-09-11","commitResults":[{"hash":"cd056d5eed7afb36d45eb67e52c8f8ae3a85473f","isMergeCommit":false,"messageTitle":"Storage class: Refactor code by extract method","messageBody":"convertLineToTask() has several aspects of repeating code, not adhering\nto the DRY principle and SLAP principle.\n\nLet\u0027s extract repeating portions as separate private methods.\n\nThis is to adhere to DRY and SLAP principles.\n","fileTypesAndContributionMap":{"java":{"insertions":111,"deletions":68}}},{"hash":"2971e2b5d8e5a4b095075c67b43734667e128910","isMergeCommit":false,"messageTitle":"Refactor code in compare() in SortCommand class","messageBody":"The code did not use guard clauses and follow an ArrowHead style. This\nmakes code hard to read.\n\nLet\u0027s refactor by using guard clauses.\n\nThis makes code more readable.\n","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":27}}},{"hash":"4a1b2cb8df062c6ed00f9b714f8bc99f51fe3de1","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-BCD-Extension\u0027","messageBody":"","tags":["BCD-Extension"],"fileTypesAndContributionMap":{}},{"hash":"c1beb4093ef52b5ad95d97db883fc6bfd0586ee1","isMergeCommit":false,"messageTitle":"Add command help information in welcome message","messageBody":"When the bot application first started, the bot will show a message at\nthe start.\n\nFor first time users, not having prompts as to what\ncommands the bot accepts right from the start is not exactly user\nfriendly.\n\nLet\u0027s add some message regarding what commands users can try keying in.\n\nThis improves user experience.\n","tags":["A-Streams","A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}}]}]},"authorFileTypeContributionMap":{"cth06-Github":{"java":1529,"md":0,"fxml":69,"sh":0,"bat":6,"gradle":18,"txt":10}},"authorContributionVariance":{"cth06-Github":133663.33},"authorDisplayNameMap":{"cth06-Github":"CS2103-F09-1 CHUA.. HUI"}}
