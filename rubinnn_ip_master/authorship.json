[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"checkstyle {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"    mainClass.set(\"beeboo.BeeBoo\")","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"    archiveBaseName \u003d \"beeboo.jar\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"rubinnn":7,"-":38}},{"path":"data/beeboo.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"D | 1 | ca1 | 2024-02-24T00:00","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"E | 0 | meeting | 2024-02-28T06:00 | 2024-02-28T08:00","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"T | 0 | read book","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"D | 0 | return book | 2024-09-20T00:00","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"rubinnn":2,"-":2}},{"path":"src/main/java/beeboo/BeeBoo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import beeboo.command.Command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Parser;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.BeeBooExceptions;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.InvalidCommandException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The {@code BeeBoo} class represents the main application logic for the BeeBoo task management","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * system. It handles initialization, user interactions, command processing, and task management.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"public class BeeBoo {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"    private Ui ui;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Constructs a beeboo instance with the specified file path for storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Initializes the user interface, storage, and task list. If loading the tasks fails,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * an empty task list is created.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param filePath the path to the file where tasks are stored","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"    public BeeBoo(String filePath) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"        try {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"        } catch (BeeBooExceptions e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"            ui.loadingError();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Starts the BeeBoo application and enters the main event loop. It shows the welcome message,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * continuously prompts the user for commands, parses and executes the commands, and handles","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * exceptions. The loop exits when a command that triggers an exit is executed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rubinnn"},"content":"    public void run() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rubinnn"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rubinnn"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rubinnn"},"content":"        // Prompts user while user doesn\u0027t enter bye","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rubinnn"},"content":"        while (!isExit) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rubinnn"},"content":"            try {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rubinnn"},"content":"                String fullCommand \u003d ui.handleCommand();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rubinnn"},"content":"                Command c \u003d Parser.parseCommand(fullCommand);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rubinnn"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rubinnn"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rubinnn"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rubinnn"},"content":"                ui.chatBox(\"Invalid Command! Me no understand\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rubinnn"},"content":"            } catch (BeeBooExceptions e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rubinnn"},"content":"                ui.chatBox(e.toString());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rubinnn"},"content":"            }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * The entry point of the BeeBoo application. Creates a new {@code BeeBoo} instance with a","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * default file path for storage and starts the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @param args command-line arguments","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rubinnn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rubinnn"},"content":"        new BeeBoo(\"./data/beeboo.txt\").run();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"rubinnn":50,"-":22}},{"path":"src/main/java/beeboo/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.InvalidDateException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.NoDescriptionException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"import beeboo.task.Deadlines;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"import beeboo.task.Events;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"import beeboo.task.ToDos;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"public class AddCommand extends Command{","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private String type;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private String command;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"    public AddCommand(String type, String command) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"        super(command);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param tasks tasklist of the chatbot","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param ui ui of the chatbot","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param storage storage function of chatbot","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws InvalidDateException if date formatting is wrong","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws NoDescriptionException if there is no description","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidDateException, NoDescriptionException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"        switch(type) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"        case \"e\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            Events event \u003d Events.createEvent(command);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"            tasks.addList(event);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"            ui.addList(event, tasks.getSize());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            storage.saveItem(tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"            break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"        case \"t\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"            ToDos todo \u003d ToDos.createToDo(command);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"            tasks.addList(todo);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"            ui.addList(todo, tasks.getSize());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            storage.saveItem(tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rubinnn"},"content":"            break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rubinnn"},"content":"        case \"d\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rubinnn"},"content":"            Deadlines deadline \u003d Deadlines.createDeadline(command);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rubinnn"},"content":"            tasks.addList(deadline);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rubinnn"},"content":"            ui.addList(deadline, tasks.getSize());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            storage.saveItem(tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rubinnn"},"content":"            break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @return true if is exit command false if not exit command","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rubinnn"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rubinnn"},"content":"        return false;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"rubinnn":44,"-":18}},{"path":"src/main/java/beeboo/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.BeeBooExceptions;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"public abstract class Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"    private String command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"    public Command(String command) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"    public Command() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"        command \u003d null;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws BeeBooExceptions;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"rubinnn":21}},{"path":"src/main/java/beeboo/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import beeboo.task.Tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.InvalidIndexException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"    private String command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"    public DeleteCommand(String command) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @param tasks tasklist of chatbot","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @param ui ui of the chatbot","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param storage storage function of the chatbot","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws InvalidIndexException if index is \u003c 0 or is more than the size of tasklist","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"        int index \u003d Integer.parseInt(command);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"        if(index \u003c0 || index \u003e tasks.getSize()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"            throw new InvalidIndexException(\"Invalid index\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"        Tasks removed \u003d tasks.deleteItem(index - 1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"        ui.deleteItemMessage(removed, tasks.getSize());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        storage.saveItem(tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return true if is exit command false if not exit command","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"        return false;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"rubinnn":29,"-":12}},{"path":"src/main/java/beeboo/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.InvalidDateException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.NoDescriptionException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a command that handles the exit operation in BeeBoo.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This command will trigger the necessary procedures to terminate","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * the chatbot, including saving the current task list and displaying","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * a farewell message to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the exit command. This method will close the user interface","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and display a farewell message. Any necessary cleanup procedures,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * such as saving data, should also be handled here.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param tasks   The TaskList containing the current tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param ui      The Ui component that handles user interaction.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param storage The Storage component for saving/loading data.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws InvalidDateException    If an invalid date is encountered during execution.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws NoDescriptionException  If a task is missing a description during execution.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidDateException, NoDescriptionException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"        ui.close();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"        ui.byeMessageMessage();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Determines if this command is an exit command.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @return {@code true} if this is an exit command, {@code false} otherwise.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"        return true;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"rubinnn":20,"-":23}},{"path":"src/main/java/beeboo/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * @param tasks tasklist of chatbot","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * @param ui ui of the chatbot","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @param storage storage function of the chatbot","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"        ui.produceList(tasks.produceList());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return true if is exit command false if not exit command","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"        return false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"rubinnn":18,"-":10}},{"path":"src/main/java/beeboo/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import beeboo.task.Tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.InvalidIndexException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private String type;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private String command;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"    public MarkCommand(String type, String command) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"        super(command);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tasks tasklist of chatbot","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param ui ui of the chatbot","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param storage storage function of the chatbot","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws InvalidIndexException if index is \u003c 0 or is more than the size of tasklist","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"        int index \u003d Integer.parseInt(command);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"        if (index \u003c 0 || index \u003e tasks.getSize()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"            throw new InvalidIndexException(\"Invalid index\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"        switch(type) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"        case \"m\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"            Tasks done \u003d tasks.markDone(index - 1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            ui.markDoneMessage(done);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            storage.saveItem(tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"            break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"        case \"u\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"            Tasks undone \u003d tasks.unmarkDone(index - 1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"            ui.unmarkDoneMessage(undone);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            storage.saveItem(tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"            break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @return true if is exit command false if not exit command","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rubinnn"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rubinnn"},"content":"        return false;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"rubinnn":38,"-":16}},{"path":"src/main/java/beeboo/components/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.components;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import beeboo.command.*;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.InvalidCommandException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * The Parser class is responsible for parsing user commands and creating corresponding Command objects.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"public class Parser {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses the given command string and returns the appropriate Command object based on the command type.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * The method trims the command, identifies the command type, and creates the relevant Command object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param command the command string entered by the user","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @return a Command object representing the parsed command","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws InvalidCommandException if the command is invalid or cannot be parsed","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"    public static Command parseCommand(String command) throws InvalidCommandException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"        command \u003d command.trim();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"            return new ListCommand();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"        int index \u003d command.indexOf(\u0027 \u0027);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"        String commandWord \u003d command.substring(0, index).trim();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"        String rest \u003d command.substring(index).trim();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"        switch (commandWord) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"        case \"deadline\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"            return new AddCommand(\"d\", rest);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"        case \"todo\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"            return new AddCommand(\"t\", rest);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"        case \"event\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"            return new AddCommand(\"e\", rest);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"        case \"mark\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"            return new MarkCommand(\"m\", rest);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"        case \"unmark\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"            return new MarkCommand(\"u\", rest);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"        case \"delete\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rubinnn"},"content":"            return new DeleteCommand(rest);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        case \"find\":","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return new FindCommand(rest);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rubinnn"},"content":"        default:","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rubinnn"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"rubinnn":35,"-":14}},{"path":"src/main/java/beeboo/components/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.components;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.NoFileException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import beeboo.task.Deadlines;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import beeboo.task.Events;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"import beeboo.task.Tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"import beeboo.task.ToDos;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"import java.io.File;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Storage class handles the reading and writing of task data to and from a file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * It provides methods for loading tasks from a file and saving tasks to a file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"public class Storage {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * The path to the file used for storing task data.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    String filePath;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a Storage instance with the specified file path.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param filePath the path to the file where task data is stored","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Loads task data from the file specified by the file path.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * It reads the file line by line, parses the task data, and creates Task objects.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return an ArrayList of Tasks objects loaded from the file","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws NoFileException if the file does not exist","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rubinnn"},"content":"    public ArrayList\u003cTasks\u003e load() throws NoFileException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rubinnn"},"content":"        ArrayList\u003cTasks\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rubinnn"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rubinnn"},"content":"            throw new NoFileException(\"\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rubinnn"},"content":"        } else {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rubinnn"},"content":"            try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rubinnn"},"content":"                Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rubinnn"},"content":"                while (scanner.hasNextLine()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rubinnn"},"content":"                    String task \u003d scanner.nextLine();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rubinnn"},"content":"                    String[] splitted \u003d task.split(\"\\\\|\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rubinnn"},"content":"                    if (splitted.length \u003c 3 || splitted.length \u003e 6) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rubinnn"},"content":"                        continue;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rubinnn"},"content":"                    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rubinnn"},"content":"                    boolean isDone \u003d splitted[1].trim().equals(\"1\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rubinnn"},"content":"                    Tasks newTask \u003d null;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rubinnn"},"content":"                    switch (splitted[0].trim()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rubinnn"},"content":"                    case \"T\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rubinnn"},"content":"                        newTask \u003d new ToDos(splitted[2].trim());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rubinnn"},"content":"                        if (isDone) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rubinnn"},"content":"                            newTask.markDone();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rubinnn"},"content":"                        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rubinnn"},"content":"                        break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rubinnn"},"content":"                    case \"D\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rubinnn"},"content":"                        String[] dateTime \u003d splitted[3].split(\"T\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rubinnn"},"content":"                        LocalDateTime dates \u003d LocalDateTime.of(LocalDate.parse(dateTime[0].trim()), LocalTime.parse(dateTime[1].trim()));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rubinnn"},"content":"                        newTask \u003d new Deadlines(splitted[2].trim(), dates);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rubinnn"},"content":"                        if (isDone) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rubinnn"},"content":"                            newTask.markDone();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rubinnn"},"content":"                        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rubinnn"},"content":"                        break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rubinnn"},"content":"                    case \"E\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rubinnn"},"content":"                        String[] startDateTime \u003d splitted[3].split(\"T\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rubinnn"},"content":"                        String[] endDateTime \u003d splitted[4].split(\"T\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rubinnn"},"content":"                        LocalDateTime startDate \u003d LocalDateTime.of(LocalDate.parse(startDateTime[0].trim()), LocalTime.parse(startDateTime[1].trim()));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rubinnn"},"content":"                        LocalDateTime endDate \u003d LocalDateTime.of(LocalDate.parse(endDateTime[0].trim()), LocalTime.parse(endDateTime[1].trim()));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"                        newTask \u003d new Events(splitted[2].trim(), startDate, endDate);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rubinnn"},"content":"                        if (isDone) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rubinnn"},"content":"                            newTask.markDone();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rubinnn"},"content":"                        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rubinnn"},"content":"                        break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rubinnn"},"content":"                    default:","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rubinnn"},"content":"                        break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rubinnn"},"content":"                    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"                    if (newTask !\u003d null) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rubinnn"},"content":"                        list.add(newTask);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rubinnn"},"content":"                    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rubinnn"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rubinnn"},"content":"                System.out.println(\"Error has occurred while reading the file\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rubinnn"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rubinnn"},"content":"        return list;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Saves the specified list of tasks to the file specified by the file path.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Each task is saved in a format suitable for storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param list the list of Tasks objects to be saved","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void saveItem(TaskList list) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rubinnn"},"content":"        try (FileWriter writer \u003d new FileWriter(\"./data/beeboo.txt\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c list.getSize(); i++) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"                Tasks task \u003d list.get(i);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rubinnn"},"content":"                writer.write(task.saveFormat() + System.lineSeparator());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rubinnn"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rubinnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rubinnn"},"content":"            System.out.println(\"Unable to create file\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Creates the directory for storing task data if it does not already exist.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * This method ensures that the directory structure is in place for saving task data.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"rubinnn"},"content":"    protected static void createFile() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rubinnn"},"content":"        Path path \u003d Paths.get(\"./data\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"rubinnn"},"content":"        if (Files.notExists(path)) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"rubinnn"},"content":"            try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"rubinnn"},"content":"                Files.createDirectories(path);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"rubinnn"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"rubinnn"},"content":"                System.out.println(\"Unable to create directory\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"rubinnn"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"rubinnn":94,"-":41}},{"path":"src/main/java/beeboo/components/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.components;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import beeboo.task.Tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * The TaskList class manages a list of tasks. It provides methods to add, remove, and modify tasks in the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"public class TaskList {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * The list of tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"    ArrayList\u003cTasks\u003e list;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a TaskList with the specified list of tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param list the initial list of tasks","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"    public TaskList(ArrayList\u003cTasks\u003e list) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"        this.list \u003d list;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs an empty TaskList and creates the necessary directory for storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"    public TaskList() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"        Storage.createFile();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param task the task to be added","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"    public void addList(Tasks task) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"        list.add(task);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Deletes a task from the list at the specified index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param index the index of the task to be deleted","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @return the task that was removed from the list","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rubinnn"},"content":"    public Tasks deleteItem(int index) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rubinnn"},"content":"        Tasks item \u003d list.get(index);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rubinnn"},"content":"        list.remove(item);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rubinnn"},"content":"        return item;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Marks a task as not done at the specified index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param index the index of the task to be unmarked","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @return the task that was unmarked","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rubinnn"},"content":"    public Tasks unmarkDone(int index) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rubinnn"},"content":"        Tasks task \u003d list.get(index);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rubinnn"},"content":"        task.unmarkDone();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rubinnn"},"content":"        return task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Marks a task as done at the specified index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param index the index of the task to be marked","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @return the task that was marked","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rubinnn"},"content":"    public Tasks markDone(int index) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rubinnn"},"content":"        Tasks task \u003d list.get(index);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rubinnn"},"content":"        task.markDone();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rubinnn"},"content":"        return task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Produces a string representation of the task list with each task numbered.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @return a string representing the list of tasks","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rubinnn"},"content":"    public String produceList() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rubinnn"},"content":"        String result \u003d \"\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rubinnn"},"content":"        for (Tasks task : list) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rubinnn"},"content":"            result \u003d result + (list.indexOf(task) + 1) + \". \" + \" \" + task + \"\\n\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rubinnn"},"content":"        return result;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @return the size of the task list","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rubinnn"},"content":"    public int getSize() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rubinnn"},"content":"        return list.size();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns task of specified index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @return Tasks","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public Tasks get(int index) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return list.get(index);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"rubinnn":53,"-":56}},{"path":"src/main/java/beeboo/components/TimeConverter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.components;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The TimeConverter class provides functionality to convert a string representation of date and time into a LocalDateTime object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"public class TimeConverter {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Converts a string representation of a date and time into a LocalDateTime object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The string should be in the format \"yyyy-MM-dd HHmm\" or \"yyyy-MM-dd\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * If only the date is provided, the time is assumed to be 00:00.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @param date the string representation of the date and time","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @return a LocalDateTime object representing the provided date and time","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws DateTimeParseException if the date string is not in a valid format","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"    public static LocalDateTime timeConverter(String date) throws DateTimeParseException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"        String[] arr \u003d date.split(\" \");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"        LocalDate res \u003d LocalDate.parse(arr[0]);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"        LocalTime time;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"        if (arr.length \u003d\u003d 2) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            time \u003d LocalTime.of(Integer.parseInt(arr[1].substring(0, 2)),","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    Integer.parseInt(arr[1].substring(2)));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"        } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"            time \u003d LocalTime.of(0, 0);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"        return LocalDateTime.of(res, time);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"rubinnn":19,"-":15}},{"path":"src/main/java/beeboo/components/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.components;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.BeeBooExceptions;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import beeboo.task.Tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The Ui class handles interactions with the user by displaying messages and processing user input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"public class Ui {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"    private Scanner input;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Constructs a Ui object and initializes the Scanner for user input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"    public Ui() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"        input \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Displays a message indicating that a task has been marked as done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param task the task that has been marked as done","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void markDoneMessage(Tasks task) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"        chatBox(\"Nice! I\u0027ve marked this task as done:\\n\" + task);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Displays a message indicating that a task has been marked as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param task the task that has been marked as not done","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"    public void unmarkDoneMessage(Tasks task) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"        chatBox(\"OK, I\u0027ve marked this task as not done yet:\\n\" + task);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Displays a message indicating that a task has been deleted and shows the number of remaining tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param task the task that has been removed","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param size the number of tasks left in the list","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rubinnn"},"content":"    public void deleteItemMessage(Tasks task, int size) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        chatBox(\"Ok I have removed the following item\\n\" + task","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"                + \"\\n\" + \"You have \" + size + \" tasks left\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Displays a message indicating that there is no data available and a new TaskList is being created.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rubinnn"},"content":"    public void loadingError() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rubinnn"},"content":"        chatBox(\"You don\u0027t have any data right now. Let me create a new TaskList\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param list the string representation of the task list","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rubinnn"},"content":"    public void produceList(String list) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rubinnn"},"content":"        chatBox(list);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Formats and prints a message surrounded by a border of dashes.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @param str the message to be displayed","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rubinnn"},"content":"    public void chatBox(String str) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rubinnn"},"content":"        for (int i \u003d 0; i \u003c 60; i++) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rubinnn"},"content":"            System.out.print(\"-\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rubinnn"},"content":"        System.out.println();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rubinnn"},"content":"        System.out.println(str);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rubinnn"},"content":"        System.out.println();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rubinnn"},"content":"        for (int i \u003d 0; i \u003c 60; i++) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rubinnn"},"content":"            System.out.print(\"-\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rubinnn"},"content":"        System.out.println();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Displays a message indicating that a task has been added to the list and shows the number of tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @param task the task that has been added","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param size the number of tasks in the list","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rubinnn"},"content":"    public void addList(Tasks task, int size) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rubinnn"},"content":"        chatBox(\"added: \" + task + \"\\n\" + \"You have \" + size + \" tasks in the list\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Displays a welcome message when the application starts.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rubinnn"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        chatBox(\"Hello! I\u0027m BeeBoo\\nWhat can I do for you?\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Displays a farewell message when the user exits the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rubinnn"},"content":"    public void byeMessageMessage() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rubinnn"},"content":"        chatBox(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Displays an error message based on the provided exception.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @param e the exception containing the error message","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rubinnn"},"content":"    public void showError(BeeBooExceptions e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rubinnn"},"content":"        chatBox(e.toString());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Reads and returns the next line of user input, converting it to lowercase and trimming whitespace.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @return the user input as a trimmed and lowercase string","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"rubinnn"},"content":"    public String handleCommand() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"rubinnn"},"content":"        if (input \u003d\u003d null) {  // Ensure Scanner is initialized","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"rubinnn"},"content":"            input \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rubinnn"},"content":"        return input.nextLine().trim().toLowerCase();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Closes the Scanner object to release resources.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"rubinnn"},"content":"    public void close() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"rubinnn"},"content":"        input.close();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"rubinnn":69,"-":66}},{"path":"src/main/java/beeboo/exception/BeeBooExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"public class BeeBooExceptions extends Exception{","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"    public BeeBooExceptions(String error) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"        super(error);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"rubinnn":7}},{"path":"src/main/java/beeboo/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"rubinnn":4}},{"path":"src/main/java/beeboo/exception/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"public class InvalidDateException extends BeeBooExceptions{","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"    public InvalidDateException(String error) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"        super(error);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"        return \"Your date commands are wrong. Here are the list of how to create tasks\\n\" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"                \"event [eventName] /from [yyyy-mm-dd] [hh-mm]/to [time]\\n\" +","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"                \"deadline [deadlineName] /by [yyyy-mm-dd] [hh-mm]\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"rubinnn":13,"-":2}},{"path":"src/main/java/beeboo/exception/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"public class InvalidIndexException extends BeeBooExceptions{","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"    public InvalidIndexException(String error) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"        super(error);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"        return \"Index dont exist. Please input a valid index.You can use the \\\"list\\\" to check your list \";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"rubinnn":12}},{"path":"src/main/java/beeboo/exception/NoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"public class NoDescriptionException extends BeeBooExceptions{","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"    public NoDescriptionException(String message) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"        super(message);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"        return \"You didn\u0027t put in a description user. Here is a list of commands and descriptions\\n\" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"                \"event [eventName] /from [time] /to [time]\\n\"+","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"                \"deadline [deadlineName]/ by [time]\\n \" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"                \"todo [todoName]\\n\" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"                \"Please try again user\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"rubinnn":16}},{"path":"src/main/java/beeboo/exception/NoFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"public class NoFileException extends BeeBooExceptions{","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"    public NoFileException(String error) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"        super(error);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"    public String toString() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"        return \"You don\u0027t have any data right now.Let me create a new TaskList\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"rubinnn":12}},{"path":"src/main/java/beeboo/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.TimeConverter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.InvalidDateException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.NoDescriptionException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The Deadlines class represents a task with a specific deadline. It extends the","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Tasks class and includes functionality for managing deadlines.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"public class Deadlines extends Tasks {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"    private LocalDateTime date;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"    static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy \u0027at\u0027 hh:mm a\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a Deadlines instance with the specified description and deadline date.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param description the description of the deadline","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param date        the LocalDateTime representing the deadline","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"    public Deadlines(String description, LocalDateTime date) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"        super(description);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the type icon for deadlines.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @return the type icon as a code String","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"    protected String typeIcon() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"        return \"[D]\";","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a Deadlines instance from the given text input. The input should include","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * a description and a deadline date in the format \"by \u003cdate\u003e\". The method parses the input,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * validates the description and date, and returns a new Deadlines object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param text the input text containing description and deadline date","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @return a code Deadlines instance","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws NoDescriptionException if the description is missing or empty","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws InvalidDateException    if the date is invalid or improperly formatted","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rubinnn"},"content":"    public static Deadlines createDeadline(String text) throws NoDescriptionException, InvalidDateException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rubinnn"},"content":"        int descriptionEnd \u003d text.indexOf(\u0027/\u0027);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rubinnn"},"content":"        String description \u003d text.substring(0, descriptionEnd).trim();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rubinnn"},"content":"        if (descriptionEnd \u003d\u003d -1 || description.isEmpty()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rubinnn"},"content":"            throw new NoDescriptionException(\"No description\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rubinnn"},"content":"        String dateCommand \u003d text.substring(descriptionEnd + 1).trim();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rubinnn"},"content":"        if (!dateCommand.startsWith(\"by\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rubinnn"},"content":"            throw new InvalidDateException(text);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rubinnn"},"content":"        String date \u003d dateCommand.substring(2).trim();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rubinnn"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rubinnn"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rubinnn"},"content":"            dateTime \u003d TimeConverter.timeConverter(date);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rubinnn"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rubinnn"},"content":"            throw new InvalidDateException(text);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rubinnn"},"content":"        return new Deadlines(description, dateTime);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns a String representation of the {@code Deadlines} instance, including the","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * description and formatted deadline date.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @return a String representation of the deadline","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rubinnn"},"content":"    public String toString() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rubinnn"},"content":"        return typeIcon() + super.toString() + \"(by:\" + FORMATTER.format(date) + \")\";","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns a String representation of the Deadlines instance in a format","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * suitable for saving to storage. The format includes the task type, completion status, description,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * and deadline date.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @return a String representing the saved format of the deadline","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rubinnn"},"content":"    public String saveFormat() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rubinnn"},"content":"        return \"D | \" + (super.isDone ? \"1 | \" : \"0 | \") + description + \" | \" + date;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"rubinnn":57,"-":38}},{"path":"src/main/java/beeboo/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.TimeConverter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.InvalidDateException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.NoDescriptionException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The Events class represents an event task with a start date and an end date. It extends the","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Tasks class and provides functionality for managing events.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"public class Events extends Tasks {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"    static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy \u0027at\u0027 hh:mm a\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Constructs an Events instance with the specified description, start date, and end date.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param description the description of the event","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param startDate   the LocalDateTime representing the start date and time of the event","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param endDate     the LocalDateTime representing the end date and time of the event","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"    public Events(String description, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"        super(description);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the type icon for events.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @return the type icon as a String, \"[E]\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"    protected String typeIcon() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"        return \"[E]\";","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns a String representation of the Events instance, including the description, start date,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * and end date formatted using the predefined formatter.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @return a String representation of the event","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rubinnn"},"content":"    public String toString() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rubinnn"},"content":"        return typeIcon() + super.toString() + \"(from: \" + FORMATTER.format(startDate) + \" to: \" + FORMATTER.format(endDate) + \")\";","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates an Events instance from the given text input. The input should include a description and","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * start and end dates in the format \"from \u003cstartDate\u003e to \u003cendDate\u003e\". The method parses the input, validates","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * the description and dates, and returns a new Events object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param text the input text containing the description and event dates","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @return an Events instance","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws InvalidDateException if the dates are invalid or improperly formatted","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws NoDescriptionException if the description is missing or empty","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Events createEvent(String text) throws InvalidDateException, NoDescriptionException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rubinnn"},"content":"        int descriptionEnd \u003d text.indexOf(\u0027/\u0027);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rubinnn"},"content":"        String description \u003d text.substring(0, descriptionEnd).trim();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rubinnn"},"content":"        if (descriptionEnd \u003d\u003d -1 || description.isEmpty()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rubinnn"},"content":"            throw new NoDescriptionException(\"No description\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rubinnn"},"content":"        String dateSubstring \u003d text.substring(descriptionEnd + 1).trim();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rubinnn"},"content":"        if (!dateSubstring.startsWith(\"from\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rubinnn"},"content":"            throw new InvalidDateException(text);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rubinnn"},"content":"        int startDateEnd \u003d dateSubstring.indexOf(\u0027/\u0027);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rubinnn"},"content":"        String startDate \u003d dateSubstring.substring(4, startDateEnd).trim();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rubinnn"},"content":"        LocalDateTime startDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rubinnn"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rubinnn"},"content":"            startDateTime \u003d TimeConverter.timeConverter(startDate);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rubinnn"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rubinnn"},"content":"            throw new InvalidDateException(text);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rubinnn"},"content":"        String endDateCommand \u003d dateSubstring.substring(startDateEnd + 1);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rubinnn"},"content":"        if (!endDateCommand.startsWith(\"to\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rubinnn"},"content":"            throw new InvalidDateException(text);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rubinnn"},"content":"        String endDate \u003d endDateCommand.substring(2).trim();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rubinnn"},"content":"        String[] endDates \u003d endDate.split(\" \");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rubinnn"},"content":"        LocalDateTime endDateTime \u003d (endDates.length \u003d\u003d 1)","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rubinnn"},"content":"                ? TimeConverter.timeConverter(startDateTime.toLocalDate().toString() + \" \" + endDate)","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rubinnn"},"content":"                : TimeConverter.timeConverter(endDate);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rubinnn"},"content":"        return new Events(description, startDateTime, endDateTime);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a String representation of the Events instance in a format suitable for saving to storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The format includes the task type, completion status, description, start date, and end date.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @return a String representing the saved format of the event","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rubinnn"},"content":"    public String saveFormat() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return \"E | \" + (super.isDone ? \"1 | \" : \"0 | \")","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"                + description + \" | \" + startDate + \" | \" + endDate;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"rubinnn":69,"-":42}},{"path":"src/main/java/beeboo/task/Tasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":" * The Tasks class represents a generic task with a description and completion status.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":" * It serves as the base class for specific types of tasks such as deadlines, events, and to-dos.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"public abstract class Tasks {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"     * The description of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"    protected String description;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The completion status of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a Tasks instance with the specified description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"    public Tasks(String description) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns a String representation of the task, including the completion icon and description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @return a String representation of the task","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"    public String toString() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"        return completionIcon() + \" \" + description;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the completion icon based on the task\u0027s completion status.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * The icon is \"[X]\" if the task is done, and \"[ ]\" if it is not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @return the completion icon as a String","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rubinnn"},"content":"    protected String completionIcon() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rubinnn"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Marks the task as done by setting the completion status to true.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rubinnn"},"content":"    public void markDone() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rubinnn"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Marks the task as not done by setting the completion status to false.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rubinnn"},"content":"    public void unmarkDone() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rubinnn"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns the type icon for the task.Implemented by subclass to show their own","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * typeIcon","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @return the type icon as a String","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rubinnn"},"content":"    protected abstract String typeIcon();","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns a String representation of the task in a format suitable for saving to storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Implemented by subclasses to have their own save format","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @return a String representing the saved format of the task","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rubinnn"},"content":"    public abstract String saveFormat();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"rubinnn":34,"-":45}},{"path":"src/main/java/beeboo/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.NoDescriptionException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The ToDos class represents a to-do task with a description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * It extends the Tasks class and provides functionality specific to to-do tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"public class ToDos extends Tasks {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a ToDos instance with the specified description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param description the description of the to-do task","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"    public ToDos(String description) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"        super(description);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns the type icon for to-do tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return the type icon as a String","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"    protected String typeIcon() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"        return \"[T]\";","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns a String representation of the ToDos instance, including the type icon and description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @return a String representation of the to-do task","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"    public String toString() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"        return typeIcon() + super.toString();","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a ToDos instance from the given text input. The input should include the description of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * The method validates the description and returns a new ToDos object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param text the input text containing the description of the to-do task","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @return a ToDos instance","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws NoDescriptionException if the description is missing or empty","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rubinnn"},"content":"    public static ToDos createToDo(String text) throws NoDescriptionException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rubinnn"},"content":"        if (text.isEmpty()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rubinnn"},"content":"            throw new NoDescriptionException(\"No description\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rubinnn"},"content":"        return new ToDos(text);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns a String representation of the ToDos instance in a format suitable for saving to storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * The format includes the task type, completion status, and description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @return a String representing the saved format of the to-do task","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rubinnn"},"content":"    public String saveFormat() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rubinnn"},"content":"        return \"T | \" + (super.isDone ? \"1 | \" : \"0 | \") + description;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"rubinnn":31,"-":35}},{"path":"src/test/java/beeboo/BeeBooTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"public class BeeBooTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"rubinnn":4}},{"path":"src/test/java/beeboo/command/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"public class AddCommandTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"    public void executeTest() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"rubinnn":12}},{"path":"src/test/java/beeboo/task/DeadlinesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.BeeBooExceptions;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.InvalidDateException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.NoDescriptionException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"public class DeadlinesTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"    public void createDeadlineTest1() throws BeeBooExceptions {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"        String test \u003d \"ca1 /by 2024-02-24\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"        String expectedDeadlineString \u003d \"[D][ ] ca1(by:Feb 24 2024 at 12:00 am)\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"        assertEquals(expectedDeadlineString, Deadlines.createDeadline(test).toString());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"    public void createDeadlineTest2() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"        String test \u003d \" /by 2024-02-24\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"        String expectedErrorMessage \u003d \"You didn\u0027t put in a description user. Here is a list of commands and descriptions\\n\" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"                \"event [eventName] /from [time] /to [time]\\n\"+","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"                \"deadline [deadlineName]/ by [time]\\n \" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"                \"todo [todoName]\\n\" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"                \"Please try again user\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"        assertEquals(expectedErrorMessage, assertThrows(NoDescriptionException.class, () -\u003e {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"            Deadlines.createDeadline(test);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"        }).toString());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"    public void createDeadlineTest3() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"        String test \u003d \"ca1 /2024-02-24\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"        String expectedErrorMessage \u003d \"Your date commands are wrong. Here are the list of how to create tasks\\n\" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"                \"event [eventName] /from [time] /to [time]\\n\" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"                \"deadline [deadlineName] /by [time]\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"        assertEquals(expectedErrorMessage, assertThrows(InvalidDateException.class, () -\u003e {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"            Deadlines.createDeadline(test);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"        }).toString());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"rubinnn":43}},{"path":"src/test/java/beeboo/task/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.BeeBooExceptions;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"public class EventsTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"    public void createEventTest() throws BeeBooExceptions {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"        String test \u003d \"meeting /from 2024-02-28 0600 /to 0800\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"        String expected \u003d \"[E][ ] meeting(from: Feb 28 2024 at 06:00 am to: Feb 28 2024 at 08:00 am)\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"        assertEquals(expected,Events.CreateEvent(test).toString());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"rubinnn":16}},{"path":"src/test/java/beeboo/task/ToDosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.BeeBooExceptions;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.NoDescriptionException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"public class ToDosTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"    public void createToDosTest1() throws BeeBooExceptions {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"        String test \u003d \"borrow book\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"        String expected \u003d \"[T][ ] borrow book\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"        assertEquals(expected,ToDos.createToDo(test).toString());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"    public void createToDosTest2() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"        String expectedErrorMessage \u003d \"You didn\u0027t put in a description user. \" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"                \"Here is a list of commands and descriptions\\n\" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"                \"event [eventName] /from [time] /to [time]\\n\"+","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"                \"deadline [deadlineName]/ by [time]\\n \" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"                \"todo [todoName]\\n\" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"                \"Please try again user\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"        String test \u003d \"\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"        assertEquals(expectedErrorMessage, assertThrows(NoDescriptionException.class, () -\u003e {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"            ToDos.createToDo(test);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"        }).toString());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"rubinnn":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"todo borrow book","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"list","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"deadline ca1/by 2024-02-24","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"mark 2","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"delete 1","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"event meeting /from 2024-02-28 0600 /to 0800","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"list","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"unmark 4","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"bye","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"rubinnn":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"java -classpath ../bin BeeBoo \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"rubinnn":1,"-":37}}]
