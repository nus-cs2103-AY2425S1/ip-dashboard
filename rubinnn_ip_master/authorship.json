[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"# Beeboo User Guide","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"\u003cimg width\u003d\"905\" alt\u003d\"Screenshot 2024-09-16 at 10 54 18 AM\" src\u003d\"https://github.com/user-attachments/assets/614ec9fb-6803-4883-bec8-f87c772997cf\"\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"Beeboo is a easy to use app used to manage your tasks, be it todos, deadlines or events.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"## Table of contents","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"1. [Quick Start](#-quick-start)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"2. [Features](#-features)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"   - [Todo](#-adding-todo)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"   - [Deadline](#-adding-deadline)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"   - [List](#-adding-events)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"   - [Find](#-list)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"   - [Mark/Unmark](#-mark-or-unmark)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"   - [Deletion](#-deletion)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"### Quick Start","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"1. Ensure you have Java 17 or above installed in your Computer.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"2. Download the latest .jar file from Beeboo.jar","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"3. Copy the file to the folder you want to use as the home folder for your Beeboo.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"4. Open a terminal and navigate to the folder where the .jar file is located.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"5. Run the command java -jar beeboo.jar-all.jar to start the app.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"### Features","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"#### Adding Todo","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"Example:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"todo read book","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"This will prompt a message telling you that the task is added to the list.As such","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"added: [T][] read book","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"You have [size of list] tasks in the list","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"#### Adding Deadline","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"A deadline is a task with a time constraint.So a date and time has to be added to have the constraint.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"This is done by adding /by YYYY-MM-DD time.Example:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"deadline return book/ by 2024-09-30 1900","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rubinnn"},"content":"Example output:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rubinnn"},"content":"added: [D][] return book (by 30 sep 2024 6:00pm)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rubinnn"},"content":"You have [size of list] tasks in the list","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rubinnn"},"content":"the format of the date and time is YYYY-MM-DD HHMM no - in between time","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rubinnn"},"content":"#### Adding Events","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rubinnn"},"content":"Events are tasks that are from 1 time to another time. So another additional time constraint is added with /from ... /to","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rubinnn"},"content":"Example:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rubinnn"},"content":"event meeting /from 2024-09-30 1800 /to 2000","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rubinnn"},"content":"Example output:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rubinnn"},"content":"added: [E][] meeting (from 30 sep 2024 6:00pm to 30 sep 2024 8:00pm)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rubinnn"},"content":"You have [size of list] tasks in the list","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rubinnn"},"content":"the format of the date and time is YYYY-MM-DD HHMM no - in between time","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rubinnn"},"content":"#### List","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rubinnn"},"content":"You call list to get your list of tasks","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rubinnn"},"content":"list","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rubinnn"},"content":"Example output:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rubinnn"},"content":"1. [T][] read book","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rubinnn"},"content":"2. [D][] return book (by 30 sep 2024 6:00pm)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rubinnn"},"content":"#### Find","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rubinnn"},"content":"searching keyword through using 1 of the description words","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rubinnn"},"content":"find book","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rubinnn"},"content":"Example output:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rubinnn"},"content":"1.[Relevent tasks with book in the description]","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rubinnn"},"content":"#### Mark or Unmark","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rubinnn"},"content":"Marking or unmarking the task at a certain index to label it as done or not done.Example:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rubinnn"},"content":"mark 1","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rubinnn"},"content":"Example Output:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rubinnn"},"content":"Nice! I\u0027ve marked this task as done: [task at 1st index]","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rubinnn"},"content":"#### Deletion","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rubinnn"},"content":"Deleting the item at a specific index.Example","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rubinnn"},"content":"Delete 1","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rubinnn"},"content":"Example Output:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rubinnn"},"content":"Ok I have removed the following item","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rubinnn"},"content":"[T][X] read book","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rubinnn"},"content":"You have [size of list] tasks left;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"rubinnn":94,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"dependencies {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"checkstyle {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rubinnn"},"content":"    mainClass.set(\"beeboo.Launcher\")","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rubinnn"},"content":"    archiveBaseName \u003d \"beeboo.jar\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"rubinnn":24,"-":38}},{"path":"data/beeboo.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"E | 0 | a | 2022-10-23T10:00 | 2022-10-23T19:00","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"D | 0 | b | 2024-10-20T19:00","lastModifiedDate":"2024-10-15","isFullCredit":false}],"authorContributionMap":{"rubinnn":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"# Beeboo User Guide","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"\u003cimg width\u003d\"905\" alt\u003d\"Screenshot 2024-09-16 at 10 54 18 AM\" src\u003d\"https://github.com/user-attachments/assets/614ec9fb-6803-4883-bec8-f87c772997cf\"\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"Beeboo is a easy to use app used to manage your tasks, be it todos, deadlines or events.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"## Table of contents","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"1. [Quick Start](#-quick-start)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"2. [Features](#-features)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"    - [Todo](#-adding-todo)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"    - [Deadline](#-adding-deadline)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"    - [List](#-adding-events)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"    - [Find](#-list)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"    - [Mark/Unmark](#-mark-or-unmark)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"    - [Deletion](#-deletion)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"### Quick Start","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"1. Ensure you have Java 17 or above installed in your Computer.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"2. Download the latest .jar file from [Beeboo.jar](https://github.com/rubinnn/ip/releases/tag/A-Jar)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"3. Copy the file to the folder you want to use as the home folder for your Beeboo.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"4. Open a terminal and navigate to the folder where the .jar file is located.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"5. Run the command `java -jar beeboo.jar-all.jar` to start the app.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"### Features","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"#### Adding Todo","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"Example:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"todo read book","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"This will prompt a message telling you that the task is added to the list.As such","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"added: [T][] read book","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"You have [size of list] tasks in the list","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"#### Adding Deadline","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"A deadline is a task with a time constraint.So a date and time has to be added to have the constraint.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"This is done by adding /by YYYY-MM-DD time.Example:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"deadline return book/ by 2024-09-30 1900","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rubinnn"},"content":"Example output:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rubinnn"},"content":"added: [D][] return book (by 30 sep 2024 6:00pm)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rubinnn"},"content":"You have [size of list] tasks in the list","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rubinnn"},"content":"#### Adding Events","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rubinnn"},"content":"Events are tasks that are from 1 time to another time. So another additional time constraint is added with /from ... /to","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rubinnn"},"content":"Example:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rubinnn"},"content":"event meeting /from 2024-09-30 1800 /to 2000","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rubinnn"},"content":"Example output:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rubinnn"},"content":"added: [E][] meeting (from 30 sep 2024 6:00pm to 30 sep 2024 8:00pm)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rubinnn"},"content":"You have [size of list] tasks in the list","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rubinnn"},"content":"#### List","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rubinnn"},"content":"You call list to get your list of tasks","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rubinnn"},"content":"list","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rubinnn"},"content":"Example output:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rubinnn"},"content":"1. [T][] read book","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rubinnn"},"content":"2. [D][] return book (by 30 sep 2024 6:00pm)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rubinnn"},"content":"#### Find","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rubinnn"},"content":"searching keyword through using 1 of the description words","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rubinnn"},"content":"find book","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rubinnn"},"content":"Example output:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rubinnn"},"content":"1.[Relevent tasks with book in the description]","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rubinnn"},"content":"#### Mark or Unmark","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rubinnn"},"content":"Marking or unmarking the task at a certain index to label it as done or not done.Example:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rubinnn"},"content":"mark 1","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rubinnn"},"content":"Example Output:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rubinnn"},"content":"Nice! I\u0027ve marked this task as done: [task at 1st index]","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rubinnn"},"content":"#### Deletion","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rubinnn"},"content":"Deleting the item at a specific index.Example","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rubinnn"},"content":"Delete 1","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rubinnn"},"content":"Example Output:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rubinnn"},"content":"Ok I have removed the following item","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rubinnn"},"content":"[T][X] read book","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rubinnn"},"content":"You have [size of list] tasks left;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rubinnn"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"rubinnn":88,"-":9}},{"path":"src/main/java/beeboo/Beeboo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import beeboo.command.Command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Parser;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.BeeBooExceptions;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.InvalidCommandException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":" * The BeeBoo class represents the main application logic for the BeeBoo task management","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":" * system. It handles initialization, user interactions, command processing, and task management.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"public class Beeboo {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"    private static Image beebooImage \u003d new Image(Beeboo.class.getResourceAsStream(\"/images/Beeboo.jpg\"));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"    private Ui ui;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"     * Constructs a BeeBoo instance with the specified file path for storage.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"     * Initializes the user interface, storage, and task list. If loading the tasks fails,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"     * an empty task list is created.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"     * @param filePath the path to the file where tasks are stored","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"    public Beeboo(String filePath) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"        try {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"        } catch (BeeBooExceptions e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"            ui.loadingError();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rubinnn"},"content":"     * Generates a response for the user\u0027s chat message.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rubinnn"},"content":"     * @param input the user\u0027s input message","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rubinnn"},"content":"     * @return the response from BeeBoo","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rubinnn"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rubinnn"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rubinnn"},"content":"            Command c \u003d Parser.parseCommand(input);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rubinnn"},"content":"            assert c !\u003d null : \"Command should not be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rubinnn"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rubinnn"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rubinnn"},"content":"            return \"Invalid Command! Me no understand\";","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rubinnn"},"content":"        } catch (BeeBooExceptions e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rubinnn"},"content":"            return e.toString();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rubinnn"},"content":"     * Returns the image used for BeeBoo\u0027s avatar.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rubinnn"},"content":"     * @return BeeBoo\u0027s image","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rubinnn"},"content":"    public static Image getBeebooImage() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rubinnn"},"content":"        return beebooImage;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"rubinnn":68}},{"path":"src/main/java/beeboo/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"     * Constructs a DialogBox object with the specified text and image.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"     * @param text the text to be displayed in the dialog box","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"     * @param img  the image to be displayed as the speaker\u0027s picture","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rubinnn"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rubinnn"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rubinnn"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rubinnn"},"content":"    private void flip() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rubinnn"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rubinnn"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rubinnn"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rubinnn"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rubinnn"},"content":"     * Creates a DialogBox for the user input with the specified text and image.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rubinnn"},"content":"     * @param text the user\u0027s input text","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rubinnn"},"content":"     * @param img  the user\u0027s image","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rubinnn"},"content":"     * @return a DialogBox containing the user\u0027s input","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rubinnn"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rubinnn"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rubinnn"},"content":"     * Creates a DialogBox for BeeBoo\u0027s response with the specified text and image.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rubinnn"},"content":"     * The dialog box is flipped to display the image on the left and text on the right.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rubinnn"},"content":"     * @param text the text for BeeBoo\u0027s response","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rubinnn"},"content":"     * @param img  the image representing BeeBoo","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rubinnn"},"content":"     * @return a DialogBox containing BeeBoo\u0027s response","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rubinnn"},"content":"    public static DialogBox getBeeBooDialogue(String text, Image img) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rubinnn"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rubinnn"},"content":"        db.flip();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rubinnn"},"content":"        return db;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"rubinnn":82}},{"path":"src/main/java/beeboo/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"public class Launcher {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"rubinnn":12}},{"path":"src/main/java/beeboo/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":" * The Main class serves as the entry point for the BeeBoo application. It extends the JavaFX","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":" * {@link javafx.application.Application} class and is responsible for initializing and launching","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":" * the GUI.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"public class Main extends Application {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"    private Beeboo beeboo \u003d new Beeboo(\"./data/beeboo.txt\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"     * The start method is called after the JavaFX application is initialized. It sets up the primary","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"     * stage, loads the FXML layout, and displays the GUI.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"     * @param stage the primary stage for this JavaFX application","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBeeboo(beeboo);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"            stage.show();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"rubinnn":39}},{"path":"src/main/java/beeboo/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":" * Controller for the main GUI of the BeeBoo application. It manages user interactions,","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":" * handles input, and displays dialogues between the user and BeeBoo.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"    private final Image userImage \u003d new Image(this.getClass()","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"            .getResourceAsStream(\"/images/User.jpg\"));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"    private Beeboo beeboo;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"     * Initializes the main window by setting up the scroll pane\u0027s behavior","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"     * and adding a greeting message to the dialog container.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"        DialogBox greeting \u003d DialogBox.getBeeBooDialogue(\"Hello! I\u0027m BeeBoo\\nWhat can I do for you?\",","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"                Beeboo.getBeebooImage());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"        dialogContainer.getChildren().addAll(greeting);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rubinnn"},"content":"     * Injects the Beeboo instance into the controller.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rubinnn"},"content":"     * @param b the Beeboo instance to be injected","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rubinnn"},"content":"    public void setBeeboo(Beeboo b) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rubinnn"},"content":"        beeboo \u003d b;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rubinnn"},"content":"        assert beeboo !\u003d null : \"Beeboo should not be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rubinnn"},"content":"     * Handles user input by creating two dialog boxes: one with the user\u0027s input and another","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rubinnn"},"content":"     * with BeeBoo\u0027s response. The user input is then cleared.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rubinnn"},"content":"     * If the user inputs \"bye\", the application exits.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rubinnn"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rubinnn"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rubinnn"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rubinnn"},"content":"        String response \u003d beeboo.getResponse(input);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rubinnn"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rubinnn"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rubinnn"},"content":"                DialogBox.getBeeBooDialogue(response, Beeboo.getBeebooImage())","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rubinnn"},"content":"        );","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rubinnn"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rubinnn"},"content":"        if (input.toLowerCase().trim().equals(\"bye\")) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rubinnn"},"content":"            System.exit(0);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"rubinnn":69}},{"path":"src/main/java/beeboo/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.InvalidCommandException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.InvalidDateException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.NoDescriptionException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"import beeboo.task.Deadlines;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"import beeboo.task.Events;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"import beeboo.task.Tasks;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"import beeboo.task.ToDos;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":" * Represents a command to add a task to the chatbot\u0027s task list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"    private String type;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"    private String command;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"     * Constructs an AddCommand.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"     * @param type    The type of task to add (e.g., \"e\" for event, \"t\" for todo, \"d\" for deadline).","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"     * @param command The command string that contains the task description and details.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"    public AddCommand(String type, String command) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"        super(command);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"     * Executes the command to add a task to the task list, update the UI, and save the updated list to storage.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"     * @param tasks   The task list of the chatbot.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"     * @param ui      The UI of the chatbot.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"     * @param storage The storage functionality of the chatbot.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"     * @throws InvalidDateException   If the date format in the command is incorrect.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"     * @throws NoDescriptionException If the task description is missing.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rubinnn"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws InvalidDateException, NoDescriptionException ,","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rubinnn"},"content":"            InvalidCommandException {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rubinnn"},"content":"        Tasks task;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rubinnn"},"content":"        switch(type) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rubinnn"},"content":"        case \"e\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rubinnn"},"content":"            task \u003d Events.createEvent(command);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rubinnn"},"content":"            break;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rubinnn"},"content":"        case \"t\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rubinnn"},"content":"            task \u003d ToDos.createToDo(command);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rubinnn"},"content":"            break;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rubinnn"},"content":"        case \"d\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rubinnn"},"content":"            task \u003d Deadlines.createDeadline(command);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rubinnn"},"content":"            break;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rubinnn"},"content":"        default:","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rubinnn"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rubinnn"},"content":"        if (tasks.addList(task)) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rubinnn"},"content":"            storage.saveItem(tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rubinnn"},"content":"            return ui.addList(task, tasks.getSize());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rubinnn"},"content":"        } else {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rubinnn"},"content":"            return ui.duplicateTaskError();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rubinnn"},"content":"     * Returns whether the command is an exit command.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rubinnn"},"content":"     * @return false, as this command is not an exit command.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rubinnn"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rubinnn"},"content":"        return false;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"rubinnn":76}},{"path":"src/main/java/beeboo/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.BeeBooExceptions;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.InvalidCommandException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":" * Represents an abstract command that can be executed by the chatbot.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":" * Each specific command should extend this class and provide its own implementation of the execute method.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"public abstract class Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"    protected String command;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"     * Constructs a Command with a specific command string.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"     * @param command The command string to be executed.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"    public Command(String command) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"     * Constructs a Command with no specific command string.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"    public Command() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"        command \u003d null;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"     * Executes the command.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"     * @param tasks   The task list that the command will operate on.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"     * @param ui      The UI component to display messages.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"     * @param storage The storage component to save or load data.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"     * @throws BeeBooExceptions If an error occurs during command execution.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws BeeBooExceptions,","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"            InvalidCommandException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rubinnn"},"content":"     * Returns whether the command is an exit command.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rubinnn"},"content":"     * @return true if the command should terminate the chatbot, false otherwise.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rubinnn"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"rubinnn":50}},{"path":"src/main/java/beeboo/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.InvalidIndexException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"import beeboo.task.Tasks;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":" * Represents a command to delete a task from the chatbot\u0027s task list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"    public DeleteCommand(String command) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"        super(command);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"     * @param tasks tasklist of chatbot","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"     * @param ui ui of the chatbot","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"     * @param storage storage function of the chatbot","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"     * @throws InvalidIndexException if index is \u003c 0 or is more than the size of tasklist","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"        int index \u003d Integer.parseInt(super.command);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"        if (index \u003c 0 || index \u003e tasks.getSize()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"            throw new InvalidIndexException(\"Invalid index\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"        Tasks removed \u003d tasks.deleteItem(index - 1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"        storage.saveItem(tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"        return ui.deleteItemMessage(removed, tasks.getSize());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"     * @return true if is exit command false if not exit command","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"        return false;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"rubinnn":42}},{"path":"src/main/java/beeboo/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.InvalidDateException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.NoDescriptionException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":" * Represents a command that handles the exit operation in BeeBoo.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":" * This command will trigger the necessary procedures to terminate","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":" * the chatbot, including saving the current task list and displaying","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":" * a farewell message to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"     * Executes the exit command. This method will close the user interface","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"     * and display a farewell message. Any necessary cleanup procedures,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"     * such as saving data, should also be handled here.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"     * @param tasks   The TaskList containing the current tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"     * @param ui      The Ui component that handles user interaction.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"     * @param storage The Storage component for saving/loading data.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"     * @throws InvalidDateException    If an invalid date is encountered during execution.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"     * @throws NoDescriptionException  If a task is missing a description during execution.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws InvalidDateException, NoDescriptionException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"        ui.close();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"        return ui.byeMessageMessage();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"     * Determines if this command is an exit command.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"     * @return {@code true} if this is an exit command, {@code false} otherwise.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rubinnn"},"content":"        return true;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"rubinnn":44}},{"path":"src/main/java/beeboo/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.command;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Storage;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.TaskList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Ui;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"import beeboo.task.Tasks;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":" * Represents a command to find a task to the chatbot\u0027s task list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"     * Constructs an AddCommand.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"     * @param command The command string that contains the task description and details.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"    public FindCommand(String command) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"        super(command);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"     * @param tasks tasklist of chatbot","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"     * @param ui ui of the chatbot","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"     * @param storage storage function of the chatbot","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"        String list \u003d \"Here are the matching results: \\n\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"            Tasks task \u003d tasks.get(i);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"            if (task.toString().contains(super.command)) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"                list \u003d list + task + \"\\n\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"        return ui.produceList(list);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"        return false;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"rubinnn":43}},{"path":"src/main/java/beeboo/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":" * Represents a command to list the chatbot\u0027s task list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"     * @param tasks tasklist of chatbot","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"     * @param ui ui of the chatbot","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"     * @param storage storage function of the chatbot","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"        return ui.produceList(tasks.produceList());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"     * @return true if is exit command false if not exit command","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"        return false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"rubinnn":29}},{"path":"src/main/java/beeboo/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.InvalidCommandException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.InvalidIndexException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"import beeboo.task.Tasks;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":" * Represents a command to mark a task as done or not done in the chatbot\u0027s task list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"    private String type;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"     * Constructs an AddCommand.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"     * @param type    The type of task to add (e.g., \"m\" for mark done, \"u\" for mark undone).","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"     * @param command The command string that contains the task description and details.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"    public MarkCommand(String type, String command) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"        super(command);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"     * @param tasks tasklist of chatbot","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"     * @param ui ui of the chatbot","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"     * @param storage storage function of the chatbot","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"     * @throws InvalidIndexException if index is \u003c 0 or is more than the size of tasklist","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException,","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"            InvalidCommandException {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"        int index \u003d Integer.parseInt(super.command);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"        if (index \u003c 0 || index \u003e tasks.getSize()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"            throw new InvalidIndexException(\"Invalid index\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"        switch(type) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"        case \"m\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"            Tasks done \u003d tasks.markDone(index - 1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rubinnn"},"content":"            storage.saveItem(tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rubinnn"},"content":"            return ui.markDoneMessage(done);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rubinnn"},"content":"        case \"u\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rubinnn"},"content":"            Tasks undone \u003d tasks.unmarkDone(index - 1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rubinnn"},"content":"            storage.saveItem(tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rubinnn"},"content":"            return ui.unmarkDoneMessage(undone);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rubinnn"},"content":"        default:","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rubinnn"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rubinnn"},"content":"     * @return true if is exit command false if not exit command","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rubinnn"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rubinnn"},"content":"        return false;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"rubinnn":62}},{"path":"src/main/java/beeboo/command/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.command;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Storage;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.TaskList;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.Ui;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.InvalidIndexException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.NoDescriptionException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"import beeboo.task.Tasks;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":" * Represents a command to mark a task as done or not done in the chatbot\u0027s task list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"     * Constructs an AddCommand.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"     * @param command The command string that contains the task description and details.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"    public UpdateCommand(String command) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"        super(command);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"     * @param tasks tasklist of chatbot","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"     * @param ui ui of the chatbot","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"     * @param storage storage function of the chatbot","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"     * @throws InvalidIndexException if index is \u003c 0 or is more than the size of tasklist","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException ,","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"            NoDescriptionException {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"        String command \u003d super.command;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"        int index \u003d command.indexOf(\u0027 \u0027);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"            throw new NoDescriptionException(\"No description found\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"        int taskIndex \u003d Integer.parseInt(command.substring(0, index));","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e tasks.getSize()) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"            throw new InvalidIndexException(\"Invalid index\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"        Tasks taskToChange \u003d tasks.get(taskIndex - 1);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rubinnn"},"content":"        String rest \u003d command.substring(index + 1).trim();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rubinnn"},"content":"        taskToChange.updateTime(rest);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rubinnn"},"content":"        storage.saveItem(tasks);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rubinnn"},"content":"        return ui.updateMessage(taskIndex, taskToChange);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rubinnn"},"content":"     * @return true if is exit command false if not exit command","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rubinnn"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rubinnn"},"content":"        return false;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"rubinnn":56}},{"path":"src/main/java/beeboo/components/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.components;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import beeboo.command.AddCommand;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import beeboo.command.Command;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import beeboo.command.DeleteCommand;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"import beeboo.command.ExitCommand;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"import beeboo.command.FindCommand;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"import beeboo.command.ListCommand;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"import beeboo.command.MarkCommand;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"import beeboo.command.UpdateCommand;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.InvalidCommandException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":" * The {@code Parser} class is responsible for parsing user commands and creating corresponding {@link Command} objects.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":" * It supports various command types including listing, exiting, adding tasks,","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":" * marking tasks, deleting tasks, finding tasks, and updating tasks.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"public class Parser {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"     * Parses the given command string and returns the appropriate {@link Command} object based on the command type.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"     * The method trims the command, identifies the command type, and creates the relevant {@link Command} object.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"     * @param command the command string entered by the user","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"     * @return a {@link Command} object representing the parsed command","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"     * @throws InvalidCommandException if the command is invalid or cannot be parsed","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"    public static Command parseCommand(String command) throws InvalidCommandException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"        command \u003d command.trim();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"        int index \u003d command.indexOf(\u0027 \u0027);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"            switch (command) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"            case \"list\":","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"                return new ListCommand();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"            case \"bye\":","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"                return new ExitCommand();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"            default:","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"            }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"        String commandWord \u003d command.substring(0, index).trim();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rubinnn"},"content":"        String rest \u003d command.substring(index).trim();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rubinnn"},"content":"        return taskCommands(commandWord, rest);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rubinnn"},"content":"     * Parses task-related commands and returns the appropriate {@link Command} object.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rubinnn"},"content":"     * The method checks the command word and maps it to a corresponding {@link Command} subclass.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rubinnn"},"content":"     * @param commandWord the command type (e.g., \"deadline\", \"todo\", \"event\")","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rubinnn"},"content":"     * @param rest        the remainder of the command string, containing the task details","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rubinnn"},"content":"     * @return a {@link Command} object representing the parsed task-related command","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rubinnn"},"content":"     * @throws InvalidCommandException if the command word is not recognized","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rubinnn"},"content":"    public static Command taskCommands(String commandWord, String rest)","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rubinnn"},"content":"            throws InvalidCommandException {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rubinnn"},"content":"        switch (commandWord) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rubinnn"},"content":"        case \"deadline\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rubinnn"},"content":"            return new AddCommand(\"d\", rest);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rubinnn"},"content":"        case \"todo\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rubinnn"},"content":"            return new AddCommand(\"t\", rest);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rubinnn"},"content":"        case \"event\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rubinnn"},"content":"            return new AddCommand(\"e\", rest);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rubinnn"},"content":"        case \"mark\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rubinnn"},"content":"            return new MarkCommand(\"m\", rest);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rubinnn"},"content":"        case \"unmark\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rubinnn"},"content":"            return new MarkCommand(\"u\", rest);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rubinnn"},"content":"        case \"delete\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rubinnn"},"content":"            return new DeleteCommand(rest);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rubinnn"},"content":"        case \"find\":","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rubinnn"},"content":"            return new FindCommand(rest);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rubinnn"},"content":"        case \"update\":","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rubinnn"},"content":"            return new UpdateCommand(rest);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rubinnn"},"content":"        default:","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rubinnn"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"rubinnn":78}},{"path":"src/main/java/beeboo/components/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.components;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import java.io.File;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.NoFileException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"import beeboo.task.Tasks;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":" * The Storage class handles the reading and writing of task data to and from a file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":" * It provides methods for loading tasks from a file and saving tasks to a file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"public class Storage {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"     * The path to the file used for storing task data.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"    private final String filePath;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"     * Constructs a Storage instance with the specified file path.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"     * @param filePath the path to the file where task data is stored","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"     * Loads task data from the file specified by the file path.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"     * It reads the file line by line, parses the task data, and creates Task objects.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"     * @return an ArrayList of Tasks objects loaded from the file","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"     * @throws NoFileException if the file does not exist","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rubinnn"},"content":"    public ArrayList\u003cTasks\u003e load() throws NoFileException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rubinnn"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rubinnn"},"content":"        ArrayList\u003cTasks\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rubinnn"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rubinnn"},"content":"            throw new NoFileException(\"\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rubinnn"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rubinnn"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rubinnn"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rubinnn"},"content":"                String task \u003d scanner.nextLine();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rubinnn"},"content":"                String[] splitted \u003d task.split(\"\\\\|\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rubinnn"},"content":"                Tasks newTask \u003d TaskCreator.createTask(splitted);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rubinnn"},"content":"                if (newTask !\u003d null) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rubinnn"},"content":"                    list.add(newTask);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rubinnn"},"content":"                }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rubinnn"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rubinnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rubinnn"},"content":"            System.out.println(\"Error has occurred while reading the file\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rubinnn"},"content":"        return list;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rubinnn"},"content":"     * Saves the specified list of tasks to the file specified by the file path.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rubinnn"},"content":"     * Each task is saved in a format suitable for storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rubinnn"},"content":"     * @param list the list of Tasks objects to be saved","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rubinnn"},"content":"    public void saveItem(TaskList list) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rubinnn"},"content":"        try (FileWriter writer \u003d new FileWriter(\"./data/beeboo.txt\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rubinnn"},"content":"            for (int i \u003d 0; i \u003c list.getSize(); i++) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rubinnn"},"content":"                Tasks task \u003d list.get(i);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rubinnn"},"content":"                writer.write(task.saveFormat() + System.lineSeparator());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rubinnn"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rubinnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rubinnn"},"content":"            System.out.println(\"Unable to create file\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rubinnn"},"content":"     * Creates the directory for storing task data if it does not already exist.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rubinnn"},"content":"     * This method ensures that the directory structure is in place for saving task data.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rubinnn"},"content":"    protected static void createFile() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rubinnn"},"content":"        Path path \u003d Paths.get(\"./data\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rubinnn"},"content":"        if (Files.notExists(path)) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rubinnn"},"content":"            try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rubinnn"},"content":"                Files.createDirectories(path);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rubinnn"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rubinnn"},"content":"                System.out.println(\"Unable to create directory\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rubinnn"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"rubinnn":95}},{"path":"src/main/java/beeboo/components/TaskCreator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.components;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"import beeboo.task.Deadlines;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"import beeboo.task.Events;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"import beeboo.task.Tasks;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"import beeboo.task.ToDos;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":" * The {@code TaskCreator} class provides utility methods for creating different types of tasks.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":" * It supports creating ToDos, Deadlines, and Events based on input parameters.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":" * The created tasks can also be marked as done if specified.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"public class TaskCreator {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"     * Creates a {@link Tasks} object based on the provided input parameters.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"     * @param task An array of strings representing the task parameters.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"     *             The array should have the format:","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"     *             \u003cul\u003e","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"     *                 \u003cli\u003eFor ToDos: [ \"T\", \"isDone\", \"description\" ]\u003c/li\u003e","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"     *                 \u003cli\u003eFor Deadlines: [ \"D\", \"isDone\", \"description\", \"yyyy-MM-ddTHH:mm\" ]\u003c/li\u003e","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"     *                 \u003cli\u003eFor Events: [ \"E\", \"isDone\", \"description\", \"start yyyy-MM-ddTHH:mm\",","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"     *                 \"end yyyy-MM-ddTHH:mm\" ]\u003c/li\u003e","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"     *             \u003c/ul\u003e","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"     *             \u003cp\u003eThe {@code isDone} field is \"1\" for done, and \"0\" for not done.\u003c/p\u003e","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"     * @return A new {@link Tasks} object, or {@code null} if the input is invalid.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"    public static Tasks createTask(String[] task) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"        Tasks newTask \u003d null;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"        if (task.length \u003c 3 || task.length \u003e 6) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"            return null;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"        switch (task[0].trim()) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"        case \"T\":","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"            newTask \u003d createToDos(task);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rubinnn"},"content":"            break;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rubinnn"},"content":"        case \"D\":","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rubinnn"},"content":"            newTask \u003d createDeadline(task);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rubinnn"},"content":"            break;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rubinnn"},"content":"        case \"E\":","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rubinnn"},"content":"            newTask \u003d createEvent(task);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rubinnn"},"content":"            break;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rubinnn"},"content":"        default:","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rubinnn"},"content":"            break;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rubinnn"},"content":"        return newTask;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rubinnn"},"content":"     * Creates a {@link ToDos} task.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rubinnn"},"content":"     * @param task An array of strings representing the ToDos parameters.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rubinnn"},"content":"     *             Expected format: [ \"T\", \"isDone\", \"description\" ]","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rubinnn"},"content":"     * @return A new {@link ToDos} task.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rubinnn"},"content":"    public static ToDos createToDos(String[] task) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rubinnn"},"content":"        boolean isDone \u003d task[1].trim().equals(\"1\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rubinnn"},"content":"        ToDos newToDos \u003d new ToDos(task[2].trim());","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rubinnn"},"content":"        if (isDone) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rubinnn"},"content":"            newToDos.markDone();","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rubinnn"},"content":"        return newToDos;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rubinnn"},"content":"     * Creates a {@link Deadlines} task.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rubinnn"},"content":"     * @param task An array of strings representing the Deadlines parameters.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rubinnn"},"content":"     *             Expected format: [ \"D\", \"isDone\", \"description\", \"yyyy-MM-ddTHH:mm\" ]","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rubinnn"},"content":"     * @return A new {@link Deadlines} task.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rubinnn"},"content":"    public static Deadlines createDeadline(String[] task) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rubinnn"},"content":"        boolean isDone \u003d task[1].trim().equals(\"1\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rubinnn"},"content":"        String[] dateTime \u003d task[3].split(\"T\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rubinnn"},"content":"        LocalDateTime dates \u003d LocalDateTime.of(LocalDate.parse(dateTime[0].trim()),","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rubinnn"},"content":"                LocalTime.parse(dateTime[1].trim()));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rubinnn"},"content":"        Deadlines newDeadline \u003d new Deadlines(task[2].trim(), dates);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rubinnn"},"content":"        if (isDone) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rubinnn"},"content":"            newDeadline.markDone();","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rubinnn"},"content":"        return newDeadline;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rubinnn"},"content":"     * Creates an {@link Events} task.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rubinnn"},"content":"     * @param task An array of strings representing the Events parameters.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rubinnn"},"content":"     *             Expected format: [ \"E\", \"isDone\", \"description\", \"start yyyy-MM-ddTHH:mm\", \"end yyyy-MM-ddTHH:mm\" ]","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rubinnn"},"content":"     * @return A new {@link Events} task.","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rubinnn"},"content":"    public static Events createEvent(String[] task) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rubinnn"},"content":"        boolean isDone \u003d task[1].trim().equals(\"1\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rubinnn"},"content":"        String[] startDateTime \u003d task[3].split(\"T\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rubinnn"},"content":"        String[] endDateTime \u003d task[4].split(\"T\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rubinnn"},"content":"        LocalDateTime startDate \u003d LocalDateTime.of(LocalDate.parse(startDateTime[0].trim()),","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rubinnn"},"content":"                LocalTime.parse(startDateTime[1].trim()));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rubinnn"},"content":"        LocalDateTime endDate \u003d LocalDateTime.of(LocalDate.parse(endDateTime[0].trim()),","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rubinnn"},"content":"                LocalTime.parse(endDateTime[1].trim()));","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rubinnn"},"content":"        Events newEvent \u003d new Events(task[2].trim(), startDate, endDate);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rubinnn"},"content":"        if (isDone) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rubinnn"},"content":"            newEvent.markDone();","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rubinnn"},"content":"        return newEvent;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-10-15","isFullCredit":false}],"authorContributionMap":{"rubinnn":111}},{"path":"src/main/java/beeboo/components/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.components;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import beeboo.task.Tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":" * The TaskList class manages a list of tasks. It provides methods to add, remove, and modify tasks in the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"public class TaskList {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"     * The list of tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"    private ArrayList\u003cTasks\u003e list;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"     * Constructs a TaskList with the specified list of tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"     * @param list the initial list of tasks","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"    public TaskList(ArrayList\u003cTasks\u003e list) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"        this.list \u003d list;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"     * Constructs an empty TaskList and creates the necessary directory for storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"    public TaskList() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"        Storage.createFile();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"     * @param task the task to be added","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"     * @return true if the task was successfully added, false if the task already exists in the list","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"    public boolean addList(Tasks task) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rubinnn"},"content":"        String description \u003d task.getDescription();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rubinnn"},"content":"        for (Tasks t : list) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rubinnn"},"content":"            if (t.getDescription().equals(description)) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rubinnn"},"content":"                return false;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rubinnn"},"content":"            }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rubinnn"},"content":"        list.add(task);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rubinnn"},"content":"        return true;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rubinnn"},"content":"     * Deletes a task from the list at the specified index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rubinnn"},"content":"     * @param index the index of the task to be deleted","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rubinnn"},"content":"     * @return the task that was removed from the list","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rubinnn"},"content":"    public Tasks deleteItem(int index) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rubinnn"},"content":"        Tasks item \u003d list.get(index);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rubinnn"},"content":"        list.remove(item);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rubinnn"},"content":"        return item;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rubinnn"},"content":"     * Marks a task as not done at the specified index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rubinnn"},"content":"     * @param index the index of the task to be unmarked","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rubinnn"},"content":"     * @return the task that was unmarked","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rubinnn"},"content":"    public Tasks unmarkDone(int index) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rubinnn"},"content":"        Tasks task \u003d list.get(index);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rubinnn"},"content":"        task.unmarkDone();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rubinnn"},"content":"        return task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rubinnn"},"content":"     * Marks a task as done at the specified index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rubinnn"},"content":"     * @param index the index of the task to be marked","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rubinnn"},"content":"     * @return the task that was marked","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rubinnn"},"content":"    public Tasks markDone(int index) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rubinnn"},"content":"        Tasks task \u003d list.get(index);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rubinnn"},"content":"        task.markDone();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rubinnn"},"content":"        return task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rubinnn"},"content":"     * Produces a string representation of the task list with each task numbered.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rubinnn"},"content":"     * @return a string representing the list of tasks","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rubinnn"},"content":"    public String produceList() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rubinnn"},"content":"        String result \u003d \"\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rubinnn"},"content":"        for (Tasks task : list) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rubinnn"},"content":"            result \u003d result + (list.indexOf(task) + 1) + \". \" + \" \" + task + \"\\n\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rubinnn"},"content":"        return result;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rubinnn"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rubinnn"},"content":"     * @return the size of the task list","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rubinnn"},"content":"    public int getSize() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rubinnn"},"content":"        assert list.size() \u003e\u003d 0 : \"Size of list should be non-negative\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rubinnn"},"content":"        return list.size();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rubinnn"},"content":"     * Returns task of specified index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rubinnn"},"content":"     * @return Tasks","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rubinnn"},"content":"    public Tasks get(int index) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rubinnn"},"content":"        return list.get(index);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"rubinnn":119}},{"path":"src/main/java/beeboo/components/TimeConverter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.components;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":" * The TimeConverter class provides functionality to convert a string","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":" * representation of date and time into a LocalDateTime object.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"public class TimeConverter {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"     * Converts a string representation of a date and time into a LocalDateTime object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"     * The string should be in the format \"yyyy-MM-dd HHmm\" or \"yyyy-MM-dd\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"     * If only the date is provided, the time is assumed to be 00:00.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"     * @param date the string representation of the date and time","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"     * @return a LocalDateTime object representing the provided date and time","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"     * @throws DateTimeParseException if the date string is not in a valid format","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"    public static LocalDateTime convertTime(String date) throws DateTimeParseException {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"        String[] arr \u003d date.split(\" \");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"        LocalDate res \u003d LocalDate.parse(arr[0]);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"        LocalTime time;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"        if (arr.length \u003d\u003d 2) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"            time \u003d LocalTime.of(Integer.parseInt(arr[1].substring(0, 2)),","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"                    Integer.parseInt(arr[1].substring(2)));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"        } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"            time \u003d LocalTime.MIDNIGHT;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"        return LocalDateTime.of(res, time);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"rubinnn":35}},{"path":"src/main/java/beeboo/components/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.components;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import beeboo.task.Tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":" * The Ui class handles interactions with the user by displaying messages and processing user input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"public class Ui {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"    private Scanner input;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"     * Constructs a Ui object and initializes the Scanner for user input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"    public Ui() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"        input \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"     * Returns a message indicating that a task has been marked as done.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"     * @param task the task that has been marked as done","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"     * @return a message indicating the task is marked as done","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"    public String markDoneMessage(Tasks task) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"     * Returns a message indicating that a task has been marked as not done.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"     * @param task the task that has been marked as not done","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"     * @return a message indicating the task is marked as not done","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"    public String unmarkDoneMessage(Tasks task) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + task;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"     * Returns a message indicating that a task has been deleted and shows the number of remaining tasks.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rubinnn"},"content":"     * @param task the task that has been removed","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rubinnn"},"content":"     * @param size the number of tasks left in the list","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rubinnn"},"content":"     * @return a message indicating the task has been deleted","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rubinnn"},"content":"    public String deleteItemMessage(Tasks task, int size) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rubinnn"},"content":"        return \"Ok I have removed the following item\\n\" + task","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rubinnn"},"content":"                + \"\\n\" + \"You have \" + size + \" tasks left\";","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rubinnn"},"content":"     * Returns a message indicating that there is no data available and a new TaskList is being created.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rubinnn"},"content":"     * @return a message indicating there is no data available","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rubinnn"},"content":"    public String loadingError() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rubinnn"},"content":"        return \"You don\u0027t have any data right now. Let me create a new TaskList\";","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rubinnn"},"content":"     * Returns the list of tasks as a string.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rubinnn"},"content":"     * @param list the string representation of the task list","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rubinnn"},"content":"     * @return the list of tasks","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rubinnn"},"content":"    public String produceList(String list) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rubinnn"},"content":"        return list;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rubinnn"},"content":"     * Returns a message indicating that a task has been added to the list and shows the number of tasks.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rubinnn"},"content":"     * @param task the task that has been added","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rubinnn"},"content":"     * @param size the number of tasks in the list","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rubinnn"},"content":"     * @return a message indicating the task has been added","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rubinnn"},"content":"    public String addList(Tasks task, int size) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rubinnn"},"content":"        assert size \u003e\u003d 0 : \"Size of list should be non-negative\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rubinnn"},"content":"        return \"added: \" + task + \"\\n\" + \"You have \" + size + \" tasks in the list\";","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rubinnn"},"content":"     * Returns a welcome message when the application starts.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rubinnn"},"content":"     * @return a welcome message","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rubinnn"},"content":"    public String showWelcomeMessage() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rubinnn"},"content":"        return \"Hello! I\u0027m BeeBoo\\nWhat can I do for you?\";","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rubinnn"},"content":"     * Returns a farewell message when the user exits the application.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rubinnn"},"content":"     * @return a farewell message","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rubinnn"},"content":"    public String byeMessageMessage() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rubinnn"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rubinnn"},"content":"    public String duplicateTaskError() {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rubinnn"},"content":"        return \"This task already exists in the list!\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rubinnn"},"content":"    public String updateMessage(int index, Tasks task) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rubinnn"},"content":"        return \"Task \" + index + \" has been updated to: \" + task;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rubinnn"},"content":"     * Closes the Scanner object to release resources.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rubinnn"},"content":"    public void close() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rubinnn"},"content":"        input.close();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"rubinnn":115}},{"path":"src/main/java/beeboo/exception/BeeBooExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":" * Represents a custom exception for the BeeBoo chatbot application.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":" * This class serves as the base exception class for all exceptions specific to BeeBoo.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"public class BeeBooExceptions extends Exception {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"     * Constructs a BeeBooExceptions with a specific error message.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"     * @param error The error message associated with this exception.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"    public BeeBooExceptions(String error) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"        super(error);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"rubinnn":17}},{"path":"src/main/java/beeboo/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":" * Represents an exception that is thrown when an invalid command is provided.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":" * This exception is used to indicate that the command inputted does not exist.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"        super(\"Invalid command! Please enter a valid command.\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"rubinnn":11}},{"path":"src/main/java/beeboo/exception/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":" * Represents an exception that is thrown when an invalid date format is provided.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":" * This exception is used to indicate that the date format for creating tasks is incorrect.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"public class InvalidDateException extends BeeBooExceptions {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"     * Constructs an InvalidDateException with a specific error message.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"     * @param error The error message associated with this exception.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"    public InvalidDateException(String error) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"        super(error);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"     * Returns a string representation of this exception, providing instructions on the correct date format.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"     * @return A message indicating the correct format for event and deadline tasks.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"        return \"Your date commands are wrong. Here are the instructions on how to create tasks:\\n\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"                + \"event [eventName] /from [yyyy-mm-dd] [hh-mm]/to [time]\\n\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"                + \"deadline [deadlineName] /by [yyyy-mm-dd] [hh-mm]\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"rubinnn":29}},{"path":"src/main/java/beeboo/exception/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":" * Represents an exception that is thrown when an invalid index is provided.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":" * This exception is used to indicate that the specified index does not exist in the task list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"public class InvalidIndexException extends BeeBooExceptions {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"     * Constructs an InvalidIndexException with a specific error message.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"     * @param error The error message associated with this exception.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"    public InvalidIndexException(String error) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"        super(error);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"     * Returns a string representation of this exception, indicating that the index is invalid.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"     * @return A message stating that the index does not exist and prompting the user to check the task list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"        return \"Index doesn\u0027t exist. Please input a valid index. You can use the \\\"list\\\" command to check your list.\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"rubinnn":27}},{"path":"src/main/java/beeboo/exception/NoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":" * Represents an exception that is thrown when no Description is found in command.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":" * This exception is used to indicate that the command has no Description and need to be re-entered","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"public class NoDescriptionException extends BeeBooExceptions {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"     * Constructs a NoDescriptionException with a specific error message.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"     * @param message The error message associated with this exception.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"    public NoDescriptionException(String message) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"        super(message);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"     * Returns a string representation of this exception, indicating that no description was found in the command","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"     * @return A message stating that there is no description in the command","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"        return \"You didn\u0027t put in a description user. Here is a list of commands and descriptions\\n\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"                + \"event [eventName] /from [time] /to [time]\\n\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"                + \"deadline [deadlineName]/ by [time]\\n \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"                + \"todo [todoName]\\n\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"                + \"Please try again user\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"rubinnn":30}},{"path":"src/main/java/beeboo/exception/NoFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":" * Represents an exception that is thrown when no data file is found.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":" * This exception is used to indicate that the task list data file is missing and needs to be created.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"public class NoFileException extends BeeBooExceptions {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"     * Constructs a NoFileException with a specific error message.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"     * @param error The error message associated with this exception.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"    public NoFileException(String error) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"        super(error);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"     * Returns a string representation of this exception, indicating that no data file is present.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"     * @return A message stating that there is no data and a new TaskList will be created.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"    public String toString() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"        return \"You don\u0027t have any data right now. Let me create a new TaskList\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"rubinnn":27}},{"path":"src/main/java/beeboo/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.TimeConverter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.InvalidDateException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.NoDescriptionException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":" * The Deadlines class represents a task with a specific deadline. It extends the","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":" * Tasks class and includes functionality for managing deadlines.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"public class Deadlines extends Tasks {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"    static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy \u0027at\u0027 hh:mm a\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"    private LocalDateTime date;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"     * Constructs a Deadlines instance with the specified description and deadline date.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"     * @param description the description of the deadline","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"     * @param date        the LocalDateTime representing the deadline","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"    public Deadlines(String description, LocalDateTime date) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"        super(description);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"     * Returns the type icon for deadlines.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"     * @return the type icon as a code String","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"    public String typeIcon() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"        return \"[D]\";","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rubinnn"},"content":"     * Creates a Deadlines instance from the given text input. The input should include","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rubinnn"},"content":"     * a description and a deadline date in the format \"by date\". The method parses the input,","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rubinnn"},"content":"     * validates the description and date, and returns a new Deadlines object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rubinnn"},"content":"     * @param text the input text containing description and deadline date","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rubinnn"},"content":"     * @return a code Deadlines instance","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rubinnn"},"content":"     * @throws NoDescriptionException if the description is missing or empty","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rubinnn"},"content":"     * @throws InvalidDateException    if the date is invalid or improperly formatted","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rubinnn"},"content":"    public static Deadlines createDeadline(String text) throws NoDescriptionException, InvalidDateException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rubinnn"},"content":"        int descriptionEnd \u003d text.indexOf(\u0027/\u0027);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rubinnn"},"content":"        if (descriptionEnd \u003d\u003d -1) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rubinnn"},"content":"            throw new InvalidDateException(text);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rubinnn"},"content":"        String description \u003d text.substring(0, descriptionEnd).trim();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rubinnn"},"content":"        if (descriptionEnd \u003d\u003d -1 || description.isEmpty()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rubinnn"},"content":"            throw new NoDescriptionException(\"No description\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rubinnn"},"content":"        String date \u003d text.substring(descriptionEnd + 1).trim();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rubinnn"},"content":"        if (!date.startsWith(\"by\")) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rubinnn"},"content":"            throw new InvalidDateException(text);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rubinnn"},"content":"        String deadlineDate \u003d date.substring(2).trim();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rubinnn"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rubinnn"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rubinnn"},"content":"            dateTime \u003d TimeConverter.convertTime(deadlineDate);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rubinnn"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rubinnn"},"content":"            throw new InvalidDateException(text);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rubinnn"},"content":"        return new Deadlines(description, dateTime);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rubinnn"},"content":"     * Returns a String representation of the {@code Deadlines} instance, including the","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rubinnn"},"content":"     * description and formatted deadline date.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rubinnn"},"content":"     * @return a String representation of the deadline","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rubinnn"},"content":"    public String toString() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rubinnn"},"content":"        return typeIcon() + super.toString() + \" (by:\" + FORMATTER.format(date) + \")\";","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rubinnn"},"content":"     * Returns a String representation of the Deadlines instance in a format","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rubinnn"},"content":"     * suitable for saving to storage. The format includes the task type, completion status, description,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rubinnn"},"content":"     * and deadline date.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rubinnn"},"content":"     * @return a String representing the saved format of the deadline","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rubinnn"},"content":"    public String saveFormat() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rubinnn"},"content":"        return \"D | \" + (super.isDone ? \"1 | \" : \"0 | \") + description + \" | \" + date;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rubinnn"},"content":"    public void updateTime(String time) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rubinnn"},"content":"        this.date \u003d TimeConverter.convertTime(time);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"rubinnn":104}},{"path":"src/main/java/beeboo/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"import beeboo.components.TimeConverter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.InvalidDateException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.NoDescriptionException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":" * The Events class represents an event task with a start date and an end date.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":" * It extends the Tasks class and provides functionality for managing events,","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":" * including creation, formatting, and updating times.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"public class Events extends Tasks {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"     * A formatter used for displaying date and time in the pattern \"MMM dd yyyy \u0027at\u0027 hh:mm a\".","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"    static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy \u0027at\u0027 hh:mm a\");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"     * The start date and time of the event.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"     * The end date and time of the event.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"     * Constructs an Events instance with the specified description, start date, and end date.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"     * @param description the description of the event","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"     * @param startDate   the start date and time of the event","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"     * @param endDate     the end date and time of the event","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"    public Events(String description, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"        super(description);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rubinnn"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rubinnn"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rubinnn"},"content":"     * Returns the type icon for events.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rubinnn"},"content":"     * @return the type icon as a String, \"[E]\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rubinnn"},"content":"    public String typeIcon() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rubinnn"},"content":"        return \"[E]\";","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rubinnn"},"content":"     * Returns a String representation of the Events instance, including the description,","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rubinnn"},"content":"     * start date, and end date formatted using the predefined formatter.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rubinnn"},"content":"     * @return a String representation of the event","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rubinnn"},"content":"    public String toString() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rubinnn"},"content":"        return typeIcon() + super.toString()","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rubinnn"},"content":"                + \" (from: \" + FORMATTER.format(startDate) + \" to: \" + FORMATTER.format(endDate) + \")\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rubinnn"},"content":"     * Creates an Events instance based on a given string input.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rubinnn"},"content":"     * @param text the string containing the event description, start date, and end date","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rubinnn"},"content":"     * @return a new Events object","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rubinnn"},"content":"     * @throws InvalidDateException  if the date format is invalid","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rubinnn"},"content":"     * @throws NoDescriptionException if the description is missing","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rubinnn"},"content":"    public static Events createEvent(String text) throws InvalidDateException, NoDescriptionException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rubinnn"},"content":"        String[] parts \u003d splitEventText(text);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rubinnn"},"content":"        String description \u003d extractDescription(parts[0]);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rubinnn"},"content":"        LocalDateTime startDateTime \u003d parseDateTime(parts[1], \"from\");","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rubinnn"},"content":"        LocalDateTime endDateTime \u003d parseEndDateTime(parts[2], startDateTime);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rubinnn"},"content":"        return new Events(description, startDateTime, endDateTime);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rubinnn"},"content":"     * Splits the event string into description, start date, and end date parts.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rubinnn"},"content":"     * @param text the input string to be split","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rubinnn"},"content":"     * @return an array containing the description, start date, and end date","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rubinnn"},"content":"     * @throws InvalidDateException if the string does not follow the correct event format","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rubinnn"},"content":"    private static String[] splitEventText(String text) throws InvalidDateException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rubinnn"},"content":"        String[] parts \u003d text.split(\"/\");","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rubinnn"},"content":"        if (parts.length !\u003d 3) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rubinnn"},"content":"            throw new InvalidDateException(\"Invalid event format: \" + text);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rubinnn"},"content":"        return parts;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rubinnn"},"content":"     * Extracts the description part of the event.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rubinnn"},"content":"     * @param descriptionPart the part of the string containing the description","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rubinnn"},"content":"     * @return the description of the event","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rubinnn"},"content":"     * @throws NoDescriptionException if the description is missing","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rubinnn"},"content":"    private static String extractDescription(String descriptionPart) throws NoDescriptionException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rubinnn"},"content":"        String description \u003d descriptionPart.trim();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rubinnn"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rubinnn"},"content":"            throw new NoDescriptionException(\"No description provided\");","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rubinnn"},"content":"        return description;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rubinnn"},"content":"     * Parses the date and time string to extract the LocalDateTime object.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rubinnn"},"content":"     * @param datePart       the part of the string containing the date and time","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rubinnn"},"content":"     * @param expectedPrefix the expected prefix in the string (e.g., \"from\")","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"rubinnn"},"content":"     * @return the parsed LocalDateTime object","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"rubinnn"},"content":"     * @throws InvalidDateException if the date format is invalid or does not start with the expected prefix","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"rubinnn"},"content":"    private static LocalDateTime parseDateTime(String datePart, String expectedPrefix) throws InvalidDateException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"rubinnn"},"content":"        datePart \u003d datePart.trim();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"rubinnn"},"content":"        if (!datePart.startsWith(expectedPrefix)) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rubinnn"},"content":"            throw new InvalidDateException(\"Invalid date format: \" + datePart);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"rubinnn"},"content":"        String dateString \u003d datePart.substring(expectedPrefix.length()).trim();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"rubinnn"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"rubinnn"},"content":"            return TimeConverter.convertTime(dateString);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"rubinnn"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"rubinnn"},"content":"            throw new InvalidDateException(\"Invalid date: \" + dateString);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"rubinnn"},"content":"     * Parses the end date and time part of the event string.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"rubinnn"},"content":"     * @param endDatePart   the part of the string containing the end date and time","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"rubinnn"},"content":"     * @param startDateTime the start date and time of the event","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"rubinnn"},"content":"     * @return the parsed LocalDateTime object for the end date","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"rubinnn"},"content":"    private static LocalDateTime parseEndDateTime(String endDatePart, LocalDateTime startDateTime) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"rubinnn"},"content":"        String endDate \u003d endDatePart.substring(2).trim();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"rubinnn"},"content":"        String[] endDates \u003d endDate.split(\" \");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"rubinnn"},"content":"        LocalDateTime endDateTime \u003d (endDates.length \u003d\u003d 1)","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"rubinnn"},"content":"                ? TimeConverter.convertTime(startDateTime.toLocalDate().toString() + \" \" + endDate)","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"rubinnn"},"content":"                : TimeConverter.convertTime(endDate);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"rubinnn"},"content":"        return endDateTime;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"rubinnn"},"content":"     * Returns a String representation of the Events instance in a format suitable for saving to storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"rubinnn"},"content":"     * The format includes the task type, completion status, description, start date, and end date.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"rubinnn"},"content":"     * @return a String representing the saved format of the event","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"rubinnn"},"content":"    public String saveFormat() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"rubinnn"},"content":"        return \"E | \" + (super.isDone ? \"1 | \" : \"0 | \")","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"rubinnn"},"content":"                + description + \" | \" + startDate + \" | \" + endDate;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"rubinnn"},"content":"     * Updates the start and end times of the event based on the provided string.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"rubinnn"},"content":"     * The string can update both the \"from\" (start date) and \"to\" (end date) times,","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"rubinnn"},"content":"     * or either one individually.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"rubinnn"},"content":"     * @param time the string specifying the time update","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"rubinnn"},"content":"    public void updateTime(String time) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"rubinnn"},"content":"        if (time.contains(\"from\")) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"rubinnn"},"content":"            if (time.contains(\"to\")) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"rubinnn"},"content":"                String[] times \u003d time.split(\"/\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"rubinnn"},"content":"                this.startDate \u003d TimeConverter.convertTime(times[0].substring(5).trim());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"rubinnn"},"content":"                String endDate \u003d times[1].substring(3).trim();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"rubinnn"},"content":"                String[] endDates \u003d endDate.split(\" \");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"rubinnn"},"content":"                LocalDateTime endDateTime \u003d (endDates.length \u003d\u003d 1)","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"rubinnn"},"content":"                        ? TimeConverter.convertTime(startDate.toLocalDate().toString() + \" \" + endDate)","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"rubinnn"},"content":"                        : TimeConverter.convertTime(endDate);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"rubinnn"},"content":"                this.endDate \u003d endDateTime;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"rubinnn"},"content":"            } else {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"rubinnn"},"content":"                this.startDate \u003d TimeConverter.convertTime(time.substring(5).trim());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"rubinnn"},"content":"            }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"rubinnn"},"content":"        } else {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"rubinnn"},"content":"            this.endDate \u003d TimeConverter.convertTime(time.substring(3).trim());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"rubinnn":190}},{"path":"src/main/java/beeboo/task/Tasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":" * The Tasks class represents a generic task with a description and completion status.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":" * It serves as the base class for specific types of tasks such as deadlines, events, and to-dos.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"public abstract class Tasks {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"     * The description of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"    protected String description;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"     * The completion status of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"     * Constructs a Tasks instance with the specified description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"    public Tasks(String description) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"     * Returns a String representation of the task, including the completion icon and description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"     * @return a String representation of the task","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"    public String toString() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"        return completionIcon() + \" \" + description;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"     * Returns the completion icon based on the task\u0027s completion status.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rubinnn"},"content":"     * The icon is \"[X]\" if the task is done, and \"[ ]\" if it is not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rubinnn"},"content":"     * @return the completion icon as a String","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rubinnn"},"content":"    protected String completionIcon() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rubinnn"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rubinnn"},"content":"     * Marks the task as done by setting the completion status to true.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rubinnn"},"content":"    public void markDone() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rubinnn"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rubinnn"},"content":"     * Marks the task as not done by setting the completion status to false.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rubinnn"},"content":"    public void unmarkDone() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rubinnn"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rubinnn"},"content":"     * Returns the type icon for the task.Implemented by subclass to show their own","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rubinnn"},"content":"     * typeIcon","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rubinnn"},"content":"     * @return the type icon as a String","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rubinnn"},"content":"    public abstract String typeIcon();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rubinnn"},"content":"     * Returns a String representation of the task in a format suitable for saving to storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rubinnn"},"content":"     * Implemented by subclasses to have their own save format","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rubinnn"},"content":"     * @return a String representing the saved format of the task","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rubinnn"},"content":"    public abstract String saveFormat();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rubinnn"},"content":"    public String getDescription() {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rubinnn"},"content":"        return description;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rubinnn"},"content":"    public abstract void updateTime(String time);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"rubinnn":85}},{"path":"src/main/java/beeboo/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.NoDescriptionException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":" * The ToDos class represents a to-do task with a description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":" * It extends the Tasks class and provides functionality specific to to-do tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"public class ToDos extends Tasks {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"     * Constructs a ToDos instance with the specified description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"     * @param description the description of the to-do task","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"    public ToDos(String description) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"        super(description);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"     * Returns the type icon for to-do tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"     * @return the type icon as a String","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"    public String typeIcon() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"        return \"[T]\";","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"     * Returns a String representation of the ToDos instance, including the type icon and description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"     * @return a String representation of the to-do task","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"    public String toString() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"        return typeIcon() + super.toString();","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rubinnn"},"content":"     * Creates a ToDos instance from the given text input. The input should include the description of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rubinnn"},"content":"     * The method validates the description and returns a new ToDos object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rubinnn"},"content":"     * @param text the input text containing the description of the to-do task","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rubinnn"},"content":"     * @return a ToDos instance","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rubinnn"},"content":"     * @throws NoDescriptionException if the description is missing or empty","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rubinnn"},"content":"    public static ToDos createToDo(String text) throws NoDescriptionException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rubinnn"},"content":"        if (text.isEmpty()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rubinnn"},"content":"            throw new NoDescriptionException(\"No description\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rubinnn"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rubinnn"},"content":"        return new ToDos(text);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rubinnn"},"content":"     * Returns a String representation of the ToDos instance in a format suitable for saving to storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rubinnn"},"content":"     * The format includes the task type, completion status, and description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rubinnn"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rubinnn"},"content":"     * @return a String representing the saved format of the to-do task","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rubinnn"},"content":"    public String saveFormat() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rubinnn"},"content":"        return \"T | \" + (super.isDone ? \"1 | \" : \"0 | \") + description;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rubinnn"},"content":"    @Override","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rubinnn"},"content":"    public void updateTime(String time) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"rubinnn":71}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"295.0\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"            \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"80.0\" fitWidth\u003d\"81.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"rubinnn":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"            fx:controller\u003d\"beeboo.MainWindow\"\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"                   prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"                   AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"                onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"                AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"                    prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"                    AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"rubinnn":33}},{"path":"src/test/java/beeboo/BeeBooTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"public class BeeBooTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"rubinnn":4}},{"path":"src/test/java/beeboo/command/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"public class AddCommandTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"    public void executeTest() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"rubinnn":13}},{"path":"src/test/java/beeboo/task/DeadlinesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.NoDescriptionException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"public class DeadlinesTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"    public void createDeadlineTest2() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"        String test \u003d \" /by 2024-02-24\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"        String expectedErrorMessage \u003d \"You didn\u0027t put in a description user. \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"                + \"Here is a list of commands and descriptions\\n\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"                + \"event [eventName] /from [time] /to [time]\\n\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"                + \"deadline [deadlineName]/ by [time]\\n \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"                + \"todo [todoName]\\n\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"                + \"Please try again user\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"        assertEquals(expectedErrorMessage,","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"                assertThrows(NoDescriptionException.class, () -\u003e {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"                    Deadlines.createDeadline(test);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"                }).toString());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"rubinnn":26}},{"path":"src/test/java/beeboo/task/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.task;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.InvalidDateException;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"/**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":" * Tests for the Events class.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":" */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"class EventsTest {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"    /*","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"     * Tests if missing the \u0027from\u0027 keyword throws InvalidDateException.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"    @Test","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"    void testCreateEventMissingFromKeyword() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"        String input \u003d \"Team Meeting /May 15 2024 at 10:00 AM to May 15 2024 at 11:00 AM\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"        assertThrows(InvalidDateException.class, () -\u003e Events.createEvent(input));","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"     * Tests if the event\u0027s save format is correct.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"    @Test","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"    void testSaveFormat() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"        LocalDateTime startDate \u003d LocalDateTime.of(2024, 5, 15, 10, 0);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"        LocalDateTime endDate \u003d LocalDateTime.of(2024, 5, 15, 11, 0);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"        Events event \u003d new Events(\"Team Meeting\", startDate, endDate);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rubinnn"},"content":"        String expected \u003d \"E | 0 | Team Meeting | 2024-05-15T10:00 | 2024-05-15T11:00\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rubinnn"},"content":"        assertEquals(expected, event.saveFormat());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-09-17","isFullCredit":false}],"authorContributionMap":{"rubinnn":40}},{"path":"src/test/java/beeboo/task/ToDosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"package beeboo.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.BeeBooExceptions;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"import beeboo.exception.NoDescriptionException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rubinnn"},"content":"public class ToDosTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rubinnn"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rubinnn"},"content":"    public void createToDosTest1() throws BeeBooExceptions {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rubinnn"},"content":"        String test \u003d \"borrow book\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rubinnn"},"content":"        String expected \u003d \"[T][ ] borrow book\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rubinnn"},"content":"        assertEquals(expected, ToDos.createToDo(test).toString());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rubinnn"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rubinnn"},"content":"    public void createToDosTest2() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"        String expectedErrorMessage \u003d \"You didn\u0027t put in a description user. \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rubinnn"},"content":"                + \"Here is a list of commands and descriptions\\n\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rubinnn"},"content":"                + \"event [eventName] /from [time] /to [time]\\n\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rubinnn"},"content":"                + \"deadline [deadlineName]/ by [time]\\n \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rubinnn"},"content":"                + \"todo [todoName]\\n\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rubinnn"},"content":"                + \"Please try again user\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rubinnn"},"content":"        String test \u003d \"\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rubinnn"},"content":"        assertEquals(expectedErrorMessage, assertThrows(NoDescriptionException.class, () -\u003e {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rubinnn"},"content":"            ToDos.createToDo(test);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rubinnn"},"content":"        }).toString());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rubinnn"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rubinnn"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rubinnn"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"rubinnn":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rubinnn"},"content":"todo borrow book","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rubinnn"},"content":"list","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rubinnn"},"content":"deadline ca1/by 2024-02-24","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rubinnn"},"content":"mark 2","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rubinnn"},"content":"delete 1","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rubinnn"},"content":"event meeting /from 2024-02-28 0600 /to 0800","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rubinnn"},"content":"list","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rubinnn"},"content":"unmark 4","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rubinnn"},"content":"bye","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"rubinnn":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rubinnn"},"content":"java -classpath ../bin BeeBoo \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"rubinnn":1,"-":37}}]
