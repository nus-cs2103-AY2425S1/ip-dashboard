[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jolwnn"},"content":"# duke.Duke project template","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jolwnn"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"jolwnn":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jolwnn"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jolwnn"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jolwnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jolwnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jolwnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jolwnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jolwnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jolwnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jolwnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jolwnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jolwnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jolwnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jolwnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jolwnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jolwnn"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jolwnn"},"content":"checkstyle {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jolwnn"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jolwnn"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jolwnn"},"content":"repositories {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jolwnn"},"content":"    mavenCentral()","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jolwnn"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"jolwnn":25,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jolwnn"},"content":"T | 0 | Something","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jolwnn"},"content":"T | 0 | Something 1","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jolwnn"},"content":"T | 0 | Something 2","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"jolwnn":3}},{"path":"data/test_tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jolwnn"},"content":"T | 0 | Sample task","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"jolwnn":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jolwnn"},"content":"# duke.Duke User Guide","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"jolwnn":1,"-":29}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jolwnn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jolwnn"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jolwnn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jolwnn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jolwnn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jolwnn"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jolwnn"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jolwnn"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jolwnn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jolwnn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jolwnn"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jolwnn"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jolwnn"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jolwnn"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jolwnn"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jolwnn"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jolwnn"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jolwnn"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jolwnn"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jolwnn"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jolwnn"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jolwnn"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jolwnn"},"content":"        try {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jolwnn"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jolwnn"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jolwnn"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jolwnn"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jolwnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jolwnn"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jolwnn"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jolwnn"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jolwnn"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jolwnn"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jolwnn"},"content":"    private void flip() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jolwnn"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jolwnn"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jolwnn"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jolwnn"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jolwnn"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jolwnn"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jolwnn"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jolwnn"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jolwnn"},"content":"        db.flip();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jolwnn"},"content":"        return db;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jolwnn"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"jolwnn":58}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jolwnn"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jolwnn"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jolwnn"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jolwnn"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jolwnn"},"content":"public class Launcher {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jolwnn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jolwnn"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jolwnn"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"jolwnn":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jolwnn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jolwnn"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jolwnn"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jolwnn"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jolwnn"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jolwnn"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jolwnn"},"content":"import duke.Duke;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jolwnn"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jolwnn"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jolwnn"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jolwnn"},"content":"public class Main extends Application {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jolwnn"},"content":"    private final Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jolwnn"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jolwnn"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jolwnn"},"content":"        try {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jolwnn"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jolwnn"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jolwnn"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jolwnn"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jolwnn"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);  // inject the Duke instance","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jolwnn"},"content":"            stage.show();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jolwnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jolwnn"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jolwnn"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jolwnn"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"jolwnn":30}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jolwnn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jolwnn"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jolwnn"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jolwnn"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jolwnn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jolwnn"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jolwnn"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jolwnn"},"content":"import duke.Duke;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jolwnn"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jolwnn"},"content":" * Controller for the main GUI.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jolwnn"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jolwnn"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jolwnn"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jolwnn"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jolwnn"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jolwnn"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jolwnn"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jolwnn"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jolwnn"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jolwnn"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jolwnn"},"content":"    private Duke duke;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jolwnn"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/gingerbreadman.png\"));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jolwnn"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/rudolf.png\"));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jolwnn"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jolwnn"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jolwnn"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jolwnn"},"content":"    /** Injects the Duke instance */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jolwnn"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jolwnn"},"content":"        duke \u003d d;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jolwnn"},"content":"        showGreeting();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jolwnn"},"content":"     * Creates a dialog box with Duke\u0027s greeting when the application first opens.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jolwnn"},"content":"    private void showGreeting() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jolwnn"},"content":"        String greeting \u003d duke.getGreeting();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jolwnn"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jolwnn"},"content":"                DialogBox.getDukeDialog(greeting, dukeImage)","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jolwnn"},"content":"        );","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jolwnn"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jolwnn"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jolwnn"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jolwnn"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jolwnn"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jolwnn"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jolwnn"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jolwnn"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jolwnn"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jolwnn"},"content":"        );","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jolwnn"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jolwnn"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"jolwnn":63}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jolwnn"},"content":"package duke;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jolwnn"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jolwnn"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jolwnn"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jolwnn"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jolwnn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jolwnn"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jolwnn"},"content":" * Represents the main application class for Duke, which handles the initialization,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jolwnn"},"content":" * user interactions, and task management.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jolwnn"},"content":" * It connects the user interface, task storage, and command parsing components.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jolwnn"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jolwnn"},"content":"public class Duke {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jolwnn"},"content":"    private final Ui ui;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jolwnn"},"content":"    private final Storage storage;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jolwnn"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jolwnn"},"content":"    private final Parser parser;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jolwnn"},"content":"     * Initializes the Duke application with the specified file path for task storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jolwnn"},"content":"     * Sets up the user interface, storage, task list, and parser.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jolwnn"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jolwnn"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jolwnn"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jolwnn"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jolwnn"},"content":"        try {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jolwnn"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jolwnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jolwnn"},"content":"            System.out.println(\"Error encountered while loading previous tasks.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jolwnn"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jolwnn"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jolwnn"},"content":"        parser \u003d new Parser(tasks, ui);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jolwnn"},"content":"     * Gets greeting message","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jolwnn"},"content":"     * @return The greeting message from Duke.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jolwnn"},"content":"    public String getGreeting() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jolwnn"},"content":"        return ui.showGreeting();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jolwnn"},"content":"     * Generates a response for the user\u0027s chat message.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jolwnn"},"content":"     * @param input The user\u0027s input as a string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jolwnn"},"content":"     * @return The response generated by Duke.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jolwnn"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jolwnn"},"content":"        String response \u003d parser.parse(input);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jolwnn"},"content":"        try {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jolwnn"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jolwnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jolwnn"},"content":"            response +\u003d \"\\n\" + ui.showSaveError(e.getMessage());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jolwnn"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jolwnn"},"content":"        return response;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jolwnn"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"jolwnn":66}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jolwnn"},"content":"package duke.exception;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jolwnn"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jolwnn"},"content":" * Represents an exception specific to the Duke application.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jolwnn"},"content":" * This exception is thrown when the Duke application encounters an error.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jolwnn"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jolwnn"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jolwnn"},"content":"     * Constructs a new DukeException with the specified detail message.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jolwnn"},"content":"     * @param message The detail message for this exception.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jolwnn"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jolwnn"},"content":"        super(message);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jolwnn"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"jolwnn":16}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jolwnn"},"content":"package duke.parser;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jolwnn"},"content":"import duke.task.Task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jolwnn"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jolwnn"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jolwnn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jolwnn"},"content":"import duke.task.Event;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jolwnn"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jolwnn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jolwnn"},"content":"import java.util.List;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jolwnn"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jolwnn"},"content":" * The Parser class interprets user input and executes the appropriate actions.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jolwnn"},"content":" * It interacts with the TaskList and Ui classes to manage tasks and provide feedback to the user.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jolwnn"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jolwnn"},"content":"public class Parser {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jolwnn"},"content":"    private final TaskList tasks;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jolwnn"},"content":"    private final Ui ui;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jolwnn"},"content":"     * Constructs a Parser object with the specified TaskList and Ui.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jolwnn"},"content":"     * @param tasks The TaskList containing all tasks.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jolwnn"},"content":"     * @param ui The Ui object for user interaction.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jolwnn"},"content":"    public Parser(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jolwnn"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jolwnn"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jolwnn"},"content":"     * Parses the user input and performs the corresponding action.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jolwnn"},"content":"     * @param input The user\u0027s input as a string.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jolwnn"},"content":"     * @return Duke\u0027s response as a string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jolwnn"},"content":"    public String parse(String input) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jolwnn"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jolwnn"},"content":"            return ui.showTaskList(tasks.getTasks());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jolwnn"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jolwnn"},"content":"            return markTask(input);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jolwnn"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jolwnn"},"content":"            return unmarkTask(input);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jolwnn"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jolwnn"},"content":"            return addTodo(input);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jolwnn"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jolwnn"},"content":"            return addDeadline(input);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jolwnn"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jolwnn"},"content":"            return addEvent(input);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jolwnn"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jolwnn"},"content":"            return deleteTask(input);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jolwnn"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jolwnn"},"content":"            return handleFind(input);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jolwnn"},"content":"        } else if (input.equals(\"bye\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jolwnn"},"content":"            return ui.showGoodbyeMessage();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jolwnn"},"content":"        } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jolwnn"},"content":"            return ui.showUnknownCommand();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jolwnn"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jolwnn"},"content":"     * Marks a task as done based on user input.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jolwnn"},"content":"     * @param input The user\u0027s input indicating which task to mark as done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jolwnn"},"content":"     * @return The success or error message.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jolwnn"},"content":"    private String markTask(String input) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jolwnn"},"content":"        try {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jolwnn"},"content":"            int index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jolwnn"},"content":"            if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jolwnn"},"content":"                tasks.get(index).markAsDone();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jolwnn"},"content":"                return ui.showTaskMarked(tasks.get(index));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jolwnn"},"content":"            } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jolwnn"},"content":"                return ui.showErrorMessage(\"Oops! That task number doesn\u0027t exist. Please try again.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jolwnn"},"content":"            }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jolwnn"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jolwnn"},"content":"            return ui.showSuggestion(\"mark \u003ctask number\u003e\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jolwnn"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jolwnn"},"content":"     * Marks a task as not done based on user input.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jolwnn"},"content":"     * @param input The user\u0027s input indicating which task to unmark as done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jolwnn"},"content":"     * @return The success or error message.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jolwnn"},"content":"    private String unmarkTask(String input) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jolwnn"},"content":"        try {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jolwnn"},"content":"            int index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jolwnn"},"content":"            if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jolwnn"},"content":"                tasks.get(index).markAsNotDone();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jolwnn"},"content":"                return ui.showTaskUnmarked(tasks.get(index));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jolwnn"},"content":"            } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jolwnn"},"content":"                return ui.showErrorMessage(\"Oops! That task number doesn\u0027t exist. Please try again.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jolwnn"},"content":"            }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jolwnn"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jolwnn"},"content":"            return ui.showSuggestion(\"unmark \u003ctask number\u003e\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jolwnn"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jolwnn"},"content":"     * Adds a new ToDo task based on user input.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jolwnn"},"content":"     * @param input The user\u0027s input containing the description of the ToDo task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jolwnn"},"content":"     * @return The success or error message.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jolwnn"},"content":"    private String addTodo(String input) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jolwnn"},"content":"        if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jolwnn"},"content":"            return ui.showErrorMessage(\"Oops! The description of a todo cannot be empty.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jolwnn"},"content":"        } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jolwnn"},"content":"            String description \u003d input.substring(5).trim();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jolwnn"},"content":"            tasks.add(new ToDo(description));","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jolwnn"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jolwnn"},"content":"                return ui.showErrorMessage(\"Oops! The description of a todo cannot be empty.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jolwnn"},"content":"            } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jolwnn"},"content":"                return ui.showTaskAdded(tasks.get(tasks.size() - 1), tasks.size());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jolwnn"},"content":"            }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jolwnn"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jolwnn"},"content":"     * Adds a new Deadline task based on user input.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jolwnn"},"content":"     * @param input The user\u0027s input containing the description and deadline.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jolwnn"},"content":"     * @return The success or error message.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jolwnn"},"content":"    private String addDeadline(String input) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jolwnn"},"content":"        String[] substrings \u003d input.split(\" /by \");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jolwnn"},"content":"        if (substrings.length \u003d\u003d 2) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jolwnn"},"content":"            if (substrings[0].length() \u003c\u003d 9) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jolwnn"},"content":"                return ui.showErrorMessage(\"Oops! The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jolwnn"},"content":"            } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jolwnn"},"content":"                String description \u003d substrings[0].substring(9).trim();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jolwnn"},"content":"                String by \u003d substrings[1].trim();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jolwnn"},"content":"                if (description.isEmpty()) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jolwnn"},"content":"                    return ui.showErrorMessage(\"Oops! The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jolwnn"},"content":"                } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jolwnn"},"content":"                    try {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jolwnn"},"content":"                        tasks.add(new Deadline(description, by));","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jolwnn"},"content":"                        return ui.showTaskAdded(tasks.get(tasks.size() - 1), tasks.size());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jolwnn"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jolwnn"},"content":"                        return ui.showErrorMessage(\"Please enter the date and time in the format yyyy-MM-dd HHmm.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jolwnn"},"content":"                    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jolwnn"},"content":"                }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jolwnn"},"content":"            }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jolwnn"},"content":"        } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jolwnn"},"content":"            return ui.showSuggestion(\"deadline \u003cdescription\u003e /by \u003cdate/time\u003e\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jolwnn"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jolwnn"},"content":"     * Adds a new Event task based on user input.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"jolwnn"},"content":"     * @param input The user\u0027s input containing the description, start time, and end time.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"jolwnn"},"content":"     * @return The success or error message.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"jolwnn"},"content":"    private String addEvent(String input) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"jolwnn"},"content":"        String[] substrings \u003d input.split(\" /from \");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"jolwnn"},"content":"        if (substrings.length \u003d\u003d 2) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"jolwnn"},"content":"            if (substrings[0].length() \u003c\u003d 6) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"jolwnn"},"content":"                return ui.showErrorMessage(\"Oops! The description of an event cannot be empty.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"jolwnn"},"content":"            } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"jolwnn"},"content":"                String description \u003d substrings[0].substring(6).trim();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"jolwnn"},"content":"                String[] fromTo \u003d substrings[1].split(\" /to \");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"jolwnn"},"content":"                if (fromTo.length \u003d\u003d 2) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"jolwnn"},"content":"                    String from \u003d fromTo[0].trim();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"jolwnn"},"content":"                    String to \u003d fromTo[1].trim();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"jolwnn"},"content":"                    if (description.isEmpty() || from.isEmpty() || to.isEmpty()) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"jolwnn"},"content":"                        return ui.showErrorMessage(\"Oops! The description, start time, or end time of an event cannot be empty.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"jolwnn"},"content":"                    } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"jolwnn"},"content":"                        try {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"jolwnn"},"content":"                            tasks.add(new Event(description, from, to));","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"jolwnn"},"content":"                            return ui.showTaskAdded(tasks.get(tasks.size() - 1), tasks.size());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"jolwnn"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"jolwnn"},"content":"                            return ui.showErrorMessage(\"Please enter the date and time in the format yyyy-MM-dd HHmm.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"jolwnn"},"content":"                        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"jolwnn"},"content":"                    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"jolwnn"},"content":"                } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"jolwnn"},"content":"                    return ui.showSuggestion(\"event \u003cdescription\u003e /from \u003cstart date/time\u003e /to \u003cend date/time\u003e\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"jolwnn"},"content":"                }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"jolwnn"},"content":"            }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"jolwnn"},"content":"        } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"jolwnn"},"content":"            return ui.showSuggestion(\"event \u003cdescription\u003e /from \u003cstart date/time\u003e /to \u003cend date/time\u003e\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"jolwnn"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"jolwnn"},"content":"     * Deletes a task based on user input.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"jolwnn"},"content":"     * @param input The user\u0027s input indicating which task to delete.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"jolwnn"},"content":"     * @return The success or error message.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"jolwnn"},"content":"    private String deleteTask(String input) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"jolwnn"},"content":"        try {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"jolwnn"},"content":"            int index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"jolwnn"},"content":"            if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"jolwnn"},"content":"                Task removedTask \u003d tasks.remove(index);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"jolwnn"},"content":"                return ui.showTaskDeleted(removedTask, tasks.size());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"jolwnn"},"content":"            } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"jolwnn"},"content":"                return ui.showErrorMessage(\"Oops! That task number doesn\u0027t exist. Please try again.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"jolwnn"},"content":"            }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"jolwnn"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"jolwnn"},"content":"            return ui.showSuggestion(\"delete \u003ctask number\u003e\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"jolwnn"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"jolwnn"},"content":"     * Finds a task based on user input.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"jolwnn"},"content":"     * @param input The user\u0027s input indicating which task to find.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"jolwnn"},"content":"     * @return The success or error message.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"jolwnn"},"content":"    private String handleFind(String input) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"jolwnn"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"jolwnn"},"content":"        String keyword \u003d input.split(\" \")[1];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"jolwnn"},"content":"        List\u003cTask\u003e foundTasks \u003d tasks.findTasksByKeyword(keyword);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"jolwnn"},"content":"            return ui.showFoundTasks(foundTasks);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"jolwnn"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"jolwnn"},"content":"            return ui.showSuggestion(\"find \u003ckeyword\u003e\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"jolwnn"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"jolwnn"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"jolwnn":226}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jolwnn"},"content":"package duke.storage;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jolwnn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jolwnn"},"content":"import duke.task.Event;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jolwnn"},"content":"import duke.task.Task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jolwnn"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jolwnn"},"content":"import java.io.File;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jolwnn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jolwnn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jolwnn"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jolwnn"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jolwnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jolwnn"},"content":"import java.util.List;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jolwnn"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jolwnn"},"content":" * Handles the loading and saving of tasks to a file in the Duke application.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jolwnn"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jolwnn"},"content":"public class Storage {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jolwnn"},"content":"    private final String filePath;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jolwnn"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jolwnn"},"content":"     * @param filePath The path to the file where tasks will be stored.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jolwnn"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jolwnn"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jolwnn"},"content":"     * Loads tasks from the specified file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jolwnn"},"content":"     * If the file does not exist, it creates a new file and returns an empty task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jolwnn"},"content":"     * If the file exists, it reads the tasks from the file and returns them as a list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jolwnn"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jolwnn"},"content":"     * @throws IOException If an I/O error occurs while reading the file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jolwnn"},"content":"    public List\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jolwnn"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jolwnn"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jolwnn"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jolwnn"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jolwnn"},"content":"            file.createNewFile();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jolwnn"},"content":"            return tasks;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jolwnn"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jolwnn"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(Paths.get(filePath));","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jolwnn"},"content":"        for (String line : lines) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jolwnn"},"content":"            String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jolwnn"},"content":"            boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jolwnn"},"content":"            try {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jolwnn"},"content":"                switch (parts[0]) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jolwnn"},"content":"                case \"T\":","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jolwnn"},"content":"                    tasks.add(new ToDo(parts[2], isDone));","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jolwnn"},"content":"                    break;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jolwnn"},"content":"                case \"D\":","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jolwnn"},"content":"                    tasks.add(new Deadline(parts[2], parts[3], isDone));","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jolwnn"},"content":"                    break;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jolwnn"},"content":"                case \"E\":","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jolwnn"},"content":"                    tasks.add(new Event(parts[2], parts[3], parts[4], isDone));","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jolwnn"},"content":"                    break;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jolwnn"},"content":"                default:","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jolwnn"},"content":"                    System.out.println(\"Warning: Corrupted task found in file. Skipping line.\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jolwnn"},"content":"                }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jolwnn"},"content":"            } catch (ArrayIndexOutOfBoundsException | IllegalArgumentException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jolwnn"},"content":"                System.out.println(\"Warning: Corrupted task data. Skipping line.\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jolwnn"},"content":"            }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jolwnn"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jolwnn"},"content":"        return tasks;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jolwnn"},"content":"     * Saves the list of tasks to the file specified by the file path.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jolwnn"},"content":"     * Each task is written to the file in a specific format.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jolwnn"},"content":"     * @param tasks The list of tasks to be saved to the file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jolwnn"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jolwnn"},"content":"    public void save(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jolwnn"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jolwnn"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jolwnn"},"content":"            fw.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jolwnn"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jolwnn"},"content":"        fw.close();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jolwnn"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"jolwnn":89}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jolwnn"},"content":"package duke.task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jolwnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jolwnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jolwnn"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jolwnn"},"content":" * Represents a deadline task that needs to be done by a specific date and time.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jolwnn"},"content":" * Inherits from the Task class.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jolwnn"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jolwnn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jolwnn"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jolwnn"},"content":"     * Constructs a Deadline task with a description, deadline date/time, and completion status.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jolwnn"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jolwnn"},"content":"     * @param by The deadline date/time as a string in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jolwnn"},"content":"     * @param isDone The completion status of the task. True if the task is done, false otherwise.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jolwnn"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jolwnn"},"content":"        super(description, isDone);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jolwnn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jolwnn"},"content":"        this.by \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jolwnn"},"content":"     * Constructs a Deadline task with a description and deadline date/time. The task is initially not done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jolwnn"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jolwnn"},"content":"     * @param by The deadline date/time as a string in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jolwnn"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jolwnn"},"content":"        this(description, by, false);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jolwnn"},"content":"     * Returns a string representation of the deadline task in a format suitable for saving to a file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jolwnn"},"content":"     * @return A string representing the deadline task in the format \"D | isDone | description | by\".","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jolwnn"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jolwnn"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jolwnn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jolwnn"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by.format(formatter);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jolwnn"},"content":"     * Returns a string representation of the deadline task for display purposes.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jolwnn"},"content":"     * @return A string representing the deadline task in the format \"[D][status] description (by: deadline)\".","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jolwnn"},"content":"    @Override","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jolwnn"},"content":"    public String toString() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jolwnn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jolwnn"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jolwnn"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"jolwnn":57}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jolwnn"},"content":"package duke.task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jolwnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jolwnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jolwnn"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jolwnn"},"content":" * Represents an event task that occurs between a specific start and end date/time.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jolwnn"},"content":" * Inherits from the Task class.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jolwnn"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jolwnn"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jolwnn"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jolwnn"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jolwnn"},"content":"     * Constructs an Event task with a description, start date/time, end date/time, and completion status.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jolwnn"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jolwnn"},"content":"     * @param from The start date/time of the event as a string in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jolwnn"},"content":"     * @param to The end date/time of the event as a string in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jolwnn"},"content":"     * @param isDone The completion status of the task. True if the task is done, false otherwise.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jolwnn"},"content":"    public Event(String description, String from, String to, boolean isDone) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jolwnn"},"content":"        super(description, isDone);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jolwnn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jolwnn"},"content":"        this.from \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jolwnn"},"content":"        this.to \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jolwnn"},"content":"     * Constructs an Event task with a description, start date/time, and end date/time. The task is initially not done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jolwnn"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jolwnn"},"content":"     * @param from The start date/time of the event as a string in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jolwnn"},"content":"     * @param to The end date/time of the event as a string in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jolwnn"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jolwnn"},"content":"        this(description, from, to, false);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jolwnn"},"content":"     * Returns a string representation of the event task in a format suitable for saving to a file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jolwnn"},"content":"     * @return A string representing the event task in the format \"E | isDone | description | from | to\".","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jolwnn"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jolwnn"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jolwnn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jolwnn"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + from.format(formatter) + \" | \" + to.format(formatter);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jolwnn"},"content":"     * Returns a string representation of the event task for display purposes.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jolwnn"},"content":"     * @return A string representing the event task in the format \"[E][status] description (from: start date/time to: end date/time)\".","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jolwnn"},"content":"    @Override","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jolwnn"},"content":"    public String toString() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jolwnn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jolwnn"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(formatter) + \" to: \" + to.format(formatter) + \")\";","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jolwnn"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"jolwnn":62}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jolwnn"},"content":"package duke.task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jolwnn"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jolwnn"},"content":" * Represents an abstract task with a description and completion status.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jolwnn"},"content":" * This class serves as a base class for different types of tasks such as ToDos, Deadlines, and Events.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jolwnn"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jolwnn"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jolwnn"},"content":"    protected String description;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jolwnn"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jolwnn"},"content":"     * Constructs a Task with the specified description and completion status.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jolwnn"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jolwnn"},"content":"     * @param isDone The completion status of the task. True if the task is done, false otherwise.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jolwnn"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jolwnn"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jolwnn"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jolwnn"},"content":"     * Retrieves the description of this task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jolwnn"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jolwnn"},"content":"    public String getDescription() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jolwnn"},"content":"        return description;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jolwnn"},"content":"     * Returns the status icon of the task, indicating whether it is completed or not.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jolwnn"},"content":"     * @return A string representing the task\u0027s status icon, \"[X]\" if done, \"[ ]\" if not done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jolwnn"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jolwnn"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jolwnn"},"content":"     * Marks the task as completed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jolwnn"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jolwnn"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jolwnn"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jolwnn"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jolwnn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jolwnn"},"content":"     * Returns a string representation of the task suitable for saving to a file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jolwnn"},"content":"     * This method must be implemented by subclasses to specify how to save the task\u0027s details.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jolwnn"},"content":"     * @return A string representing the task in a format suitable for file storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jolwnn"},"content":"    public abstract String toFileString();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jolwnn"},"content":"     * Returns a string representation of the task for display purposes.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jolwnn"},"content":"     * This includes the status icon and the description of the task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jolwnn"},"content":"     * @return A string representing the task in the format \"[status] description\".","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jolwnn"},"content":"    @Override","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jolwnn"},"content":"    public String toString() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jolwnn"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jolwnn"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"jolwnn":73}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jolwnn"},"content":"package duke.task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jolwnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jolwnn"},"content":"import java.util.List;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jolwnn"},"content":"import duke.task.Task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jolwnn"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jolwnn"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jolwnn"},"content":" * This class provides methods to manage tasks in a list, including adding, removing, and retrieving tasks.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jolwnn"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jolwnn"},"content":"public class TaskList {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jolwnn"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jolwnn"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jolwnn"},"content":"    public TaskList() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jolwnn"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jolwnn"},"content":"     * Constructs a TaskList with the specified list of tasks.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jolwnn"},"content":"     * @param tasks The initial list of tasks to populate the TaskList.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jolwnn"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jolwnn"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jolwnn"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jolwnn"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jolwnn"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jolwnn"},"content":"        tasks.add(task);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jolwnn"},"content":"     * Removes a task from the TaskList by its index.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jolwnn"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jolwnn"},"content":"     * @return The task that was removed from the list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jolwnn"},"content":"    public Task remove(int index) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jolwnn"},"content":"        return tasks.remove(index);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jolwnn"},"content":"     * Retrieves a task from the TaskList by its index.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jolwnn"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jolwnn"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jolwnn"},"content":"    public Task get(int index) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jolwnn"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jolwnn"},"content":"     * Returns the number of tasks in the TaskList.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jolwnn"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jolwnn"},"content":"    public int size() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jolwnn"},"content":"        return tasks.size();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jolwnn"},"content":"     * Checks if the TaskList is empty.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jolwnn"},"content":"     * @return True if the TaskList has no tasks, false otherwise.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jolwnn"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jolwnn"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jolwnn"},"content":"     * Returns the list of tasks in the TaskList.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jolwnn"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jolwnn"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jolwnn"},"content":"        return tasks;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jolwnn"},"content":"    public List\u003cTask\u003e findTasksByKeyword(String keyword) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jolwnn"},"content":"        List\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jolwnn"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jolwnn"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jolwnn"},"content":"                foundTasks.add(task);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jolwnn"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jolwnn"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jolwnn"},"content":"        return foundTasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jolwnn"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"jolwnn":97}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jolwnn"},"content":"package duke.task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jolwnn"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jolwnn"},"content":" * Represents a ToDo task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jolwnn"},"content":" * A ToDo is a type of Task that signifies an item to be done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jolwnn"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jolwnn"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jolwnn"},"content":"     * Constructs a ToDo task with the specified description and completion status.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jolwnn"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jolwnn"},"content":"     * @param isDone The completion status of the ToDo task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jolwnn"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jolwnn"},"content":"        super(description, isDone);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jolwnn"},"content":"     * Constructs a ToDo task with the specified description and sets it as not done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jolwnn"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jolwnn"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jolwnn"},"content":"        this(description, false);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jolwnn"},"content":"     * Returns a string representation of the ToDo task suitable for saving to a file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jolwnn"},"content":"     * The format is: \"T | \u003cstatus\u003e | \u003cdescription\u003e\".","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jolwnn"},"content":"     * @return A string representation of the ToDo task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jolwnn"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jolwnn"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jolwnn"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jolwnn"},"content":"     * Returns a string representation of the ToDo task for display purposes.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jolwnn"},"content":"     * The format is: \"[T] \u003cstatus\u003e \u003cdescription\u003e\".","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jolwnn"},"content":"     * @return A string representation of the ToDo task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jolwnn"},"content":"    @Override","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jolwnn"},"content":"    public String toString() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jolwnn"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jolwnn"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"jolwnn":49}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jolwnn"},"content":"package duke.ui;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jolwnn"},"content":"import duke.task.Task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jolwnn"},"content":"import java.util.List;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jolwnn"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jolwnn"},"content":" * Handles the user interface of the application.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jolwnn"},"content":" * This class is responsible for displaying various messages to the user,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jolwnn"},"content":" * including greetings, task lists, error messages, and more.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jolwnn"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jolwnn"},"content":"public class Ui {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jolwnn"},"content":"     * Generates a greeting message and instructions on how to interact with the application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jolwnn"},"content":"     * @return The greeting and instructions as a string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jolwnn"},"content":"    public String showGreeting() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jolwnn"},"content":"        String greeting \u003d \"   *        *        *        __o    *       *\\n\"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jolwnn"},"content":"                + \"*      *       *        *    /_| _     *\\n\"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jolwnn"},"content":"                + \"  FF  *    FF      *        O\u0027_)/ \\\\  *    *\\n\"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jolwnn"},"content":"                + \"  o\u0027)____  o\u0027)____    __*   V   \\\\  ) __  *\\n\"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jolwnn"},"content":"                + \"   \\\\ ___ )--\\\\ ___ )--( (    (___|__)/ /*     *\\n\"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jolwnn"},"content":"                + \" *  |   |    |   |  * \\\\ \\\\____| |___/ /  *\\n\"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jolwnn"},"content":"                + \"    |*  |    |   |     \\\\____________/       *\\n\";","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jolwnn"},"content":"        return \"Hello, I am Rudolf, Santa\u0027s trusty red-nose reindeer. Christmas is nearing, so I am here to help you with your Christmas preparations.\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jolwnn"},"content":"                + \"Here\u0027s how you can chat with me:\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jolwnn"},"content":"                + \"1. Add a duke.task.ToDo: todo \u003cdescription\u003e\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jolwnn"},"content":"                + \"2. Add a duke.task.Deadline: deadline \u003cdescription\u003e /by \u003cdate/time\u003e\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jolwnn"},"content":"                + \"3. Add an duke.task.Event: event \u003cdescription\u003e /from \u003cstart date/time\u003e /to \u003cend date/time\u003e\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jolwnn"},"content":"                + \"4. List all tasks: list\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jolwnn"},"content":"                + \"5. Mark a task as done: mark \u003ctask number\u003e\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jolwnn"},"content":"                + \"6. Unmark a task: unmark \u003ctask number\u003e\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jolwnn"},"content":"                + \"7. Delete a task: delete \u003ctask number\u003e\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jolwnn"},"content":"                + \"8. Exit: bye\\n\" + greeting;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jolwnn"},"content":"     * Generates the list of tasks to the user.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jolwnn"},"content":"     * If the task list is empty, a message indicating no tasks is displayed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jolwnn"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jolwnn"},"content":"     * @return The list of tasks or no tasks message as a string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jolwnn"},"content":"    public String showTaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jolwnn"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jolwnn"},"content":"            return \"Ho Ho Ho! No tasks in your list yet. Add some tasks to get started.\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jolwnn"},"content":"        } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jolwnn"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jolwnn"},"content":"            sb.append(\"Ho Ho Ho! Here are the tasks in your Christmas list:\\n\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jolwnn"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jolwnn"},"content":"                sb.append((i + 1)).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jolwnn"},"content":"            }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jolwnn"},"content":"            return sb.toString();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jolwnn"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jolwnn"},"content":"     * Generates a message indicating a task has been added.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jolwnn"},"content":"     * @param task The task that was added.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jolwnn"},"content":"     * @param size The current number of tasks in the list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jolwnn"},"content":"     * @return The task added message as a string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jolwnn"},"content":"    public String showTaskAdded(Task task, int size) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jolwnn"},"content":"        return \"Gotcha. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jolwnn"},"content":"                + \"  \" + task + \"\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jolwnn"},"content":"                + \"Now you have \" + size + \" tasks in the list. Feliz Navidad!\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jolwnn"},"content":"     * Generates a message indicating a task has been marked as done.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jolwnn"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jolwnn"},"content":"     * @return The task marked message as a string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jolwnn"},"content":"    public String showTaskMarked(Task task) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jolwnn"},"content":"        return \"Sleigh! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jolwnn"},"content":"                + \"  \" + task + \"\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jolwnn"},"content":"     * Generates a message indicating a task has been marked as not done.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jolwnn"},"content":"     * @param task The task that was marked as not done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jolwnn"},"content":"     * @return The task unmarked message as a string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jolwnn"},"content":"    public String showTaskUnmarked(Task task) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jolwnn"},"content":"        return \"Alright-o, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jolwnn"},"content":"                + \"  \" + task + \"\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jolwnn"},"content":"     * Generates a message indicating a task has been deleted.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jolwnn"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jolwnn"},"content":"     * @param size The current number of tasks in the list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jolwnn"},"content":"     * @return The task deleted message as a string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jolwnn"},"content":"    public String showTaskDeleted(Task task, int size) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jolwnn"},"content":"        return \"Aww okay. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jolwnn"},"content":"                + \"  \" + task + \"\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jolwnn"},"content":"                + \"Now you have \" + size + \" tasks in the list. Let it snow!\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jolwnn"},"content":"     * Generates a farewell message when the user exits the application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jolwnn"},"content":"     * @return The farewell message as a string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jolwnn"},"content":"    public String showGoodbyeMessage() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jolwnn"},"content":"        String festiveMessage \u003d","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jolwnn"},"content":"                \"Merry★* 。 • ˚ ˚ ˛ ˚ ˛ •\\n\" +","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jolwnn"},"content":"                        \"•。★Christmas★ 。* 。\\n\" +","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jolwnn"},"content":"                        \"° 。 ° ˛˚˛ * Π__。˚\\n\" +","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jolwnn"},"content":"                        \"˚ ˛ •˛•˚ */__/~＼。˚ ˚ ˛\\n\" +","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jolwnn"},"content":"                        \"˚ ˛ •˛• ˚ ｜ 田田 ｜門｜ ˚\\n\" +","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jolwnn"},"content":"                        \"And a happy new year!\";","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jolwnn"},"content":"        return \"Bye~ Hope to see you again!\\n\" + festiveMessage + \"\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jolwnn"},"content":"     * Generates a message when an unknown command is entered.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jolwnn"},"content":"     * @return The unknown command message as a string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jolwnn"},"content":"    public String showUnknownCommand() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jolwnn"},"content":"        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jolwnn"},"content":"     * Generates a suggestion for the correct format of a command when an invalid command is entered.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jolwnn"},"content":"     * @param message The suggested command format.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jolwnn"},"content":"     * @return The suggestion message as a string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jolwnn"},"content":"    public String showSuggestion(String message) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jolwnn"},"content":"        return \"Sorry, I don\u0027t understand. Did you mean: \" + message + \"\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jolwnn"},"content":"     * Generates an error message with a specific message.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jolwnn"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jolwnn"},"content":"     * @return The error message as a string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jolwnn"},"content":"    public String showErrorMessage(String message) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jolwnn"},"content":"        return message + \"\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jolwnn"},"content":"     * Generates an error message when there is an issue saving tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"jolwnn"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"jolwnn"},"content":"     * @return The save error message as a string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"jolwnn"},"content":"    public String showSaveError(String message) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"jolwnn"},"content":"        return \"Jingling bells! It seems like an error was encountered while saving tasks: \" + message + \"\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"jolwnn"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"jolwnn"},"content":"     * Generates a message when tasks matching a keyword are found.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"jolwnn"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"jolwnn"},"content":"     * @param tasks The list of tasks found.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"jolwnn"},"content":"     * @return The found tasks message as a string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"jolwnn"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"jolwnn"},"content":"    public String showFoundTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"jolwnn"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"jolwnn"},"content":"            return \"Aww popsicles! No matching tasks found.\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"jolwnn"},"content":"        } else {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"jolwnn"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"jolwnn"},"content":"            sb.append(\"Hooray! The elves found these matching tasks in your list:\\n\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"jolwnn"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"jolwnn"},"content":"                sb.append((i + 1)).append(\".\").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"jolwnn"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"jolwnn"},"content":"            return sb.toString();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"jolwnn"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"jolwnn"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"jolwnn":179}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jolwnn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jolwnn"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jolwnn"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jolwnn"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jolwnn"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jolwnn"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jolwnn"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jolwnn"},"content":"\u003cfx:root alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jolwnn"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jolwnn"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jolwnn"},"content":"         \u003copaqueInsets\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jolwnn"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jolwnn"},"content":"         \u003c/opaqueInsets\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jolwnn"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jolwnn"},"content":"            \u003cInsets left\u003d\"8.0\" right\u003d\"8.0\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jolwnn"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jolwnn"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jolwnn"},"content":"            \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jolwnn"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jolwnn"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"60.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jolwnn"},"content":"         \u003cimage\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jolwnn"},"content":"            \u003cImage url\u003d\"@../../../../../rudolf.png\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jolwnn"},"content":"         \u003c/image\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jolwnn"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jolwnn"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jolwnn"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jolwnn"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jolwnn"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jolwnn"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jolwnn"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jolwnn"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"jolwnn":33}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jolwnn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jolwnn"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jolwnn"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jolwnn"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jolwnn"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jolwnn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jolwnn"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"500.0\" minWidth\u003d\"300.0\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jolwnn"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jolwnn"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jolwnn"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jolwnn"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jolwnn"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jolwnn"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jolwnn"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jolwnn"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jolwnn"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jolwnn"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"jolwnn":19}},{"path":"src/test/java/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jolwnn"},"content":"package duke.storage;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jolwnn"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jolwnn"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jolwnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jolwnn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jolwnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jolwnn"},"content":"public class StorageTest {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jolwnn"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jolwnn"},"content":"    public void save_tasksSavedCorrectly() throws IOException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jolwnn"},"content":"        Storage storage \u003d new Storage(\"data/test_tasks.txt\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jolwnn"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jolwnn"},"content":"        taskList.add(new ToDo(\"Sample task\"));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jolwnn"},"content":"        storage.save(taskList.getTasks());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jolwnn"},"content":"        TaskList loadedTaskList \u003d new TaskList(storage.load());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jolwnn"},"content":"        assertEquals(1, loadedTaskList.size(), \"The saved task should be loaded correctly.\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jolwnn"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"jolwnn":22}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jolwnn"},"content":"package duke.task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jolwnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jolwnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jolwnn"},"content":"public class TaskListTest {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jolwnn"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jolwnn"},"content":"    public void addTask_taskListSizeIncreases() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jolwnn"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jolwnn"},"content":"        Task task \u003d new ToDo(\"Sample task\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jolwnn"},"content":"        taskList.add(task);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jolwnn"},"content":"        assertEquals(1, taskList.size(), \"TaskList size should increase after adding a task.\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jolwnn"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jolwnn"},"content":"    public void getTask_taskIsRetrievedCorrectly() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jolwnn"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jolwnn"},"content":"        Task task \u003d new Deadline(\"Submit assignment\", \"2024-09-01 1500\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jolwnn"},"content":"        taskList.add(task);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jolwnn"},"content":"        assertEquals(task, taskList.get(0), \"The task retrieved should be the same as the task added.\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jolwnn"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jolwnn"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"jolwnn":24}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jolwnn"},"content":"T | 0 | Buy Christmas gifts","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jolwnn"},"content":"E | 0 | Christmas party | 2023-12-25 1800 | 2023-12-25 2300","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jolwnn"},"content":"T | 0 | Buy Christmas gifts","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jolwnn"},"content":"D | 0 | Finish wrapping | 2023-12-24 1800","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jolwnn"},"content":"E | 0 | Christmas party | 2023-12-25 1800 | 2023-12-25 2300","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jolwnn"},"content":"T | 0 | Buy Christmas gifts","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jolwnn"},"content":"D | 0 | Finish wrapping | 2023-12-24 1800","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jolwnn"},"content":"E | 0 | Christmas party | 2023-12-25 1800 | 2023-12-25 2300","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"jolwnn":8}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jolwnn"},"content":"T | 0 | Buy Christmas gifts","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jolwnn"},"content":"E | 0 | Christmas party | 2023-12-25 1800 | 2023-12-25 2300","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jolwnn"},"content":"T | 0 | Buy Christmas gifts","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jolwnn"},"content":"D | 0 | Finish wrapping | 2023-12-24 1800","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jolwnn"},"content":"E | 0 | Christmas party | 2023-12-25 1800 | 2023-12-25 2300","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jolwnn"},"content":"T | 0 | Buy Christmas gifts","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jolwnn"},"content":"D | 0 | Finish wrapping | 2023-12-24 1800","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jolwnn"},"content":"E | 0 | Christmas party | 2023-12-25 1800 | 2023-12-25 2300","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"jolwnn":8}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jolwnn"},"content":"todo Buy Christmas gifts","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jolwnn"},"content":"deadline Finish wrapping /by 2023-12-24 1800","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jolwnn"},"content":"event Christmas party /from 2023-12-25 1800 /to 2023-12-25 2300","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jolwnn"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jolwnn"},"content":"mark 1","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jolwnn"},"content":"unmark 1","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jolwnn"},"content":"delete 2","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jolwnn"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jolwnn"},"content":"unknown command","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jolwnn"},"content":"todo","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jolwnn"},"content":"deadline","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jolwnn"},"content":"event","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jolwnn"},"content":"deadline Bake Cookies by","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jolwnn"},"content":"deadline /by 2023-12-24 1800","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jolwnn"},"content":"event /from 2023-12-25 1800 /to 2023-12-25 2300","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jolwnn"},"content":"event Snow Blast","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jolwnn"},"content":"mark 100","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jolwnn"},"content":"unmark 100","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jolwnn"},"content":"delete 100","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jolwnn"},"content":"mark","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jolwnn"},"content":"unmark","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jolwnn"},"content":"delete","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jolwnn"},"content":"bye","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jolwnn"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"jolwnn":24}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jolwnn"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"jolwnn":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jolwnn"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"jolwnn":1,"-":37}}]
