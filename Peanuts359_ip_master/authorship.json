[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Peanuts359"},"content":"    mainClass.set(\"guy.ThatOneGuy\")","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Peanuts359"},"content":"    archiveBaseName \u003d \"thatoneguy\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Peanuts359":2,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Peanuts359"},"content":"# That One Guy","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Peanuts359"},"content":"// Individual project for CS2103T","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Peanuts359"},"content":"// Features to be added later","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"Peanuts359":3,"-":2}},{"path":"src/main/java/guy/ThatOneGuy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Peanuts359"},"content":"package guy;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Peanuts359"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Peanuts359"},"content":"import guy.parser.Parser;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Peanuts359"},"content":"import guy.tasks.TaskManager;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Peanuts359"},"content":"import guy.storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Peanuts359"},"content":"import guy.ui.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Peanuts359"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Peanuts359"},"content":" * Main class of the (rather annoyed) ThatOneGuy application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Peanuts359"},"content":" * It initialises a list of tasks, the UI, and storage, and handles the main logic.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Peanuts359"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Peanuts359"},"content":"public class ThatOneGuy {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Peanuts359"},"content":"    private TaskManager tm;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Peanuts359"},"content":"    private Ui ui;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Peanuts359"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Peanuts359"},"content":"     * Constructs a ThatOneGuy object.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Peanuts359"},"content":"     * Does so by initialising the ui/task list/storage, then reads data from storage.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Peanuts359"},"content":"    public ThatOneGuy() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Peanuts359"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Peanuts359"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Peanuts359"},"content":"        tm \u003d new TaskManager();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Peanuts359"},"content":"        storage.readData();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Peanuts359"},"content":"     * Starts the ThatOneGuy application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Peanuts359"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Peanuts359"},"content":"     * @param args command-line arguments, currently unused","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Peanuts359"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Peanuts359"},"content":"        ThatOneGuy guy \u003d new ThatOneGuy();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Peanuts359"},"content":"        guy.ui.greet();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Peanuts359"},"content":"        guy.keepGoing();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Peanuts359"},"content":"        guy.ui.bye();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Peanuts359"},"content":"     * Tells the application to continue reading user inputs, until the user requests to quit.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Peanuts359"},"content":"    private void keepGoing() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Peanuts359"},"content":"        Parser p \u003d new Parser(new Scanner(System.in));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Peanuts359"},"content":"        boolean isActive \u003d true;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Peanuts359"},"content":"        while (isActive) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Peanuts359"},"content":"            isActive \u003d p.cmd();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Peanuts359"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Peanuts359"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"Peanuts359":52}},{"path":"src/main/java/guy/exception/GuyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Peanuts359"},"content":"package guy.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Peanuts359"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Peanuts359"},"content":" * Custom Exception class for errors unique to ThatOneGuy.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Peanuts359"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Peanuts359"},"content":"public class GuyException extends Exception{","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Peanuts359"},"content":"     * Constructs a GuyException with the given message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Peanuts359"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Peanuts359"},"content":"     * @param e error message to be saved for retrieval by getMessage()","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Peanuts359"},"content":"    public GuyException(String e) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Peanuts359"},"content":"        super(e);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Peanuts359"},"content":"     * Returns the detail message of the exception.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Peanuts359"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Peanuts359"},"content":"     * @return detail message of this instance","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Peanuts359"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Peanuts359"},"content":"    public String getMessage() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Peanuts359"},"content":"        return super.getMessage();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Peanuts359"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"Peanuts359":25}},{"path":"src/main/java/guy/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Peanuts359"},"content":"package guy.parser;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Peanuts359"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Peanuts359"},"content":"import guy.exception.GuyException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Peanuts359"},"content":"import guy.tasks.TaskManager;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Peanuts359"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Peanuts359"},"content":" * Parser class to handle user input in the ThatOneGuy application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Peanuts359"},"content":" * Processes commands and interacts with the provided TaskManager instance.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Peanuts359"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Peanuts359"},"content":"public class Parser {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Peanuts359"},"content":"    private final Scanner sc;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Peanuts359"},"content":"     * Creates a Parser object with the given Scanner.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Peanuts359"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Peanuts359"},"content":"     * @param sc Scanner to be used within the instance","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Peanuts359"},"content":"    public Parser(Scanner sc) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Peanuts359"},"content":"        this.sc \u003d sc;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Peanuts359"},"content":"     * Handles user input until the user requests to quit.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Peanuts359"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Peanuts359"},"content":"     * @return false if the user requests to quit, true otherwise","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Peanuts359"},"content":"    public boolean cmd() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Peanuts359"},"content":"        TaskManager tm \u003d TaskManager.getInstance();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Peanuts359"},"content":"        String cmd, args;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Peanuts359"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Peanuts359"},"content":"            String[] input \u003d splitCmd(sc.nextLine());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Peanuts359"},"content":"            cmd \u003d input[0];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Peanuts359"},"content":"            args \u003d input[1];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Peanuts359"},"content":"            try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Peanuts359"},"content":"                switch (cmd) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Peanuts359"},"content":"                case \"bye\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Peanuts359"},"content":"                    sc.close();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Peanuts359"},"content":"                    return false;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Peanuts359"},"content":"                case \"list\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Peanuts359"},"content":"                    tm.list();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Peanuts359"},"content":"                    break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Peanuts359"},"content":"                case \"mark\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Peanuts359"},"content":"                    tm.markTask(args);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Peanuts359"},"content":"                    break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Peanuts359"},"content":"                case \"unmark\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Peanuts359"},"content":"                    tm.unmarkTask(args);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Peanuts359"},"content":"                    break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Peanuts359"},"content":"                case \"todo\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Peanuts359"},"content":"                case \"deadline\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Peanuts359"},"content":"                case \"event\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Peanuts359"},"content":"                    tm.addTask(cmd, args);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Peanuts359"},"content":"                    break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Peanuts359"},"content":"                case \"delete\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Peanuts359"},"content":"                    tm.deleteTask(args);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Peanuts359"},"content":"                    break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Peanuts359"},"content":"                case \"find\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Peanuts359"},"content":"                    tm.findTask(args);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Peanuts359"},"content":"                    break;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Peanuts359"},"content":"                default:","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Peanuts359"},"content":"                    throw new GuyException(\"Maybe put in an actual command next time, shitass.\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Peanuts359"},"content":"                }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Peanuts359"},"content":"            } catch (GuyException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Peanuts359"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Peanuts359"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Peanuts359"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Peanuts359"},"content":"        return true;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Peanuts359"},"content":"     * Preprocesses the input string by splitting it into command and arguments.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Peanuts359"},"content":"     * Also trims whitespace and converts the command to lowercase.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Peanuts359"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Peanuts359"},"content":"     * @param input input string from the user","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Peanuts359"},"content":"     * @return an array of two strings, where the first element is the command and the second is the arguments","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Peanuts359"},"content":"    private String[] splitCmd(String input) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Peanuts359"},"content":"        String[] raw \u003d input.split(\" \", 2);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Peanuts359"},"content":"        String[] output \u003d {\"\", \"\"};","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Peanuts359"},"content":"        for (int i \u003d 0; i \u003c raw.length; ++i) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Peanuts359"},"content":"            output[i] \u003d raw[i].trim();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Peanuts359"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Peanuts359"},"content":"        output[0] \u003d output[0].toLowerCase();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Peanuts359"},"content":"        return output;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Peanuts359"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"Peanuts359":88}},{"path":"src/main/java/guy/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Peanuts359"},"content":"package guy.storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Peanuts359"},"content":"import java.io.File;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Peanuts359"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Peanuts359"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Peanuts359"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Peanuts359"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Peanuts359"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Peanuts359"},"content":"import guy.tasks.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Peanuts359"},"content":"import guy.tasks.TaskManager;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Peanuts359"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Peanuts359"},"content":" * A storage class, handling reads and writes to the file system.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Peanuts359"},"content":" * Only one instance exists at a time.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Peanuts359"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Peanuts359"},"content":"public class Storage {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Peanuts359"},"content":"    private static Storage storage;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Peanuts359"},"content":"     * Retrieves the instance of the Storage class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Peanuts359"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Peanuts359"},"content":"     * @return the instance of the class","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Peanuts359"},"content":"    public static Storage getInstance() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Peanuts359"},"content":"        if (storage \u003d\u003d null) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Peanuts359"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Peanuts359"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Peanuts359"},"content":"        return storage;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Peanuts359"},"content":"     * Reads data from the file system and loads it into the TaskManager.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Peanuts359"},"content":"     * Creates necessary directories and files if not present.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Peanuts359"},"content":"    public void readData() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Peanuts359"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Peanuts359"},"content":"            File dir \u003d new File(\"data/\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Peanuts359"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Peanuts359"},"content":"                boolean created \u003d dir.mkdir();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Peanuts359"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Peanuts359"},"content":"            File f \u003d new File(\"data/guy.txt\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Peanuts359"},"content":"            if (!f.exists()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Peanuts359"},"content":"                boolean created \u003d f.createNewFile();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Peanuts359"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Peanuts359"},"content":"            Scanner read \u003d new Scanner(f);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Peanuts359"},"content":"            DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Peanuts359"},"content":"            TaskManager tm \u003d TaskManager.getInstance();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Peanuts359"},"content":"            while (read.hasNext()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Peanuts359"},"content":"                tm.loadData(read.nextLine());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Peanuts359"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Peanuts359"},"content":"            read.close();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Peanuts359"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Peanuts359"},"content":"            System.out.println(\"I got a problem, and it sure as f*** ain\u0027t my fault! It says: \\n\" + e.getMessage());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Peanuts359"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Peanuts359"},"content":"     * Writes data from the TaskManager to the file system.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Peanuts359"},"content":"    public void writeData() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Peanuts359"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Peanuts359"},"content":"            FileWriter writer \u003d new FileWriter(\"data/guy.txt\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Peanuts359"},"content":"            ArrayList\u003cTask\u003e tasks \u003d TaskManager.getInstance().getTasks();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Peanuts359"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Peanuts359"},"content":"                writer.write(task.saveFormat() + \"\\n\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Peanuts359"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Peanuts359"},"content":"            writer.close();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Peanuts359"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Peanuts359"},"content":"            System.out.println(\"I got a problem, and it sure as f*** ain\u0027t my fault! It says: \\n\" + e.getMessage());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Peanuts359"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Peanuts359"},"content":"     * Saves data to the Storage instance.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Peanuts359"},"content":"    public static void saveData() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Peanuts359"},"content":"        Storage f \u003d Storage.getInstance();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Peanuts359"},"content":"        f.writeData();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Peanuts359"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"Peanuts359":86}},{"path":"src/main/java/guy/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Peanuts359"},"content":"package guy.tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Peanuts359"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Peanuts359"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Peanuts359"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Peanuts359"},"content":" * Representation of a task with a deadline.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Peanuts359"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Peanuts359"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Peanuts359"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Peanuts359"},"content":"     * Constructs a new Deadline task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Peanuts359"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Peanuts359"},"content":"     * @param name description of the task","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Peanuts359"},"content":"     * @param by the task\u0027s deadline","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Peanuts359"},"content":"    public Deadline(String name, LocalDateTime by) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Peanuts359"},"content":"        super(name);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Peanuts359"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Peanuts359"},"content":"    @Override","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Peanuts359"},"content":"    public String toString() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Peanuts359"},"content":"        return \"[D] \" + super.toString() + \" (by: \"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Peanuts359"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")) + \")\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Peanuts359"},"content":"    @Override","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Peanuts359"},"content":"    public String saveFormat() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Peanuts359"},"content":"        return \"D\" + super.saveFormat() + \" | \" + by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Peanuts359"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"Peanuts359":34}},{"path":"src/main/java/guy/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Peanuts359"},"content":"package guy.tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Peanuts359"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Peanuts359"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Peanuts359"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Peanuts359"},"content":" * Representation of an event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Peanuts359"},"content":" * Has a start and end time.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Peanuts359"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Peanuts359"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Peanuts359"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Peanuts359"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Peanuts359"},"content":"     * Constructs a new Event task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Peanuts359"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Peanuts359"},"content":"     * @param name description of the event","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Peanuts359"},"content":"     * @param start the event\u0027s start time","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Peanuts359"},"content":"     * @param end the event\u0027s end time","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Peanuts359"},"content":"    public Event(String name, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Peanuts359"},"content":"        super(name);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Peanuts359"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Peanuts359"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Peanuts359"},"content":"    @Override","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Peanuts359"},"content":"    public String toString() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Peanuts359"},"content":"        return \"[E] \" + super.toString() + \" (from: \"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Peanuts359"},"content":"                + start.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")) + \" to: \"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Peanuts359"},"content":"                + end.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")) + \")\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Peanuts359"},"content":"    @Override","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Peanuts359"},"content":"    public String saveFormat() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Peanuts359"},"content":"        return \"E\" + super.saveFormat() + \" | \"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Peanuts359"},"content":"                + start.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")) + \" | \"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Peanuts359"},"content":"                + end.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Peanuts359"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"Peanuts359":39}},{"path":"src/main/java/guy/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Peanuts359"},"content":"package guy.tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Peanuts359"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Peanuts359"},"content":" * Abstract representation of a generic task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Peanuts359"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Peanuts359"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Peanuts359"},"content":"    protected String name;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Peanuts359"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Peanuts359"},"content":"     * Constructs a Task with the given name.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Peanuts359"},"content":"     * Can\u0027t actually be called since the class is abstract.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Peanuts359"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Peanuts359"},"content":"     * @param name the name of the task","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Peanuts359"},"content":"    public Task(String name) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Peanuts359"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Peanuts359"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Peanuts359"},"content":"     * Flags the Task as complete.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Peanuts359"},"content":"    public void markComplete() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Peanuts359"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Peanuts359"},"content":"     * Flags the Task as incomplete.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Peanuts359"},"content":"    public void markIncomplete() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Peanuts359"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Peanuts359"},"content":"     * Returns a symbol representing the Task\u0027s completion status.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Peanuts359"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Peanuts359"},"content":"     * @return \"X\" symbol if the Task was complete, \" \" otherwise","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Peanuts359"},"content":"    public String getStatus() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Peanuts359"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Peanuts359"},"content":"     * Checks a Task\u0027s completion status.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Peanuts359"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Peanuts359"},"content":"     * @return completion status of tht Task","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Peanuts359"},"content":"    public boolean isComplete() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Peanuts359"},"content":"        return isDone;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Peanuts359"},"content":"     * Returns the string representation of the Task for use within ThatOneGuy.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Peanuts359"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Peanuts359"},"content":"     * @return string representation of the Task","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Peanuts359"},"content":"    @Override","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Peanuts359"},"content":"    public String toString() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Peanuts359"},"content":"        return (\u0027[\u0027 + getStatus() + \u0027]\u0027 + \u0027 \u0027 + name);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Peanuts359"},"content":"     * Returns the string representation of the Task to be saved to a file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Peanuts359"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Peanuts359"},"content":"     * @return string representation of the Task","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Peanuts359"},"content":"    public String saveFormat() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Peanuts359"},"content":"        return (\" | \" + (isDone ? 1 : 0) + \" | \" + name);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Peanuts359"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"Peanuts359":71}},{"path":"src/main/java/guy/tasks/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Peanuts359"},"content":"package guy.tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Peanuts359"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Peanuts359"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Peanuts359"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Peanuts359"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Peanuts359"},"content":"import guy.exception.GuyException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Peanuts359"},"content":"import guy.storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Peanuts359"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Peanuts359"},"content":" * Class responsible for managing a list of tasks in the ThatOneGuy application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Peanuts359"},"content":" * Only one instance of this class exists at a time.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Peanuts359"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Peanuts359"},"content":"public class TaskManager {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Peanuts359"},"content":"    private static TaskManager tm;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Peanuts359"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Peanuts359"},"content":"     * Constructs a new TaskManager object.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Peanuts359"},"content":"    public TaskManager() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Peanuts359"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Peanuts359"},"content":"     * Retrieves the instance of this class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Peanuts359"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Peanuts359"},"content":"     * @return the instance of TaskManager","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Peanuts359"},"content":"    public static TaskManager getInstance() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Peanuts359"},"content":"        if (tm \u003d\u003d null) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Peanuts359"},"content":"            tm \u003d new TaskManager();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Peanuts359"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Peanuts359"},"content":"        return tm;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Peanuts359"},"content":"     * Loads a task from its string representation, adding it to the list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Peanuts359"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Peanuts359"},"content":"     * @param data string representation of the task","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Peanuts359"},"content":"    public void loadData(String data) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Peanuts359"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Peanuts359"},"content":"            DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Peanuts359"},"content":"            String[] line \u003d data.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Peanuts359"},"content":"            String type \u003d line[0];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Peanuts359"},"content":"            Task task \u003d switch (type) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Peanuts359"},"content":"                case \"T\" -\u003e new ToDo(line[2]);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Peanuts359"},"content":"                case \"D\" -\u003e new Deadline(line[2], LocalDateTime.parse(line[3], dtf));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Peanuts359"},"content":"                case \"E\" -\u003e new Event(line[2], LocalDateTime.parse(line[3], dtf), LocalDateTime.parse(line[4], dtf));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Peanuts359"},"content":"                default -\u003e throw new GuyException(\"Why did you give me a file with an invalid line, you dingus...\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Peanuts359"},"content":"            };","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Peanuts359"},"content":"            if (line[1].equals(\"1\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Peanuts359"},"content":"                task.markComplete();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Peanuts359"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Peanuts359"},"content":"            tasks.add(task);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Peanuts359"},"content":"        } catch (GuyException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Peanuts359"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Peanuts359"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Peanuts359"},"content":"     * Displays the list of tasks, or a rather rude message if no task exists.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Peanuts359"},"content":"    public void list() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Peanuts359"},"content":"        int len \u003d tasks.size();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Peanuts359"},"content":"        if (len \u003d\u003d 0) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Peanuts359"},"content":"            System.out.println(\"You really don\u0027t have anything better to do?\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Peanuts359"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Peanuts359"},"content":"        else {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Peanuts359"},"content":"            System.out.println(\"Here are your damned tasks. Complete them or something.\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Peanuts359"},"content":"            for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Peanuts359"},"content":"                System.out.println((i + 1) + \". \" + tasks.get(i).toString());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Peanuts359"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Peanuts359"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Peanuts359"},"content":"     * Retrieves a copy of the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Peanuts359"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Peanuts359"},"content":"     * @return an ArrayList with the current tasks","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Peanuts359"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Peanuts359"},"content":"        return new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Peanuts359"},"content":"     * Marks a task as completed, screaming at the user if unable to do so.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Peanuts359"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Peanuts359"},"content":"     * @param input index of the task to mark as done","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Peanuts359"},"content":"     * @throws GuyException if the input is missing/invalid/out of range, or the task list is empty","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Peanuts359"},"content":"    public void markTask(String input) throws GuyException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Peanuts359"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Peanuts359"},"content":"            throw new GuyException(\"You have nothing to do. You lazy or what?\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Peanuts359"},"content":"        } else if (input.isEmpty()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Peanuts359"},"content":"            throw new GuyException(\"What do you want me to mark, you moron!?\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Peanuts359"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Peanuts359"},"content":"        String rest \u003d input.replaceAll(\"\\\\D+\", \"\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Peanuts359"},"content":"        if (rest.isEmpty()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Peanuts359"},"content":"            throw new GuyException(\"I can\u0027t work without a valid input. Screw you.\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Peanuts359"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Peanuts359"},"content":"        int id \u003d Integer.parseInt(rest) - 1;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Peanuts359"},"content":"        if (id \u003c 0 || id \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Peanuts359"},"content":"            throw new GuyException(\"Consider picking a number that\u0027s actually in range.\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Peanuts359"},"content":"        } else {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Peanuts359"},"content":"            if (tasks.get(id).isComplete()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Peanuts359"},"content":"                System.out.println(\"You dingus. This task was already done:\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Peanuts359"},"content":"            } else {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Peanuts359"},"content":"                tasks.get(id).markComplete();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Peanuts359"},"content":"                System.out.println(\"Eh. Consider this task done:\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Peanuts359"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Peanuts359"},"content":"            Storage.saveData();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Peanuts359"},"content":"            System.out.println(tasks.get(id).toString());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Peanuts359"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Peanuts359"},"content":"     * Marks a task as incomplete, screaming at the user if unable to do so.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Peanuts359"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Peanuts359"},"content":"     * @param input index of the task to mark as not done","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Peanuts359"},"content":"     * @throws GuyException if the input is missing/invalid/out of range, or the task list is empty","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Peanuts359"},"content":"    public void unmarkTask(String input) throws GuyException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Peanuts359"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Peanuts359"},"content":"            throw new GuyException(\"You have nothing to do. You lazy or what?\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Peanuts359"},"content":"        } else if (input.isEmpty()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Peanuts359"},"content":"            throw new GuyException(\"What do you want me to unmark, you moron!?\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Peanuts359"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Peanuts359"},"content":"        String rest \u003d input.replaceAll(\"\\\\D+\", \"\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Peanuts359"},"content":"        if (rest.isEmpty()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Peanuts359"},"content":"            throw new GuyException(\"I can\u0027t work without a valid input. Screw you.\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Peanuts359"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Peanuts359"},"content":"        int id \u003d Integer.parseInt(rest) - 1;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Peanuts359"},"content":"        if (id \u003c 0 || id \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Peanuts359"},"content":"            throw new GuyException(\"Consider picking a number that\u0027s actually in range.\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Peanuts359"},"content":"        } else {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Peanuts359"},"content":"            if (!tasks.get(id).isComplete()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Peanuts359"},"content":"                System.out.println(\"You dingus. This task still hasn\u0027t been done:\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Peanuts359"},"content":"            } else {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Peanuts359"},"content":"                tasks.get(id).markIncomplete();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Peanuts359"},"content":"                System.out.println(\"Sucks to be you. Looks like you haven\u0027t done this task:\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Peanuts359"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Peanuts359"},"content":"            Storage.saveData();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Peanuts359"},"content":"            System.out.println(tasks.get(id).toString());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Peanuts359"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Peanuts359"},"content":"     * Adds a new task to the list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Peanuts359"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Peanuts359"},"content":"     * @param cmd the type of task to add, can be a todo/deadline/event","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Peanuts359"},"content":"     * @param input task description, including dates and times, where appropriate","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Peanuts359"},"content":"     * @throws GuyException if the input is invalid","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Peanuts359"},"content":"    public void addTask(String cmd, String input) throws GuyException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Peanuts359"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Peanuts359"},"content":"            if (input.isEmpty()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Peanuts359"},"content":"                throw new GuyException(\"You really think I can add an EMPTY TASK!?\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Peanuts359"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Peanuts359"},"content":"            Task task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Peanuts359"},"content":"            DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Peanuts359"},"content":"            switch (cmd) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Peanuts359"},"content":"                case \"todo\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Peanuts359"},"content":"                    task \u003d new ToDo(input);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Peanuts359"},"content":"                    break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Peanuts359"},"content":"                case \"deadline\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Peanuts359"},"content":"                    if (!input.contains(\"/by\") || input.indexOf(\"/by\") \u003d\u003d input.length() - 3) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Peanuts359"},"content":"                        throw new GuyException(\"That isn\u0027t even a valid description!\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Peanuts359"},"content":"                    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Peanuts359"},"content":"                    String[] splitted \u003d input.split(\"/by\", 2);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Peanuts359"},"content":"                    task \u003d new Deadline(splitted[0].trim(), LocalDateTime.parse(splitted[1].trim(), dtf));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Peanuts359"},"content":"                    break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Peanuts359"},"content":"                case \"event\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Peanuts359"},"content":"                    if (","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Peanuts359"},"content":"                            !input.contains(\"/from\") ||","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Peanuts359"},"content":"                                    !input.contains(\"/to\") ||","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Peanuts359"},"content":"                                    input.indexOf(\"/from\") \u003d\u003d input.length() - 5 ||","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Peanuts359"},"content":"                                    input.indexOf(\"/to\") \u003d\u003d input.length() - 2","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Peanuts359"},"content":"                    ) throw new GuyException(\"That isn\u0027t even a valid description!\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Peanuts359"},"content":"                    String[] splitFrom \u003d input.split(\"/from\", 2);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Peanuts359"},"content":"                    String[] splitTo \u003d splitFrom[1].split(\"/to\", 2);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Peanuts359"},"content":"                    task \u003d new Event(splitFrom[0].trim(),","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Peanuts359"},"content":"                            LocalDateTime.parse(splitTo[0].trim(), dtf),","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Peanuts359"},"content":"                            LocalDateTime.parse(splitTo[1].trim(), dtf));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Peanuts359"},"content":"                    break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Peanuts359"},"content":"                default:","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Peanuts359"},"content":"                    throw new GuyException(\"That\u0027s not even a task type!\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Peanuts359"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Peanuts359"},"content":"            tasks.add(task);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Peanuts359"},"content":"            Storage.saveData();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Peanuts359"},"content":"            System.out.println(\"Fine. Added this lousy task:\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Peanuts359"},"content":"            System.out.println(task);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Peanuts359"},"content":"            System.out.println(\"That\u0027s \" + tasks.size() + \" tasks for your ass to handle.\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Peanuts359"},"content":"        } catch (GuyException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Peanuts359"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Peanuts359"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Peanuts359"},"content":"            System.out.println(\"I got a problem, and it sure as f*** ain\u0027t my fault! It says: \\n\" + e.getMessage());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Peanuts359"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Peanuts359"},"content":"     * Removes a task from the list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Peanuts359"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Peanuts359"},"content":"     * @param input index of the task to remove","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Peanuts359"},"content":"     * @throws GuyException if the input is missing/invalid/out of range, or the task list is already empty","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Peanuts359"},"content":"    public void deleteTask(String input) throws GuyException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Peanuts359"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Peanuts359"},"content":"            if (tasks.isEmpty()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Peanuts359"},"content":"                throw new GuyException(\"You have nothing to delete. You dumb or what?\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Peanuts359"},"content":"            } else if (input.isEmpty()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Peanuts359"},"content":"                throw new GuyException(\"What do you want me to delete, you moron!?\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Peanuts359"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Peanuts359"},"content":"            String rest \u003d input.replaceAll(\"\\\\D+\", \"\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Peanuts359"},"content":"            if (rest.isEmpty()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Peanuts359"},"content":"                throw new GuyException(\"I can\u0027t work without a valid input. Screw you.\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Peanuts359"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Peanuts359"},"content":"            int id \u003d Integer.parseInt(rest) - 1;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Peanuts359"},"content":"            if (id \u003c 0 || id \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Peanuts359"},"content":"                throw new GuyException(\"Consider picking a number that\u0027s actually in range.\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Peanuts359"},"content":"            } else {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Peanuts359"},"content":"                Task task \u003d tasks.get(id);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Peanuts359"},"content":"                tasks.remove(id);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Peanuts359"},"content":"                Storage.saveData();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Peanuts359"},"content":"                System.out.println(\"There goes this dumb task:\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Peanuts359"},"content":"                System.out.println(task);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Peanuts359"},"content":"                System.out.println(\"Your ass still needs to handle \" + tasks.size() + \" more tasks.\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Peanuts359"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Peanuts359"},"content":"        } catch (GuyException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Peanuts359"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Peanuts359"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Peanuts359"},"content":"     * Retrieves a list of tasks matching the given keywords.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Peanuts359"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Peanuts359"},"content":"     * @param input keywords used in the search","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Peanuts359"},"content":"     * @throws GuyException if no task matches the input","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Peanuts359"},"content":"    public void findTask(String input) throws GuyException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Peanuts359"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Peanuts359"},"content":"        for (Task t: tasks) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Peanuts359"},"content":"            if (t.toString().contains(input)) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Peanuts359"},"content":"                matchingTasks.add(t);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Peanuts359"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Peanuts359"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Peanuts359"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Peanuts359"},"content":"            throw new GuyException(\"You really tried to give me keywords that match NONE of your tasks. Shame on you.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Peanuts359"},"content":"        } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Peanuts359"},"content":"            System.out.println(\"These are your damned tasks, that actually match the keywords:\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Peanuts359"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Peanuts359"},"content":"                System.out.printf(\"%d.%s\\n\", i+1, matchingTasks.get(i).toString());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Peanuts359"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Peanuts359"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Peanuts359"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"Peanuts359":261}},{"path":"src/main/java/guy/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Peanuts359"},"content":"package guy.tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Peanuts359"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Peanuts359"},"content":" * Representation of a task to be done.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Peanuts359"},"content":" * No dates attached.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Peanuts359"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Peanuts359"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Peanuts359"},"content":"     * Constructs a new ToDo task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Peanuts359"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Peanuts359"},"content":"     * @param name description of the task","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Peanuts359"},"content":"    public ToDo(String name) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Peanuts359"},"content":"        super(name);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Peanuts359"},"content":"    @Override","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Peanuts359"},"content":"    public String toString() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Peanuts359"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Peanuts359"},"content":"    @Override","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Peanuts359"},"content":"    public String saveFormat() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Peanuts359"},"content":"        return \"T\" + super.saveFormat();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Peanuts359"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"Peanuts359":25}},{"path":"src/main/java/guy/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Peanuts359"},"content":"package guy.ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Peanuts359"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Peanuts359"},"content":" * The class handling the main UI logic for the ThatOneGuy application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Peanuts359"},"content":" * Supports displaying startup and shutdown messages, albeit somewhat rude ones.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Peanuts359"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Peanuts359"},"content":"public class Ui {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Peanuts359"},"content":"    String name \u003d \"that one guy\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Peanuts359"},"content":"     * Displays a startup message, complete with the application name.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Peanuts359"},"content":"    public void greet() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Peanuts359"},"content":"        System.out.println(\"I\u0027m \" + name + \".\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Peanuts359"},"content":"        System.out.println(\"Make it quick, I don\u0027t have much time.\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Peanuts359"},"content":"     * Displays a shutdown message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Peanuts359"},"content":"    public void bye() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Peanuts359"},"content":"        System.out.println(\"Whatever. Hope you never come back.\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Peanuts359"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"Peanuts359":24}},{"path":"src/test/java/guy/ThatOneGuyTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Peanuts359"},"content":"package guy;  //same package as the class being tested","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Peanuts359"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Peanuts359"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Peanuts359"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Peanuts359"},"content":" * Test class for the ThatOneGuy class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Peanuts359"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Peanuts359"},"content":"public class ThatOneGuyTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Peanuts359"},"content":"     * Dummy test to confirm that the test environment works.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Peanuts359"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Peanuts359"},"content":"    public void dummyTest(){","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Peanuts359"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Peanuts359"},"content":"     * Dummy test to confirm that the test environment works.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Peanuts359"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Peanuts359"},"content":"    public void anotherDummyTest(){","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Peanuts359"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Peanuts359"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Peanuts359":25}},{"path":"src/test/java/guy/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Peanuts359"},"content":"package guy.parser;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Peanuts359"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Peanuts359"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Peanuts359"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Peanuts359"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Peanuts359"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Peanuts359"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Peanuts359"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Peanuts359"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Peanuts359"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Peanuts359"},"content":" * Test class for the Parser class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Peanuts359"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Peanuts359"},"content":"public class ParserTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Peanuts359"},"content":"    private static final ByteArrayOutputStream outContent \u003d","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Peanuts359"},"content":"            new ByteArrayOutputStream();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Peanuts359"},"content":"    private static final ByteArrayOutputStream errContent \u003d","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Peanuts359"},"content":"            new ByteArrayOutputStream();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Peanuts359"},"content":"    private static final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Peanuts359"},"content":"    private static final PrintStream originalErr \u003d System.err;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Peanuts359"},"content":"     * Sets up the output streams for testing.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Peanuts359"},"content":"    @BeforeAll","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Peanuts359"},"content":"    public static void start() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Peanuts359"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Peanuts359"},"content":"        System.setErr(new PrintStream(errContent));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Peanuts359"},"content":"     * Resets the output streams after testing.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Peanuts359"},"content":"    @AfterAll","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Peanuts359"},"content":"    public static void end() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Peanuts359"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Peanuts359"},"content":"        System.setErr(originalErr);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Peanuts359"},"content":"     * Tests the Parser\u0027s response to being given an invalid command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Peanuts359"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Peanuts359"},"content":"    public void invalidTest() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Peanuts359"},"content":"        Parser p \u003d new Parser(new Scanner(new ByteArrayInputStream(\"nutmeg\".getBytes())));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Peanuts359"},"content":"        outContent.reset();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Peanuts359"},"content":"        p.cmd();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Peanuts359"},"content":"        assertEquals(\"Maybe put in an actual command next time, shitass.\", outContent.toString().trim());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Peanuts359"},"content":"     * Tests the Parser\u0027s response to being given the exit command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Peanuts359"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Peanuts359"},"content":"    public void exitTest() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Peanuts359"},"content":"        Parser p \u003d new Parser(new Scanner(new ByteArrayInputStream(\"bye\".getBytes())));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Peanuts359"},"content":"        outContent.reset();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Peanuts359"},"content":"        p.cmd();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Peanuts359"},"content":"        assertEquals(\"\", outContent.toString().trim());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Peanuts359"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Peanuts359":64}},{"path":"src/test/java/guy/tasks/TaskManagerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Peanuts359"},"content":"package guy.tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Peanuts359"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Peanuts359"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Peanuts359"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Peanuts359"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Peanuts359"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Peanuts359"},"content":"import guy.parser.Parser;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Peanuts359"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Peanuts359"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Peanuts359"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Peanuts359"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Peanuts359"},"content":" * Test class for the TaskManager class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Peanuts359"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Peanuts359"},"content":"public class TaskManagerTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Peanuts359"},"content":"    private static final ByteArrayOutputStream outContent \u003d","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Peanuts359"},"content":"            new ByteArrayOutputStream();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Peanuts359"},"content":"    private static final ByteArrayOutputStream errContent \u003d","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Peanuts359"},"content":"            new ByteArrayOutputStream();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Peanuts359"},"content":"    private static final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Peanuts359"},"content":"    private static final PrintStream originalErr \u003d System.err;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Peanuts359"},"content":"     * Sets up the output streams for testing.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Peanuts359"},"content":"    @BeforeAll","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Peanuts359"},"content":"    public static void start() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Peanuts359"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Peanuts359"},"content":"        System.setErr(new PrintStream(errContent));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Peanuts359"},"content":"     * Resets the output streams after testing.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Peanuts359"},"content":"    @AfterAll","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Peanuts359"},"content":"    public static void end() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Peanuts359"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Peanuts359"},"content":"        System.setErr(originalErr);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Peanuts359"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Peanuts359"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Peanuts359"},"content":"     * Tests the TaskManager\u0027s response to being given an input with no description.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Peanuts359"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Peanuts359"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Peanuts359"},"content":"    public void fieldlessTest() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Peanuts359"},"content":"        Parser p \u003d new Parser(new Scanner(new ByteArrayInputStream(\"event\".getBytes())));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Peanuts359"},"content":"        outContent.reset();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Peanuts359"},"content":"        p.cmd();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Peanuts359"},"content":"        assertEquals(\"You really think I can add an EMPTY TASK!?\", outContent.toString().trim());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Peanuts359"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Peanuts359"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Peanuts359":54}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Peanuts359"},"content":"list","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Peanuts359"},"content":"todo break something","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Peanuts359"},"content":"mark 0","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Peanuts359"},"content":"mark 1","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Peanuts359"},"content":"mark 1","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Peanuts359"},"content":"mark 3","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Peanuts359"},"content":"deadline whack table /by 2024-09-01 12:00","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Peanuts359"},"content":"event malding /from 2024-09-02 11:00 /to 2024-09-04 19:00","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Peanuts359"},"content":"mark 2","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Peanuts359"},"content":"unmark 1","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Peanuts359"},"content":"unmark 1","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Peanuts359"},"content":"list","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Peanuts359"},"content":"eat ass","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Peanuts359"},"content":"delete 1","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Peanuts359"},"content":"list","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Peanuts359"},"content":"event","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Peanuts359"},"content":"delete 1","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Peanuts359"},"content":"delete 1","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Peanuts359"},"content":"delete 1","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Peanuts359"},"content":"bye","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"Peanuts359":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Peanuts359"},"content":"javac  -cp ..\\src\\main\\java\\guy -Xlint:none -d ..\\bin ..\\src\\main\\java\\guy\\*.java","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Peanuts359"},"content":"java -classpath ..\\bin guy.ThatOneGuy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Peanuts359":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Peanuts359"},"content":"java -classpath ../bin ThatOneGuy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Peanuts359":1,"-":37}}]
