[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"althea28"},"content":"    //mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"althea28"},"content":"    //mainClass.set(\"duke.Duck\")","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"althea28"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"althea28"},"content":"    archiveBaseName \u003d \"duke.jar\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"althea28"},"content":"repositories {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"althea28"},"content":"    mavenCentral()","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"althea28"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"althea28"},"content":"dependencies {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"althea28"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"althea28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"althea28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"althea28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"althea28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"althea28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"althea28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"althea28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"althea28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"althea28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"althea28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"althea28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"althea28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"althea28"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"-":39,"althea28":27}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"althea28"},"content":"10","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"althea28"},"content":"T | 1 | asdas","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"althea28"},"content":"D | 0 | adas  | 2020-03-03","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"althea28"},"content":"E | 0 | aasdad  | 2020-02-02 | 2020-03-04","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"althea28"},"content":"D | 0 | asfasf  | 2022-02-02","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"althea28"},"content":"E | 0 | adsas  | 2022-02-02 | 2023-03-03","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"althea28"},"content":"T | 0 | asasggasf","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"althea28"},"content":"D | 1 | ine asafafs  | 2022-02-02","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"althea28"},"content":"E | 0 | asda  | 2023-03-03 | 2025-03-03","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"althea28"},"content":"T | 0 | asdasgg","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"althea28"},"content":"E | 0 | lldllsld  | 2022-02-02 | 2024-04-04","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"althea28":11}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"althea28"},"content":"package duke;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"althea28"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"althea28"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"althea28"},"content":" * Represents a Task with a specified deadline.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"althea28"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"althea28"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"althea28"},"content":"    LocalDate date;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"althea28"},"content":"    private static final String type \u003d \"[D]\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"althea28"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"althea28"},"content":"        super(description);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"althea28"},"content":"        date \u003d LocalDate.parse(deadline);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"althea28"},"content":"     * Returns date of deadline task, when Storage.save() is called.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"althea28"},"content":"     * @return String date.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"althea28"},"content":"    public String getDates() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"althea28"},"content":"        return \" | \" + date;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"althea28"},"content":"     * Returns description and date of deadline task, when TaskList.printTasks() is called.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"althea28"},"content":"     * @return String task description and date.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"althea28"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"althea28"},"content":"        return type + super.toString() + \"(by: \" + super.dateConverter(date) + \")\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"althea28"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"althea28":34}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"althea28"},"content":"package duke;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"althea28"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"althea28"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"althea28"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"althea28"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"althea28"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"althea28"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"althea28"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"althea28"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"althea28"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"althea28"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"althea28"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"althea28"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"althea28"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"althea28"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"althea28"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"althea28"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"althea28"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"althea28"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"althea28"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"althea28"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"althea28"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"althea28"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"althea28"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"althea28"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"althea28"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"althea28"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"althea28"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"althea28"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"althea28"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"althea28"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"althea28"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"althea28"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"althea28"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"althea28"},"content":"    private void flip() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"althea28"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"althea28"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"althea28"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"althea28"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"althea28"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"althea28"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"althea28"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"althea28"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"althea28"},"content":"        db.flip();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"althea28"},"content":"        return db;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"althea28"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"althea28":59}},{"path":"src/main/java/duke/Duck.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"althea28"},"content":"package duke;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"althea28"},"content":"import java.util.Objects;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"althea28"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"althea28"},"content":" * Represents a Duck chatbot object.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"althea28"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"althea28"},"content":"public class Duck {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"althea28"},"content":"    private TaskList tasklist;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"althea28"},"content":"    //private static String previousCommand;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"althea28"},"content":"    private static Undo undo;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"althea28"},"content":"    Duck() throws DuckException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"althea28"},"content":"        tasklist \u003d new TaskList(Storage.load(), Storage.loadNum());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"althea28"},"content":"        undo \u003d new Undo();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"althea28"},"content":"        //previousCommand \u003d \"\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"althea28"},"content":"     * Responds to user input.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"althea28"},"content":"     * @param input user input to be responded to.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"althea28"},"content":"     * @return String response from Duck.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"althea28"},"content":"     * @throws DuckException if command given is not valid.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"althea28"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"althea28"},"content":"    public String getResponse(String input) throws DuckException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"althea28"},"content":"        assert !input.isEmpty(): \"User input cannot be empty\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"althea28"},"content":"        return Parser.parseCommand(tasklist, input);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"-":2,"althea28":29}},{"path":"src/main/java/duke/DuckException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"althea28"},"content":"package duke;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"althea28"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"althea28"},"content":" * Represents exception encoutered by Duck chatbot.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"althea28"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"althea28"},"content":"public class DuckException extends Exception {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"althea28"},"content":"    public DuckException(String message) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"althea28"},"content":"        super(message);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"althea28"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"althea28":9}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"althea28"},"content":"package duke;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"althea28"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"althea28"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"althea28"},"content":" * Represents a Task with a specified start and end time.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"althea28"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"althea28"},"content":"public class Event extends Task{","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"althea28"},"content":"    LocalDate fromDate;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"althea28"},"content":"    LocalDate toDate;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"althea28"},"content":"    private static final String type \u003d \"[E]\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"althea28"},"content":"    public Event(String descr, String start, String end) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"althea28"},"content":"        super(descr);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"althea28"},"content":"        fromDate \u003d LocalDate.parse(start);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"althea28"},"content":"        toDate \u003d LocalDate.parse(end);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"althea28"},"content":"     * Returns date of event task, when Storage.save() is called.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"althea28"},"content":"     * @return String date.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"althea28"},"content":"    public String getDates() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"althea28"},"content":"        return \" | \" + fromDate + \" | \"+toDate;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"althea28"},"content":"     * Returns description and date of event task, when TaskList.printTasks() is called.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"althea28"},"content":"     * @return String task description and date.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"althea28"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"althea28"},"content":"        return type + super.toString() + \"(from: \" + super.dateConverter(fromDate) + \" to: \" + super.dateConverter(toDate) + \")\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"althea28"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"althea28":33}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"althea28"},"content":"package duke;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"althea28"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"althea28"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"althea28"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"althea28"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"althea28"},"content":"public class Launcher {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"althea28"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"althea28"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"althea28"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"althea28":11}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"althea28"},"content":"package duke;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"althea28"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"althea28"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"althea28"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"althea28"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"althea28"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"althea28"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"althea28"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"althea28"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"althea28"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"althea28"},"content":"public class Main extends Application {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"althea28"},"content":"    private Duck duck \u003d new Duck();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"althea28"},"content":"    public Main() throws DuckException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"althea28"},"content":"    @Override","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"althea28"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"althea28"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"althea28"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"althea28"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"althea28"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"althea28"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"althea28"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duck);  // inject the Duke instance","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"althea28"},"content":"            stage.show();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"althea28"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"althea28"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"althea28"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"althea28":33}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"althea28"},"content":"package duke;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"althea28"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"althea28"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"althea28"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"althea28"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"althea28"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"althea28"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"althea28"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"althea28"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"althea28"},"content":" * Controller for the main GUI.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"althea28"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"althea28"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"althea28"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"althea28"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"althea28"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"althea28"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"althea28"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"althea28"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"althea28"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"althea28"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"althea28"},"content":"    private Duck duck;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"althea28"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"althea28"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duck.png\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"althea28"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"althea28"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"althea28"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"althea28"},"content":"    /** Injects the Duke instance */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"althea28"},"content":"    public void setDuke(Duck d) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"althea28"},"content":"        duck \u003d d;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"althea28"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"althea28"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"althea28"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"althea28"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"althea28"},"content":"    private void handleUserInput() throws DuckException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"althea28"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"althea28"},"content":"        String response \u003d duck.getResponse(input);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"althea28"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"althea28"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"althea28"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"althea28"},"content":"        );","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"althea28"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"althea28"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"althea28":51}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"althea28"},"content":"package duke;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"althea28"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"althea28"},"content":" * Helper to parse through a given command.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"althea28"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"althea28"},"content":"public class Parser {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"althea28"},"content":"    private static final int INDEX_INVALID \u003d -1;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"althea28"},"content":"    private static final int INDEX_OFFSET_BY \u003d 4;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"althea28"},"content":"    private static final int INDEX_OFFSET_FROM \u003d 6;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"althea28"},"content":"    private static final int INDEX_OFFSET_TO \u003d 4;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"althea28"},"content":"    private static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"althea28"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"althea28"},"content":"    private static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"althea28"},"content":"    private static final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"althea28"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"althea28"},"content":"    private static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"althea28"},"content":"    private static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"althea28"},"content":"    private static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"althea28"},"content":"    private static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"althea28"},"content":"    private static final String COMMAND_UNDO \u003d \"undo\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"althea28"},"content":"    private static final String COMMAND_DATE_SEPARATOR \u003d \"/\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"althea28"},"content":"    private static final String REPLY_BYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"althea28"},"content":"    private static final String REPLY_EMPTY_TASK_DESCRIPTION \u003d \"The description of a task cannot be empty.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"althea28"},"content":"    private static final String REPLY_MISSING_DEADLINE \u003d \"A deadline needs an end date.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"althea28"},"content":"    private static final String REPLY_MISSING_EVENT_DATE \u003d \"An event needs both a start and end date or time.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"althea28"},"content":"    private static final String REPLY_INVALID_FIND_KEYWORDS \u003d \"Cannot find an empty string.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"althea28"},"content":"    private static final String REPLY_INVALID_COMMAND \u003d \"I don\u0027t recognise that command.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"althea28"},"content":"    private static final String REPLY_NO_PREVIOUS_COMMAND \u003d \"There is no previous command to undo.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"althea28"},"content":"     * Interprets a given command, and returns interpreted reply from Duck.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"althea28"},"content":"     * @param taskList TaskList of existing commands.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"althea28"},"content":"     * @param userCommand String command to be interpreted.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"althea28"},"content":"     * @return String reply from Duck.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"althea28"},"content":"     * @throws DuckException if file is corrupted.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"althea28"},"content":"    public static String parseCommand(TaskList taskList, String userCommand) throws DuckException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"althea28"},"content":"        assert !userCommand.isEmpty() : \"Command cannot be empty\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"althea28"},"content":"        if (checkByeCommand(userCommand)) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"althea28"},"content":"            return executeByeCommand(taskList);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"althea28"},"content":"        } else if (checkListCommand(userCommand)) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"althea28"},"content":"            return taskList.getAllTasks();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"althea28"},"content":"        } else if (checkMarkCommand(userCommand)) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"althea28"},"content":"            return markTask(taskList, userCommand);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"althea28"},"content":"        } else if (checkUnmarkCommand(userCommand)) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"althea28"},"content":"            return unmarkTask(taskList, userCommand);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"althea28"},"content":"        } else if (checkDeleteCommand(userCommand)) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"althea28"},"content":"            return deleteTask(taskList, userCommand);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"althea28"},"content":"        } else if (checkFindCommand(userCommand)) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"althea28"},"content":"            return findMatchingTasks(taskList, userCommand);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"althea28"},"content":"        } else if (checkTodoCommand(userCommand)) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"althea28"},"content":"            return addTodoTask(taskList, userCommand);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"althea28"},"content":"        } else if (checkDeadlineCommand(userCommand)) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"althea28"},"content":"            return addDeadlineTask(taskList, userCommand);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"althea28"},"content":"        } else if (checkEventCommand(userCommand)) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"althea28"},"content":"            return addEventTask(taskList, userCommand);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"althea28"},"content":"        } else if (checkUndoCommand(userCommand)) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"althea28"},"content":"            return undoLastCommand(taskList);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"althea28"},"content":"        } else {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"althea28"},"content":"            return REPLY_INVALID_COMMAND;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"althea28"},"content":"     * Check if the user command is a \u0027bye\u0027 command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"althea28"},"content":"     * @param userCommand String command to be interpreted.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"althea28"},"content":"     * @return boolean representing if command is a \u0027bye\u0027 command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"althea28"},"content":"    private static boolean checkByeCommand(String userCommand) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"althea28"},"content":"        return userCommand.trim().equalsIgnoreCase(COMMAND_BYE);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"althea28"},"content":"     * Check if the user command is a \u0027list\u0027 command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"althea28"},"content":"     * @param userCommand String command to be interpreted.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"althea28"},"content":"     * @return boolean representing if command is a \u0027list\u0027 command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"althea28"},"content":"    private static boolean checkListCommand(String userCommand) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"althea28"},"content":"        return userCommand.trim().equalsIgnoreCase(COMMAND_LIST);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"althea28"},"content":"     * Check if the user command is a \u0027mark\u0027 command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"althea28"},"content":"     * @param userCommand String command to be interpreted.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"althea28"},"content":"     * @return boolean representing if command is a \u0027mark\u0027 command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"althea28"},"content":"    private static boolean checkMarkCommand(String userCommand) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"althea28"},"content":"        if (userCommand.length() \u003c COMMAND_MARK.length()) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"althea28"},"content":"            return false;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"althea28"},"content":"        return userCommand.substring(0, COMMAND_MARK.length()).equalsIgnoreCase(COMMAND_MARK);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"althea28"},"content":"     * Check if the user command is a \u0027unmark\u0027 command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"althea28"},"content":"     * @param userCommand String command to be interpreted.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"althea28"},"content":"     * @return boolean representing if command is a \u0027unmark\u0027 command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"althea28"},"content":"    private static boolean checkUnmarkCommand(String userCommand) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"althea28"},"content":"        if (userCommand.length() \u003c COMMAND_UNMARK.length()) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"althea28"},"content":"            return false;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"althea28"},"content":"        return userCommand.substring(0, COMMAND_UNMARK.length()).equalsIgnoreCase(COMMAND_UNMARK);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"althea28"},"content":"     * Check if the user command is a \u0027delete\u0027 command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"althea28"},"content":"     * @param userCommand String command to be interpreted.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"althea28"},"content":"     * @return boolean representing if command is a \u0027delete\u0027 command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"althea28"},"content":"    private static boolean checkDeleteCommand(String userCommand) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"althea28"},"content":"        if (userCommand.length() \u003c COMMAND_DELETE.length()) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"althea28"},"content":"            return false;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"althea28"},"content":"        return userCommand.substring(0, COMMAND_DELETE.length()).equalsIgnoreCase(COMMAND_DELETE);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"althea28"},"content":"     * Check if the user command is a \u0027find\u0027 command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"althea28"},"content":"     * @param userCommand String command to be interpreted.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"althea28"},"content":"     * @return boolean representing if command is a \u0027find\u0027 command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"althea28"},"content":"    private static boolean checkFindCommand(String userCommand) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"althea28"},"content":"        if (userCommand.length() \u003c COMMAND_FIND.length()) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"althea28"},"content":"            return false;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"althea28"},"content":"        return userCommand.substring(0, COMMAND_FIND.length()).equalsIgnoreCase(COMMAND_FIND);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"althea28"},"content":"     * Check if the user command is a \u0027todo\u0027 command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"althea28"},"content":"     * @param userCommand String command to be interpreted.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"althea28"},"content":"     * @return boolean representing if command is a \u0027todo\u0027 command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"althea28"},"content":"    private static boolean checkTodoCommand(String userCommand) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"althea28"},"content":"        if (userCommand.length() \u003c COMMAND_TODO.length()) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"althea28"},"content":"            return false;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"althea28"},"content":"        return userCommand.substring(0, COMMAND_TODO.length()).equalsIgnoreCase(COMMAND_TODO);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"althea28"},"content":"     * Check if the user command is a \u0027deadline\u0027 command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"althea28"},"content":"     * @param userCommand String command to be interpreted.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"althea28"},"content":"     * @return boolean representing if command is a \u0027deadline\u0027 command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"althea28"},"content":"    private static boolean checkDeadlineCommand(String userCommand) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"althea28"},"content":"        if (userCommand.length() \u003c COMMAND_DEADLINE.length()) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"althea28"},"content":"            return false;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"althea28"},"content":"        return userCommand.substring(0, COMMAND_DEADLINE.length()).equalsIgnoreCase(COMMAND_DEADLINE);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"althea28"},"content":"     * Check if the user command is an \u0027event\u0027 command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"althea28"},"content":"     * @param userCommand String command to be interpreted.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"althea28"},"content":"     * @return boolean representing if command is a \u0027event\u0027 command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"althea28"},"content":"    private static boolean checkEventCommand(String userCommand) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"althea28"},"content":"        if (userCommand.length() \u003c COMMAND_EVENT.length()) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"althea28"},"content":"            return false;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"althea28"},"content":"        return userCommand.substring(0, COMMAND_EVENT.length()).equalsIgnoreCase(COMMAND_EVENT);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"althea28"},"content":"     * Check if the user command is an \u0027undo\u0027 command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"althea28"},"content":"     * @param userCommand String command to be interpreted.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"althea28"},"content":"     * @return boolean representing if command is an \u0027undo\u0027 command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"althea28"},"content":"    private static boolean checkUndoCommand(String userCommand) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"althea28"},"content":"        if (userCommand.length() \u003c COMMAND_UNDO.length()) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"althea28"},"content":"            return false;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"althea28"},"content":"        return userCommand.substring(0, COMMAND_UNDO.length()).equalsIgnoreCase(COMMAND_UNDO);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"althea28"},"content":"     * Executes \u0027bye\u0027 command by saving the current task list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"althea28"},"content":"     * @param taskList Current task list to be saved.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"althea28"},"content":"     * @return String response to inform user of successful \u0027bye\u0027 command executed.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"althea28"},"content":"    private static String executeByeCommand(TaskList taskList) throws DuckException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"althea28"},"content":"        taskList.save();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"althea28"},"content":"        return REPLY_BYE;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"althea28"},"content":"     * Marks the task at the index specified by the user.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"althea28"},"content":"     * @param taskList Current task list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"althea28"},"content":"     * @param userCommand String command from user.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"althea28"},"content":"     * @return String response to inform user of successful \u0027mark\u0027 command executed.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"althea28"},"content":"    private static String markTask(TaskList taskList, String userCommand) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"althea28"},"content":"        int taskIndex \u003d Integer.parseInt(userCommand.substring(COMMAND_MARK.length() + 1));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"althea28"},"content":"        Undo.saveCommand(COMMAND_MARK, taskIndex);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"althea28"},"content":"        return taskList.mark(taskIndex);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"althea28"},"content":"     * Unmarks the task at the index specified by the user.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"althea28"},"content":"     * @param taskList Current task list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"althea28"},"content":"     * @param userCommand String command from user.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"althea28"},"content":"     * @return String response to inform user of successful \u0027unmark\u0027 command executed.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"althea28"},"content":"    private static String unmarkTask(TaskList taskList, String userCommand) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"althea28"},"content":"        int taskIndex \u003d Integer.parseInt(userCommand.substring(COMMAND_UNMARK.length() + 1));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"althea28"},"content":"        Undo.saveCommand(COMMAND_UNMARK, taskIndex);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"althea28"},"content":"        return taskList.unmark(taskIndex);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"althea28"},"content":"     * Deletes the task at the index specified by the user.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"althea28"},"content":"     * @param taskList Current task list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"althea28"},"content":"     * @param userCommand String command from user.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"althea28"},"content":"     * @return String response to inform user of successful \u0027delete\u0027 command executed.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"althea28"},"content":"    private static String deleteTask(TaskList taskList, String userCommand) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"althea28"},"content":"        int taskIndex \u003d Integer.valueOf(userCommand.substring(COMMAND_DELETE.length() + 1));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"althea28"},"content":"        Undo.saveCommand(COMMAND_DELETE, taskIndex);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"althea28"},"content":"        Undo.saveTask(taskList.get(taskIndex - 1));","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"althea28"},"content":"        return taskList.delete(taskIndex);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"althea28"},"content":"     * Adds new Todo task to the task list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"althea28"},"content":"     * @param taskList Current task list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"althea28"},"content":"     * @param userCommand String command from user.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"althea28"},"content":"     * @return String response to inform user of successful addition of Todo task.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"althea28"},"content":"    private static String addTodoTask(TaskList taskList, String userCommand) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"althea28"},"content":"        if (userCommand.length() \u003d\u003d COMMAND_TODO.length()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"althea28"},"content":"            return REPLY_EMPTY_TASK_DESCRIPTION;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"althea28"},"content":"        Undo.saveCommand(COMMAND_TODO, taskList.getCmdNum() + 1);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"althea28"},"content":"        return taskList.add(new Todo(userCommand.substring(COMMAND_TODO.length() + 1)));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"althea28"},"content":"     * Adds new Deadline task to the task list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"althea28"},"content":"     * @param taskList Current task list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"althea28"},"content":"     * @param userCommand String command from user.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"althea28"},"content":"     * @return String response to inform user of successful addition of Deadline task.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"althea28"},"content":"    private static String addDeadlineTask(TaskList taskList, String userCommand) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"althea28"},"content":"        if (userCommand.length() \u003d\u003d COMMAND_DEADLINE.length()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"althea28"},"content":"            return REPLY_EMPTY_TASK_DESCRIPTION;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"althea28"},"content":"        String taskDetails \u003d userCommand.substring(COMMAND_TODO.length() + 1);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"althea28"},"content":"        int dateIndex \u003d taskDetails.indexOf(COMMAND_DATE_SEPARATOR);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"althea28"},"content":"        if ((dateIndex \u003d\u003d INDEX_INVALID) || (taskDetails.substring(dateIndex + INDEX_OFFSET_BY).isEmpty())) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"althea28"},"content":"            return REPLY_MISSING_DEADLINE;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"althea28"},"content":"        Undo.saveCommand(COMMAND_DEADLINE, taskList.getCmdNum() + 1);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"althea28"},"content":"        return taskList.add(new Deadline(taskDetails.substring(0, dateIndex),","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"althea28"},"content":"                taskDetails.substring(dateIndex + INDEX_OFFSET_BY)));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"althea28"},"content":"     * Adds new Event task to the task list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"althea28"},"content":"     * @param taskList Current task list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"althea28"},"content":"     * @param userCommand String command from user.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"althea28"},"content":"     * @return String response to inform user of successful addition of Event task.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"althea28"},"content":"    private static String addEventTask(TaskList taskList, String userCommand) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"althea28"},"content":"        if (userCommand.length() \u003d\u003d COMMAND_EVENT.length()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"althea28"},"content":"            return REPLY_EMPTY_TASK_DESCRIPTION;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"althea28"},"content":"        String taskDetails \u003d userCommand.substring(COMMAND_EVENT.length() + 1);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"althea28"},"content":"        int start \u003d taskDetails.indexOf(COMMAND_DATE_SEPARATOR);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"althea28"},"content":"        int end \u003d taskDetails.substring(start + 1).indexOf(COMMAND_DATE_SEPARATOR);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"althea28"},"content":"        if ((start \u003d\u003d INDEX_INVALID) || (end \u003d\u003d INDEX_INVALID)) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"althea28"},"content":"            return REPLY_MISSING_EVENT_DATE;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"althea28"},"content":"        Undo.saveCommand(COMMAND_EVENT, taskList.getCmdNum() + 1);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"althea28"},"content":"        return taskList.add(new Event(taskDetails.substring(0, start),","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"althea28"},"content":"                taskDetails.substring(start + INDEX_OFFSET_FROM, start + end),","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"althea28"},"content":"                taskDetails.substring(start + 1 + end + INDEX_OFFSET_TO)));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"althea28"},"content":"     * Finds all tasks matching keywords given by the user.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"althea28"},"content":"     * @param taskList Current task list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"althea28"},"content":"     * @param userCommand String command from user.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"althea28"},"content":"     * @return String response of all existing tasks that match the keywords given by the user.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"althea28"},"content":"    private static String findMatchingTasks(TaskList taskList, String userCommand){","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"althea28"},"content":"        if (userCommand.length() \u003d\u003d COMMAND_FIND.length()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"althea28"},"content":"            return REPLY_INVALID_FIND_KEYWORDS;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"althea28"},"content":"        return taskList.find(userCommand.substring(COMMAND_FIND.length() + 1));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"althea28"},"content":"     * Undoes the last command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"althea28"},"content":"     * @param taskList Current task list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"althea28"},"content":"     * @return String response to inform user of successful undoing of last command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"althea28"},"content":"    private static String undoLastCommand(TaskList taskList){","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"althea28"},"content":"        if (Undo.checkPreviousCommand()) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"althea28"},"content":"            return REPLY_NO_PREVIOUS_COMMAND;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"althea28"},"content":"        return Undo.undo();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"althea28"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"althea28":339}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"althea28"},"content":"package duke;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"althea28"},"content":"import java.io.File;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"althea28"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"althea28"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"althea28"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"althea28"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"althea28"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"althea28"},"content":"import java.util.List;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"althea28"},"content":"import java.util.Objects;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"althea28"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"althea28"},"content":" * Handles the storage functions of the Duck chatbot.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"althea28"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"althea28"},"content":"public class Storage {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"althea28"},"content":"    private static final String PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"althea28"},"content":"    private static final int TASK_LIST_SIZE \u003d 100;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"althea28"},"content":"    private static final int TASK_PART_TYPE\u003d 0;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"althea28"},"content":"    private static final int TASK_PART_STATUS\u003d 1;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"althea28"},"content":"    private static final int TASK_PART_DESCRIPTION \u003d 2;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"althea28"},"content":"    private static final int TASK_PART_START \u003d 3;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"althea28"},"content":"    private static final int TASK_PART_END \u003d 4;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"althea28"},"content":"    private static final String TASK_STATUS_MARKED \u003d \"1\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"althea28"},"content":"    private static final String TASK_STATUS_UNMARKED \u003d \"0\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"althea28"},"content":"    private static final String TASK_TYPE_TODO \u003d \"T\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"althea28"},"content":"    private static final String TASK_TYPE_DEADLINE \u003d \"D\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"althea28"},"content":"    private static final String TASK_TYPE_EVENT \u003d \"E\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"althea28"},"content":"    public Storage() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"althea28"},"content":"     * Loads all previous tasks that user has input before.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"althea28"},"content":"     * @return Array of all previous tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"althea28"},"content":"     * @throws DuckException if file is corrupted.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"althea28"},"content":"    public static Task[] load() throws DuckException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"althea28"},"content":"        File file \u003d new File(PATH);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"althea28"},"content":"        Task[] tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"althea28"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"althea28"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"althea28"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"althea28"},"content":"                file.createNewFile();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"althea28"},"content":"                return new Task[TASK_LIST_SIZE];","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"althea28"},"content":"            } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"althea28"},"content":"                List\u003cString\u003e taskList \u003d Files.readAllLines(Paths.get(PATH));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"althea28"},"content":"                int numTasks \u003d 0;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"althea28"},"content":"                if (!taskList.isEmpty()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"althea28"},"content":"                    numTasks \u003d Integer.parseInt(String.valueOf(taskList.get(0)));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"althea28"},"content":"                }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"althea28"},"content":"                assert taskList.size() \u003d\u003d numTasks: \"Size of saved task list does not match the number of saved tasks\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"althea28"},"content":"                tasks \u003d new Task[TASK_LIST_SIZE];","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"althea28"},"content":"                for (int i \u003d 1; i\u003cnumTasks + 1; i++) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"althea28"},"content":"                    tasks[i - 1] \u003d parser(taskList.get(i));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"althea28"},"content":"                }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"althea28"},"content":"                return tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"althea28"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"althea28"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"althea28"},"content":"            throw new DuckException(\"Cannot load tasks.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"althea28"},"content":"     * Loads total number of previous tasks that user has input before.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"althea28"},"content":"     * @return Integer total of number of previous tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"althea28"},"content":"     * @throws DuckException if file is corrupted.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"althea28"},"content":"    public static int loadNum() throws DuckException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"althea28"},"content":"        File file \u003d new File(PATH);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"althea28"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"althea28"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"althea28"},"content":"                return 0;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"althea28"},"content":"            } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"althea28"},"content":"                List\u003cString\u003e taskList \u003d Files.readAllLines(Paths.get(PATH));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"althea28"},"content":"                int numTasks \u003d 0;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"althea28"},"content":"                if (!taskList.isEmpty()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"althea28"},"content":"                    numTasks \u003d Integer.parseInt(String.valueOf(taskList.get(0)));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"althea28"},"content":"                }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"althea28"},"content":"                return numTasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"althea28"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"althea28"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"althea28"},"content":"            throw new DuckException(\"Cannot load number of tasks.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"althea28"},"content":"     * Saves current list of tasks after user has made his or her changes.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"althea28"},"content":"     * @param tasks Current list of all tasks to be saved.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"althea28"},"content":"     * @param n Number of tasks in the list to be saved.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"althea28"},"content":"     * @throws DuckException if the list is not formatted correctly.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"althea28"},"content":"    public static void save(Task[] tasks, int n) throws DuckException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"althea28"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"althea28"},"content":"            FileWriter writer \u003d new FileWriter(PATH);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"althea28"},"content":"            writer.write(n + \"\\n\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"althea28"},"content":"            for (int i \u003d 0; i \u003c n; i++) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"althea28"},"content":"                writer.write(saveTask(tasks[i]) + \"\\n\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"althea28"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"althea28"},"content":"            writer.close();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"althea28"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"althea28"},"content":"            throw new DuckException(\"Cannot save tasks.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"althea28"},"content":"     * Parses through a line from the Storage file to convert it from String to its corresponding Task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"althea28"},"content":"     * @param line Line to be parsed through.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"althea28"},"content":"     * @return Task that the input line corresponds to.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"althea28"},"content":"     * @throws DuckException if the line is not in a recognisable format.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"althea28"},"content":"    private static Task parser(String line) throws DuckException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"althea28"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"althea28"},"content":"        if (Objects.equals(parts[TASK_PART_TYPE], TASK_TYPE_TODO)) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"althea28"},"content":"            Task t \u003d new Todo(parts[TASK_PART_DESCRIPTION]);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"althea28"},"content":"            if (parts[TASK_PART_STATUS].equals(TASK_STATUS_MARKED)) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"althea28"},"content":"                t.mark();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"althea28"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"althea28"},"content":"            return t;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"althea28"},"content":"        } else if (Objects.equals(parts[TASK_PART_TYPE], TASK_TYPE_DEADLINE)) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"althea28"},"content":"            Task t \u003d new Deadline(parts[TASK_PART_DESCRIPTION], parts[TASK_PART_START]);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"althea28"},"content":"            if (parts[TASK_PART_STATUS].equals(TASK_STATUS_MARKED)) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"althea28"},"content":"                t.mark();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"althea28"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"althea28"},"content":"            return t;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"althea28"},"content":"        } else if (Objects.equals(parts[TASK_PART_TYPE], TASK_TYPE_EVENT)) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"althea28"},"content":"            Task t \u003d new Event(parts[TASK_PART_DESCRIPTION], parts[TASK_PART_START], parts[TASK_PART_END]);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"althea28"},"content":"            if (parts[TASK_PART_STATUS].equals(TASK_STATUS_MARKED)) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"althea28"},"content":"                t.mark();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"althea28"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"althea28"},"content":"            return t;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"althea28"},"content":"        } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"althea28"},"content":"            throw new DuckException(\"Unrecognised file type.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"althea28"},"content":"     * Saves a given task in specified format.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"althea28"},"content":"     * @param task Task item to be saved.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"althea28"},"content":"     * @return String representation of task to be saved.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"althea28"},"content":"    private static String saveTask(Task task) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"althea28"},"content":"        String done \u003d TASK_STATUS_UNMARKED;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"althea28"},"content":"        if (task.isDone) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"althea28"},"content":"            done \u003d TASK_STATUS_MARKED;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"althea28"},"content":"        String type \u003d \"\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"althea28"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"althea28"},"content":"            type \u003d TASK_TYPE_TODO;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"althea28"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"althea28"},"content":"            type \u003d TASK_TYPE_DEADLINE;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"althea28"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"althea28"},"content":"            type \u003d TASK_TYPE_EVENT;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"althea28"},"content":"        return type + \" | \" + done + \" | \" + task.description + task.getDates();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"althea28"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"althea28":162}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"althea28"},"content":"package duke;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"althea28"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"althea28"},"content":"import java.time.format.TextStyle;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"althea28"},"content":"import java.util.Locale;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"althea28"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"althea28"},"content":" * Represents a Task item with a description.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"althea28"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"althea28"},"content":"public class Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"althea28"},"content":"    protected String description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"althea28"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"althea28"},"content":"    private static final String STATUS_MARKED \u003d \"[X] \";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"althea28"},"content":"    private static final String STATUS_UNMARKED \u003d \"[ ] \";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"althea28"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"althea28"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"althea28"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"althea28"},"content":"    public String getDescription() { return description; }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"althea28"},"content":"     * Returns String value to represent if the task is done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"althea28"},"content":"     * If done, \u0027[X]\u0027 is returned. Else, \u0027[ ]\u0027 is returned.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"althea28"},"content":"     * @returns String representation of whether the task is done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"althea28"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"althea28"},"content":"        return (isDone ? STATUS_MARKED : STATUS_UNMARKED);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"althea28"},"content":"     * Marks this task as done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"althea28"},"content":"    public void mark() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"althea28"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"althea28"},"content":"     * Marks this task as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"althea28"},"content":"    public void unmark() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"althea28"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"althea28"},"content":"     * Returns date of task, if any.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"althea28"},"content":"     * @returns String representation of the date of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"althea28"},"content":"    public String getDates() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"althea28"},"content":"        return \"\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"althea28"},"content":"     * Converts the input date from type LocalDate to type String.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"althea28"},"content":"     * @param d Date to be converted, of LocalDate type.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"althea28"},"content":"     * @return String representation of d.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"althea28"},"content":"    protected String dateConverter(LocalDate d) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"althea28"},"content":"        return d.getMonth().getDisplayName(TextStyle.SHORT, Locale.ENGLISH) + \" \" + d.getDayOfMonth() + \" \" + d.getYear();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"althea28"},"content":"     * Returns description of task, when TaskList.printTasks() is called.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"althea28"},"content":"     * @return String task description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"althea28"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"althea28"},"content":"        return getStatusIcon() + description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"althea28"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"althea28":73}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"althea28"},"content":"package duke;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"althea28"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"althea28"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"althea28"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"althea28"},"content":" * Represents a list of Task items.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"althea28"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"althea28"},"content":"public class TaskList {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"althea28"},"content":"    private static Task[] tasks;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"althea28"},"content":"    private static int numberOfTasks \u003d 0;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"althea28"},"content":"    private static final int TASK_LIST_SIZE \u003d 100;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"althea28"},"content":"    private static final String REPLY_INVALID_TASK_NUMBER \u003d \"There is no task with the given task number.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"althea28"},"content":"    private static final String REPLY_ADDED \u003d \"Got it. I\u0027ve added this task:\\n  \";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"althea28"},"content":"    private static final String REPLY_DELETED \u003d \"Noted. I\u0027ve removed this task:\\n \";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"althea28"},"content":"    private static final String REPLY_MARKED \u003d \"Nice! I\u0027ve marked this task as done:\\n \";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"althea28"},"content":"    private static final String REPLY_UNMARKED \u003d \"OK, I\u0027ve marked this task as not done yet:\\n \";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"althea28"},"content":"    private static final String REPLY_LIST \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"althea28"},"content":"    private static final String REPLY_SUCCESSFUL_FIND \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"althea28"},"content":"    private static final String REPLY_UNSUCCESSFUL_FIND \u003d \"No matching tasks in your list.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"althea28"},"content":"    TaskList(Task[] allTasks, int numberTasks){","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"althea28"},"content":"        tasks \u003d allTasks;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"althea28"},"content":"        numberOfTasks \u003d numberTasks;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"althea28"},"content":"     * Adds new task to list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"althea28"},"content":"     * @param task Task to be added to the list.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"althea28"},"content":"     * @return String reply confirming updated task list.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"althea28"},"content":"    public static String add(Task task) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"althea28"},"content":"        tasks[numberOfTasks] \u003d task;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"althea28"},"content":"        String reply \u003d REPLY_ADDED + get(numberOfTasks);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"althea28"},"content":"        numberOfTasks++;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"althea28"},"content":"        reply +\u003d \"\\nNow you have \" + numberOfTasks + \" tasks in the list.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"althea28"},"content":"        return reply;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"althea28"},"content":"     * Returns task at the specified position in the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"althea28"},"content":"     * @param index Index of the task to be returned.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"althea28"},"content":"     * @return Task item requested.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"althea28"},"content":"    public static Task get(int index) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"althea28"},"content":"        assert index \u003e 0: \"Invalid task number\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"althea28"},"content":"        return tasks[index];","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"althea28"},"content":"     * Deletes task at that index in the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"althea28"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"althea28"},"content":"     * @throws DuckException if there is no task at the given index in the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"althea28"},"content":"     * @return String reply confirming item has been deleted.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"althea28"},"content":"    public static String delete(int index) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"althea28"},"content":"        assert index \u003e 0: \"Invalid task number\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"althea28"},"content":"        if (index \u003e\u003d numberOfTasks + 1) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"althea28"},"content":"            return REPLY_INVALID_TASK_NUMBER;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"althea28"},"content":"        String reply \u003d REPLY_DELETED + get(index - 1);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"althea28"},"content":"        ArrayList\u003cTask\u003e newCmds \u003d new ArrayList\u003cTask\u003e(Arrays.asList(tasks));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"althea28"},"content":"        newCmds.remove(index - 1);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"althea28"},"content":"        tasks \u003d newCmds.toArray(new Task[TASK_LIST_SIZE]);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"althea28"},"content":"        numberOfTasks--;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"althea28"},"content":"        return reply + \"\\nNow you have \" + numberOfTasks + \" tasks in the list.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"althea28"},"content":"     * Returns all tasks in the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"althea28"},"content":"     * @return Array of all tasks in the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"althea28"},"content":"    public Task[] allTasks(){","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"althea28"},"content":"        return tasks;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"althea28"},"content":"     * Returns list of all tasks in the list.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"althea28"},"content":"     * @return String of all tasks in the list.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"althea28"},"content":"    public String getAllTasks() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"althea28"},"content":"        StringBuilder reply \u003d new StringBuilder(REPLY_LIST);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"althea28"},"content":"        for (int n \u003d 1; n \u003c\u003d numberOfTasks; n++) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"althea28"},"content":"            reply.append(\"\\n\").append(n).append(\". \").append(get(n - 1));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"althea28"},"content":"        return reply.toString();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"althea28"},"content":"     * Marks task at that index in the list as done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"althea28"},"content":"     * @param num Index of the task to be marked as done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"althea28"},"content":"     * @throws DuckException if there is no task at the given index in the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"althea28"},"content":"     * @return String confirming task has been marked.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"althea28"},"content":"    public static String mark(int num) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"althea28"},"content":"        assert num \u003e 0: \"Invalid task number\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"althea28"},"content":"        if (num \u003e numberOfTasks) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"althea28"},"content":"            return REPLY_INVALID_TASK_NUMBER;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"althea28"},"content":"        get(num - 1).mark();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"althea28"},"content":"        return REPLY_MARKED + get(num - 1);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"althea28"},"content":"     * Marks task at that index in the list as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"althea28"},"content":"     * @param num Index of the task to be marked as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"althea28"},"content":"     * @throws DuckException if there is no task at the given index in the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"althea28"},"content":"     * @return String confirming task has been unmarked.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"althea28"},"content":"    public static String unmark(int num) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"althea28"},"content":"        assert num \u003e 0: \"Invalid task number\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"althea28"},"content":"        if (num \u003e numberOfTasks) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"althea28"},"content":"            return REPLY_INVALID_TASK_NUMBER;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"althea28"},"content":"        get(num - 1).unmark();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"althea28"},"content":"        return REPLY_UNMARKED + get(num - 1);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"althea28"},"content":"     * Prints all tasks in the list with the given keyword.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"althea28"},"content":"     * @param keyword String to find in all the tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"althea28"},"content":"     * @return String representation of all matching tasks found.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"althea28"},"content":"    public String find(String keyword) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"althea28"},"content":"        Task[] foundTasks \u003d new Task[100];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"althea28"},"content":"        int numOfFoundTasks \u003d 0;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"althea28"},"content":"        for (int i \u003d 0; i \u003c numberOfTasks; i++) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"althea28"},"content":"            Task t \u003d tasks[i];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"althea28"},"content":"            if (t.getDescription().contains(keyword)) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"althea28"},"content":"                foundTasks[numOfFoundTasks] \u003d t;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"althea28"},"content":"                numOfFoundTasks++;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"althea28"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"althea28"},"content":"        if (numOfFoundTasks \u003d\u003d 0) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"althea28"},"content":"            return REPLY_UNSUCCESSFUL_FIND;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"althea28"},"content":"        StringBuilder reply \u003d new StringBuilder(REPLY_SUCCESSFUL_FIND);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"althea28"},"content":"        for (int n \u003d 1; n \u003c numOfFoundTasks; n++) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"althea28"},"content":"            reply.append(\"\\n\").append(n).append(\". \").append(foundTasks[n - 1]);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"althea28"},"content":"        return reply.toString();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"althea28"},"content":"     * Saves list of all current tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"althea28"},"content":"     * @throws DuckException if current list is corrupted.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"althea28"},"content":"    public void save() throws DuckException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"althea28"},"content":"        Storage.save(allTasks(), numberOfTasks);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"althea28"},"content":"    public int getCmdNum() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"althea28"},"content":"        return numberOfTasks;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"althea28"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"althea28":166}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"althea28"},"content":"package duke;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"althea28"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"althea28"},"content":" * Represents a Task with no date attribute.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"althea28"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"althea28"},"content":"public class Todo extends Task{","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"althea28"},"content":"    private static final String type \u003d \"[T]\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"althea28"},"content":"    public Todo(String descr) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"althea28"},"content":"        super(descr);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"althea28"},"content":"     * Returns description and date of todo task, when TaskList.printTasks() is called.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"althea28"},"content":"     * @return String task description and date.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"althea28"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"althea28"},"content":"        return type + super.toString();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"althea28"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"althea28":19}},{"path":"src/main/java/duke/Undo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"althea28"},"content":"package duke;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"althea28"},"content":"import java.util.Objects;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"althea28"},"content":"/**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"althea28"},"content":" * Undoes the previous command from user.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"althea28"},"content":" */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"althea28"},"content":"public class Undo {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"althea28"},"content":"    private static Task task;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"althea28"},"content":"    private static String previousCommand; //command | index | from | to","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"althea28"},"content":"    private static final int PARTS_COMMAND \u003d 0;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"althea28"},"content":"    private static final int PARTS_INDEX \u003d 1;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"althea28"},"content":"    private static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"althea28"},"content":"    private static final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"althea28"},"content":"    private static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"althea28"},"content":"    private static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"althea28"},"content":"    private static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"althea28"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"althea28"},"content":"    private static final String REPLY_ERROR \u003d \"Cannot undo last command.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"althea28"},"content":"    Undo() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"althea28"},"content":"        task \u003d null;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"althea28"},"content":"        previousCommand \u003d \"\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"althea28"},"content":"     * Parses through previous command to reverse it.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"althea28"},"content":"     * @return String reply to inform user of successful undoing of previous command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"althea28"},"content":"    public static String undo() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"althea28"},"content":"        assert !previousCommand.isEmpty() : \"No previous command to undo.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"althea28"},"content":"        String[] parts \u003d previousCommand.split(\" \\\\| \");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"althea28"},"content":"        String command \u003d parts[PARTS_COMMAND];","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"althea28"},"content":"        System.out.println(command);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"althea28"},"content":"        System.out.println(Objects.equals(command, COMMAND_TODO));","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"althea28"},"content":"        System.out.println(parts);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"althea28"},"content":"        String reply \u003d \"\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"althea28"},"content":"        if (Objects.equals(command, COMMAND_MARK)) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"althea28"},"content":"            reply \u003d TaskList.unmark(Integer.parseInt(parts[PARTS_INDEX]));","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"althea28"},"content":"        } else if (Objects.equals(command, COMMAND_UNMARK)) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"althea28"},"content":"            reply \u003d TaskList.mark(Integer.parseInt(parts[PARTS_INDEX]));","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"althea28"},"content":"        } else if ((Objects.equals(command, COMMAND_TODO)) || (Objects.equals(command, COMMAND_DEADLINE)) || (Objects.equals(command, COMMAND_EVENT))) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"althea28"},"content":"            reply \u003d TaskList.delete(Integer.parseInt(parts[PARTS_INDEX]));","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"althea28"},"content":"        } else if (Objects.equals(command, COMMAND_DELETE)) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"althea28"},"content":"            reply \u003d TaskList.add(task);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"althea28"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"althea28"},"content":"        previousCommand \u003d \"\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"althea28"},"content":"        task \u003d null;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"althea28"},"content":"        return reply;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"althea28"},"content":"     * Saves the previous command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"althea28"},"content":"     * @param command String command to be saved.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"althea28"},"content":"     * @param index Integer index of relevant task in the task list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"althea28"},"content":"    public static void saveCommand(String command, int index) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"althea28"},"content":"        previousCommand \u003d command + \" | \" + index;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"althea28"},"content":"        System.out.println(previousCommand);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"althea28"},"content":"     * Saves previous task, if it was deleted.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"althea28"},"content":"     * @param previousTask Task item that was deleted.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"althea28"},"content":"    public static void saveTask(Task previousTask) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"althea28"},"content":"        task \u003d previousTask;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"althea28"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"althea28"},"content":"     * Checks if there exists a previous command to undo.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"althea28"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"althea28"},"content":"     * @return Boolean verifying if there exists a previous command to be undone.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"althea28"},"content":"     * */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"althea28"},"content":"    public static boolean checkPreviousCommand() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"althea28"},"content":"        return Objects.equals(previousCommand, \"\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"althea28"},"content":"}","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"althea28":92}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"althea28"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"althea28"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"althea28"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"althea28"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"althea28"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"althea28"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"althea28"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"althea28"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"althea28"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"althea28"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"althea28"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"althea28"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"althea28"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"althea28"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"althea28"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"althea28"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"althea28"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"althea28"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"althea28"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"althea28"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"althea28":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"althea28"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"althea28"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"althea28"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"althea28"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"althea28"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"althea28"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"althea28"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"althea28"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"althea28"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"althea28"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"althea28"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"althea28"},"content":"            fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"althea28"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"althea28"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"althea28"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"althea28"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"althea28"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"althea28"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"althea28"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"althea28"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"althea28"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"althea28"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"althea28"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"althea28"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"althea28"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"althea28"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"althea28"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"althea28"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"althea28"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"althea28"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"althea28"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"althea28"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"althea28"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"althea28"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"althea28"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"althea28"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"althea28"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"althea28"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"althea28"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"althea28"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"althea28"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"althea28":44}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"althea28"},"content":"package duke;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"althea28"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"althea28"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"althea28"},"content":"public class TaskListTest {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"althea28"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"althea28"},"content":"    public void test() throws DuckException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"althea28"},"content":"        TaskList list \u003d new TaskList(new Task[100], 0);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"althea28"},"content":"        list.add(new Todo(\"t1\"));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"althea28"},"content":"        list.add(new Todo(\"t2\"));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"althea28"},"content":"        list.add(new Todo(\"t3\"));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"althea28"},"content":"        assertEquals(list.getCmdNum(), 3);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"althea28"},"content":"        list.delete(2);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"althea28"},"content":"        assertEquals(list.getCmdNum(), 2);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"althea28"},"content":"        list.mark(1);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"althea28"},"content":"        assertEquals(list.get(0).isDone, true);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"althea28"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"althea28":19}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"althea28"},"content":"package duke;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"althea28"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"althea28"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"althea28"},"content":"public class TodoTest {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"althea28"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"althea28"},"content":"    public void test1(){","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"althea28"},"content":"        Task t \u003d new Todo(\"submit work\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"althea28"},"content":"        assertEquals(t.isDone, false);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"althea28"},"content":"        t.mark();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"althea28"},"content":"        assertEquals(t.isDone, true);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"althea28"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"althea28"},"content":"    public void test2(){","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"althea28"},"content":"        Task t \u003d new Todo(\"submit work\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"althea28"},"content":"        assertEquals(t.isDone, false);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"althea28"},"content":"        t.unmark();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"althea28"},"content":"        assertEquals(t.isDone, false);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"althea28"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"althea28"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"althea28"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"althea28":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"althea28"},"content":"todo borrow book","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"althea28"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"althea28"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"althea28"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"althea28"},"content":"bye","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"althea28":5}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"althea28"},"content":"java -classpath ../bin Duck \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":37,"althea28":1}}]
