[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niclammm"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niclammm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niclammm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niclammm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niclammm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niclammm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niclammm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niclammm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niclammm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niclammm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niclammm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niclammm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niclammm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niclammm"},"content":"    implementation \u0027org.openjfx:javafx-controls:19.0.2\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niclammm"},"content":"    implementation \u0027org.openjfx:javafx-fxml:19.0.2\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niclammm"},"content":"    mainClass.set(\"repsmax.Launcher\")","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niclammm"},"content":"    archiveBaseName \u003d \"Repsmax\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"-":39,"niclammm":19}},{"path":"src/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"niclammm"},"content":"T | 0 | 3 | running 2 ","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niclammm"},"content":"T | 0 | 2 | Buy groceries ","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niclammm"},"content":"T | 0 | 3 | Buy groceries ","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niclammm"},"content":"T | 0 | 2 | bake cookies ","lastModifiedDate":"2024-09-13","isFullCredit":false}],"authorContributionMap":{"niclammm":4}},{"path":"src/main/java/repsmax/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niclammm"},"content":"package repsmax;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niclammm"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niclammm"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niclammm"},"content":" * A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to a task with a specific due date/time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niclammm"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niclammm"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niclammm"},"content":"    /** The date/time by which the task should be completed. */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niclammm"},"content":"    protected String by;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niclammm"},"content":"     * Constructs a new Deadline object with the specified description and due date/time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niclammm"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niclammm"},"content":"     * @param by The due date/time of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niclammm"},"content":"    public Deadline(String description, String by, int priority) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niclammm"},"content":"        super(description, priority);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niclammm"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niclammm"},"content":"     * Returns a string representation of the Deadline object, including its status and due date/time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niclammm"},"content":"     * @return A string representing the Deadline object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niclammm"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niclammm"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niclammm"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niclammm"},"content":"     * Returns a string in the file format used to save the Deadline object to disk.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niclammm"},"content":"     * @return A string representing the Deadline object in the file format.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niclammm"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niclammm"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niclammm"},"content":"        return \"D | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getDescription() + \" | \"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niclammm"},"content":"                + getPriority() + \" | \" + by;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niclammm"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"niclammm":45}},{"path":"src/main/java/repsmax/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niclammm"},"content":"package repsmax;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niclammm"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niclammm"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niclammm"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niclammm"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niclammm"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niclammm"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niclammm"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niclammm"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niclammm"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niclammm"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niclammm"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niclammm"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niclammm"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niclammm"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niclammm"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niclammm"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niclammm"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niclammm"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niclammm"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niclammm"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niclammm"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niclammm"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niclammm"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niclammm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niclammm"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niclammm"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niclammm"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niclammm"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niclammm"},"content":"    private void flip() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niclammm"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niclammm"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niclammm"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niclammm"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niclammm"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niclammm"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niclammm"},"content":"    public static DialogBox getBotDialog(String text, Image img) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niclammm"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niclammm"},"content":"        db.flip();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niclammm"},"content":"        return db;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niclammm"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"niclammm":54}},{"path":"src/main/java/repsmax/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niclammm"},"content":"package repsmax;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niclammm"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niclammm"},"content":" * Represents a task that occurs within a specific time frame.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niclammm"},"content":" * An \u003ccode\u003eEvent\u003c/code\u003e object corresponds to a task with a start and end time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niclammm"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niclammm"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niclammm"},"content":"    /** The start date/time of the event. */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niclammm"},"content":"    protected String from;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niclammm"},"content":"    /** The end date/time of the event. */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niclammm"},"content":"    protected String to;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niclammm"},"content":"     * Constructs a new Event object with the specified description, start time, and end time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niclammm"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niclammm"},"content":"     * @param from The start date/time of the event.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niclammm"},"content":"     * @param to The end date/time of the event.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niclammm"},"content":"    public Event(String description, String from, String to, int priority) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niclammm"},"content":"        super(description, priority);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niclammm"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niclammm"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niclammm"},"content":"     * Returns a string representation of the Event object, including its status, start, and end times.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niclammm"},"content":"     * @return A string representing the Event object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niclammm"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niclammm"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niclammm"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niclammm"},"content":"     * Returns a string in the file format used to save the Event object to disk.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niclammm"},"content":"     * @return A string representing the Event object in the file format.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niclammm"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niclammm"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niclammm"},"content":"        return \"E | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getDescription() + \" | \"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niclammm"},"content":"                + getPriority() + \" | \" + from + \" | \" + to;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niclammm"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"niclammm":48}},{"path":"src/main/java/repsmax/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niclammm"},"content":"package repsmax;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niclammm"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niclammm"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niclammm"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niclammm"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niclammm"},"content":"public class Launcher {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niclammm"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niclammm"},"content":"        Application.launch(RepsmaxGui.class, args);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niclammm"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"niclammm":12}},{"path":"src/main/java/repsmax/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niclammm"},"content":"package repsmax;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niclammm"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niclammm"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niclammm"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niclammm"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niclammm"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niclammm"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niclammm"},"content":"/**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niclammm"},"content":" * The main window controller for the Repsmax application.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niclammm"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niclammm"},"content":" * This class manages the user interface components of the main window,","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niclammm"},"content":" * including handling user input and displaying dialog messages.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niclammm"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niclammm"},"content":" */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niclammm"},"content":"public class MainWindow {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niclammm"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niclammm"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niclammm"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niclammm"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niclammm"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niclammm"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niclammm"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niclammm"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niclammm"},"content":"    private Repsmax repsmax;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niclammm"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niclammm"},"content":"    private Image botImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niclammm"},"content":"     * Initializes the main window by binding the scroll pane\u0027s","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niclammm"},"content":"     * vertical value to the height of the dialog container.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niclammm"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niclammm"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niclammm"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niclammm"},"content":"     * Sets the {@code Repsmax} instance for this controller.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niclammm"},"content":"     * @param r The {@code Repsmax} instance to be set.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niclammm"},"content":"    public void setRepsmax(Repsmax r) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niclammm"},"content":"        this.repsmax \u003d r;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niclammm"},"content":"     * Handles user input by retrieving the text from the input field,","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niclammm"},"content":"     * getting a response from the {@code Repsmax} instance, and","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niclammm"},"content":"     * updating the dialog container with the new dialogs.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niclammm"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niclammm"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niclammm"},"content":"        if (repsmax \u003d\u003d null) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niclammm"},"content":"            return; // Handle case where repsmax is not set","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niclammm"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niclammm"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niclammm"},"content":"        String response;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niclammm"},"content":"        try {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niclammm"},"content":"            response \u003d repsmax.getResponse(input);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"niclammm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"niclammm"},"content":"            response \u003d \"Sorry, something went wrong!\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"niclammm"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"niclammm"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"niclammm"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"niclammm"},"content":"                DialogBox.getBotDialog(response, botImage)","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"niclammm"},"content":"        );","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"niclammm"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"niclammm"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"niclammm":76}},{"path":"src/main/java/repsmax/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niclammm"},"content":"package repsmax;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niclammm"},"content":"import java.util.List;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niclammm"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niclammm"},"content":" * Parses user inputs and executes the corresponding commands.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niclammm"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niclammm"},"content":" * The {@code Parser} class interprets user commands, interacts with the task list,","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niclammm"},"content":" * user interface, and storage to perform actions based on the user\u0027s input.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niclammm"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niclammm"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niclammm"},"content":"public class Parser {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niclammm"},"content":"    // Constants for command keywords","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niclammm"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niclammm"},"content":"    private static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niclammm"},"content":"    private static final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niclammm"},"content":"    private static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niclammm"},"content":"    private static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niclammm"},"content":"    private static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niclammm"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niclammm"},"content":"    private static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niclammm"},"content":"    private static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niclammm"},"content":"    private static final String COMMAND_PRIORITY \u003d \"priority\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niclammm"},"content":"     * Parses the user\u0027s input and executes the corresponding command.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niclammm"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niclammm"},"content":"     * This method splits the input string into command and arguments, then","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niclammm"},"content":"     * delegates the command to the appropriate handler method.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niclammm"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niclammm"},"content":"     * @param userInput The input string entered by the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niclammm"},"content":"     * @param tasks     The task list to be managed.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niclammm"},"content":"     * @param ui        The user interface to interact with the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niclammm"},"content":"     * @param storage   The storage handler for saving and loading tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niclammm"},"content":"     * @return A response message based on the executed command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niclammm"},"content":"    public String parse(String userInput, TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niclammm"},"content":"        String[] splitInput \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niclammm"},"content":"        String command \u003d splitInput[0];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niclammm"},"content":"        switch (command) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niclammm"},"content":"            case COMMAND_LIST:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niclammm"},"content":"                return handleListCommand(tasks, ui);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niclammm"},"content":"            case COMMAND_MARK:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niclammm"},"content":"                return handleMarkCommand(splitInput, tasks, ui, storage);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niclammm"},"content":"            case COMMAND_UNMARK:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niclammm"},"content":"                return handleUnmarkCommand(splitInput, tasks, ui, storage);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niclammm"},"content":"            case COMMAND_TODO:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niclammm"},"content":"                return handleTodoCommand(splitInput, tasks, ui, storage);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niclammm"},"content":"            case COMMAND_DEADLINE:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niclammm"},"content":"                return handleDeadlineCommand(splitInput, tasks, ui, storage);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niclammm"},"content":"            case COMMAND_EVENT:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niclammm"},"content":"                return handleEventCommand(splitInput, tasks, ui, storage);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niclammm"},"content":"            case COMMAND_DELETE:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niclammm"},"content":"                return handleDeleteCommand(splitInput, tasks, ui, storage);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"niclammm"},"content":"            case COMMAND_BYE:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"niclammm"},"content":"                return handleByeCommand(tasks, ui, storage);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"niclammm"},"content":"            case COMMAND_FIND:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"niclammm"},"content":"                return handleFindCommand(splitInput, tasks, ui);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"niclammm"},"content":"            default:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"niclammm"},"content":"                return \"Unknown command: \" + userInput;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"niclammm"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"niclammm"},"content":"     * Handles the \"list\" command, displaying all tasks in the list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"niclammm"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"niclammm"},"content":"     * @param ui    The user interface to interact with the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"niclammm"},"content":"     * @return A response message with the list of tasks.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"niclammm"},"content":"    private String handleListCommand(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"niclammm"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"niclammm"},"content":"        response.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"niclammm"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"niclammm"},"content":"            response.append((i + 1)).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"niclammm"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"niclammm"},"content":"        return response.toString();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"niclammm"},"content":"     * Handles the \"mark\" command, marking a task as done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"niclammm"},"content":"     * @param splitInput The user\u0027s input split into command and arguments.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"niclammm"},"content":"     * @param tasks      The list of tasks to be managed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"niclammm"},"content":"     * @param ui         The user interface to interact with the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"niclammm"},"content":"     * @param storage    The storage handler for saving the updated tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"niclammm"},"content":"     * @return A response message confirming the task is marked as done.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"niclammm"},"content":"    private String handleMarkCommand(String[] splitInput, TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"niclammm"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"niclammm"},"content":"            int markIndex \u003d Integer.parseInt(splitInput[1]) - 1;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"niclammm"},"content":"            if (markIndex \u003e\u003d 0 \u0026\u0026 markIndex \u003c tasks.size()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"niclammm"},"content":"                tasks.get(markIndex).setDone();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"niclammm"},"content":"                storage.save(tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"niclammm"},"content":"                return \"Nice! I\u0027ve marked this task as done:\\n\" + tasks.get(markIndex);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"niclammm"},"content":"            } else {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"niclammm"},"content":"                return \"OOPS!!! The task number is out of range.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"niclammm"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"niclammm"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"niclammm"},"content":"            return \"OOPS!!! The task number must be an integer.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"niclammm"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"niclammm"},"content":"     * Handles the \"unmark\" command, marking a task as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"niclammm"},"content":"     * @param splitInput The user\u0027s input split into command and arguments.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"niclammm"},"content":"     * @param tasks      The list of tasks to be managed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"niclammm"},"content":"     * @param ui         The user interface to interact with the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"niclammm"},"content":"     * @param storage    The storage handler for saving the updated tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"niclammm"},"content":"     * @return A response message confirming the task is marked as not done.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"niclammm"},"content":"    private String handleUnmarkCommand(String[] splitInput, TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"niclammm"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"niclammm"},"content":"            int unmarkIndex \u003d Integer.parseInt(splitInput[1]) - 1;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"niclammm"},"content":"            if (unmarkIndex \u003e\u003d 0 \u0026\u0026 unmarkIndex \u003c tasks.size()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"niclammm"},"content":"                tasks.get(unmarkIndex).setUndone();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"niclammm"},"content":"                storage.save(tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"niclammm"},"content":"                return \"OK, I\u0027ve marked this task as not done yet:\\n\" + tasks.get(unmarkIndex);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"niclammm"},"content":"            } else {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"niclammm"},"content":"                return \"OOPS!!! The task number is out of range.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"niclammm"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"niclammm"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"niclammm"},"content":"            return \"OOPS!!! The task number must be an integer.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"niclammm"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"niclammm"},"content":"     * Handles the \"todo\" command, adding a new ToDo task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"niclammm"},"content":"     * @param splitInput The user\u0027s input split into command and arguments.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"niclammm"},"content":"     * @param tasks      The list of tasks to be managed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"niclammm"},"content":"     * @param ui         The user interface to interact with the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"niclammm"},"content":"     * @param storage    The storage handler for saving the updated tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"niclammm"},"content":"     * @return A response message confirming the task is added.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"niclammm"},"content":"    private String handleTodoCommand(String[] splitInput, TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"niclammm"},"content":"        if (splitInput.length \u003e 1) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"niclammm"},"content":"            String[] parts \u003d splitInput[1].split(\"/priority \", 2);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"niclammm"},"content":"            String description \u003d parts[0];","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"niclammm"},"content":"            int priority \u003d 3; // Default priority is low","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"niclammm"},"content":"            if (parts.length \u003e 1) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"niclammm"},"content":"                try {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"niclammm"},"content":"                    priority \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"niclammm"},"content":"                    if (priority \u003c 1 || priority \u003e 3) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"niclammm"},"content":"                        return \"OOPS!!! Priority level must be 1, 2, or 3.\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"niclammm"},"content":"                    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"niclammm"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"niclammm"},"content":"                    return \"OOPS!!! The priority level must be an integer.\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"niclammm"},"content":"                }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"niclammm"},"content":"            }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"niclammm"},"content":"            Todo newTodo \u003d new Todo(description, priority);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"niclammm"},"content":"            tasks.add(newTodo);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"niclammm"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"niclammm"},"content":"            return \"Got it. I\u0027ve added this task:\\n\" + tasks.get(tasks.size() - 1) +","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"niclammm"},"content":"                    \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"niclammm"},"content":"        } else {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"niclammm"},"content":"            return \"OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"niclammm"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"niclammm"},"content":"     * Handles the \"deadline\" command, adding a new Deadline task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"niclammm"},"content":"     * @param splitInput The user\u0027s input split into command and arguments.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"niclammm"},"content":"     * @param tasks      The list of tasks to be managed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"niclammm"},"content":"     * @param ui         The user interface to interact with the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"niclammm"},"content":"     * @param storage    The storage handler for saving the updated tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"niclammm"},"content":"     * @return A response message confirming the task is added.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"niclammm"},"content":"    private String handleDeadlineCommand(String[] splitInput, TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"niclammm"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"niclammm"},"content":"            String[] parts \u003d splitInput[1].split(\"/by \", 2);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"niclammm"},"content":"            String description \u003d parts[0];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"niclammm"},"content":"            String by \u003d parts[1];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"niclammm"},"content":"            int priority \u003d 3; // Default priority is low","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"niclammm"},"content":"            if (parts.length \u003e 1) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"niclammm"},"content":"                try {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"niclammm"},"content":"                    priority \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"niclammm"},"content":"                    if (priority \u003c 1 || priority \u003e 3) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"niclammm"},"content":"                        return \"OOPS!!! Priority level must be 1, 2, or 3.\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"niclammm"},"content":"                    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"niclammm"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"niclammm"},"content":"                    return \"OOPS!!! The priority level must be an integer.\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"niclammm"},"content":"                }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"niclammm"},"content":"            }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"niclammm"},"content":"            tasks.add(new Deadline(description, by, priority));","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"niclammm"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"niclammm"},"content":"            return \"Got it. I\u0027ve added this task:\\n\" + tasks.get(tasks.size() - 1) +","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"niclammm"},"content":"                    \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"niclammm"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"niclammm"},"content":"            return \"OOPS!!! The deadline command must include \u0027/by \u003cdate/time\u003e\u0027 and optional \u0027/priority \u003clevel\u003e\u0027\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"niclammm"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"niclammm"},"content":"     * Handles the \"event\" command, adding a new Event task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"niclammm"},"content":"     * @param splitInput The user\u0027s input split into command and arguments.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"niclammm"},"content":"     * @param tasks      The list of tasks to be managed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"niclammm"},"content":"     * @param ui         The user interface to interact with the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"niclammm"},"content":"     * @param storage    The storage handler for saving the updated tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"niclammm"},"content":"     * @return A response message confirming the task is added.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"niclammm"},"content":"    private String handleEventCommand(String[] splitInput, TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"niclammm"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"niclammm"},"content":"            String[] parts \u003d splitInput[1].split(\"/from \", 2);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"niclammm"},"content":"            String[] fromTo \u003d parts[1].split(\"/to \", 2);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"niclammm"},"content":"            String description \u003d parts[0];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"niclammm"},"content":"            String from \u003d fromTo[0];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"niclammm"},"content":"            String to \u003d fromTo[1];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"niclammm"},"content":"            int priority \u003d 3; // Default priority is low","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"niclammm"},"content":"            if (parts.length \u003e 1) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"niclammm"},"content":"                try {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"niclammm"},"content":"                    priority \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"niclammm"},"content":"                    if (priority \u003c 1 || priority \u003e 3) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"niclammm"},"content":"                        return \"OOPS!!! Priority level must be 1, 2, or 3.\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"niclammm"},"content":"                    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"niclammm"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"niclammm"},"content":"                    return \"OOPS!!! The priority level must be an integer.\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"niclammm"},"content":"                }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"niclammm"},"content":"            }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"niclammm"},"content":"            tasks.add(new Event(description, from, to, priority));","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"niclammm"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"niclammm"},"content":"            return \"Got it. I\u0027ve added this task:\\n\" + tasks.get(tasks.size() - 1) +","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"niclammm"},"content":"                    \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"niclammm"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"niclammm"},"content":"            return \"OOPS!!! The event command must include \u0027/from \u003cstart date/time\u003e\u0027 and \u0027/to \u003cend date/time\u003e\u0027 and optional \u0027/priority \u003clevel\u003e\u0027\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"niclammm"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"niclammm"},"content":"     * Handles the \"delete\" command, removing a task from the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"niclammm"},"content":"     * @param splitInput The user\u0027s input split into command and arguments.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"niclammm"},"content":"     * @param tasks      The list of tasks to be managed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"niclammm"},"content":"     * @param ui         The user interface to interact with the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"niclammm"},"content":"     * @param storage    The storage handler for saving the updated tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"niclammm"},"content":"     * @return A response message confirming the task is removed.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"niclammm"},"content":"    private String handleDeleteCommand(String[] splitInput, TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"niclammm"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"niclammm"},"content":"            int deleteIndex \u003d Integer.parseInt(splitInput[1]) - 1;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"niclammm"},"content":"            if (deleteIndex \u003e\u003d 0 \u0026\u0026 deleteIndex \u003c tasks.size()) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"niclammm"},"content":"                Task removedTask \u003d tasks.remove(deleteIndex);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"niclammm"},"content":"                storage.save(tasks);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"niclammm"},"content":"                return \"Noted. I\u0027ve removed this task:\\n\" + removedTask +","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"niclammm"},"content":"                        \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"niclammm"},"content":"            } else {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"niclammm"},"content":"                return \"OOPS!!! The task number is out of range.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"niclammm"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"niclammm"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"niclammm"},"content":"            return \"OOPS!!! The task number must be an integer.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"niclammm"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"niclammm"},"content":"     * Handles the \"bye\" command, saving the current tasks and exiting the program.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"niclammm"},"content":"     * @param tasks   The list of tasks to be saved.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"niclammm"},"content":"     * @param ui      The user interface to interact with the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"niclammm"},"content":"     * @param storage The storage handler for saving the tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"niclammm"},"content":"     * @return A response message confirming the exit.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"niclammm"},"content":"    private String handleByeCommand(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"niclammm"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"niclammm"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"niclammm"},"content":"     * Handles the \"find\" command, searching for tasks with the given keyword.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"niclammm"},"content":"     * @param splitInput The user\u0027s input split into command and arguments.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"niclammm"},"content":"     * @param tasks      The list of tasks to be searched.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"niclammm"},"content":"     * @param ui         The user interface to interact with the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"niclammm"},"content":"     * @return A response message with the search results.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"niclammm"},"content":"    private String handleFindCommand(String[] splitInput, TaskList tasks, Ui ui) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"niclammm"},"content":"        if (splitInput.length \u003e 1) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"niclammm"},"content":"            String keyword \u003d splitInput[1];","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"niclammm"},"content":"            List\u003cTask\u003e foundTasks \u003d tasks.find(keyword);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"niclammm"},"content":"            if (foundTasks.isEmpty()) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"niclammm"},"content":"                return \"There are no matching tasks in your list.\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"niclammm"},"content":"            }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"niclammm"},"content":"            StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"niclammm"},"content":"            response.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"niclammm"},"content":"            for (int i \u003d 0; i \u003c foundTasks.size(); i++) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"niclammm"},"content":"                response.append((i + 1)).append(\". \").append(foundTasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"niclammm"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"niclammm"},"content":"            return response.toString();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"niclammm"},"content":"        } else {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"niclammm"},"content":"            return \"OOPS!!! The find command must include a keyword.\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"niclammm"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"niclammm"},"content":"}","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"niclammm":311}},{"path":"src/main/java/repsmax/Repsmax.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niclammm"},"content":"package repsmax;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niclammm"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niclammm"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niclammm"},"content":" * Represents the main class of the Repsmax application.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niclammm"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niclammm"},"content":" * This class initializes the core components of the application, including","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niclammm"},"content":" * storage, task management, user interface, and command parsing.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niclammm"},"content":" * It also manages the overall flow of the application by handling user inputs","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niclammm"},"content":" * and interacting with various components.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niclammm"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niclammm"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niclammm"},"content":"public class Repsmax {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niclammm"},"content":"    private final Storage storage;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niclammm"},"content":"    private final TaskList tasks;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niclammm"},"content":"    private final Ui ui;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niclammm"},"content":"    private final Parser parser;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niclammm"},"content":"     * Constructs a {@code Repsmax} object with the specified file path.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niclammm"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niclammm"},"content":"     * This constructor initializes the user interface, storage system,","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niclammm"},"content":"     * parser, and task list. It also attempts to load tasks from the file","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niclammm"},"content":"     * specified by {@code filePath}. If loading tasks fails, an error message","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niclammm"},"content":"     * is displayed.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niclammm"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niclammm"},"content":"     * @param filePath The path to the file where task data is stored.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niclammm"},"content":"     *                 It cannot be null or empty.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niclammm"},"content":"    public Repsmax(String filePath) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niclammm"},"content":"        ui \u003d new Ui();  // Initializes the user interface component.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niclammm"},"content":"        storage \u003d new Storage(filePath);  // Initializes the storage component with the specified file path.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niclammm"},"content":"        parser \u003d new Parser();  // Initializes the parser for processing user inputs.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niclammm"},"content":"        tasks \u003d new TaskList();  // Initializes the task list to manage tasks.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niclammm"},"content":"        assert filePath !\u003d null \u0026\u0026 !filePath.isEmpty() : \"File path cannot be null or empty\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niclammm"},"content":"        try {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niclammm"},"content":"            storage.load(tasks);  // Attempts to load tasks from the file into the task list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niclammm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niclammm"},"content":"            ui.showLoadingError();  // Displays an error message if loading fails.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niclammm"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niclammm"},"content":"     * Processes user input and generates a response.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niclammm"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niclammm"},"content":"     * If the user input is \"bye\", the application saves the current tasks","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niclammm"},"content":"     * to the storage and returns a goodbye message. For other inputs,","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niclammm"},"content":"     * it delegates the parsing to the {@code Parser} and returns the","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niclammm"},"content":"     * result of the parsing.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niclammm"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niclammm"},"content":"     * @param userInput The input provided by the user.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niclammm"},"content":"     * @return A response based on the user input, either a goodbye message","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niclammm"},"content":"     *         or the result of parsing the input.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niclammm"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niclammm"},"content":"        assert userInput !\u003d null : \"User input cannot be null\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niclammm"},"content":"        if (userInput.equals(\"bye\")) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niclammm"},"content":"            storage.save(tasks);  // Saves the current tasks to the storage before exiting.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niclammm"},"content":"            return ui.showGoodbye();  // Returns a goodbye message.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niclammm"},"content":"        } else {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"niclammm"},"content":"            return parser.parse(userInput, tasks, ui, storage);  // Processes other inputs and returns the result.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"niclammm"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"niclammm"},"content":"     * Parses user input and performs the corresponding actions.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"niclammm"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"niclammm"},"content":"     * This method delegates the parsing to the {@code Parser}, which processes","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"niclammm"},"content":"     * the input and updates the task list or user interface as needed.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"niclammm"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"niclammm"},"content":"     * @param userInput The input provided by the user to be parsed.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"niclammm"},"content":"    public void parse(String userInput) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"niclammm"},"content":"        assert userInput !\u003d null : \"User input cannot be null\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"niclammm"},"content":"        parser.parse(userInput, tasks, ui, storage);  // Delegates input parsing to the parser.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"niclammm"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"niclammm":82}},{"path":"src/main/java/repsmax/RepsmaxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niclammm"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niclammm"},"content":" * Represents a custom exception for the Repsmax application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niclammm"},"content":" * This class extends the standard {@link Exception} class to provide","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niclammm"},"content":" * application-specific error handling.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niclammm"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niclammm"},"content":"public class RepsmaxException extends Exception {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niclammm"},"content":"     * Constructs a new RepsmaxException with the specified detail message.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niclammm"},"content":"     * The detail message is a string that describes the error or exception","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niclammm"},"content":"     * that occurred.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niclammm"},"content":"     * @param message the detail message, which is saved for later retrieval","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niclammm"},"content":"     *                by the {@link #getMessage()} method.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niclammm"},"content":"    public RepsmaxException(String message) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niclammm"},"content":"        super(message);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niclammm"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"niclammm":19}},{"path":"src/main/java/repsmax/RepsmaxGui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niclammm"},"content":"package repsmax;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niclammm"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niclammm"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niclammm"},"content":"import javafx.scene.Parent;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niclammm"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niclammm"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niclammm"},"content":"public class RepsmaxGui extends Application {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niclammm"},"content":"    private Repsmax repsmax;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niclammm"},"content":"    @Override","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niclammm"},"content":"    public void start(Stage primaryStage) throws Exception {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niclammm"},"content":"        repsmax \u003d new Repsmax(\"C:/Users/nicla/OneDrive/Desktop/Cs2103/repo/src/data.txt\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niclammm"},"content":"        FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niclammm"},"content":"        Parent root \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niclammm"},"content":"        MainWindow controller \u003d fxmlLoader.getController();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niclammm"},"content":"        controller.setRepsmax(repsmax);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niclammm"},"content":"        Scene scene \u003d new Scene(root, 500, 600);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niclammm"},"content":"        primaryStage.setTitle(\"Repsmax\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niclammm"},"content":"        primaryStage.setScene(scene);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niclammm"},"content":"        primaryStage.show();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niclammm"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niclammm"},"content":"        launch(args);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niclammm"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"niclammm":33}},{"path":"src/main/java/repsmax/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niclammm"},"content":"package repsmax;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niclammm"},"content":"import java.io.File;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niclammm"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niclammm"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niclammm"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niclammm"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niclammm"},"content":" * Manages the saving and loading of tasks to and from a file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niclammm"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niclammm"},"content":" * The {@code Storage} class provides methods to save tasks to a file and","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niclammm"},"content":" * load tasks from a file. The file path is specified during the creation","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niclammm"},"content":" * of the {@code Storage} object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niclammm"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niclammm"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niclammm"},"content":"public class Storage {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niclammm"},"content":"    private final String filePath;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niclammm"},"content":"     * Constructs a {@code Storage} object with the specified file path.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niclammm"},"content":"     * @param filePath The path to the file where tasks will be saved or loaded.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niclammm"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niclammm"},"content":"        assert filePath !\u003d null \u0026\u0026 !filePath.isEmpty() : \"File path cannot be null or empty\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niclammm"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niclammm"},"content":"     * Saves the tasks to the file specified by the file path.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niclammm"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niclammm"},"content":"     * Each task is written to the file in a format defined by the {@code Task}","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niclammm"},"content":"     * class\u0027s {@code toFileFormat()} method. Each task is written on a new line.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niclammm"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niclammm"},"content":"     * @param tasks The {@code TaskList} containing the tasks to be saved.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niclammm"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niclammm"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(filePath)) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niclammm"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niclammm"},"content":"                fileWriter.write(task.toFileFormat() + System.lineSeparator());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niclammm"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niclammm"},"content":"            System.out.println(\"Tasks successfully saved to file.\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niclammm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niclammm"},"content":"            System.out.println(\"An error occurred while saving tasks: \" + e.getMessage());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niclammm"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niclammm"},"content":"     * Loads tasks from the file specified by the file path.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niclammm"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niclammm"},"content":"     * If the file does not exist, a message is printed indicating that","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niclammm"},"content":"     * a new list will be started. Each line in the file is parsed using","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niclammm"},"content":"     * the {@code Task} class\u0027s {@code fromFileFormat()} method to create","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niclammm"},"content":"     * tasks that are added to the provided {@code TaskList}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niclammm"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niclammm"},"content":"     * @param tasks The {@code TaskList} to which loaded tasks will be added.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niclammm"},"content":"    public void load(TaskList tasks) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niclammm"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niclammm"},"content":"        assert file.exists() : \"File does not exist\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"niclammm"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"niclammm"},"content":"            System.out.println(\"No task file found. Starting a new task list.\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"niclammm"},"content":"            return;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"niclammm"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"niclammm"},"content":"        try (Scanner fileScanner \u003d new Scanner(file)) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"niclammm"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"niclammm"},"content":"                String line \u003d fileScanner.nextLine();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"niclammm"},"content":"                tasks.add(Task.fromFileFormat(line));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"niclammm"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"niclammm"},"content":"            System.out.println(\"Tasks successfully loaded from file.\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"niclammm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"niclammm"},"content":"            System.out.println(\"An error occurred while loading tasks: \" + e.getMessage());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"niclammm"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"niclammm"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"niclammm":80}},{"path":"src/main/java/repsmax/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niclammm"},"content":"package repsmax;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niclammm"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niclammm"},"content":" * Represents a task with a description and completion status.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niclammm"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niclammm"},"content":" * The {@code Task} class stores information about a task, including its","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niclammm"},"content":" * description and whether it is marked as done. It provides methods to","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niclammm"},"content":" * manipulate and retrieve the status of the task, as well as to convert","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niclammm"},"content":" * the task to and from a file format.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niclammm"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niclammm"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niclammm"},"content":"public class Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niclammm"},"content":"    private final String description;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niclammm"},"content":"    private boolean isDone;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niclammm"},"content":"    private int priority;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niclammm"},"content":"     * Constructs a {@code Task} with the specified description. The task","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niclammm"},"content":"     * is initially marked as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niclammm"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niclammm"},"content":"    public Task(String description, int priority) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niclammm"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"Description cannot be null or empty\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niclammm"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niclammm"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niclammm"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niclammm"},"content":"     * Returns the status icon representing the completion status of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niclammm"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niclammm"},"content":"     * If the task is done, returns \"X\". Otherwise, returns a blank space.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niclammm"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niclammm"},"content":"     * @return A string representing the task\u0027s completion status.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niclammm"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niclammm"},"content":"        return isDone ? \"X\" : \" \"; // mark done task with X","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niclammm"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niclammm"},"content":"    public void setDone() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niclammm"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niclammm"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niclammm"},"content":"    public void setUndone() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niclammm"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niclammm"},"content":"     * Returns whether the task is marked as done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niclammm"},"content":"     * @return {@code true} if the task is done, {@code false} otherwise.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niclammm"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niclammm"},"content":"        return isDone;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"niclammm"},"content":"    public String getPriority() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"niclammm"},"content":"        switch (priority) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"niclammm"},"content":"            case 1:","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"niclammm"},"content":"                return \"[High Priority]\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"niclammm"},"content":"            case 2:","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"niclammm"},"content":"                return \"[Medium Priority]\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"niclammm"},"content":"            case 3:","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"niclammm"},"content":"                return \"[Low Priority]\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"niclammm"},"content":"            default:","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"niclammm"},"content":"                return \"[No Priority]\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"niclammm"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"niclammm"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"niclammm"},"content":"     * @return The task\u0027s description.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"niclammm"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"niclammm"},"content":"        return description;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"niclammm"},"content":"     * Returns a string representation of the task in a user-friendly format.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"niclammm"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"niclammm"},"content":"     * The format is \"[X] description\" if the task is done, or \"[ ] description\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"niclammm"},"content":"     * if the task is not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"niclammm"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"niclammm"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"niclammm"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"niclammm"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"niclammm"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getPriority() + \" \" + description;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"niclammm"},"content":"     * Converts the task to a format suitable for saving to a file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"niclammm"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"niclammm"},"content":"     * The format is \"T | doneStatus | description\", where \"doneStatus\" is","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"niclammm"},"content":"     * \"1\" if the task is done and \"0\" if it is not.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"niclammm"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"niclammm"},"content":"     * @return A string representation of the task in file format.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"niclammm"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"niclammm"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + priority + \" | \" + description;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"niclammm"},"content":"     * Creates a {@code Task} object from a string in file format.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"niclammm"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"niclammm"},"content":"     * The expected format is \"T | doneStatus | description\". The method","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"niclammm"},"content":"     * splits the input string and creates a task based on the parsed data.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"niclammm"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"niclammm"},"content":"     * @param fileFormat The string representation of the task in file format.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"niclammm"},"content":"     * @return A {@code Task} object created from the file format string.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"niclammm"},"content":"     * @throws IllegalArgumentException If the file format string is invalid.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"niclammm"},"content":"    public static Task fromFileFormat(String fileFormat) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"niclammm"},"content":"        String[] parts \u003d fileFormat.split(\" \\\\| \");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"niclammm"},"content":"        if (parts.length !\u003d 4) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"niclammm"},"content":"            throw new IllegalArgumentException(\"Invalid task format.\");","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"niclammm"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"niclammm"},"content":"        String description \u003d parts[3];","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"niclammm"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"niclammm"},"content":"        int priority \u003d Integer.parseInt(parts[2]);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"niclammm"},"content":"        Task task \u003d new Task(description, priority);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"niclammm"},"content":"        if (isDone) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"niclammm"},"content":"            task.setDone();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"niclammm"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"niclammm"},"content":"        return task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"niclammm"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"niclammm":139}},{"path":"src/main/java/repsmax/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niclammm"},"content":"package repsmax;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niclammm"},"content":"import java.util.List;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niclammm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niclammm"},"content":"import repsmax.Task;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niclammm"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niclammm"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niclammm"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niclammm"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niclammm"},"content":" * The {@code TaskList} class provides methods to manage a collection of","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niclammm"},"content":" * {@code Task} objects. It supports adding, retrieving, removing tasks,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niclammm"},"content":" * and querying the size of the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niclammm"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niclammm"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niclammm"},"content":"public class TaskList {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niclammm"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niclammm"},"content":"     * Constructs an empty {@code TaskList}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niclammm"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niclammm"},"content":"     * Initializes the list to be empty.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niclammm"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niclammm"},"content":"    public TaskList() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niclammm"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niclammm"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niclammm"},"content":"     * @param task the {@code Task} to be added to the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niclammm"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niclammm"},"content":"        assert task !\u003d null : \"Task to be added cannot be null\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niclammm"},"content":"        tasks.add(task);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niclammm"},"content":"     * Retrieves a task from the list at the specified index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niclammm"},"content":"     * @param index the index of the task to retrieve.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niclammm"},"content":"     * @return the {@code Task} at the specified index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niclammm"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niclammm"},"content":"    public Task get(int index) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niclammm"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niclammm"},"content":"     * Removes a task from the list at the specified index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niclammm"},"content":"     * @param index the index of the task to remove.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niclammm"},"content":"     * @return the {@code Task} that was removed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niclammm"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niclammm"},"content":"    public Task remove(int index) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niclammm"},"content":"        return tasks.remove(index);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niclammm"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niclammm"},"content":"     * @return the number of tasks in the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"niclammm"},"content":"    public int size() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"niclammm"},"content":"        return tasks.size();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"niclammm"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"niclammm"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"niclammm"},"content":"     * This method returns the underlying list of tasks. Modifications to the","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"niclammm"},"content":"     * returned list will affect the {@code TaskList}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"niclammm"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"niclammm"},"content":"     * @return the list of {@code Task} objects.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"niclammm"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"niclammm"},"content":"        return tasks;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"niclammm"},"content":"     * Searches for tasks containing the specified keyword in their description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"niclammm"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"niclammm"},"content":"     * This method filters the tasks and returns a list of tasks where the","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"niclammm"},"content":"     * description contains the keyword (case-insensitive).","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"niclammm"},"content":"     * It also utilises a a stream to help search for the word.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"niclammm"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"niclammm"},"content":"     * @param keyword the keyword to search for in task descriptions.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"niclammm"},"content":"     * @return a list of tasks that contain the keyword in their description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"niclammm"},"content":"    public List\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"niclammm"},"content":"        return tasks.stream()","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"niclammm"},"content":"                .filter(task -\u003e task.getDescription().toLowerCase().contains(keyword.toLowerCase()))","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"niclammm"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"niclammm"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"niclammm":99}},{"path":"src/main/java/repsmax/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niclammm"},"content":"package repsmax;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niclammm"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niclammm"},"content":" * Represents a task without a specific date or time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niclammm"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niclammm"},"content":" * The {@code Todo} class is a subclass of {@code Task} that denotes a task","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niclammm"},"content":" * without any associated date or time. It provides a specific string format","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niclammm"},"content":" * for representing the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niclammm"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niclammm"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niclammm"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niclammm"},"content":"     * Constructs a {@code Todo} with the specified description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niclammm"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niclammm"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niclammm"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niclammm"},"content":"     * @param description the description of the todo task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niclammm"},"content":"    public Todo(String description, int priority) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niclammm"},"content":"        super(description, priority);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niclammm"},"content":"     * Returns a string representation of the todo task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niclammm"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niclammm"},"content":"     * The format is \"[T][statusIcon] description\", where \"[T]\" indicates","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niclammm"},"content":"     * that the task is a todo, and the status icon is either \"X\" (for done)","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niclammm"},"content":"     * or \" \" (for not done).","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niclammm"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niclammm"},"content":"     * @return a string representation of the todo task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niclammm"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niclammm"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niclammm"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niclammm"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"niclammm":39}},{"path":"src/main/java/repsmax/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niclammm"},"content":"package repsmax;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niclammm"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niclammm"},"content":"import java.util.List;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niclammm"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niclammm"},"content":" * Handles all user interactions in the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niclammm"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niclammm"},"content":" * The {@code Ui} class is responsible for managing user input and output.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niclammm"},"content":" * It provides methods for reading user commands, displaying messages,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niclammm"},"content":" * and showing various informational prompts.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niclammm"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niclammm"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niclammm"},"content":"public class Ui {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niclammm"},"content":"    private StringBuilder output;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niclammm"},"content":"     * Constructs a {@code Ui} object and initializes the scanner for reading","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niclammm"},"content":"     * user input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niclammm"},"content":"    public Ui() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niclammm"},"content":"        output \u003d new StringBuilder();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niclammm"},"content":"     * Reads the next line of input from the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niclammm"},"content":"     * @return the input line entered by the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niclammm"},"content":"    public void readCommand() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niclammm"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niclammm"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niclammm"},"content":"        output.append(\"Hello! I\u0027m Repsmax\\nWhat can I do for you?\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niclammm"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niclammm"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niclammm"},"content":"     * The message bids farewell and expresses hope to see the user again","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niclammm"},"content":"     * soon.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niclammm"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"niclammm"},"content":"    public String showGoodbye() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"niclammm"},"content":"        return \"  ____________________________________________________________\\n\" +","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"niclammm"},"content":"                \"   Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"niclammm"},"content":"                \"  ____________________________________________________________\\n\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"niclammm"},"content":"     * Displays an error message when loading tasks fails.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"niclammm"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"niclammm"},"content":"     * The message indicates that an error occurred while loading tasks","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"niclammm"},"content":"     * from storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"niclammm"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"niclammm"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"niclammm"},"content":"        output.append(\"An error occurred while loading tasks.\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"niclammm"},"content":"     * Displays a custom error message.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"niclammm"},"content":"     * @param message the error message to be displayed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"niclammm"},"content":"    public void showError(String message) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"niclammm"},"content":"        output.append(message + \"\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"niclammm"},"content":"        ;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"niclammm"},"content":"     * Displays a horizontal line for visual separation.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"niclammm"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"niclammm"},"content":"     * The line is used to enhance readability in the user interface output.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"niclammm"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"niclammm"},"content":"    public void showLine() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"niclammm"},"content":"        output.append(\"____________________________\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"niclammm"},"content":"     * Displays a custom message to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"niclammm"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"niclammm"},"content":"     * @param message the message to be displayed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"niclammm"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"niclammm"},"content":"        output.append(message + \"\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"niclammm"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"niclammm"},"content":"     * Prompts the user for a search keyword and displays the results.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"niclammm"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"niclammm"},"content":"    public void showSearchResults(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"niclammm"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"niclammm"},"content":"            showMessage(\"No tasks found with the given keyword.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"niclammm"},"content":"        } else {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"niclammm"},"content":"            showMessage(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"niclammm"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"niclammm"},"content":"                showMessage((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"niclammm"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"niclammm"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"niclammm"},"content":"    public String getOutput() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"niclammm"},"content":"        return output.toString();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"niclammm"},"content":"    public void clearOutput() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"niclammm"},"content":"        output.setLength(0);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"niclammm"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"niclammm":115}},{"path":"src/main/java/repsmax/actual.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niclammm"},"content":"   Hello! I\u0027m Repsmax","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niclammm"},"content":"   What can I do for you?","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niclammm"},"content":"  Got it. I\u0027ve added this task:","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niclammm"},"content":"   [T][ ] read book","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niclammm"},"content":"  Now you have 1 tasks in the list.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niclammm"},"content":"  Got it. I\u0027ve added this task:","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niclammm"},"content":"   [D][ ] return book  (by: June 6th)","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niclammm"},"content":"  Now you have 2 tasks in the list.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niclammm"},"content":" Got it. I\u0027ve added this task:","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niclammm"},"content":"   [E][ ] project meeting  (from: Aug 6th 2pm  to: 4pm)","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niclammm"},"content":" Now you have 3 tasks in the list.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niclammm"},"content":"  here are the task in your list:","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niclammm"},"content":"   1.[T][ ] read book","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niclammm"},"content":"   2.[D][ ] return book  (by: June 6th)","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niclammm"},"content":"   3.[E][ ] project meeting  (from: Aug 6th 2pm  to: 4pm)","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niclammm"},"content":"  Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niclammm"},"content":"   [D][ ] return book  (by: June 6th)","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niclammm"},"content":"  Now you have 2 tasks in the list.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niclammm"},"content":"  here are the task in your list:","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niclammm"},"content":"   1.[T][ ] read book","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niclammm"},"content":"   2.[E][ ] project meeting  (from: Aug 6th 2pm  to: 4pm)","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niclammm"},"content":"   Bye. Hope to see you again soon!","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"niclammm":46}},{"path":"src/main/java/repsmax/expected.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niclammm"},"content":"   Hello! I\u0027m Repsmax","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niclammm"},"content":"   What can I do for you?","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niclammm"},"content":"  Got it. I\u0027ve added this task:","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niclammm"},"content":"   [T][ ] read book","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niclammm"},"content":"  Now you have 1 task in the list.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niclammm"},"content":"  Got it. I\u0027ve added this task:","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niclammm"},"content":"   [D][ ] return book (by: June 6th)","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niclammm"},"content":"  Now you have 2 tasks in the list.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niclammm"},"content":" Got it. I\u0027ve added this task:","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niclammm"},"content":"   [E][ ] project meeting (from: Aug 6th 2pm to: 4pm)","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niclammm"},"content":" Now you have 3 tasks in the list.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niclammm"},"content":"  Here are the tasks in your list:","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niclammm"},"content":"   1.[T][ ] read book","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niclammm"},"content":"   2.[D][ ] return book (by: June 6th)","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niclammm"},"content":"   3.[E][ ] project meeting (from: Aug 6th 2pm to: 4pm)","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niclammm"},"content":"  Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niclammm"},"content":"   [D][ ] return book (by: June 6th)","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niclammm"},"content":"  Now you have 2 tasks in the list.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niclammm"},"content":"  Here are the tasks in your list:","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niclammm"},"content":"   1.[T][ ] read book","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niclammm"},"content":"   2.[E][ ] project meeting (from: Aug 6th 2pm to: 4pm)","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niclammm"},"content":"   Bye. Hope to see you again soon!","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niclammm"},"content":"  ____________________________________________________________","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"niclammm":38}},{"path":"src/main/java/repsmax/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"niclammm"},"content":"todo read book","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niclammm"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niclammm"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niclammm"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niclammm"},"content":"delete 2","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niclammm"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niclammm"},"content":"bye","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"niclammm":7}},{"path":"src/main/java/repsmax/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"niclammm"},"content":"#!/bin/bash","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niclammm"},"content":"# Compile the program","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niclammm"},"content":"javac Repsmax.java Task.java Todo.java Deadline.java Event.java","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niclammm"},"content":"# Run the program with input redirection and save the output to an actual output file","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niclammm"},"content":"java Repsmax \u003c input.txt \u003e actual.txt","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niclammm"},"content":"# Compare the actual output with the expected output","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niclammm"},"content":"diff actual.txt expected.txt","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niclammm"},"content":"# If the diff command returns a difference, it will be shown in the console.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niclammm"},"content":"# If there is no difference, the test passed.","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"niclammm":13}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"niclammm"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niclammm"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niclammm"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niclammm"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niclammm"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niclammm"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niclammm"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niclammm"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niclammm"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niclammm"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niclammm"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niclammm"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niclammm"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niclammm"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niclammm"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niclammm"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niclammm"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niclammm"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niclammm"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niclammm"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"niclammm":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"niclammm"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niclammm"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niclammm"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niclammm"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niclammm"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niclammm"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niclammm"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niclammm"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niclammm"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niclammm"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niclammm"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niclammm"},"content":"            fx:controller\u003d\"repsmax.MainWindow\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niclammm"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niclammm"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niclammm"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niclammm"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niclammm"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niclammm"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niclammm"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niclammm"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niclammm"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niclammm"},"content":"                      prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niclammm"},"content":"                      spacing\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niclammm"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niclammm"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niclammm"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niclammm"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niclammm"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niclammm"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niclammm"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niclammm"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niclammm"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niclammm"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niclammm"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niclammm"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niclammm"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niclammm"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niclammm"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niclammm"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niclammm"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niclammm"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"niclammm":43}},{"path":"src/test/java/repsmax/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niclammm"},"content":"package repsmax;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niclammm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niclammm"},"content":"import java.io.File;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niclammm"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niclammm"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niclammm"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niclammm"},"content":"public class StorageTest {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niclammm"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niclammm"},"content":"    public void testSave_andLoad_tasksArePersisted() throws Exception {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niclammm"},"content":"        // Arrange","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niclammm"},"content":"        String filePath \u003d \"testTasks.txt\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niclammm"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niclammm"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niclammm"},"content":"        tasks.add(new Task(\"Task 1\"));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niclammm"},"content":"        tasks.add(new Task(\"Task 2\"));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niclammm"},"content":"        // Act","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niclammm"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niclammm"},"content":"        TaskList loadedTasks \u003d new TaskList();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niclammm"},"content":"        storage.load(loadedTasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niclammm"},"content":"        // Assert","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niclammm"},"content":"        assertEquals(2, loadedTasks.size());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niclammm"},"content":"        assertEquals(\"[ ] Task 1\", loadedTasks.get(0).toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niclammm"},"content":"        assertEquals(\"[ ] Task 2\", loadedTasks.get(1).toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niclammm"},"content":"        // Cleanup","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niclammm"},"content":"        new File(filePath).delete();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"niclammm"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"niclammm"},"content":"    public void testLoad_noFile_createsNewList() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"niclammm"},"content":"        // Arrange","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"niclammm"},"content":"        String filePath \u003d \"nonExistentFile.txt\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"niclammm"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"niclammm"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"niclammm"},"content":"        // Act","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"niclammm"},"content":"        storage.load(tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"niclammm"},"content":"        // Assert","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"niclammm"},"content":"        assertEquals(0, tasks.size());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"niclammm"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"niclammm":47}},{"path":"src/test/java/repsmax/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niclammm"},"content":"package repsmax;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niclammm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niclammm"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niclammm"},"content":"public class TaskTest {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niclammm"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niclammm"},"content":"    public void testToString_taskNotDone_correctFormat() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niclammm"},"content":"        Task task \u003d new Task(\"Write code\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niclammm"},"content":"        assertEquals(\"[ ] Write code\", task.toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niclammm"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niclammm"},"content":"    public void testToString_taskDone_correctFormat() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niclammm"},"content":"        Task task \u003d new Task(\"Write code\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niclammm"},"content":"        task.setDone();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niclammm"},"content":"        assertEquals(\"[X] Write code\", task.toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"niclammm"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"niclammm"},"content":"    public void testFromFileFormat_validFormat_taskCreated() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"niclammm"},"content":"        Task task \u003d Task.fromFileFormat(\"T | 1 | Read book\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"niclammm"},"content":"        assertEquals(\"[X] Read book\", task.toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"niclammm"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"niclammm"},"content":"    public void testFromFileFormat_invalidFormat_throwsException() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"niclammm"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"niclammm"},"content":"            Task.fromFileFormat(\"Invalid format string\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"niclammm"},"content":"        });","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"niclammm"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"niclammm":33}},{"path":"src/test/java/repsmax/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niclammm"},"content":"package repsmax;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"niclammm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"niclammm"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"niclammm"},"content":"public class TodoTest {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"niclammm"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"niclammm"},"content":"    public void toString_validTodo_correctFormat() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"niclammm"},"content":"        Todo todo \u003d new Todo(\"Buy groceries\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"niclammm"},"content":"        assertEquals(\"[T][ ] Buy groceries\", todo.toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"niclammm"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"niclammm"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"niclammm"},"content":"    public void toString_doneTodo_correctFormat() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"niclammm"},"content":"        Todo todo \u003d new Todo(\"Buy groceries\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"niclammm"},"content":"        todo.setDone();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"niclammm"},"content":"        assertEquals(\"[T][X] Buy groceries\", todo.toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"niclammm"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"niclammm"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"niclammm":20}}]
