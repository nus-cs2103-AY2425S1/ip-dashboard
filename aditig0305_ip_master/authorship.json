[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"aditig0305"},"content":"    mainClass.set(\"max.main.Max\")","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"aditig0305"},"content":"    archiveBaseName \u003d \"max\"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"aditig0305"},"content":"    archiveFileName \u003d \u0027max.jar\u0027","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"aditig0305":3,"-":39}},{"path":"src/main/java/max/exception/MaxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditig0305"},"content":"package max.exception;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aditig0305"},"content":"public class MaxException extends Exception {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aditig0305"},"content":"    public MaxException(String message) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aditig0305"},"content":"        super(message);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aditig0305"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"aditig0305":7}},{"path":"src/main/java/max/main/Max.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditig0305"},"content":"package max.main;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aditig0305"},"content":"import max.exception.MaxException;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aditig0305"},"content":"import max.task.TaskList;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aditig0305"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aditig0305"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aditig0305"},"content":" * The Max class is the entry point of the application. It initializes the necessary components","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aditig0305"},"content":" * and handles the main logic of the application.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"aditig0305"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"aditig0305"},"content":"public class Max {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"aditig0305"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aditig0305"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"aditig0305"},"content":"    private Ui ui;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"aditig0305"},"content":"    private static final String FILE_PATH \u003d \"./data/max.txt\";","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"aditig0305"},"content":"     * The main method that serves as the entry point of the application.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"aditig0305"},"content":"     * @param args Command line arguments (not used).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"aditig0305"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"aditig0305"},"content":"        Max max \u003d new Max();","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"aditig0305"},"content":"        max.runMax();","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"aditig0305"},"content":"     * Constructor for the Max class. Initializes the UI, storage, and task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"aditig0305"},"content":"    public Max() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"aditig0305"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"aditig0305"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"aditig0305"},"content":"        tasks \u003d new TaskList(storage.loadList());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"aditig0305"},"content":"     * Runs the main loop of the application. It handles user input, processes commands","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"aditig0305"},"content":"     * through the Parser, and outputs the results via the UI.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"aditig0305"},"content":"    public void runMax() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"aditig0305"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"aditig0305"},"content":"        ui.printHello();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"aditig0305"},"content":"        Parser parser \u003d new Parser(tasks, ui, storage);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"aditig0305"},"content":"        try {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"aditig0305"},"content":"            parser.parseText(scanner);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"aditig0305"},"content":"        } catch (MaxException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"aditig0305"},"content":"            ui.printMessage(e.getMessage());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"aditig0305"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"aditig0305"},"content":"        ui.printBye();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"aditig0305"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"aditig0305":60}},{"path":"src/main/java/max/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditig0305"},"content":"package max.main;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aditig0305"},"content":"import max.exception.MaxException;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aditig0305"},"content":"import max.task.*;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aditig0305"},"content":"import javax.crypto.Mac;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aditig0305"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aditig0305"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aditig0305"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aditig0305"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"aditig0305"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"aditig0305"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"aditig0305"},"content":" * The Parser class is responsible for interpreting and executing user commands.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aditig0305"},"content":" * It processes the input from the user, interacts with the TaskList, and handles","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"aditig0305"},"content":" * task-related operations like adding, deleting, and marking tasks.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"aditig0305"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"aditig0305"},"content":"public class Parser {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"aditig0305"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"aditig0305"},"content":"    private Ui ui;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"aditig0305"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"aditig0305"},"content":"     * Constructs a Parser object with the given TaskList, Ui, and Storage components.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"aditig0305"},"content":"     * @param taskList The list of tasks to be managed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"aditig0305"},"content":"     * @param ui The UI component used for interacting with the user.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"aditig0305"},"content":"     * @param storage The storage component for saving and loading tasks.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"aditig0305"},"content":"    public Parser(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"aditig0305"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"aditig0305"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"aditig0305"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"aditig0305"},"content":"     * Default constructor for the Parser class.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"aditig0305"},"content":"    public Parser() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"aditig0305"},"content":"     * Reads user input and processes commands in a loop until the \"bye\" command is issued.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"aditig0305"},"content":"     * @param scanner The Scanner object used to read user input.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"aditig0305"},"content":"     * @throws MaxException If an invalid command is given or an error occurs during execution.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"aditig0305"},"content":"    public void parseText(Scanner scanner) throws MaxException {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"aditig0305"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"aditig0305"},"content":"        while (isRunning) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"aditig0305"},"content":"            String text \u003d scanner.nextLine().trim();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"aditig0305"},"content":"            try {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"aditig0305"},"content":"                if (text.equals(\"bye\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"aditig0305"},"content":"                    isRunning \u003d false;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"aditig0305"},"content":"                } else if (text.equals(\"list\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"aditig0305"},"content":"                    ui.printList(false);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"aditig0305"},"content":"                    ui.list(taskList.getTasks());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"aditig0305"},"content":"                } else if (text.startsWith(\"mark\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"aditig0305"},"content":"                    int index \u003d Integer.parseInt(text.replace(\"mark \", \"\")) - 1;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"aditig0305"},"content":"                    Task task \u003d taskList.getTask(index);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"aditig0305"},"content":"                    task.markDone();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"aditig0305"},"content":"                    ui.printMarkDone(task);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"aditig0305"},"content":"                } else if (text.startsWith(\"unmark\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"aditig0305"},"content":"                    int index \u003d Integer.parseInt(text.replace(\"unmark \", \"\")) - 1;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"aditig0305"},"content":"                    Task task \u003d taskList.getTask(index);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"aditig0305"},"content":"                    task.markNotDone();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"aditig0305"},"content":"                    ui.printMarkNotDone(task);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"aditig0305"},"content":"                } else if (text.startsWith(\"deadline\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"aditig0305"},"content":"                    handleDeadline(text);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"aditig0305"},"content":"                } else if (text.startsWith(\"todo\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"aditig0305"},"content":"                    handleTodo(text);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"aditig0305"},"content":"                } else if (text.startsWith(\"event\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"aditig0305"},"content":"                    handleEvent(text);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"aditig0305"},"content":"                } else if (text.startsWith(\"delete\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"aditig0305"},"content":"                    int index \u003d Integer.parseInt(text.replace(\"delete \", \"\")) - 1;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"aditig0305"},"content":"                    Task task \u003d taskList.getTask(index);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"aditig0305"},"content":"                    taskList.deleteTask(index);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"aditig0305"},"content":"                    ui.printDeleteTask(task, taskList.getSize());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"aditig0305"},"content":"                } else if (text.startsWith(\"find\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"aditig0305"},"content":"                    String toFind \u003d text.replaceFirst(\"find\", \"\").trim();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"aditig0305"},"content":"                    handleFind(toFind);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"aditig0305"},"content":"                } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"aditig0305"},"content":"                    throw new MaxException(\"What does that mean?:( Begin with todo, event, or deadline.\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"aditig0305"},"content":"                }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"aditig0305"},"content":"                this.storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"aditig0305"},"content":"            } catch (MaxException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"aditig0305"},"content":"                ui.printLine();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"aditig0305"},"content":"                ui.printMessage(e.getMessage());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"aditig0305"},"content":"            }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"aditig0305"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"aditig0305"},"content":"    private void handleFind(String text) throws MaxException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"aditig0305"},"content":"        if (text.isEmpty()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"aditig0305"},"content":"            throw new MaxException(\"The provided filter for find cannot be empty.\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"aditig0305"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"aditig0305"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d taskList.find(text);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"aditig0305"},"content":"        ui.printList(true);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"aditig0305"},"content":"        ui.list(filteredTasks);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"aditig0305"},"content":"     * Handles the creation of a new Deadline task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"aditig0305"},"content":"     * @param text The user input text containing the task description and due date.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"aditig0305"},"content":"     * @throws MaxException If the task description or date format is invalid.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"aditig0305"},"content":"    private void handleDeadline(String text) throws MaxException {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"aditig0305"},"content":"        String[] temp \u003d text.replace(\"deadline \", \"\").split(\" /by \");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"aditig0305"},"content":"        if (temp.length !\u003d 2) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"aditig0305"},"content":"            throw new MaxException(\"Oh no!! The description of the task cannot be empty. :(\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"aditig0305"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"aditig0305"},"content":"        checkTask(temp[0].trim());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"aditig0305"},"content":"        checkTask(temp[1].trim());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"aditig0305"},"content":"        LocalDateTime LDT \u003d parseDate(temp[1]);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"aditig0305"},"content":"        Deadline deadline \u003d (LDT !\u003d null) ? new Deadline(temp[0], LDT) : new Deadline(temp[0], temp[1]);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"aditig0305"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"aditig0305"},"content":"        ui.printTaskTypeAdded(deadline, taskList.getSize());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"aditig0305"},"content":"     * Handles the creation of a new Event task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"aditig0305"},"content":"     * @param text The user input text containing the task description and event period.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"aditig0305"},"content":"     * @throws MaxException If the task description or event period is invalid.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"aditig0305"},"content":"    private void handleEvent(String text) throws MaxException {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"aditig0305"},"content":"        String[] temp \u003d text.replace(\"event \", \"\").split(\" /from \");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"aditig0305"},"content":"        if (temp.length !\u003d 2) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"aditig0305"},"content":"            throw new MaxException(\"Oh no!! The description of the task cannot be empty. :(\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"aditig0305"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"aditig0305"},"content":"        checkTask(temp[0].trim());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"aditig0305"},"content":"        checkTask(temp[1].trim());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"aditig0305"},"content":"        Event event \u003d new Event(temp[0], temp[1]);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"aditig0305"},"content":"        taskList.addTask(event);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"aditig0305"},"content":"        ui.printTaskTypeAdded(event, taskList.getSize());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"aditig0305"},"content":"     * Handles the creation of a new Todo task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"aditig0305"},"content":"     * @param text The user input text containing the task description.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"aditig0305"},"content":"     * @throws MaxException If the task description is empty.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"aditig0305"},"content":"    private void handleTodo(String text) throws MaxException {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"aditig0305"},"content":"        String temp \u003d text.replace(\"todo\", \"\").trim();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"aditig0305"},"content":"        checkTask(temp);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"aditig0305"},"content":"        Todo todo \u003d new Todo(temp);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"aditig0305"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"aditig0305"},"content":"        ui.printTaskTypeAdded(todo, taskList.getSize());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"aditig0305"},"content":"     * Parses a date string into a LocalDateTime object.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"aditig0305"},"content":"     * @param date The date string to be parsed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"aditig0305"},"content":"     * @return A LocalDateTime object representing the parsed date.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"aditig0305"},"content":"     * @throws MaxException If the date format is invalid.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"aditig0305"},"content":"    public LocalDateTime parseDate(String date) throws MaxException {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"aditig0305"},"content":"        DateTimeFormatter converter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"aditig0305"},"content":"        try {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"aditig0305"},"content":"            LocalDateTime LDT \u003d LocalDateTime.parse(date, converter);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"aditig0305"},"content":"            return LDT;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"aditig0305"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"aditig0305"},"content":"            throw new MaxException(\"Invalid date format! Please use d/M/yyyy HHmm. \"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"aditig0305"},"content":"                    + \"For example, \u00272/12/2024 1800\u0027\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"aditig0305"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"aditig0305"},"content":"     * Checks if the given task description is empty.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"aditig0305"},"content":"     * @param todo The task description to be checked.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"aditig0305"},"content":"     * @throws MaxException If the task description is empty.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"aditig0305"},"content":"    public void checkTask(String todo) throws MaxException {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"aditig0305"},"content":"        if (todo.isEmpty()) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"aditig0305"},"content":"            throw new MaxException(\"Oh no!! The description of the task cannot be empty. :(\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"aditig0305"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"aditig0305"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"aditig0305":190}},{"path":"src/main/java/max/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditig0305"},"content":"package max.main;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aditig0305"},"content":"import max.exception.MaxException;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aditig0305"},"content":"import max.main.Parser;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aditig0305"},"content":"import max.task.Deadline;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aditig0305"},"content":"import max.task.Event;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aditig0305"},"content":"import max.task.Task;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aditig0305"},"content":"import max.task.Todo;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aditig0305"},"content":"import java.io.*;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"aditig0305"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"aditig0305"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"aditig0305"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aditig0305"},"content":" * The Storage class is responsible for reading from and writing to the file system.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"aditig0305"},"content":" * It loads the task list from a file and saves the current task list back to the file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"aditig0305"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"aditig0305"},"content":"public class Storage {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"aditig0305"},"content":"    private String path;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"aditig0305"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"aditig0305"},"content":"     * @param path The file path where tasks are stored.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"aditig0305"},"content":"    public Storage(String path) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"aditig0305"},"content":"        this.path \u003d path;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"aditig0305"},"content":"     * Loads the task list from the file specified in the path.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"aditig0305"},"content":"     * If the file does not exist, it creates a new file and returns an empty task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"aditig0305"},"content":"     * @return An ArrayList of tasks loaded from the file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"aditig0305"},"content":"    public ArrayList\u003cTask\u003e loadList() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"aditig0305"},"content":"        ArrayList\u003cTask\u003e tempList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"aditig0305"},"content":"        try {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"aditig0305"},"content":"            File file \u003d new File(path);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"aditig0305"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"aditig0305"},"content":"                new File(file.getParent()).mkdirs();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"aditig0305"},"content":"                file.createNewFile();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"aditig0305"},"content":"                return tempList;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"aditig0305"},"content":"            }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"aditig0305"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"aditig0305"},"content":"            String line;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"aditig0305"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"aditig0305"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"aditig0305"},"content":"                Task task;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"aditig0305"},"content":"                switch (parts[0]) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"aditig0305"},"content":"                    case \"T\":","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"aditig0305"},"content":"                        task \u003d new Todo(parts[2]);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"aditig0305"},"content":"                        break;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"aditig0305"},"content":"                    case \"D\":","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"aditig0305"},"content":"                        Parser tempParser \u003d new Parser(); //check if this is okay","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"aditig0305"},"content":"                        LocalDateTime LDT \u003d tempParser.parseDate(parts[3]);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"aditig0305"},"content":"                        if (LDT !\u003d null) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"aditig0305"},"content":"                            task \u003d new Deadline(parts[2], LDT);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"aditig0305"},"content":"                        } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"aditig0305"},"content":"                            task \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"aditig0305"},"content":"                        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"aditig0305"},"content":"                        break;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"aditig0305"},"content":"                    case \"E\":","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"aditig0305"},"content":"                        task \u003d new Event(parts[2], parts[3]);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"aditig0305"},"content":"                        break;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"aditig0305"},"content":"                    default:","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"aditig0305"},"content":"                        throw new MaxException(\"Unknown task type found in file.\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"aditig0305"},"content":"                }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"aditig0305"},"content":"                if (parts[1].equals(\"1\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"aditig0305"},"content":"                    task.markDone();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"aditig0305"},"content":"                }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"aditig0305"},"content":"                tempList.add(task);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"aditig0305"},"content":"            }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"aditig0305"},"content":"            reader.close();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"aditig0305"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"aditig0305"},"content":"            System.out.println(\"An IO Exception has occured. \" + e.getMessage());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"aditig0305"},"content":"        } catch (MaxException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"aditig0305"},"content":"            System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"aditig0305"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"aditig0305"},"content":"        return tempList;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"aditig0305"},"content":"     * Saves the current list of tasks to the file specified in the path.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"aditig0305"},"content":"     * @param storedTasks The list of tasks to be saved to the file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"aditig0305"},"content":"     * @throws MaxException If an IOException occurs during the save process.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"aditig0305"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e storedTasks) throws MaxException {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"aditig0305"},"content":"        try {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"aditig0305"},"content":"            File file \u003d new File(path);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"aditig0305"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"aditig0305"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(path));","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"aditig0305"},"content":"            for (Task task : storedTasks) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"aditig0305"},"content":"                writer.write(task.toFileFormat());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"aditig0305"},"content":"                writer.newLine();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"aditig0305"},"content":"            }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"aditig0305"},"content":"            writer.close();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"aditig0305"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"aditig0305"},"content":"            throw new MaxException(\"An IOException occurred.\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"aditig0305"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"aditig0305"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"aditig0305":106}},{"path":"src/main/java/max/main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditig0305"},"content":"package max.main;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aditig0305"},"content":"import max.task.Task;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aditig0305"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aditig0305"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aditig0305"},"content":" * The Ui class handles all user interaction, printing messages and task information","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aditig0305"},"content":" * to the console. It provides methods for printing tasks, messages, and program-specific","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aditig0305"},"content":" * greetings and farewells.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"aditig0305"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"aditig0305"},"content":"public class Ui {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aditig0305"},"content":"     * Prints a message indicating that a task has been added, along with the current number","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"aditig0305"},"content":"     * of tasks in the list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"aditig0305"},"content":"     * @param task The task that was added.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"aditig0305"},"content":"     * @param size The current number of tasks in the list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"aditig0305"},"content":"    public void printTaskTypeAdded(Task task, int size) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"aditig0305"},"content":"        printLine();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aditig0305"},"content":"        System.out.println(\"\\t Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"aditig0305"},"content":"        System.out.println(\"\\t   \" + task.toString());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"aditig0305"},"content":"        System.out.println(\"\\t Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"aditig0305"},"content":"        printLine();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"aditig0305"},"content":"     * Prints a message to the console.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"aditig0305"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"aditig0305"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"aditig0305"},"content":"        System.out.println(\"\\t \" + message);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"aditig0305"},"content":"        printLine();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"aditig0305"},"content":"     * Prints a welcome message when the program starts.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"aditig0305"},"content":"    public void printHello() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"aditig0305"},"content":"        printLine();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"aditig0305"},"content":"        printMessage(\"Hello! I\u0027m Max\\n\\t What can I do for you?\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"aditig0305"},"content":"     * Prints a goodbye message when the program ends.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"aditig0305"},"content":"    public void printBye() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"aditig0305"},"content":"        printLine();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"aditig0305"},"content":"        printMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"aditig0305"},"content":"     * Prints a horizontal line to separate different sections of output.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"aditig0305"},"content":"    public void printLine() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"aditig0305"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"aditig0305"},"content":"     * Prints the list of tasks in the current task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"aditig0305"},"content":"     * @param tasks The list of tasks to be printed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"aditig0305"},"content":"    public void list(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"aditig0305"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"aditig0305"},"content":"            int count \u003d i + 1;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"aditig0305"},"content":"            System.out.println(\"\\t \" + count + \".\" + tasks.get(i).toString());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"aditig0305"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"aditig0305"},"content":"        printLine();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"aditig0305"},"content":"    public void printList(boolean isFilter) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"aditig0305"},"content":"        printLine();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"aditig0305"},"content":"        if (isFilter) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"aditig0305"},"content":"            System.out.println(\"\\t Here are the matching tasks in your list:\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"aditig0305"},"content":"        } else {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"aditig0305"},"content":"            System.out.println(\"\\t Here are the tasks in your list:\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"aditig0305"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"aditig0305"},"content":"     * Prints a message indicating that a task has been deleted, along with the current number","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"aditig0305"},"content":"     * of tasks remaining in the list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"aditig0305"},"content":"     * @param removedTask The task that was removed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"aditig0305"},"content":"     * @param size The current number of tasks in the list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"aditig0305"},"content":"    public void printDeleteTask(Task removedTask, int size) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"aditig0305"},"content":"        printLine();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"aditig0305"},"content":"        System.out.println(\"\\t Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"aditig0305"},"content":"        System.out.println(\"\\t   \" + removedTask.toString());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"aditig0305"},"content":"        System.out.println(\"\\t Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"aditig0305"},"content":"        printLine();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"aditig0305"},"content":"     * Prints a message indicating that a task has been marked as done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"aditig0305"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"aditig0305"},"content":"    public void printMarkDone(Task task) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"aditig0305"},"content":"        printLine();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"aditig0305"},"content":"        System.out.println(\"\\t Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"aditig0305"},"content":"        System.out.println(\"\\t   \" + task.toString());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"aditig0305"},"content":"        printLine();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"aditig0305"},"content":"     * Prints a message indicating that a task has been marked as not done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"aditig0305"},"content":"     * @param task The task that was marked as not done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"aditig0305"},"content":"    public void printMarkNotDone(Task task) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"aditig0305"},"content":"        printLine();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"aditig0305"},"content":"        System.out.println(\"\\t OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"aditig0305"},"content":"        System.out.println(\"\\t   \" + task.toString());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"aditig0305"},"content":"        printLine();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"aditig0305"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"aditig0305":122}},{"path":"src/main/java/max/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditig0305"},"content":"package max.task;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aditig0305"},"content":"import max.task.Task;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aditig0305"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aditig0305"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aditig0305"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aditig0305"},"content":" * The Deadline class represents a task that needs to be completed by a specific date and time.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aditig0305"},"content":" * It extends the Task class and includes additional attributes for the deadline time.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"aditig0305"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"aditig0305"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"aditig0305"},"content":"    private String by;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"aditig0305"},"content":"    private LocalDateTime date;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"aditig0305"},"content":"     * Constructs a Deadline with a description and a deadline time as a string.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"aditig0305"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"aditig0305"},"content":"     * @param by The deadline time as a string.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"aditig0305"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aditig0305"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"aditig0305"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"aditig0305"},"content":"     * Constructs a Deadline with a description and a deadline time as a LocalDateTime object.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"aditig0305"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"aditig0305"},"content":"     * @param date The deadline time as a LocalDateTime object.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"aditig0305"},"content":"    public Deadline(String description, LocalDateTime date) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"aditig0305"},"content":"        super(description);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"aditig0305"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"aditig0305"},"content":"     * Returns a string representation of the deadline, including its type, description,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"aditig0305"},"content":"     * and deadline time.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"aditig0305"},"content":"     * @return A string in the format \"[D][status] description (by: deadline)\" where the deadline","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"aditig0305"},"content":"     *         is formatted as \"MMM dd yyyy HH:mm\" if a LocalDateTime object is used, or as a string otherwise.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"aditig0305"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"aditig0305"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"aditig0305"},"content":"        //return String.format(\"[D]\" + super.toString() + \" (by: %s)\", date \u003d\u003d null ? by : date);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"aditig0305"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"aditig0305"},"content":"        String formattedDate \u003d (date !\u003d null) ? date.format(outputFormatter) : by;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"aditig0305"},"content":"        return String.format(\"[D]\" + super.toString() + \" (by: %s)\", formattedDate);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"aditig0305"},"content":"     * Converts the deadline to a string format suitable for saving to a file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"aditig0305"},"content":"     * @return A string in the format \"D | status | description | deadline\" where the deadline","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"aditig0305"},"content":"     *         is formatted as \"d/M/yyyy HHmm\" if a LocalDateTime object is used, or as a string otherwise.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"aditig0305"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"aditig0305"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"aditig0305"},"content":"        DateTimeFormatter converter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"aditig0305"},"content":"        String formattedDate \u003d (date !\u003d null) ? date.format(converter) : by;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"aditig0305"},"content":"        return String.format(\"D | %d | %s | %s\", isDone ? 1 : 0, description, formattedDate);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"aditig0305"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"aditig0305":66}},{"path":"src/main/java/max/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditig0305"},"content":"package max.task;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aditig0305"},"content":"import max.exception.MaxException;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aditig0305"},"content":"import max.task.Task;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aditig0305"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aditig0305"},"content":" * The Event class represents a task that starts and ends at specific times.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aditig0305"},"content":" * It extends the Task class and includes additional attributes for start and end times.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aditig0305"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aditig0305"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"aditig0305"},"content":"    private String startTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"aditig0305"},"content":"    private String endTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aditig0305"},"content":"     * Constructs an Event with a description and a time period.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"aditig0305"},"content":"     * The time period is split into a start time and an end time.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"aditig0305"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"aditig0305"},"content":"     * @param time The time period of the event in the format \"start time /to end time\".","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"aditig0305"},"content":"     * @throws MaxException If the time period does not contain both a start and end time.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"aditig0305"},"content":"    public Event(String description, String time) throws MaxException {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aditig0305"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"aditig0305"},"content":"        String[] temp \u003d time.split(\" /to \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"aditig0305"},"content":"        if (temp.length !\u003d 2) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"aditig0305"},"content":"            throw new MaxException(\"Oh no!! The description of the task cannot be empty. :(\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"aditig0305"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"aditig0305"},"content":"        this.startTime \u003d temp[0];","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"aditig0305"},"content":"        this.endTime \u003d temp[1];","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"aditig0305"},"content":"     * Returns a string representation of the event, including its type, description,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"aditig0305"},"content":"     * and time period.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"aditig0305"},"content":"     * @return A string in the format \"[E][status] description (from: start time to: end time)\".","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"aditig0305"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"aditig0305"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"aditig0305"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startTime + \" to: \" + endTime + \")\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"aditig0305"},"content":"     * Converts the event to a string format suitable for saving to a file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"aditig0305"},"content":"     * @return A string in the format \"E | status | description | /from start time /to end time\".","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"aditig0305"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"aditig0305"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"aditig0305"},"content":"        return String.format(\"E | %d | %s | %s\", isDone ? 1 : 0, description, \"/from \" + startTime + \" /to \" + endTime);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"aditig0305"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"aditig0305":53}},{"path":"src/main/java/max/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditig0305"},"content":"package max.task;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aditig0305"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aditig0305"},"content":" * The Task class represents a task with a description and a status indicating whether it is done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aditig0305"},"content":" * This class serves as the base class for more specific types of tasks, such as ToDo, Deadline, and Event.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aditig0305"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aditig0305"},"content":"public class Task {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aditig0305"},"content":"    protected String description;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aditig0305"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"aditig0305"},"content":"     * Constructs a Task with the specified description.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"aditig0305"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aditig0305"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"aditig0305"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"aditig0305"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"aditig0305"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aditig0305"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"aditig0305"},"content":"     * An \"X\" indicates that the task is done, while a space indicates that it is not done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"aditig0305"},"content":"     * @return A string representing the task\u0027s status icon.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"aditig0305"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"aditig0305"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"aditig0305"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"aditig0305"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"aditig0305"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"aditig0305"},"content":"        return this.description;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"aditig0305"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"aditig0305"},"content":"    public void markDone() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"aditig0305"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"aditig0305"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"aditig0305"},"content":"    public void markNotDone() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"aditig0305"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"aditig0305"},"content":"     * Returns a string representation of the task, including its status and description.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"aditig0305"},"content":"     * @return A string in the format \"[status] description\", where the status is either \"X\" (done) or \" \" (not done).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"aditig0305"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"aditig0305"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"aditig0305"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"aditig0305"},"content":"     * Converts the task to a string format suitable for saving to a file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"aditig0305"},"content":"     * @return A string in the format \"X | status | description\", where the status is either 1 (done) or 0 (not done).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"aditig0305"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"aditig0305"},"content":"        return String.format(\"X | %d | %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"aditig0305"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"aditig0305":75}},{"path":"src/main/java/max/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditig0305"},"content":"package max.task;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aditig0305"},"content":"import max.exception.MaxException;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aditig0305"},"content":"import max.task.Task;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aditig0305"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aditig0305"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aditig0305"},"content":" * The TaskList class manages a list of tasks, providing methods","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aditig0305"},"content":" * to add, delete, retrieve, and manage the size of the task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"aditig0305"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"aditig0305"},"content":"public class TaskList {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"aditig0305"},"content":"    private ArrayList\u003cTask\u003e storedTasks;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"aditig0305"},"content":"     * Constructs a TaskList with an existing list of tasks.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"aditig0305"},"content":"     * @param al The ArrayList of tasks to initialize the TaskList with.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"aditig0305"},"content":"    public TaskList(ArrayList\u003cTask\u003e al) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"aditig0305"},"content":"        storedTasks \u003d al;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"aditig0305"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"aditig0305"},"content":"    public TaskList() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"aditig0305"},"content":"        storedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"aditig0305"},"content":"     * Deletes a task from the TaskList at the specified index.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"aditig0305"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"aditig0305"},"content":"     * @throws MaxException If the index is out of bounds (less than 0 or greater than the size of the list).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"aditig0305"},"content":"    public void deleteTask(int index) throws MaxException {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"aditig0305"},"content":"        if (index \u003e\u003d storedTasks.size() || index \u003c 0) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"aditig0305"},"content":"            throw new MaxException(\"This task does not exist! Deletion unsuccessful.\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"aditig0305"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"aditig0305"},"content":"        storedTasks.remove(index);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"aditig0305"},"content":"     * Returns the number of tasks currently stored in the TaskList.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"aditig0305"},"content":"     * @return The number of tasks in the TaskList.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"aditig0305"},"content":"    public int getSize() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"aditig0305"},"content":"        return storedTasks.size();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"aditig0305"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"aditig0305"},"content":"     * @param task The task to be added to the TaskList.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"aditig0305"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"aditig0305"},"content":"        storedTasks.add(task);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"aditig0305"},"content":"     * Retrieves a task from the TaskList at the specified index.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"aditig0305"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"aditig0305"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"aditig0305"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"aditig0305"},"content":"        return storedTasks.get(index);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"aditig0305"},"content":"     * Returns the entire list of tasks stored in the TaskList.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"aditig0305"},"content":"     * @return An ArrayList containing all the tasks in the TaskList.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"aditig0305"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"aditig0305"},"content":"        return storedTasks;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"aditig0305"},"content":"    public ArrayList\u003cTask\u003e find(String toFind) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"aditig0305"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"aditig0305"},"content":"        for (Task t : storedTasks) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"aditig0305"},"content":"            if (t.getDescription().contains(toFind)) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"aditig0305"},"content":"                filteredTasks.add(t);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"aditig0305"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"aditig0305"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"aditig0305"},"content":"        return filteredTasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"aditig0305"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"aditig0305":90}},{"path":"src/main/java/max/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditig0305"},"content":"package max.task;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aditig0305"},"content":"import max.task.Task;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aditig0305"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aditig0305"},"content":" * The Todo class represents a task that needs to be done,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aditig0305"},"content":" * without any specific deadline or time frame.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aditig0305"},"content":" * It is a subclass of the Task class.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aditig0305"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aditig0305"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"aditig0305"},"content":"     * Constructs a new Todo task with the specified description.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aditig0305"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"aditig0305"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"aditig0305"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"aditig0305"},"content":"     * Returns a string representation of the Todo task,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aditig0305"},"content":"     * including its status and description.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"aditig0305"},"content":"     * The format is \"[T][status] description\", where the status is either \"X\" (done) or \" \" (not done).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"aditig0305"},"content":"     * @return A string representation of the Todo task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"aditig0305"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"aditig0305"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"aditig0305"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"aditig0305"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"aditig0305"},"content":"     * Converts the Todo task to a string format suitable for saving to a file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"aditig0305"},"content":"     * The format is \"T | status | description\", where the status is either 1 (done) or 0 (not done).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"aditig0305"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"aditig0305"},"content":"     * @return A string format of the Todo task for file saving.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"aditig0305"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"aditig0305"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"aditig0305"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"aditig0305"},"content":"        return String.format(\"T | %d | %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"aditig0305"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"aditig0305":43}},{"path":"src/test/java/max/main/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditig0305"},"content":"package max.main;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aditig0305"},"content":"import max.exception.MaxException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aditig0305"},"content":"import max.task.TaskList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aditig0305"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aditig0305"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aditig0305"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aditig0305"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"aditig0305"},"content":"public class ParserTest {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"aditig0305"},"content":"    private Parser parser;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"aditig0305"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"aditig0305"},"content":"    void setUp() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"aditig0305"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"aditig0305"},"content":"    // Test valid date format","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"aditig0305"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"aditig0305"},"content":"    public void parseDate_validDate_success() throws MaxException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aditig0305"},"content":"        String date \u003d \"2/12/2024 1800\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"aditig0305"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2024, 12, 2, 18, 0);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"aditig0305"},"content":"        LocalDateTime actual \u003d parser.parseDate(date);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"aditig0305"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"aditig0305"},"content":"    // Test another valid date format","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"aditig0305"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"aditig0305"},"content":"    void testParseDateValidFormat() throws MaxException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"aditig0305"},"content":"        LocalDateTime dateTime \u003d parser.parseDate(\"2/12/2024 1800\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"aditig0305"},"content":"        assertEquals(LocalDateTime.of(2024, 12, 2, 18, 0), dateTime);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"aditig0305"},"content":"    // Test invalid date format","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"aditig0305"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"aditig0305"},"content":"    void testParseDateInvalidFormat() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"aditig0305"},"content":"        MaxException exception \u003d assertThrows(MaxException.class, () -\u003e {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"aditig0305"},"content":"            parser.parseDate(\"12-02-2024 1800\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"aditig0305"},"content":"        });","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"aditig0305"},"content":"        assertEquals(\"Invalid date format! Please use d/M/yyyy HHmm. For example, \u00272/12/2024 1800\u0027\", exception.getMessage());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"aditig0305"},"content":"    // Test parsing with missing time","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"aditig0305"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"aditig0305"},"content":"    void testParseDateMissingTime() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"aditig0305"},"content":"        MaxException exception \u003d assertThrows(MaxException.class, () -\u003e {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"aditig0305"},"content":"            parser.parseDate(\"2/12/2024\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"aditig0305"},"content":"        });","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"aditig0305"},"content":"        assertEquals(\"Invalid date format! Please use d/M/yyyy HHmm. For example, \u00272/12/2024 1800\u0027\", exception.getMessage());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"aditig0305"},"content":"    // Test parsing with empty string","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"aditig0305"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"aditig0305"},"content":"    void testParseDateEmptyString() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"aditig0305"},"content":"        MaxException exception \u003d assertThrows(MaxException.class, () -\u003e {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"aditig0305"},"content":"            parser.parseDate(\"\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"aditig0305"},"content":"        });","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"aditig0305"},"content":"        assertEquals(\"Invalid date format! Please use d/M/yyyy HHmm. For example, \u00272/12/2024 1800\u0027\", exception.getMessage());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"aditig0305"},"content":"    // Test checkTask with valid description","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"aditig0305"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"aditig0305"},"content":"    public void checkTask_validDescription_success() throws MaxException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"aditig0305"},"content":"        String description \u003d \"Read book\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"aditig0305"},"content":"        assertDoesNotThrow(() -\u003e parser.checkTask(description));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"aditig0305"},"content":"    // Test checkTask with empty description","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"aditig0305"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"aditig0305"},"content":"    public void checkTask_emptyDescription_throwsException() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"aditig0305"},"content":"        String emptyDescription \u003d \"\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"aditig0305"},"content":"        MaxException exception \u003d assertThrows(MaxException.class, () -\u003e {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"aditig0305"},"content":"            parser.checkTask(emptyDescription);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"aditig0305"},"content":"        });","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"aditig0305"},"content":"        assertEquals(\"Oh no!! The description of the task cannot be empty. :(\", exception.getMessage());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"aditig0305"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"aditig0305":87}},{"path":"src/test/java/max/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditig0305"},"content":"package max.task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"aditig0305"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"aditig0305"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"aditig0305"},"content":"public class TodoTest {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"aditig0305"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"aditig0305"},"content":"    void testToString() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"aditig0305"},"content":"        Todo todo \u003d new Todo(\"Read a book\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"aditig0305"},"content":"        String result \u003d todo.toString();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"aditig0305"},"content":"        assertEquals(\"[T][ ] Read a book\", result);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"aditig0305"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"aditig0305"},"content":"    void testToStringWhenDone() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"aditig0305"},"content":"        Todo todo \u003d new Todo(\"Read a book\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"aditig0305"},"content":"        todo.markDone();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aditig0305"},"content":"        String result \u003d todo.toString();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"aditig0305"},"content":"        assertEquals(\"[T][X] Read a book\", result);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"aditig0305"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"aditig0305"},"content":"    void testToFileFormat() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"aditig0305"},"content":"        Todo todo \u003d new Todo(\"Read a book\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"aditig0305"},"content":"        String result \u003d todo.toFileFormat();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"aditig0305"},"content":"        assertEquals(\"T | 0 | Read a book\", result);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"aditig0305"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"aditig0305"},"content":"    void testToFileFormatWhenDone() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"aditig0305"},"content":"        Todo todo \u003d new Todo(\"Read a book\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"aditig0305"},"content":"        todo.markDone();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"aditig0305"},"content":"        String result \u003d todo.toFileFormat();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"aditig0305"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"aditig0305"},"content":"        assertEquals(\"T | 1 | Read a book\", result);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"aditig0305"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"aditig0305"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"aditig0305":45}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"aditig0305"},"content":"todo borrow book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"aditig0305"},"content":"bye","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"aditig0305":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"aditig0305"},"content":"java -classpath ../bin Max \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"aditig0305":1,"-":37}}]
