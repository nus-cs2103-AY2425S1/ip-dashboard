[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nws321"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nws321"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nws321"},"content":"checkstyle {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nws321"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nws321"},"content":"    mainClass.set(\"Boombotroz.Boombotroz\")","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nws321"},"content":"    archiveBaseName \u003d \"boombotroz\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":39,"nws321":7}},{"path":"src/main/java/boombotroz/BoomException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nws321"},"content":"package boombotroz;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nws321"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nws321"},"content":" * Creates exceptions that needs to be caught.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nws321"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nws321"},"content":"public class BoomException extends Exception {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nws321"},"content":"    public BoomException(String message) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nws321"},"content":"        super(message);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nws321"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"nws321":10}},{"path":"src/main/java/boombotroz/Boombotroz.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nws321"},"content":"package boombotroz;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nws321"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nws321"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nws321"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nws321"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nws321"},"content":" * Main class where execution occurs.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nws321"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nws321"},"content":"public class Boombotroz {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nws321"},"content":"    private Ui ui;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nws321"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nws321"},"content":"    private Parser parser;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nws321"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nws321"},"content":"     * Creates necessary objects and existence of text file to be written into.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nws321"},"content":"     * @param filePath file path to text file.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nws321"},"content":"    public Boombotroz(String filePath) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nws321"},"content":"        System.out.println(\"Hello! I\u0027m Boombotroz\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nws321"},"content":"                + \"\\nWhat can I do for you?\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nws321"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nws321"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nws321"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nws321"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nws321"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nws321"},"content":"            storage.printTasks(taskList);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nws321"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nws321"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nws321"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nws321"},"content":"     * Loads input to return corresponding output","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nws321"},"content":"    public void run() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nws321"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nws321"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nws321"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nws321"},"content":"            try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nws321"},"content":"                if (input.equals(\"list\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nws321"},"content":"                    parser.getList(taskList);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nws321"},"content":"                    input \u003d scanner.nextLine();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nws321"},"content":"                } else if (input.startsWith(\"mark \")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nws321"},"content":"                    parser.markTask(taskList, input, storage, ui);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nws321"},"content":"                    input \u003d scanner.nextLine();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nws321"},"content":"                } else if (input.startsWith(\"unmark \")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nws321"},"content":"                    parser.unmarkTask(taskList, input, storage, ui);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nws321"},"content":"                    input \u003d scanner.nextLine();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nws321"},"content":"                } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nws321"},"content":"                    parser.deleteTask(taskList, input, storage, ui);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nws321"},"content":"                    input \u003d scanner.nextLine();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nws321"},"content":"                } else if (input.startsWith(\"find \")) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nws321"},"content":"                    parser.findTask(taskList, input, ui);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nws321"},"content":"                    input \u003d scanner.nextLine();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nws321"},"content":"                } else if (input.startsWith(\"todo \")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nws321"},"content":"                    parser.toDoTask(taskList, input, storage, ui);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nws321"},"content":"                    input \u003d scanner.nextLine();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nws321"},"content":"                } else if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nws321"},"content":"                    parser.deadlineTask(taskList, input, storage, ui);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nws321"},"content":"                    input \u003d scanner.nextLine();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nws321"},"content":"                } else if (input.startsWith(\"event \")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nws321"},"content":"                    parser.eventTask(taskList, input, storage, ui);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nws321"},"content":"                    input \u003d scanner.nextLine();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nws321"},"content":"                } else {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nws321"},"content":"                    ui.invalidInput();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nws321"},"content":"                }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nws321"},"content":"            } catch (BoomException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nws321"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nws321"},"content":"                input \u003d scanner.nextLine();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nws321"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nws321"},"content":"                System.out.println(\"File not found\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nws321"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nws321"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nws321"},"content":"            }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nws321"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nws321"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nws321"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nws321"},"content":"        String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nws321"},"content":"        java.nio.file.Path path \u003d java.nio.file.Paths.get(home, \"ip\", \"src\", \"main\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nws321"},"content":"        new Boombotroz(path.toString() + \"/data.txt\").run();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nws321"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"nws321":107}},{"path":"src/main/java/boombotroz/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nws321"},"content":"package boombotroz;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nws321"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nws321"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nws321"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nws321"},"content":" * Deals with DEADLINE typed task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nws321"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nws321"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nws321"},"content":"    private String time;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nws321"},"content":"     * Creates Deadline object.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nws321"},"content":"     * @param mark state of completion for task.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nws321"},"content":"     * @param task task description.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nws321"},"content":"     * @param time time the task is due.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nws321"},"content":"    public Deadline(boolean mark, String task, String time) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nws321"},"content":"        super(mark, task);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nws321"},"content":"        this.time \u003d time;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nws321"},"content":"     * @inheritDoc","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nws321"},"content":"    public void hasDate(Ui ui) throws BoomException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nws321"},"content":"        if (this.time.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nws321"},"content":"            LocalDate d1 \u003d LocalDate.parse(this.time);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nws321"},"content":"            LocalDate d2 \u003d LocalDate.now();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nws321"},"content":"            ui.wrongDeadline(d1, d2);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nws321"},"content":"            this.time \u003d d1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nws321"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nws321"},"content":"     * @inheritDoc","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nws321"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nws321"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nws321"},"content":"        String s;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nws321"},"content":"        s \u003d String.format(\"[D]%s (by: %s)\",","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nws321"},"content":"                super.toString(), this.time);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nws321"},"content":"        return s;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nws321"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"nws321":49}},{"path":"src/main/java/boombotroz/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nws321"},"content":"package boombotroz;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nws321"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nws321"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nws321"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nws321"},"content":" * Deals with Event typed task.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nws321"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nws321"},"content":"public class Event extends Task {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nws321"},"content":"    private String timeStart;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nws321"},"content":"    private String timeEnd;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nws321"},"content":"     * Creates Event object.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nws321"},"content":"     * @param mark state of completion for task.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nws321"},"content":"     * @param task task description.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nws321"},"content":"     * @param timeStart time the task begins.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nws321"},"content":"     * @param timeEnd time the task ends.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nws321"},"content":"    public Event(boolean mark, String task,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nws321"},"content":"                 String timeStart, String timeEnd) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nws321"},"content":"        super(mark, task);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nws321"},"content":"        this.timeStart \u003d timeStart;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nws321"},"content":"        this.timeEnd \u003d timeEnd;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nws321"},"content":"     * @inheritDoc","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nws321"},"content":"    @Override","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nws321"},"content":"    public void hasDate(Ui ui) throws BoomException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nws321"},"content":"        if (timeStart.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\")","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nws321"},"content":"                \u0026\u0026 timeEnd.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\")) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nws321"},"content":"            LocalDate d1 \u003d LocalDate.parse(timeStart);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nws321"},"content":"            LocalDate d2 \u003d LocalDate.parse(timeEnd);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nws321"},"content":"            LocalDate d3 \u003d LocalDate.now();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nws321"},"content":"            ui.wrongEventTime(d1, d2, d3);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nws321"},"content":"            timeStart \u003d d1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nws321"},"content":"            timeEnd \u003d d2.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nws321"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nws321"},"content":"     * @inheritDoc","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nws321"},"content":"    @Override","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nws321"},"content":"    public String toString() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nws321"},"content":"        String s;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nws321"},"content":"        s \u003d String.format(\"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nws321"},"content":"                super.toString(), this.timeStart, this.timeEnd);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nws321"},"content":"        return s;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nws321"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"nws321":57}},{"path":"src/main/java/boombotroz/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nws321"},"content":"package boombotroz;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nws321"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nws321"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nws321"},"content":" * Deals with making sense of the user command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nws321"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nws321"},"content":"public class Parser {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nws321"},"content":"     * Prints out all the tasks in task_list","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nws321"},"content":"     * @param taskList list of all the tasks.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nws321"},"content":"    public void getList(TaskList taskList) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nws321"},"content":"        taskList.printAll();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nws321"},"content":"     * Marks the specified task with X based on position given by input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nws321"},"content":"     * Stores the task into txt file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nws321"},"content":"     * If the position is invalid, will throw exception.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nws321"},"content":"     * @param taskList list of all the tasks.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nws321"},"content":"     * @param input input given by user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nws321"},"content":"     * @param storage file that stores current state of task_list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nws321"},"content":"     * @param ui handles errors that may occur.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nws321"},"content":"     * @throws BoomException If position not given OR position out of range.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nws321"},"content":"     * @throws IOException If writing to file has issue.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nws321"},"content":"    public void markTask(TaskList taskList, String input,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nws321"},"content":"            Storage storage, Ui ui)","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nws321"},"content":"                    throws BoomException, IOException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nws321"},"content":"        taskList.markTask(input, ui);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nws321"},"content":"        storage.writeTasks(taskList.getAll());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nws321"},"content":"     * Unmarks the specified task with based on position given by input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nws321"},"content":"     * Stores the task into txt file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nws321"},"content":"     * If the position is invalid, will throw exception.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nws321"},"content":"     * @param taskList list of all the tasks.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nws321"},"content":"     * @param input input given by user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nws321"},"content":"     * @param storage file that stores current state of task_list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nws321"},"content":"     * @param ui handles errors that may occur.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nws321"},"content":"     * @throws BoomException If position not given OR position out of range.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nws321"},"content":"     * @throws IOException If writing to file has issue.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nws321"},"content":"    public void unmarkTask(TaskList taskList, String input,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nws321"},"content":"            Storage storage, Ui ui)","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nws321"},"content":"                    throws BoomException, IOException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nws321"},"content":"        taskList.unmarkTask(input, ui);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nws321"},"content":"        storage.writeTasks(taskList.getAll());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nws321"},"content":"     * Deletes the specified task based on position given by input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nws321"},"content":"     * Stores the task into txt file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nws321"},"content":"     * If the position is invalid, will throw exception.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nws321"},"content":"     * @param taskList list of all the tasks.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nws321"},"content":"     * @param input input given by user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nws321"},"content":"     * @param storage file that stores current state of task_list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nws321"},"content":"     * @param ui handles errors that may occur.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nws321"},"content":"     * @throws BoomException If position not given OR position out of range.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nws321"},"content":"     * @throws IOException If writing to file has issue.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nws321"},"content":"    public void deleteTask(TaskList taskList, String input,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nws321"},"content":"            Storage storage, Ui ui)","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nws321"},"content":"                    throws BoomException, IOException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nws321"},"content":"        taskList.deleteTask(input, ui);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nws321"},"content":"        storage.writeTasks(taskList.getAll());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nws321"},"content":"     * Find the task(s) that contains the word from the input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nws321"},"content":"     * If no such word, will throw exception.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nws321"},"content":"     * @param taskList list of all the tasks.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nws321"},"content":"     * @param input input given by user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nws321"},"content":"     * @param ui handles errors that may occur.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nws321"},"content":"     * @throws BoomException If position not given OR position out of range.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nws321"},"content":"    public void findTask(TaskList taskList, String input, Ui ui) throws BoomException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nws321"},"content":"        ui.emptyWord(input);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nws321"},"content":"        String word \u003d input.substring(5);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nws321"},"content":"        System.out.println(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nws321"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nws321"},"content":"            Task curr \u003d taskList.getTask(i);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nws321"},"content":"            if (curr.getDescription().matches(word)) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nws321"},"content":"                System.out.println(String.format(\"%d.%s\", i, curr));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nws321"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nws321"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nws321"},"content":"     * Creates TODO typed task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nws321"},"content":"     * Stores the task into txt file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nws321"},"content":"     * If the input is invalid, will throw exception.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nws321"},"content":"     * @param taskList list of all the tasks.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nws321"},"content":"     * @param input input given by user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nws321"},"content":"     * @param storage file that stores current state of task_list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nws321"},"content":"     * @param ui handles errors that may occur.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nws321"},"content":"     * @throws BoomException If no task details given.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nws321"},"content":"     * @throws IOException If writing to file has issue.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nws321"},"content":"    public void toDoTask(TaskList taskList, String input,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nws321"},"content":"            Storage storage, Ui ui)","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nws321"},"content":"                    throws BoomException, IOException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nws321"},"content":"        String toDoTask \u003d input.substring(5);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nws321"},"content":"        // check if there is a task","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nws321"},"content":"        ui.emptyTask(toDoTask);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nws321"},"content":"        Task createdTask \u003d new ToDo(false, toDoTask);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nws321"},"content":"        taskList.addTaskWithMessage(createdTask);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nws321"},"content":"        storage.writeTasks(taskList.getAll());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nws321"},"content":"     * Creates DEADLINE typed task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nws321"},"content":"     * Stores the task into txt file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nws321"},"content":"     * If the input is invalid, will throw exception.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"nws321"},"content":"     * @param taskList list of all the tasks.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"nws321"},"content":"     * @param input input given by user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"nws321"},"content":"     * @param storage file that stores current state of task_list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"nws321"},"content":"     * @param ui handles errors that may occur.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"nws321"},"content":"     * @throws BoomException If no task details OR no deadline given.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"nws321"},"content":"     * @throws IOException If writing to file has issue.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"nws321"},"content":"    public void deadlineTask(TaskList taskList, String input,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"nws321"},"content":"            Storage storage, Ui ui)","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"nws321"},"content":"                    throws BoomException, IOException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"nws321"},"content":"        String dlTaskTime \u003d input.substring(9);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"nws321"},"content":"        // check if there is a task","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"nws321"},"content":"        ui.emptyTask(dlTaskTime);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"nws321"},"content":"        // check if there is a deadline","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"nws321"},"content":"        ui.emptyDeadline(dlTaskTime);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"nws321"},"content":"        String dlTask \u003d dlTaskTime.split(\" /by \")[0];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"nws321"},"content":"        String time \u003d dlTaskTime.split(\" /by \")[1];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"nws321"},"content":"        Task createdTask \u003d new Deadline(false, dlTask, time);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"nws321"},"content":"        createdTask.hasDate(ui);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"nws321"},"content":"        taskList.addTaskWithMessage(createdTask);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"nws321"},"content":"        storage.writeTasks(taskList.getAll());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"nws321"},"content":"     * Creates EVENT typed task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"nws321"},"content":"     * Stores the task into txt file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"nws321"},"content":"     * If the input is invalid, will throw exception.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"nws321"},"content":"     * @param taskList list of all the tasks.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"nws321"},"content":"     * @param input input given by user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"nws321"},"content":"     * @param storage file that stores current state of task_list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"nws321"},"content":"     * @param ui handles errors that may occur.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"nws321"},"content":"     * @throws BoomException If no task details OR invalid time period given.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"nws321"},"content":"     * @throws IOException If writing to file has issue.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"nws321"},"content":"    public void eventTask(TaskList taskList, String input,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"nws321"},"content":"            Storage storage, Ui ui)","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"nws321"},"content":"                    throws BoomException, IOException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"nws321"},"content":"        String eventTaskTime \u003d input.substring(6);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"nws321"},"content":"        // check if there is a task","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"nws321"},"content":"        ui.emptyTask(eventTaskTime);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"nws321"},"content":"        // check if there is both a start and end time","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"nws321"},"content":"        ui.emptyStartEnd(eventTaskTime);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"nws321"},"content":"        String eventTask \u003d eventTaskTime.split(\" /from \")[0];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"nws321"},"content":"        String timeStart \u003d eventTaskTime.split(\" /from \")[1]","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"nws321"},"content":"                .split(\" /to \")[0];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"nws321"},"content":"        String timeEnd \u003d eventTaskTime.split(\" /from \")[1]","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"nws321"},"content":"                .split(\" /to \")[1];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"nws321"},"content":"        Task createdTask \u003d new Event(false, eventTask,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"nws321"},"content":"                timeStart, timeEnd);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"nws321"},"content":"        createdTask.hasDate(ui);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"nws321"},"content":"        taskList.addTaskWithMessage(createdTask);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"nws321"},"content":"        storage.writeTasks(taskList.getAll());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"nws321"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"nws321":201}},{"path":"src/main/java/boombotroz/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nws321"},"content":"package boombotroz;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nws321"},"content":"import java.io.File;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nws321"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nws321"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nws321"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nws321"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nws321"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nws321"},"content":" * Deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nws321"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nws321"},"content":"public class Storage {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nws321"},"content":"    private String filePath;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nws321"},"content":"     * Assigns file path to variable.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nws321"},"content":"     * @param filePath","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nws321"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nws321"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nws321"},"content":"     * Prints all the tasks stored in the text file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nws321"},"content":"     * @param taskList list of all the tasks","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nws321"},"content":"     * @throws FileNotFoundException If no such file in directory.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nws321"},"content":"    public void printTasks(TaskList taskList) throws FileNotFoundException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nws321"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nws321"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nws321"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nws321"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nws321"},"content":"            System.out.println(line);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nws321"},"content":"            // Process the line for tasks","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nws321"},"content":"            if (line.startsWith(\"[T]\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nws321"},"content":"                String toDoTask \u003d line.substring(7);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nws321"},"content":"                if (line.substring(3).startsWith(\"[X]\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nws321"},"content":"                    taskList.addTask(new ToDo(true, toDoTask));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nws321"},"content":"                } else if (line.substring(3).startsWith(\"[ ]\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nws321"},"content":"                    taskList.addTask(new ToDo(false, toDoTask));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nws321"},"content":"                }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nws321"},"content":"            } else if (line.startsWith(\"[D]\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nws321"},"content":"                String dlTask \u003d line.substring(7)","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nws321"},"content":"                        .split(\" \\\\(by: \")[0];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nws321"},"content":"                String time \u003d line.substring(7)","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nws321"},"content":"                        .split(\" \\\\(by: \")[1];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nws321"},"content":"                time \u003d time.substring(0, time.length() - 1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nws321"},"content":"                if (line.substring(3).startsWith(\"[X]\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nws321"},"content":"                    taskList.addTask(new Deadline(","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nws321"},"content":"                            true, dlTask, time));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nws321"},"content":"                } else if (line.substring(3).startsWith(\"[ ]\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nws321"},"content":"                    taskList.addTask(new Deadline(","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nws321"},"content":"                            false, dlTask, time));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nws321"},"content":"                }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nws321"},"content":"            } else {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nws321"},"content":"                String eventTask \u003d line.substring(7)","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nws321"},"content":"                        .split(\" \\\\(from: \")[0];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nws321"},"content":"                String timeStart \u003d line.substring(7)","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nws321"},"content":"                        .split(\" \\\\(from: \")[1]","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nws321"},"content":"                        .split(\" to: \")[0];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nws321"},"content":"                String timeEnd \u003d line.substring(7)","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nws321"},"content":"                        .split(\" \\\\(from: \")[1]","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nws321"},"content":"                        .split(\" to: \")[1];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nws321"},"content":"                timeEnd \u003d timeEnd.substring(0, timeEnd.length() - 1);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nws321"},"content":"                if (line.substring(3).startsWith(\"[X]\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nws321"},"content":"                    taskList.addTask(new Event(","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nws321"},"content":"                            true, eventTask, timeStart, timeEnd));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nws321"},"content":"                } else if (line.substring(3).startsWith(\"[ ]\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nws321"},"content":"                    taskList.addTask(new Event(","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nws321"},"content":"                            false, eventTask, timeStart, timeEnd));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nws321"},"content":"                }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nws321"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nws321"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nws321"},"content":"        s.close();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nws321"},"content":"     * Writes the task into the text file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nws321"},"content":"     * @param task task to be written","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nws321"},"content":"     * @throws IOException If writing to file has issue.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nws321"},"content":"    public void writeTasks(String task) throws IOException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nws321"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nws321"},"content":"        fw.write(task);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nws321"},"content":"        fw.close();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nws321"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"nws321":102}},{"path":"src/main/java/boombotroz/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nws321"},"content":"package boombotroz;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nws321"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nws321"},"content":" * Deals with creation of task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nws321"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nws321"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nws321"},"content":"    private boolean mark;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nws321"},"content":"    private String task;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nws321"},"content":"     * Creates Task object.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nws321"},"content":"     * @param mark state of completion for task.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nws321"},"content":"     * @param task task description.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nws321"},"content":"    public Task(boolean mark, String task) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nws321"},"content":"        this.mark \u003d mark;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nws321"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nws321"},"content":"     * Checks if time for the tasks is in yyyy-mm-dd format.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nws321"},"content":"     * @param ui handles errors that may occur.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nws321"},"content":"     * @throws BoomException If invalid deadline / time period given.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nws321"},"content":"    public abstract void hasDate(Ui ui) throws BoomException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nws321"},"content":"     * Sets completion state of the task.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nws321"},"content":"     * @param mark completion state of task.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nws321"},"content":"    public void setMark(boolean mark) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nws321"},"content":"        this.mark \u003d mark;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nws321"},"content":"     * Returns string representation of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nws321"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nws321"},"content":"        return this.task;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nws321"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nws321"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nws321"},"content":"        String s;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nws321"},"content":"        if (this.mark \u003d\u003d true) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nws321"},"content":"            s \u003d String.format(\"[X] %s\", this.task);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nws321"},"content":"        } else {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nws321"},"content":"            s \u003d String.format(\"[ ] %s\", this.task);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nws321"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nws321"},"content":"        return s;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nws321"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"nws321":58}},{"path":"src/main/java/boombotroz/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nws321"},"content":"package boombotroz;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nws321"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nws321"},"content":"import java.util.List;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nws321"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nws321"},"content":" * Contains the task list and its operands.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nws321"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nws321"},"content":"public class TaskList {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nws321"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nws321"},"content":"    public TaskList() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nws321"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nws321"},"content":"     * Returns size of task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nws321"},"content":"    public int size() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nws321"},"content":"        return taskList.size();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nws321"},"content":"     * Returns the task from the task list at that index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nws321"},"content":"     * @param index","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nws321"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nws321"},"content":"        return taskList.get(index);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nws321"},"content":"     * Adds task to task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nws321"},"content":"     * Prints message about the task that was just added and number of tasks in list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nws321"},"content":"     * @param task task to be added","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nws321"},"content":"    public void addTaskWithMessage(Task task) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nws321"},"content":"        taskList.add(task);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nws321"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nws321"},"content":"        System.out.println(String.format(","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nws321"},"content":"                \"  %s\", task));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nws321"},"content":"        System.out.println(String.format(","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nws321"},"content":"                \"Now you have %d tasks in the list.\",","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nws321"},"content":"                taskList.size()));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nws321"},"content":"     * Adds task to task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nws321"},"content":"     * @param task task to be added","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nws321"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nws321"},"content":"        taskList.add(task);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nws321"},"content":"     * Deletes task from task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nws321"},"content":"     * Prints message about the task that was just deleted and number of tasks in list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nws321"},"content":"     * @param input input given by user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nws321"},"content":"     * @param ui handles errors that may occur.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nws321"},"content":"     * @throws BoomException If position not given OR position out of range.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nws321"},"content":"    public void deleteTask(String input, Ui ui) throws BoomException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nws321"},"content":"        // check if there is a given task number to delete","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nws321"},"content":"        ui.isTaskNumber(input);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nws321"},"content":"        int index \u003d Integer.parseInt(","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nws321"},"content":"                input.split(\" \")[1]) - 1;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nws321"},"content":"        // check if the task number falls within the task list range","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nws321"},"content":"        ui.wrongRange(index, this);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nws321"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nws321"},"content":"        System.out.println(String.format(","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nws321"},"content":"                \"  %s\", taskList.get(index)));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nws321"},"content":"        taskList.remove(taskList.get(index));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nws321"},"content":"        System.out.println(String.format(","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nws321"},"content":"                \"Now you have %d tasks in the list.\",","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nws321"},"content":"                taskList.size()));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nws321"},"content":"     * Marks task from task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nws321"},"content":"     * Prints message about the task that was just marked.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nws321"},"content":"     * @param input input given by user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nws321"},"content":"     * @param ui handles errors that may occur.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nws321"},"content":"     * @throws BoomException If position not given OR position out of range.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nws321"},"content":"    public void markTask(String input, Ui ui) throws BoomException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nws321"},"content":"        // check if there is a given task number to mark","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nws321"},"content":"        ui.isTaskNumber(input);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nws321"},"content":"        int index \u003d Integer.parseInt(","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nws321"},"content":"                input.split(\" \")[1]) - 1;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nws321"},"content":"        // check if the task number falls within the task list range","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nws321"},"content":"        ui.wrongRange(index, this);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nws321"},"content":"        taskList.get(index).setMark(true);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nws321"},"content":"        System.out.println(\"Nice! I\u0027ve marked this as done:\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nws321"},"content":"        System.out.println(String.format(","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nws321"},"content":"                \"  %s\", taskList.get(index)));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nws321"},"content":"     * Unmark task from task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nws321"},"content":"     * Prints message about the task that was just unmarked.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nws321"},"content":"     * @param input input given by user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nws321"},"content":"     * @param ui handles errors that may occur.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nws321"},"content":"     * @throws BoomException If position not given OR position out of range.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nws321"},"content":"    public void unmarkTask(String input, Ui ui) throws BoomException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nws321"},"content":"        // check if there is a given task number to unmark","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nws321"},"content":"        ui.isTaskNumber(input);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nws321"},"content":"        int index \u003d Integer.parseInt(","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nws321"},"content":"                input.split(\" \")[1]) - 1;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nws321"},"content":"        // check if the task number falls within the task list range","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nws321"},"content":"        ui.wrongRange(index, this);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nws321"},"content":"        taskList.get(index).setMark(false);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nws321"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nws321"},"content":"        System.out.println(String.format(","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nws321"},"content":"                \"  %s\", taskList.get(index)));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nws321"},"content":"     * Prints all the task from task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"nws321"},"content":"    public void printAll() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"nws321"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"nws321"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"nws321"},"content":"            System.out.println(String.format(","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"nws321"},"content":"                    \"%d.%s\", i + 1, taskList.get(i)));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"nws321"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"nws321"},"content":"     * Returns all the task from task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"nws321"},"content":"    public String getAll() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"nws321"},"content":"        String s \u003d \"\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"nws321"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"nws321"},"content":"            s \u003d s.concat(taskList.get(i) + \"\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"nws321"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"nws321"},"content":"        return s;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"nws321"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"nws321":155}},{"path":"src/main/java/boombotroz/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nws321"},"content":"package boombotroz;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nws321"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nws321"},"content":" * Deals with TODO typed task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nws321"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nws321"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nws321"},"content":"     * Creates ToDo object.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nws321"},"content":"     * @param mark state of completion for task.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nws321"},"content":"     * @param task task description.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nws321"},"content":"    public ToDo(boolean mark, String task) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nws321"},"content":"        super(mark, task);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nws321"},"content":"     * @inheritDoc","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nws321"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nws321"},"content":"    public void hasDate(Ui ui) throws BoomException {}","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nws321"},"content":"     * @inheritDoc","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nws321"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nws321"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nws321"},"content":"        String s;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nws321"},"content":"        s \u003d String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nws321"},"content":"        return s;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nws321"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"nws321":35}},{"path":"src/main/java/boombotroz/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nws321"},"content":"package boombotroz;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nws321"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nws321"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nws321"},"content":" * Deals with interactions with the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nws321"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nws321"},"content":"public class Ui {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nws321"},"content":"     * Throws exception when input invalid.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nws321"},"content":"    public void invalidInput() throws BoomException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nws321"},"content":"        throw new BoomException(\"That\u0027s nonsense !!\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nws321"},"content":"     * Throws exception when no task details.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nws321"},"content":"     * @param taskInput task details.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nws321"},"content":"     * @throws BoomException If no task details given.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nws321"},"content":"    public void emptyTask(String taskInput) throws BoomException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nws321"},"content":"        if (taskInput.isEmpty()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nws321"},"content":"            throw new BoomException(","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nws321"},"content":"                    \"You can\u0027t do nothing !!\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nws321"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nws321"},"content":"     * Throws exception when no deadline.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nws321"},"content":"     * @param taskInput task details.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nws321"},"content":"     * @throws BoomException If no deadline given.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nws321"},"content":"    public void emptyDeadline(String taskInput) throws BoomException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nws321"},"content":"        if (!taskInput.contains(\" /by \")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nws321"},"content":"            throw new BoomException(","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nws321"},"content":"                    \"You need a deadline !!\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nws321"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nws321"},"content":"     * Throws exception when invalid time period given.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nws321"},"content":"     * @param taskInput task details.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nws321"},"content":"     * @throws BoomException If invalid time period given.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nws321"},"content":"    public void emptyStartEnd(String taskInput) throws BoomException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nws321"},"content":"        if (!taskInput.contains(\" /from \")","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nws321"},"content":"                || !taskInput.contains(\" /to \")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nws321"},"content":"            throw new BoomException(","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nws321"},"content":"                    \"You need a start and end !!\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nws321"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nws321"},"content":"     * Throws exception when no task number given.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nws321"},"content":"     * @param markInput mark details.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nws321"},"content":"     * @throws BoomException If no task number given.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nws321"},"content":"    public void isTaskNumber(String markInput) throws BoomException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nws321"},"content":"        String[] parts \u003d markInput.split(\" \");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nws321"},"content":"        // Check if there is a second part after splitting","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nws321"},"content":"        if (parts.length \u003c 2 || !parts[1].matches(\"-?\\\\d+\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nws321"},"content":"            throw new BoomException(","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nws321"},"content":"                    \"You need to give a number !!\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nws321"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nws321"},"content":"     * Throws exception when invalid range given.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nws321"},"content":"     * @param index task index.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nws321"},"content":"     * @param taskList list of all the tasks","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nws321"},"content":"     * @throws BoomException If invalid range given.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nws321"},"content":"    public void wrongRange(int index, TaskList taskList) throws BoomException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nws321"},"content":"        if (index + 1 \u003c\u003d 0","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nws321"},"content":"                || index + 1 \u003e taskList.size()) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nws321"},"content":"            throw new BoomException(","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nws321"},"content":"                    \"You are out of range !!\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nws321"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nws321"},"content":"     * Throws exception when invalid deadline given.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nws321"},"content":"     * @param d1 task deadline.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nws321"},"content":"     * @param d2 time now.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nws321"},"content":"     * @throws BoomException If invalid deadline given.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nws321"},"content":"    public void wrongDeadline(LocalDate d1, LocalDate d2) throws BoomException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nws321"},"content":"        if (d2.isAfter(d1)) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nws321"},"content":"            throw new BoomException(\"Your date is wrong !!\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nws321"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nws321"},"content":"     * Throws exception when invalid time period given.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nws321"},"content":"     * @param d1 task start time.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nws321"},"content":"     * @param d2 task end time.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nws321"},"content":"     * @param d3 time now.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nws321"},"content":"     * @throws BoomException If invalid time period given.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nws321"},"content":"    public void wrongEventTime(LocalDate d1, LocalDate d2, LocalDate d3) throws BoomException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nws321"},"content":"        if (d1.isAfter(d2) || d3.isAfter(d2)) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nws321"},"content":"            throw new BoomException(\"Your date is wrong !!\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nws321"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nws321"},"content":"     * Throws exception when no description given.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nws321"},"content":"     * @param wordInput task description.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nws321"},"content":"     * @throws BoomException If no description given.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nws321"},"content":"    public void emptyWord(String wordInput) throws BoomException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nws321"},"content":"        String[] parts \u003d wordInput.split(\" \");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nws321"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nws321"},"content":"            throw new BoomException(\"You need a keyword !!\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nws321"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nws321"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"nws321":134}},{"path":"src/test/java/boombotroz/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nws321"},"content":"package boombotroz;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nws321"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nws321"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nws321"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nws321"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nws321"},"content":" * Test methods in Parser class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nws321"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nws321"},"content":"public class ParserTest {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nws321"},"content":"    private Parser p \u003d new Parser();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nws321"},"content":"    private TaskList tl \u003d new TaskList();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nws321"},"content":"    private Storage s \u003d new Storage(\"../data-test.txt\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nws321"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nws321"},"content":"     * Tests if deleteTask method in Parser class works as intended.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nws321"},"content":"     * @throws BoomException If position not given OR position out of range.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nws321"},"content":"     * @throws IOException If writing to file has issue.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nws321"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nws321"},"content":"    public void deleteTaskTest() throws BoomException, IOException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nws321"},"content":"        Task task1 \u003d new ToDo(true, \"cook\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nws321"},"content":"        Task task2 \u003d new ToDo(false, \"clean\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nws321"},"content":"        tl.addTask(task1);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nws321"},"content":"        tl.addTask(task2);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nws321"},"content":"        p.deleteTask(tl, \"delete 2\", s, ui);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nws321"},"content":"        assertEquals(\"[T][X] cook\\n\", tl.getAll());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nws321"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"nws321":36}},{"path":"src/test/java/boombotroz/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nws321"},"content":"package boombotroz;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nws321"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nws321"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nws321"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nws321"},"content":" * Test methods in TaskList class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nws321"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nws321"},"content":"public class TaskListTest {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nws321"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nws321"},"content":"    private TaskList tl \u003d new TaskList();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nws321"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nws321"},"content":"     * Tests if getAll method in TaskList class works as intended.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nws321"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nws321"},"content":"     * @throws BoomException If invalid date range given.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nws321"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nws321"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nws321"},"content":"    public void getAllTest() throws BoomException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nws321"},"content":"        Task task1 \u003d new ToDo(true, \"cook\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nws321"},"content":"        Task task2 \u003d new ToDo(false, \"clean\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nws321"},"content":"        tl.addTask(task1);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nws321"},"content":"        tl.addTask(task2);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nws321"},"content":"        assertEquals(\"[T][X] cook\\n[T][ ] clean\\n\", tl.getAll());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nws321"},"content":"        Task task3 \u003d new Deadline(true, \"eat\", \"2030-01-01\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nws321"},"content":"        task3.hasDate(ui);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nws321"},"content":"        tl.addTask(task3);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nws321"},"content":"        assertEquals(\"[T][X] cook\\n[T][ ] clean\\n\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nws321"},"content":"                + \"[D][X] eat (by: Jan 1 2030)\\n\", tl.getAll());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nws321"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nws321"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nws321"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"nws321":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nws321"},"content":"todo read book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nws321"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nws321"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nws321"},"content":"todo join sports club","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nws321"},"content":"mark 1","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nws321"},"content":"mark 4","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nws321"},"content":"todo borrow book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nws321"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nws321"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nws321"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"nws321":10}}]
