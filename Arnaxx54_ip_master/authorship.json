[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"    mainClass.set(\"drbrown.DrBrown\")","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":40,"Arnaxx54":1}},{"path":"data/DrBrown.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"T | true | read book","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"D | false | return book | 2024-06-06 1800","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"E | true | project meeting | 2024-08-06 1800 | 2024-08-06 2000","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"T | true | join sports club","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"T | false | join a fan club","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"D | true | go for dinner | 2023-10-05 1900","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":6}},{"path":"src/main/java/drbrown/DrBrown.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.command.Command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Parser;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Storage;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.TaskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.DrBrownException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":" * The main class for the DrBrown application, which is a task management program.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":" * It handles the initialization, interaction with the user, and execution of commands.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"public class DrBrown {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"    private final Storage storage;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"    private final Ui ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs a new DrBrown instance with the specified file path for storage.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"     * Initializes the UI, loads the task list from storage, and handles any exceptions during loading.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"     * @param filePath the file path to load and save tasks","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"    public DrBrown(String filePath) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"        } catch (DrBrownException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"     * Runs the main loop of the DrBrown application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"     * Continuously reads user input, parses commands, executes them, and handles exceptions.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"     * The loop terminates when the user issues an exit command.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"    public void run() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"        ui.showGreeting();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"        ui.showLine();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"        while (!isExit) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"            try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"                String userInput \u003d ui.readCommand();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"                ui.showLine();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"                Command command \u003d Parser.parse(userInput);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"                command.execute(tasks, ui, storage);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"            } catch (DrBrownException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"            } finally {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"                ui.showLine();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Arnaxx54"},"content":"            }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Arnaxx54"},"content":"     * The main method to start the DrBrown application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Arnaxx54"},"content":"     * It creates a new instance of DrBrown with the specified file path and runs the application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Arnaxx54"},"content":"     * @param args command-line arguments (not used)","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Arnaxx54"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Arnaxx54"},"content":"        new DrBrown(\"data/DrBrown.txt\").run();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":70}},{"path":"src/main/java/drbrown/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Storage;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"    private final Task task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs an AddCommand with the specified task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"     * Executes the add command by adding the task to the task list,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"     * displaying the task creation message and updating the task count.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"     * @param tasks   The TaskList to which the task is added.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"     * @param ui      The UI object to display messages to the user.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"     * @param storage The Storage object for saving tasks to a file.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"        ui.showTaskCreation(task);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"        tasks.add(task);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"        ui.showCount(tasks);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"     * Indicates whether this command exits the program.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"     * @return false, as this command does not exit the program.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"        return false;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":48}},{"path":"src/main/java/drbrown/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.DrBrownException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Storage;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":" * Represents an abstract command that can be executed.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" * All specific command types should extend this class and implement its abstract methods.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"public abstract class Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"     * Executes the command with the specified task list, UI, and storage.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"     * @param tasks   The TaskList containing the current tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"     * @param ui      The UI object to interact with the user.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"     * @param storage The Storage object to save and load tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If there is an error executing the command.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DrBrownException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"     * Determines whether the command exits the program.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"     * @return true if the command exits the program, false otherwise.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":30}},{"path":"src/main/java/drbrown/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.DrBrownException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Storage;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":" * Inherits from the Command class.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"    private final int itemIndex;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs a DeleteCommand with the specified index of the task to be deleted.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"     * @param itemIndex The index of the task to delete in the task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"    public DeleteCommand(int itemIndex) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"     * Executes the DeleteCommand, removing a task from the provided TaskList at the specified index.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"     * If successful, displays confirmation and the remaining task count using the Ui object.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"     * If the index is invalid, throws a DrBrownException with an appropriate error message.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"     * @param tasks   The TaskList containing all tasks.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"     * @param ui      The Ui object for user interactions.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"     * @param storage The Storage object for saving/loading tasks (not used in this command).","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If the index is out of bounds of the task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DrBrownException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"            tasks.removeItem(itemIndex, ui);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"            ui.showEnd();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"            ui.showCount(tasks);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"            throw new DrBrownException(\"You got the count wrong! That’s not how you calculate time travel – you\u0027re off by a few gigawatts!\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"     * Indicates whether the command causes the application to exit.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"     * @return false, since DeleteCommand does not cause the application to exit.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"        return false;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":56}},{"path":"src/main/java/drbrown/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.DrBrownException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Storage;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":" * Represents a command to exit the DrBrown application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"     * Executes the exit command by showing the end message, closing the command UI,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"     * and updating the task list in storage.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"     * @param tasks   The TaskList containing the current tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"     * @param ui      The UI object to display messages to the user and handle UI closure.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"     * @param storage The Storage object to update the saved tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If there is an error updating the storage.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DrBrownException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"        ui.showEnd();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"        ui.closeCommand();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"        storage.update(tasks);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"     * Indicates whether this command exits the program.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"     * @return true, as this command exits the program.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"        return true;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":40}},{"path":"src/main/java/drbrown/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.command;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.DrBrownException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Storage;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.TaskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" * Represents a command to find tasks that match a given keyword.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":" * Inherits from the Command class.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"    private final String keyword;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs a FindCommand with the specified keyword.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"     * @param keyword The keyword to search for in tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"     * Executes the FindCommand, searching for tasks in the provided TaskList that contain the keyword.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"     * If matching tasks are found, they are displayed using the Ui object.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"     * If no tasks are found or the list is empty, appropriate messages are shown.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"     * @param tasks   The TaskList containing all tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"     * @param ui      The Ui object for user interactions.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"     * @param storage The Storage object for saving/loading tasks (not used in this command).","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If there are no tasks in the list to search from.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DrBrownException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"        if (tasks.getCount() \u003d\u003d 0) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"            throw new DrBrownException(\"Wait a minute, Doc! There\u0027s nothing here! We can\u0027t go anywhere until you add something to the list!\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"        tasks.findMatching(this.keyword, ui);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"     * Indicates whether the command causes the application to exit.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"     * @return false, since FindCommand does not cause the application to exit.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"        return false;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":53}},{"path":"src/main/java/drbrown/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.DrBrownException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Storage;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":" * Inherits from the Command class.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"     * Executes the ListCommand by displaying all tasks in the task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"     * If the task list is empty, a DrBrownException is thrown with an appropriate message.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"     * @param tasks   The TaskList containing the current tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"     * @param ui      The Ui object to display messages to the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     * @param storage The Storage object for saving and loading tasks (not used in this command).","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If the task list is empty.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DrBrownException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"        if (tasks.getCount() \u003d\u003d 0) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"            throw new DrBrownException(\"Wait a minute, Doc! There\u0027s nothing here! We can\u0027t go anywhere until you add something to the list!\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"        tasks.listOut(ui);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"     * Indicates whether this command causes the application to exit.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"     * @return false, as this command does not cause the application to exit.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"        return false;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":41}},{"path":"src/main/java/drbrown/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.DrBrownException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Storage;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" * Represents a command to mark a task as completed in the task list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":" * Inherits from the Command class.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"    private final int itemIndex;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs a MarkCommand with the specified index of the task to be marked as completed.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"     * @param itemIndex The index of the task to mark as completed.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"    public MarkCommand(int itemIndex) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"     * Executes the MarkCommand by setting the status of the task at the specified index to completed.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"     * It displays the marked task and handles exceptions if the index is out of bounds.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"     * @param tasks   The TaskList containing the current tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"     * @param ui      The Ui object to display messages to the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"     * @param storage The Storage object for saving changes to the file (not used in this command).","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If the task index is invalid (out of bounds).","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DrBrownException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"            tasks.markTask(itemIndex, ui);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"            throw new DrBrownException(\"You got the count wrong! That’s not how you calculate time travel – you\u0027re off by a few gigawatts!\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"     * Indicates whether this command causes the application to exit.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"     * @return false, as this command does not cause the application to exit.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"        return false;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":53}},{"path":"src/main/java/drbrown/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.DrBrownException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Storage;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" * Represents a command to unmark a task as incomplete in the task list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":" * Inherits from the Command class.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"    private final int itemIndex;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs an UnmarkCommand with the specified index of the task to be marked as incomplete.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"     * @param itemIndex The index of the task to unmark as incomplete.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"    public UnmarkCommand(int itemIndex) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"     * Executes the UnmarkCommand by setting the status of the task at the specified index to incomplete.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"     * It displays the unmarked task and handles exceptions if the index is out of bounds.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"     * @param tasks   The TaskList containing the current tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"     * @param ui      The Ui object to display messages to the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"     * @param storage The Storage object for saving changes to the file (not used in this command).","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If the task index is invalid (out of bounds).","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DrBrownException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"            tasks.unmarkTask(itemIndex, ui);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"            throw new DrBrownException(\"You got the count wrong! That’s not how you calculate time travel – you\u0027re off by a few gigawatts!\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"     * Indicates whether this command causes the application to exit.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"     * @return false, as this command does not cause the application to exit.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"        return false;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":53}},{"path":"src/main/java/drbrown/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":" * Represents a task with a deadline in the DrBrown application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":" * The deadline task has a description, a status (completed or not), and an end date and time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"    private static final DateTimeFormatter FILE_DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs a Deadline task with the specified status, description, and end date/time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"     * @param status      The completion status of the task (true if completed, false otherwise).","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"     * @param end         The end date and time of the deadline.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"    public Deadline(boolean status, String description, LocalDateTime end) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"        super(status, description);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the string representation of the deadline task in the format suitable for file storage.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string formatted for file storage representing the deadline task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"    public String toFileString() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"        return \"D | \" + getStatus() + \" | \" + getDescription() + \" | \" + end.format(FILE_DATE_TIME_FORMATTER);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the string representation of the deadline task in the format suitable for UI display.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"     * @return A user-friendly string that describes the urgency of meeting the deadline.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"    public String toUIString() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"        return \"Last night, Darth Vader came down from Planet Vulcan and told me that if you don\u0027t meet this deadline... he\u0027d melt your brain! So, better get moving!\\n\";","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the string representation of the deadline task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string representation of the deadline task with its status, description, and end date/time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"    public String toString() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"        return \"[D][\" + (getStatus() ? \"X\" : \" \") + \"] \" + getDescription() + \" (by: \" + end.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":56}},{"path":"src/main/java/drbrown/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":" * Represents an event task in the DrBrown application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":" * An event task has a description, a status (completed or not), a start date/time, and an end date/time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"public class Event extends Task {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"    private final LocalDateTime start;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"    private static final DateTimeFormatter FILE_DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs an Event task with the specified status, description, start date/time, and end date/time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"     * @param status      The completion status of the task (true if completed, false otherwise).","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     * @param start       The start date and time of the event.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"     * @param end         The end date and time of the event.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"    public Event(boolean status, String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"        super(status, description);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the string representation of the event task in the format suitable for file storage.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string formatted for file storage representing the event task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"    public String toFileString() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"        return \"E | \" + getStatus() + \" | \" + getDescription() + \" | \" + start.format(FILE_DATE_TIME_FORMATTER) + \" | \" + end.format(FILE_DATE_TIME_FORMATTER);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the string representation of the event task in the format suitable for UI display.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"     * @return A user-friendly string that describes the scheduled event.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"    public String toUIString() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"        return \"The appropriate question is: ‘When the hell are they?’ Your event is now set in time!\\n\";","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the string representation of the event task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string representation of the event task with its status, description, start date/time, and end date/time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"    public String toString() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Arnaxx54"},"content":"        return \"[E][\" + (getStatus() ? \"X\" : \" \") + \"] \" + getDescription() + \" (from: \" + start.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" end: \" + end.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":59}},{"path":"src/main/java/drbrown/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":" * Represents an abstract task in the DrBrown application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":" * A task has a description and a status indicating whether it is completed.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":" * Specific types of tasks should extend this class and implement its abstract methods.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"public abstract class Task {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"    private boolean status;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"    private final String description;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs a Task with the specified status and description.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"     * @param status      The completion status of the task (true if completed, false otherwise).","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"    public Task(boolean status, String description) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs a Task with a default description.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"     * The default description is an empty string, and the task status is not set.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"    public Task() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"        this.description \u003d \"\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"     * @return true if the task is completed, false otherwise.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"    public boolean getStatus() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"        return status;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"    public String getDescription() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"        return description;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"     * @param status The new completion status of the task (true if completed, false otherwise).","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"    public void setStatus(boolean status) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the string representation of the task in the format suitable for file storage.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string formatted for file storage representing the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Arnaxx54"},"content":"    public abstract String toFileString();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the string representation of the task in the format suitable for UI display.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Arnaxx54"},"content":"     * @return A user-friendly string that describes the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Arnaxx54"},"content":"    public abstract String toUIString();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":72}},{"path":"src/main/java/drbrown/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":" * Represents a Todo task in the DrBrown application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":" * A Todo task has a description and a status indicating whether it is completed.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs a Todo task with the specified status and description.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"     * @param status      The completion status of the task (true if completed, false otherwise).","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"    public Todo(boolean status, String description) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"        super(status, description);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the string representation of the Todo task in the format suitable for file storage.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string formatted for file storage representing the Todo task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"    public String toFileString() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"        return \"T | \" + getStatus() + \" | \" + getDescription();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the string representation of the Todo task in the format suitable for UI display.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"     * @return A user-friendly string that adds a humorous comment about adding the task to the list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"    public String toUIString() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"        return \"Doc, you don\u0027t just walk into a store and buy plutonium! But you sure can add this task to your list!\\n\";","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the string representation of the Todo task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string representation of the Todo task with its status and description.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"    public String toString() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"        return \"[T][\" + (getStatus() ? \"X\" : \" \") + \"] \" + getDescription();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":48}},{"path":"src/main/java/drbrown/utils/DrBrownException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.utils;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":" * Represents an exception specific to the DrBrown application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":" * This exception is used to indicate errors that occur during the execution of the program.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"public class DrBrownException extends Exception {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs a new DrBrownException with the specified detail message.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"     * @param message The detail message for the exception.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"    public DrBrownException(String message) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"        super(message);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":17}},{"path":"src/main/java/drbrown/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.utils;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.command.*;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Deadline;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Event;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Todo;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":" * Parses user input and returns the appropriate command for execution.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":" * Handles parsing for various commands such as adding tasks, marking tasks,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":" * unmarking tasks, listing tasks, deleting tasks, and exiting the application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"public class Parser {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"     * Parses the user input and returns a corresponding command.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"     * @param userInput The input provided by the user.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"     * @return A Command object representing the user\u0027s intended action.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If the input is invalid or an error occurs while parsing.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"    public static Command parse(String userInput) throws DrBrownException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"        String[] inputSplit \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"        switch (inputSplit[0]) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"            case \"todo\":","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"                try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"                    if (inputSplit[1].trim().isEmpty()) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"                        throw new DrBrownException(\"Great Scott! You can\u0027t add a to-do without a description!\\n\\nUse the format: todo {description}\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"                    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"                    Task todo \u003d new Todo(false, inputSplit[1].trim());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"                    return new AddCommand(todo);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"                    throw new DrBrownException(\"Great Scott! You can\u0027t add a to-do without a description!\\n\\nUse the format: todo {description}\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"                }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"            case \"deadline\":","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"                try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"                    if (inputSplit.length \u003d\u003d 1) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"                        throw new DrBrownException(\"Great Scott! You can\u0027t add a deadline without a description and date!\\nUse the format: deadline {description} /by {date}\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"                    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"                    String[] deadlineSplit \u003d inputSplit[1].split(\"/by\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"                    if (deadlineSplit[0].isEmpty()) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"                        throw new DrBrownException(\"Hello? Hello? Anybody home? Looks like something\u0027s missing here!\\nUse the format: deadline {description} /by {date}\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"                    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"                    Task deadline \u003d new Deadline(false, deadlineSplit[0].trim(), LocalDateTime.parse(deadlineSplit[1].trim(), formatter));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"                    return new AddCommand(deadline);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"                } catch (ArrayIndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Arnaxx54"},"content":"                    throw new DrBrownException(\"Looks like your Uncle Joey didn\u0027t make parole again... and you missed the date! Let\u0027s fix that deadline!\\nUse the format: deadline {description} /by {MMM dd yyyy HH:mm}\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Arnaxx54"},"content":"                }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Arnaxx54"},"content":"            case \"event\":","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Arnaxx54"},"content":"                try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Arnaxx54"},"content":"                    if (inputSplit.length \u003d\u003d 1) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Arnaxx54"},"content":"                        throw new DrBrownException(\"Great Scott! You can\u0027t add an event without a description and from and to date!\\nUse the format: event {description} /from {date} /to {date}\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Arnaxx54"},"content":"                    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Arnaxx54"},"content":"                    if (!userInput.contains(\"/from\") || !userInput.contains(\"/to\") || userInput.indexOf(\"/from\") \u003e userInput.indexOf(\"/to\")) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Arnaxx54"},"content":"                        throw new DrBrownException(\"Looks like your Uncle Joey didn\u0027t make parole again... and you missed the date! Let\u0027s fix that event!\\nUse the format: event {description} /from {date} /to {date}\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Arnaxx54"},"content":"                    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Arnaxx54"},"content":"                    String[] eventSplit \u003d inputSplit[1].split(\"/from | /to\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Arnaxx54"},"content":"                    Task event \u003d new Event(false, eventSplit[0].trim(), LocalDateTime.parse(eventSplit[1].trim(), formatter), LocalDateTime.parse(eventSplit[2].trim(), formatter));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Arnaxx54"},"content":"                    return new AddCommand(event);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Arnaxx54"},"content":"                } catch (ArrayIndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Arnaxx54"},"content":"                    throw new DrBrownException(\"Looks like your Uncle Joey didn\u0027t make parole again... and you missed the date! Let\u0027s fix that event!\\nUse the format: event {description} /from {MMM dd yyyy HH:mm} /to {MMM dd yyyy HH:mm}\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Arnaxx54"},"content":"                }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Arnaxx54"},"content":"            case \"mark\":","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Arnaxx54"},"content":"                try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Arnaxx54"},"content":"                    if (inputSplit.length \u003d\u003d 1) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Arnaxx54"},"content":"                        throw new DrBrownException(\"Great Scott! You can\u0027t complete a task without a count!\\nUse the format: mark {count}\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Arnaxx54"},"content":"                    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Arnaxx54"},"content":"                    int itemMarkIndex \u003d parseInt(inputSplit[1]) - 1;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Arnaxx54"},"content":"                    return new MarkCommand(itemMarkIndex);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Arnaxx54"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Arnaxx54"},"content":"                    throw new DrBrownException(\"That\u0027s not a number! Without the right input, we\u0027re never going to get this DeLorean off the ground!\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Arnaxx54"},"content":"                }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Arnaxx54"},"content":"            case \"unmark\":","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Arnaxx54"},"content":"                try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Arnaxx54"},"content":"                    if (inputSplit.length \u003d\u003d 1) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Arnaxx54"},"content":"                        throw new DrBrownException(\"Great Scott! You can\u0027t go back in time without a count!\\nUse the format: unmark {count}\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Arnaxx54"},"content":"                    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Arnaxx54"},"content":"                    int itemUnmarkIndex \u003d parseInt(inputSplit[1]) - 1;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Arnaxx54"},"content":"                    return new UnmarkCommand(itemUnmarkIndex);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Arnaxx54"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Arnaxx54"},"content":"                    throw new DrBrownException(\"That\u0027s not a number! Without the right input, we\u0027re never going to get this DeLorean off the ground!\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Arnaxx54"},"content":"                }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Arnaxx54"},"content":"            case \"list\":","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Arnaxx54"},"content":"                if (inputSplit.length !\u003d 1) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Arnaxx54"},"content":"                    throw new DrBrownException(\"Whoa, hold on! You\u0027ve written more letters than necessary! It\u0027s like trying to fit a flux capacitor into a toaster – it just doesn\u0027t belong!\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Arnaxx54"},"content":"                }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Arnaxx54"},"content":"                return new ListCommand();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Arnaxx54"},"content":"            case \"delete\":","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Arnaxx54"},"content":"                try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Arnaxx54"},"content":"                    if (inputSplit.length \u003d\u003d 1) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Arnaxx54"},"content":"                        throw new DrBrownException(\"You can\u0027t erase something from history without a count!\\nUse the format: delete {count}\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Arnaxx54"},"content":"                    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Arnaxx54"},"content":"                    int itemDeleteIndex \u003d parseInt(inputSplit[1]) - 1;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Arnaxx54"},"content":"                    return new DeleteCommand(itemDeleteIndex);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Arnaxx54"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Arnaxx54"},"content":"                    throw new DrBrownException(\"That\u0027s not a number! Without the right input, we\u0027re never going to get this DeLorean off the ground!\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Arnaxx54"},"content":"                }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Arnaxx54"},"content":"            case \"bye\":","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Arnaxx54"},"content":"                if (inputSplit.length !\u003d 1) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Arnaxx54"},"content":"                    throw new DrBrownException(\"Whoa, hold on! You\u0027ve written more letters than necessary! It\u0027s like trying to fit a flux capacitor into a toaster – it just doesn\u0027t belong!\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Arnaxx54"},"content":"                }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Arnaxx54"},"content":"                return new ExitCommand();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Arnaxx54"},"content":"            case \"find\":","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Arnaxx54"},"content":"                if (inputSplit.length \u003d\u003d 1) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Arnaxx54"},"content":"                    throw new DrBrownException(\"Whoa, hold on! You\u0027ve written too few letters than necessary! It\u0027s like trying to fit a flux capacitor into a toaster – it just doesn\u0027t belong!\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Arnaxx54"},"content":"                }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Arnaxx54"},"content":"                return new FindCommand(inputSplit[1]);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Arnaxx54"},"content":"            default:","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Arnaxx54"},"content":"                throw new DrBrownException(\"I’m from the future, and even I don’t know what that means.\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":130}},{"path":"src/main/java/drbrown/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.utils;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Deadline;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Event;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Todo;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"import java.io.File;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"import static java.lang.Boolean.parseBoolean;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":" * Handles the loading and saving of tasks to a file for the DrBrown application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":" * The tasks are stored in a specified file and are retrieved or updated as needed.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"public class Storage {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"    private final String filePath;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs a Storage object with the specified file path for storing tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"     * @param filePath The path to the file where tasks will be saved and loaded from.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"     * Loads tasks from the specified file and returns them as a TaskList.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"     * If the file does not exist, it creates a new file.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"     * @return A TaskList containing all the tasks loaded from the file.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If the file is corrupted or if an I/O error occurs.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"    public TaskList load() throws DrBrownException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"                file.createNewFile();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"            }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"                String[] sentenceSplit \u003d scanner.nextLine().split(\" \\\\| \");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"                switch (sentenceSplit[0]) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"                    case \"T\":","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"                        taskList.add(new Todo(parseBoolean(sentenceSplit[1]), sentenceSplit[2]));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Arnaxx54"},"content":"                        break;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Arnaxx54"},"content":"                    case \"D\":","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Arnaxx54"},"content":"                        taskList.add(new Deadline(parseBoolean(sentenceSplit[1]), sentenceSplit[2], LocalDateTime.parse(sentenceSplit[3], DATE_TIME_FORMATTER)));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Arnaxx54"},"content":"                        break;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Arnaxx54"},"content":"                    case \"E\":","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Arnaxx54"},"content":"                        taskList.add(new Event(parseBoolean(sentenceSplit[1]), sentenceSplit[2], LocalDateTime.parse(sentenceSplit[3], DATE_TIME_FORMATTER), LocalDateTime.parse(sentenceSplit[4], DATE_TIME_FORMATTER)));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Arnaxx54"},"content":"                        break;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Arnaxx54"},"content":"                    default:","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Arnaxx54"},"content":"                        throw new DrBrownException(\"The file provided might be corrupted since it does not follow the specified format.\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Arnaxx54"},"content":"                }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Arnaxx54"},"content":"            }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Arnaxx54"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Arnaxx54"},"content":"            throw new DrBrownException(\"Oops! It seems like this is your first time. No worries, I\u0027ve created a brand new file to get you started.\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Arnaxx54"},"content":"        return taskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Arnaxx54"},"content":"     * Updates the file with the current list of tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Arnaxx54"},"content":"     * If the file does not exist, it creates a new file.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Arnaxx54"},"content":"     * @param tasks The TaskList containing the current tasks to be saved to the file.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Arnaxx54"},"content":"    public void update(TaskList tasks) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Arnaxx54"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Arnaxx54"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Arnaxx54"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Arnaxx54"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Arnaxx54"},"content":"                file.createNewFile();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Arnaxx54"},"content":"            }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Arnaxx54"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Arnaxx54"},"content":"            for (Task task : tasks.getList()) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Arnaxx54"},"content":"                fw.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Arnaxx54"},"content":"            }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Arnaxx54"},"content":"            fw.close();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Arnaxx54"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Arnaxx54"},"content":"            System.out.println(\"Seems like you messed up the file path somehow!\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":96}},{"path":"src/main/java/drbrown/utils/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.utils;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":" * Represents a list of tasks in the DrBrown application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":" * Provides methods to add, remove, mark, unmark, find, and list tasks.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"public class TaskList {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"    public TaskList() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs a TaskList with an existing list of tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"     * @param tasks The initial list of tasks to be included in the TaskList.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"     * @param item The task to be added.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"    public void add(Task item) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"        tasks.add(item);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the list of tasks in the TaskList.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"     * @return An ArrayList containing all the tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"        return tasks;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the number of tasks in the TaskList.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"    public int getCount() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"        return tasks.size();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Arnaxx54"},"content":"     * Removes a task from the TaskList based on its index.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Arnaxx54"},"content":"     * Displays a message confirming the deletion of the task.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Arnaxx54"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Arnaxx54"},"content":"     * @param ui    The Ui object to display messages to the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Arnaxx54"},"content":"    public void removeItem(int index, Ui ui) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Arnaxx54"},"content":"        ui.showDeleteTask(this.tasks.get(index));","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Arnaxx54"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Arnaxx54"},"content":"     * Finds and displays tasks that match the given keyword.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Arnaxx54"},"content":"     * If no matching tasks are found, it displays a message indicating no matches.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Arnaxx54"},"content":"     * @param keyword The keyword to search for in the tasks\u0027 descriptions.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Arnaxx54"},"content":"     * @param ui      The Ui object to display messages to the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Arnaxx54"},"content":"    public void findMatching(String keyword, Ui ui) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Arnaxx54"},"content":"        boolean isMatching \u003d false;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Arnaxx54"},"content":"        int listCount \u003d 1;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Arnaxx54"},"content":"        for (Task item : this.tasks) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Arnaxx54"},"content":"            if (item.getDescription().contains(keyword)) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Arnaxx54"},"content":"                if (!isMatching) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Arnaxx54"},"content":"                    ui.showFind();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Arnaxx54"},"content":"                    isMatching \u003d true;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Arnaxx54"},"content":"                }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Arnaxx54"},"content":"                System.out.println(listCount + \". \" + item.toString());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Arnaxx54"},"content":"                listCount++;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Arnaxx54"},"content":"            }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Arnaxx54"},"content":"        if (!isMatching) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Arnaxx54"},"content":"            System.out.println(\"Oops! Seems like there are no matching tasks.\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Arnaxx54"},"content":"     * Displays all tasks in the TaskList.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Arnaxx54"},"content":"     * If the list is empty, it informs the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Arnaxx54"},"content":"     * @param ui The Ui object to display messages to the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Arnaxx54"},"content":"    public void listOut(Ui ui) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Arnaxx54"},"content":"        ui.showList();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Arnaxx54"},"content":"        int listCount \u003d 1;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Arnaxx54"},"content":"        for (Task item : this.tasks) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Arnaxx54"},"content":"            System.out.println(listCount + \". \" + item);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Arnaxx54"},"content":"            listCount++;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Arnaxx54"},"content":"     * Marks a task as completed based on its index.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Arnaxx54"},"content":"     * Displays a message confirming the task is marked.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Arnaxx54"},"content":"     * @param itemIndex The index of the task to be marked as completed.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Arnaxx54"},"content":"     * @param ui        The Ui object to display messages to the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Arnaxx54"},"content":"    public void markTask(int itemIndex, Ui ui) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Arnaxx54"},"content":"        Task markTask \u003d this.tasks.get(itemIndex);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Arnaxx54"},"content":"        markTask.setStatus(true);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Arnaxx54"},"content":"        ui.showMarkTask(markTask);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Arnaxx54"},"content":"     * Unmarks a task as incomplete based on its index.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Arnaxx54"},"content":"     * Displays a message confirming the task is unmarked.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Arnaxx54"},"content":"     * @param itemIndex The index of the task to be unmarked as incomplete.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Arnaxx54"},"content":"     * @param ui        The Ui object to display messages to the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Arnaxx54"},"content":"    public void unmarkTask(int itemIndex, Ui ui) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Arnaxx54"},"content":"        Task unmarkTask \u003d this.tasks.get(itemIndex);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Arnaxx54"},"content":"        unmarkTask.setStatus(false);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Arnaxx54"},"content":"        ui.showUnmarkTask(unmarkTask);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":135}},{"path":"src/main/java/drbrown/utils/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.utils;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":" * Handles the user interface for the DrBrown application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":" * Provides methods to interact with the user by displaying messages and reading input.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"public class Ui {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs a Ui object.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"    public Ui() {}","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     * Displays the greeting message to the user when the application starts.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"    public void showGreeting() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"        System.out.println(\"\\nRoads? Where We\u0027re Going, We Don\u0027t Need Roads?! So, what can I help you with today?\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"     * Displays a line separator for visual clarity in the console output.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"    public void showLine() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"        System.out.println(\"——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"     * Displays the end message to the user when the application is closing.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"    public void showEnd() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"        System.out.println(\"Your future is whatever you make it, so make it a good one! Until next time, keep the DeLorean ready!\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"     * @param message The error message to display.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"    public void showError(String message) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"        System.out.println(message);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"     * Displays a message confirming the creation of a new task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"     * @param task The task that was created.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"    public void showTaskCreation(Task task) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"        System.out.println(task.toUIString());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Arnaxx54"},"content":"        System.out.println(task);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Arnaxx54"},"content":"     * Displays a message confirming the marking of a task as completed.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Arnaxx54"},"content":"     * @param markTask The task that was marked as completed.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Arnaxx54"},"content":"    public void showMarkTask(Task markTask) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Arnaxx54"},"content":"        System.out.println(\"Task complete! If my calculations are correct, when this baby hits 88 miles per hour... you\u0027re gonna see some serious progress!\\n\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Arnaxx54"},"content":"        System.out.println(markTask);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Arnaxx54"},"content":"     * Displays a message confirming the unmarking of a task as incomplete.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Arnaxx54"},"content":"     * @param unmarkTask The task that was unmarked as incomplete.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Arnaxx54"},"content":"    public void showUnmarkTask(Task unmarkTask) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Arnaxx54"},"content":"        System.out.println(\"Looks like we\u0027re going back to the future—task unmarked! Time to revisit this one.\\n\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Arnaxx54"},"content":"        System.out.println(unmarkTask);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Arnaxx54"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Arnaxx54"},"content":"    public void showList() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Arnaxx54"},"content":"        System.out.println(\"Here’s your list! Like Doc Brown’s flux capacitor, this will help keep everything in perfect sync!\\n\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Arnaxx54"},"content":"     * Displays a message confirming the deletion of a task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Arnaxx54"},"content":"     * @param deleteTask The task that was deleted.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Arnaxx54"},"content":"    public void showDeleteTask(Task deleteTask) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Arnaxx54"},"content":"        System.out.println(\"That task\u0027s history has been erased! Just like Marty’s fading photo—it\u0027s gone, like it never existed!\\n\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Arnaxx54"},"content":"        System.out.println(deleteTask);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Arnaxx54"},"content":"     * Displays the total count of tasks in the list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Arnaxx54"},"content":"     * @param tasks The TaskList containing the current tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Arnaxx54"},"content":"    public void showCount(TaskList tasks) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Arnaxx54"},"content":"        System.out.println(\"\\nYour total count is now \" + tasks.getCount() + \"! Like the time circuits, everything\u0027s in sync – keep those tasks ticking along!\\\"\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Arnaxx54"},"content":"     * Displays a default message when the input is unrecognized.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Arnaxx54"},"content":"    public void showDefault() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Arnaxx54"},"content":"        System.out.println(\"I’m from the future, and even I don’t know what that means.\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Arnaxx54"},"content":"     * Displays the matching tasks found in the list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Arnaxx54"},"content":"    public void showFind() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Arnaxx54"},"content":"        System.out.println(\"Here are the matching tasks in your list — it\u0027s your density... I mean, your destiny to get these done!\\n\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Arnaxx54"},"content":"     * Reads a command input from the user.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Arnaxx54"},"content":"     * @return The user input as a String.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Arnaxx54"},"content":"    public String readCommand() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Arnaxx54"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Arnaxx54"},"content":"     * Closes the scanner used for reading user input.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Arnaxx54"},"content":"    public void closeCommand() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Arnaxx54"},"content":"        scanner.close();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":135}},{"path":"src/test/java/drbrown/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":" * Unit tests for the Deadline class.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":" * Tests the creation, string representations, and error handling for Deadline tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"    private String description;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"    private String validTime;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"    private String invalidTime;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"    private DateTimeFormatter formatter;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"     * Sets up test data before each test case.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"    @BeforeEach","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"    void setUp() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"        description \u003d \"Assignment\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"        validTime \u003d \"03-09-2024 10:10\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"        invalidTime \u003d \"03-09-24 10:10\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"        formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"     * Tests successful creation of a Deadline task with valid date and time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"    public void testSuccessfulCreationDeadline() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"        Deadline deadline \u003d new Deadline(false, description, LocalDateTime.parse(validTime, formatter));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"        assertEquals(\"[D][ ] Assignment (by: Sep 03 2024 10:10)\", deadline.toString());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"     * Tests handling of invalid date format when creating a Deadline task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"     * Expects a DateTimeParseException to be thrown.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"    public void testInvalidDateTimeDeadline() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"        try {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"            new Deadline(false, description, LocalDateTime.parse(invalidTime, formatter));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"            fail(\"Expected DateTimeParseException to be thrown\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"        } catch (DateTimeParseException ignored) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"            // Exception is expected, so the test passes.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Arnaxx54"},"content":"     * Tests the file string representation of a Deadline task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Arnaxx54"},"content":"    void testToFileStringDeadline() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Arnaxx54"},"content":"        Deadline deadline \u003d new Deadline(false, description, LocalDateTime.parse(validTime, formatter));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Arnaxx54"},"content":"        assertEquals(\"D | false | Assignment | 2024-09-03 1010\", deadline.toFileString());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Arnaxx54"},"content":"     * Tests the UI string representation of a Deadline task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Arnaxx54"},"content":"    void testToUIStringDeadline() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Arnaxx54"},"content":"        Deadline deadline \u003d new Deadline(false, description, LocalDateTime.parse(validTime, formatter));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Arnaxx54"},"content":"        assertEquals(\"Last night, Darth Vader came down from Planet Vulcan and told me that if you don\u0027t meet this deadline... he\u0027d melt your brain! So, better get moving!\\n\", deadline.toUIString());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Arnaxx54"},"content":"     * Tests successful creation of a marked (completed) Deadline task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Arnaxx54"},"content":"    public void testSuccessfulCreationMarkDoneDeadline() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Arnaxx54"},"content":"        Deadline deadline \u003d new Deadline(true, description, LocalDateTime.parse(validTime, formatter));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Arnaxx54"},"content":"        assertEquals(\"[D][X] Assignment (by: Sep 03 2024 10:10)\", deadline.toString());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":84}},{"path":"src/test/java/drbrown/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":" * Unit tests for the Event class.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":" * Tests the creation, string representations, and error handling for Event tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"public class EventTest {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"    private String description;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"    private String validStartTime;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"    private String validEndTime;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"    private String invalidTime;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"    private DateTimeFormatter formatter;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"     * Sets up test data before each test case.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"    @BeforeEach","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"    void setUp() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"        description \u003d \"Meeting\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"        validStartTime \u003d \"03-09-2024 09:00\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"        validEndTime \u003d \"03-09-2024 10:00\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"        invalidTime \u003d \"03-09-24 09:00\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"        formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"     * Tests successful creation of an Event task with valid start and end times.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"    public void testSuccessfulCreationEvent() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"        Event event \u003d new Event(false, description, LocalDateTime.parse(validStartTime, formatter), LocalDateTime.parse(validEndTime, formatter));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"        assertEquals(\"[E][ ] Meeting (from: Sep 03 2024 end: Sep 03 2024 10:00)\", event.toString());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"     * Tests handling of invalid date format when creating an Event task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"     * Expects a DateTimeParseException to be thrown.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"    public void testInvalidDateTimeEvent() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"        try {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"            new Event(false, description, LocalDateTime.parse(invalidTime, formatter), LocalDateTime.parse(validEndTime, formatter));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"            fail(\"Expected DateTimeParseException to be thrown\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"        } catch (DateTimeParseException ignored) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"            // Exception is expected, so the test passes.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Arnaxx54"},"content":"     * Tests the file string representation of an Event task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Arnaxx54"},"content":"    void testToFileStringEvent() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Arnaxx54"},"content":"        Event event \u003d new Event(false, description, LocalDateTime.parse(validStartTime, formatter), LocalDateTime.parse(validEndTime, formatter));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Arnaxx54"},"content":"        assertEquals(\"E | false | Meeting | 2024-09-03 0900 | 2024-09-03 1000\", event.toFileString());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Arnaxx54"},"content":"     * Tests the UI string representation of an Event task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Arnaxx54"},"content":"    void testToUIStringEvent() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Arnaxx54"},"content":"        Event event \u003d new Event(false, description, LocalDateTime.parse(validStartTime, formatter), LocalDateTime.parse(validEndTime, formatter));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Arnaxx54"},"content":"        assertEquals(\"The appropriate question is: ‘When the hell are they?’ Your event is now set in time!\\n\", event.toUIString());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Arnaxx54"},"content":"     * Tests successful creation of a marked (completed) Event task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Arnaxx54"},"content":"    public void testSuccessfulCreationMarkDoneEvent() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Arnaxx54"},"content":"        Event event \u003d new Event(true, description, LocalDateTime.parse(validStartTime, formatter), LocalDateTime.parse(validEndTime, formatter));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Arnaxx54"},"content":"        assertEquals(\"[E][X] Meeting (from: Sep 03 2024 end: Sep 03 2024 10:00)\", event.toString());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":86}},{"path":"src/test/java/drbrown/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":" * Unit tests for the Todo class.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" * Tests the creation, string representations, and status handling for Todo tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"public class TodoTest {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"    private String description;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"     * Sets up test data before each test case.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"    @BeforeEach","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"    void setUp() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"        description \u003d \"Buy groceries\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"     * Tests successful creation of a Todo task with the given description.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"    public void testSuccessfulCreationTodo() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"        Todo todo \u003d new Todo(false, description);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"        assertEquals(\"[T][ ] Buy groceries\", todo.toString());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"     * Tests the file string representation of a Todo task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"    void testToFileStringTodo() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"        Todo todo \u003d new Todo(false, description);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"        assertEquals(\"T | false | Buy groceries\", todo.toFileString());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"     * Tests the UI string representation of a Todo task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"    void testToUIStringTodo() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"        Todo todo \u003d new Todo(false, description);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"        assertEquals(\"Doc, you don\u0027t just walk into a store and buy plutonium! But you sure can add this task to your list!\\n\", todo.toUIString());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"     * Tests successful creation of a marked (completed) Todo task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"    public void testSuccessfulCreationMarkDoneTodo() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"        Todo todo \u003d new Todo(true, description);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Arnaxx54"},"content":"        assertEquals(\"[T][X] Buy groceries\", todo.toString());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":59}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"todo Read the Back to the Future script","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"deadline Submit project /by 2024-08-25","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"event Watch Back to the Future /from 18:00 /to 20:00","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"mark 1","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"unmark 2","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"unmark 1","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"bye","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"java -classpath ..\\bin drbrown.DrBrown \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":20,"Arnaxx54":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"java -classpath ../bin DrBrown \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":37,"Arnaxx54":1}}]
