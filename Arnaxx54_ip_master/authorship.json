[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"checkstyle {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"mainClassName \u003d \u0027drbrown.Launcher\u0027","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"    mainClass.set(\"drbrown.Launcher\")","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"    archiveBaseName \u003d \"drBrown\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"dependencies {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Arnaxx54"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Arnaxx54"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Arnaxx54"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Arnaxx54"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Arnaxx54"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Arnaxx54"},"content":"sourceSets {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Arnaxx54"},"content":"    main {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Arnaxx54"},"content":"        java {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Arnaxx54"},"content":"            srcDirs \u003d [\u0027src/main/java\u0027]","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Arnaxx54"},"content":"        resources {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Arnaxx54"},"content":"            srcDirs \u003d [\u0027src/main/resources\u0027]","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"-":34,"Arnaxx54":39}},{"path":"data/DrBrown.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"T | true | read book | LOW","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"D | true | return book | MEDIUM | 2024-06-06 1800","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"E | true | project meeting | LOW | 2024-08-06 1800 | 2024-08-06 2000","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"T | true | join sports club | HIGH","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"T | false | join a fan club | LOW","lastModifiedDate":"2024-09-09","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"# DrBrown Application - User Guide","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"![The DrBrown Application Screenshot](Ui.png)","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"## Setup","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"1. **Installation**: Ensure Java is installed on your system. Download the DrBrown application jar file and place it in a folder.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"2. **Running the Application**:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"    - **CLI Version**: Open a terminal or command prompt, navigate to the folder containing the jar file, and run `java -jar DrBrown.jar`.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"    - **GUI Version**: Launch the jar file directly or run it through a terminal with the `java -jar DrBrown.jar` command.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"## Core Components","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"### DrBrown Main Class","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"- Initializes the application with a `Ui`, `Storage`, and `TaskList`.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"- Loads tasks from a file and handles errors in loading.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"- Processes user commands and outputs results or error messages.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"### Commands","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"Commands allow users to interact with the application to perform various operations. All commands extend the abstract `Command` class and implement the `executeCommand()` method:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"- **AddCommand**: Adds a task (`Todo`, `Deadline`, `Event`) to the task list.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"- **DeleteCommand**: Deletes a task by its index.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"- **ExitCommand**: Exits the application.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"- **FindCommand**: Finds tasks containing a specific keyword.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"- **ListCommand**: Lists all tasks.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"- **MarkCommand**: Marks a task as completed.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"- **UnmarkCommand**: Unmarks a task as not completed.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"### Tasks","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"Tasks represent the different types of activities users can manage:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"- **Task**: The abstract base class for all tasks with common attributes like description, status, and priority.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"- **Todo**: A simple task with a description and priority.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"- **Deadline**: A task with a description, a deadline date/time, and priority.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"- **Event**: A task with a description, start and end date/time, and priority.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"### Priorities","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"There are three types of priorities that can be assigned to tasks:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"- **LOW**: Represents tasks with low urgency.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"- **MEDIUM**: Represents tasks with moderate urgency.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"- **HIGH**: Represents tasks with high urgency and importance.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"### Utilities","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"Utility classes provide supporting functionality:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"- **Ui**: Handles all user interface interactions, displaying messages and reading input. It provides themed messages for various operations and errors.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"- **Storage**: Handles loading and saving tasks to a file.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"- **TaskList**: Manages the list of tasks, providing methods to add, remove, mark, unmark, find, and list tasks.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"- **DrBrownException**: A custom exception class for handling application-specific errors.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Arnaxx54"},"content":"## Usage Instructions","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Arnaxx54"},"content":"### Adding Tasks","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Arnaxx54"},"content":"- **Todo**: `todo {description} /priority {priority}`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Arnaxx54"},"content":"- **Deadline**: `deadline {description} /by {date} /priority {priority}`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Arnaxx54"},"content":"- **Event**: `event {description} /from {start date} /to {end date} /priority {priority}`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Arnaxx54"},"content":"### Deleting Tasks","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Arnaxx54"},"content":"- **Delete a Task**: `delete {index}`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Arnaxx54"},"content":"### Listing Tasks","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Arnaxx54"},"content":"- **List All Tasks**: `list`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Arnaxx54"},"content":"### Marking and Unmarking Tasks","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Arnaxx54"},"content":"- **Mark a Task**: `mark {index}`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Arnaxx54"},"content":"- **Unmark a Task**: `unmark {index}`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Arnaxx54"},"content":"### Finding Tasks","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Arnaxx54"},"content":"- **Find Tasks by Keyword**: `find {keyword}`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Arnaxx54"},"content":"### Exiting the Application","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Arnaxx54"},"content":"- **Exit**: `bye`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Arnaxx54"},"content":"## Error Handling","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Arnaxx54"},"content":"The application provides detailed, themed error messages when incorrect input is provided, a file is corrupted, or other errors occur. Examples include:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Arnaxx54"},"content":"- **Missing or Incorrect Input**: \"Great Scott! You can\u0027t add a to-do without a description!\"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Arnaxx54"},"content":"- **File Errors**: \"Oops! It seems like this is your first time. No worries, I\u0027ve created a brand new file to get you started.\"","lastModifiedDate":"2024-09-18","isFullCredit":false}],"authorContributionMap":{"-":14,"Arnaxx54":78}},{"path":"src/main/java/drbrown/DrBrown.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.command.Command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.DrBrownException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Parser;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Storage;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.TaskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":" * The main class for the DrBrown application, which is a task management program.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":" * It handles the initialization, interaction with the user, and execution of commands.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"public class DrBrown {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"    private final Storage storage;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"    private final Ui ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs a new DrBrown instance with the specified file path for storage.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"     * Initializes the UI, loads the task list from storage, and handles any exceptions during loading.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"     * If loading fails, an empty task list is initialized.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"    public DrBrown() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"        storage \u003d new Storage(\"data/DrBrown.txt\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"        } catch (DrBrownException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"     * Returns a greeting message to be displayed in the GUI.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string containing the greeting message.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"    public String showGreeting() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"        return ui.showGreeting();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"     * Processes user input and returns the output message after executing the corresponding command.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"     * If an exception occurs, an error message is returned.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"     * @param userInput The input provided by the user.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string containing the result of the command execution or an error message.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"    public String showOutput(String userInput) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"        assert userInput !\u003d null : \"User input should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"        try {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"            Command command \u003d Parser.parse(userInput);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"            return command.executeCommand(tasks, ui, storage);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Arnaxx54"},"content":"        } catch (DrBrownException e) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Arnaxx54"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":61}},{"path":"src/main/java/drbrown/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.gui.Main;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":" * A launcher class to work around classpath issues in some environments.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":" * This class serves as the entry point to launch the JavaFX application.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":" * It avoids potential issues with launching JavaFX applications directly from certain IDEs or build tools.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"public class Launcher {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"     * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":19}},{"path":"src/main/java/drbrown/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Storage;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" * This command encapsulates the task to be added and provides the logic","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":" * for executing the addition of the task to the task list and displaying","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":" * relevant messages to the user.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"    private final Task task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs an AddCommand with the specified task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     * @param task The task to be added to the task list.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"     * Executes the add command by adding the task to the task list,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"     * displaying a message indicating that the task has been successfully added,","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"     * and updating the task count display.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"     * @param tasks   The TaskList to which the task is added.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"     * @param ui      The UI object used to display messages to the user.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"     * @param storage The Storage object used for saving tasks to a file.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string message that confirms the task addition and shows the updated task count.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"    public String executeCommand(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"        assert tasks !\u003d null : \"Tasks should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"        tasks.add(task);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"        return ui.showTaskCreation(tasks, task);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"     * Indicates whether this command results in the termination of the program.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"     * @return false, as this command does not cause the program to exit.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"        return false;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":56}},{"path":"src/main/java/drbrown/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.DrBrownException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Storage;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":" * Represents an abstract command that can be executed in the DrBrown application.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" * All specific command types should extend this class and implement its abstract methods","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":" * to provide custom functionality.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"public abstract class Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"     * Executes the command using the provided task list, user interface, and storage.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"     * Implementing classes must provide the logic for their specific command execution,","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"     * including any interactions with the user through the UI and updating tasks in the storage.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"     * @param tasks   The TaskList containing the current tasks to operate on.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     * @param ui      The UI object to display messages to the user and handle user input.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"     * @param storage The Storage object used to save and load tasks from a file or persistent storage.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string message representing the result of the command execution.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If there is an error executing the command, such as invalid input or","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"     *     an operation failure.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"    public abstract String executeCommand(TaskList tasks, Ui ui, Storage storage) throws DrBrownException;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"     * Determines whether the command causes the application to exit.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"     * Implementing classes should override this method to indicate if the command will terminate","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"     * the application after execution.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"     * @return true if the command exits the program, false otherwise.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"    public abstract boolean shouldExit();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":37}},{"path":"src/main/java/drbrown/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.DrBrownException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Storage;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" * This command removes a task at a specified index from the TaskList and provides","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":" * feedback to the user through the UI.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"    private final int itemIndex;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs a DeleteCommand with the specified index of the task to be deleted.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"     * @param itemIndex The zero-based index of the task to delete in the task list.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"    public DeleteCommand(int itemIndex) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"        assert itemIndex \u003c 0 : \"Task index should not be negative\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"     * Executes the DeleteCommand by removing a task from the provided TaskList at the specified index.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"     * If successful, it displays a confirmation message for the deleted task and the updated task count.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"     * If the index is invalid (out of bounds), it throws a DrBrownException with an appropriate error message.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"     * @param tasks   The TaskList containing all tasks.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"     * @param ui      The Ui object to handle user interactions and display messages.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"     * @param storage The Storage object for saving/loading tasks (not used in this command).","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string message confirming the deletion of the task and showing the updated task count.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If the index is out of bounds of the task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"    public String executeCommand(TaskList tasks, Ui ui, Storage storage) throws DrBrownException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"        assert tasks !\u003d null : \"Tasks should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"        return tasks.removeItem(itemIndex, ui);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"     * Indicates whether the command causes the application to exit.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"     * @return false, since DeleteCommand does not cause the application to exit.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"        return false;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":55}},{"path":"src/main/java/drbrown/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.DrBrownException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Storage;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":" * Represents a command to exit the DrBrown application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" * This command handles the process of saving the current state of the task list","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":" * and provides a message indicating that the application is closing.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"     * Executes the exit command by saving the current state of the task list to storage","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"     * and displaying an exit message to the user. It ensures that all tasks are properly","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"     * updated in the storage before the application exits.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"     * @param tasks   The TaskList containing the current tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     * @param ui      The UI object to display messages to the user and handle UI closure.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"     * @param storage The Storage object used to update the saved tasks.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string message indicating that the application is exiting.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"    public String executeCommand(TaskList tasks, Ui ui, Storage storage) throws DrBrownException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"        assert tasks !\u003d null : \"Tasks should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"        storage.update(tasks);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"        return ui.showEnd();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"     * Indicates whether this command exits the program.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"     * This method is always true for ExitCommand as its purpose is to terminate the application.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"     * @return true, as this command exits the program.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"        return true;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":44}},{"path":"src/main/java/drbrown/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.command;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.DrBrownException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Storage;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.TaskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":" * Represents a command to find tasks that match a given keyword.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" * This command searches through the task list for tasks that contain the specified keyword","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":" * and provides the matching tasks to the user.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"    private final String keyword;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs a FindCommand with the specified keyword.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"     * @param keyword The keyword to search for in the task descriptions.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"        assert keyword !\u003d null : \"Find keyword should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"     * Executes the FindCommand by searching for tasks in the provided TaskList that contain the keyword.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"     * If matching tasks are found, they are displayed using the Ui object.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"     * If no tasks are found or the list is empty, appropriate messages are shown to the user.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"     * @param tasks   The TaskList containing all tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"     * @param ui      The Ui object for user interactions and displaying messages.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"     * @param storage The Storage object for saving/loading tasks (not used in this command).","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string message displaying the tasks that match the keyword or a message indicating no matches.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If there are no tasks in the list to search from.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"    public String executeCommand(TaskList tasks, Ui ui, Storage storage) throws DrBrownException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"        assert tasks !\u003d null : \"Tasks should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"        return tasks.findMatching(this.keyword, ui);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"     * Indicates whether the command causes the application to exit.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"     * @return false, since FindCommand does not cause the application to exit.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"        return false;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":55}},{"path":"src/main/java/drbrown/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.DrBrownException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Storage;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" * This command displays all tasks currently stored in the TaskList to the user.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"     * Executes the ListCommand by displaying all tasks in the task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"     * If the task list is empty, a DrBrownException is thrown with an appropriate message.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"     * @param tasks   The TaskList containing the current tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"     * @param ui      The Ui object to display messages to the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"     * @param storage The Storage object for saving and loading tasks (not used in this command).","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string message containing the list of all tasks or an appropriate message if the list is empty.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If the task list is empty.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"    public String executeCommand(TaskList tasks, Ui ui, Storage storage) throws DrBrownException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"        assert tasks !\u003d null : \"Tasks should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"        return tasks.listOut(ui);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"     * Indicates whether this command causes the application to exit.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"     * @return false, as this command does not cause the application to exit.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"        return false;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":41}},{"path":"src/main/java/drbrown/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.DrBrownException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Storage;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":" * Represents a command to mark a task as completed in the task list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" * This command sets the status of a task at a specified index in the TaskList to \"completed\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":" * and provides feedback to the user.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"    private final int itemIndex;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs a MarkCommand with the specified index of the task to be marked as completed.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"     * @param itemIndex The zero-based index of the task to mark as completed in the task list.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"    public MarkCommand(int itemIndex) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"        assert itemIndex \u003c 0 : \"Item index should not be negative\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"     * Executes the MarkCommand by setting the status of the task at the specified index to completed.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"     * If the operation is successful, it displays the marked task using the Ui object.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"     * If the index is invalid (out of bounds), it throws a DrBrownException with an appropriate error message.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"     * @param tasks   The TaskList containing the current tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"     * @param ui      The Ui object to display messages to the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"     * @param storage The Storage object for saving changes to the file (not used in this command).","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string message confirming the task has been marked as completed.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If the task index is invalid (out of bounds).","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"    public String executeCommand(TaskList tasks, Ui ui, Storage storage) throws DrBrownException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"        assert tasks !\u003d null : \"Tasks should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"        return tasks.markTask(itemIndex, ui);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"     * Indicates whether this command causes the application to exit.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"     * @return false, as this command does not cause the application to exit.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"        return false;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":55}},{"path":"src/main/java/drbrown/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.DrBrownException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Storage;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":" * Represents a command to unmark a task as incomplete in the task list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" * This command sets the status of a task at a specified index in the TaskList to \"incomplete\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":" * and provides feedback to the user.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"    private final int itemIndex;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs an UnmarkCommand with the specified index of the task to be marked as incomplete.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"     * @param itemIndex The zero-based index of the task to unmark as incomplete in the task list.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"    public UnmarkCommand(int itemIndex) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"        assert itemIndex \u003c 0 : \"Item index should not be negative\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"     * Executes the UnmarkCommand by setting the status of the task at the specified index to incomplete.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"     * If the operation is successful, it displays the unmarked task using the Ui object.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"     * If the index is invalid (out of bounds), it throws a DrBrownException with an appropriate error message.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"     * @param tasks   The TaskList containing the current tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"     * @param ui      The Ui object to display messages to the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"     * @param storage The Storage object for saving changes to the file (not used in this command).","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string message confirming the task has been marked as incomplete.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If the task index is invalid (out of bounds).","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"    public String executeCommand(TaskList tasks, Ui ui, Storage storage) throws DrBrownException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"        assert tasks !\u003d null : \"Tasks should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"        return tasks.unmarkTask(itemIndex, ui);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"     * Indicates whether this command causes the application to exit.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"     * @return false, as this command does not cause the application to exit.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"        return false;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":55}},{"path":"src/main/java/drbrown/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.gui;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":" * This class is an extension of HBox, and it can be used to display user or system messages","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":" * in a chat-like interface.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs a DialogBox with the specified text and image.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"     * Loads the FXML layout for the dialog box and initializes its components.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"     * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"     * @param img  The image to be displayed next to the text in the dialog box.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"     * @param styleClass The style class to apply for different background colors.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"    private DialogBox(String text, Image img, String styleClass) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"        assert text !\u003d null : \"Label text should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"        assert img !\u003d null : \"Image should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"        try {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"        dialog.getStyleClass().add(styleClass);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"     * Flips the dialog box such that the ImageView is on the left and the text is on the right.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"     * This is typically used to differentiate between user messages and system messages","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Arnaxx54"},"content":"     * in a chat interface.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Arnaxx54"},"content":"    private void flip() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Arnaxx54"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Arnaxx54"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Arnaxx54"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Arnaxx54"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Arnaxx54"},"content":"     * Creates a dialog box for user input with the specified text and image.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Arnaxx54"},"content":"     * The text will be displayed on the right and the image on the left.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Arnaxx54"},"content":"     * @param text The text to be displayed.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Arnaxx54"},"content":"     * @param img  The image to be displayed.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Arnaxx54"},"content":"     * @return A DialogBox object representing the user\u0027s message.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Arnaxx54"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Arnaxx54"},"content":"        assert text !\u003d null : \"Label text should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Arnaxx54"},"content":"        assert img !\u003d null : \"Image should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Arnaxx54"},"content":"        return new DialogBox(text, img, \"user-label\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Arnaxx54"},"content":"     * Creates a dialog box for system messages with the specified text and image.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Arnaxx54"},"content":"     * The text will be displayed on the left and the image on the right by flipping the dialog box.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Arnaxx54"},"content":"     * @param text The text to be displayed.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Arnaxx54"},"content":"     * @param img  The image to be displayed.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Arnaxx54"},"content":"     * @return A DialogBox object representing the system\u0027s message.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Arnaxx54"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Arnaxx54"},"content":"        assert text !\u003d null : \"Label text should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Arnaxx54"},"content":"        assert img !\u003d null : \"Image should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Arnaxx54"},"content":"        var db \u003d new DialogBox(text, img, \"bot-label\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Arnaxx54"},"content":"        db.flip();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Arnaxx54"},"content":"        return db;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":95}},{"path":"src/main/java/drbrown/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.gui;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.DrBrown;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":" * A GUI for DrBrown using FXML.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":" * This class extends the JavaFX Application class and serves as the entry point","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":" * for the GUI-based version of the DrBrown application.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"public class Main extends Application {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"    private final DrBrown drBrown \u003d new DrBrown(); // Made final","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"     * Starts the GUI application by setting up the primary stage.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"     * Loads the FXML layout for the main window, sets up the scene, and initializes","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"     * the controller with the DrBrown instance.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"     * @param stage The primary stage for this JavaFX application.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"        assert stage !\u003d null : \"Stage should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"        try {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"            // Optionally apply a stylesheet (if you have one)","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"            // scene.getStylesheets().add(getClass().getResource(\"/path/to/your/stylesheet.css\").toExternalForm());","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"            stage.setTitle(\"DrBrown Task Manager\"); // Set window title","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"            // Set the DrBrown instance to the controller","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDrBrown(drBrown);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"            stage.show();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"            e.printStackTrace(); // Consider using a logger instead of printStackTrace","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"            // Optionally, show an error dialog to the user","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"     * The main entry point for launching the application.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"     * @param args The command-line arguments passed to the application.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Arnaxx54"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Arnaxx54"},"content":"        launch(args);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":60}},{"path":"src/main/java/drbrown/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.gui;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.DrBrown;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":" * Controller for the main GUI.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":" * This class manages the layout and interactions of the main window in the DrBrown application.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":" * It handles user input, displays responses from the DrBrown instance, and updates the GUI elements.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"    private DrBrown drBrown;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/MartyRemoveBg.png\"));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"    private final Image drBrownImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DrBrownRemoveBg.png\"));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"     * Initializes the MainWindow controller.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"     * Binds the vertical scroll value of the scrollPane to the height of the dialogContainer","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"     * to ensure that the most recent dialog is always visible.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"     * Injects the DrBrown instance and sets up the initial greeting dialog.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"     * This method is called by the main application class after the FXML has been loaded.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"     * @param drBrown The DrBrown instance to be used for generating responses.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"    public void setDrBrown(DrBrown drBrown) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"        assert drBrown !\u003d null : \"DrBrown should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"        this.drBrown \u003d drBrown;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"                DialogBox.getDukeDialog(drBrown.showGreeting(), drBrownImage)","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"        );","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Arnaxx54"},"content":"     * Handles user input by creating two dialog boxes: one echoing the user\u0027s input and","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Arnaxx54"},"content":"     * the other containing DrBrown\u0027s response. It then appends these dialogs to the dialog container","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Arnaxx54"},"content":"     * and clears the user input after processing.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Arnaxx54"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Arnaxx54"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Arnaxx54"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Arnaxx54"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Arnaxx54"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Arnaxx54"},"content":"                DialogBox.getDukeDialog(drBrown.showOutput(input), drBrownImage)","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Arnaxx54"},"content":"        );","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Arnaxx54"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":70}},{"path":"src/main/java/drbrown/parsing/ByeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.parsing;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.command.Command;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.command.ExitCommand;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.DrBrownException;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":" * A parser that handles the \"bye\" command input.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" * Responsible for parsing the input to determine if it matches the expected format","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":" * for exiting the application.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"public class ByeParser extends Parsing {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"    public ByeParser(String[] inputSplit) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"        super(inputSplit);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"     * Parses the input to create a command that exits the application.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"     * @return An instance of {@link ExitCommand} if the input is valid.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If the input contains more than one word.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"    public Command parse() throws DrBrownException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"        assert this.getInputSplit() !\u003d null : \"Input string array should not be null\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"        if (this.getInputSplit().length !\u003d 1) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"            throw new DrBrownException(Ui.getByeException());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"        return new ExitCommand();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-08","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":34}},{"path":"src/main/java/drbrown/parsing/DeadlineParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.parsing;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.command.AddCommand;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.command.Command;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Deadline;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Task;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.DrBrownException;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":" * A parser that handles the \"deadline\" command input.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":" * Responsible for parsing the input to create a {@link Deadline} task","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":" * with a description and a date.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"public class DeadlineParser extends Parsing {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"    /** The formatter for parsing date and time in the specific format \"MMM dd yyyy HH:mm\". */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"    static final DateTimeFormatter FILE_DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"    public DeadlineParser(String[] inputSplit) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"        super(inputSplit);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"     * Parses the input to create an {@link AddCommand} that adds a {@link Deadline} task.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"     * @return An instance of {@link AddCommand} containing the {@link Deadline} task.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If the input is invalid, such as missing description or date,","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"     *                          or if the date format is incorrect.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"    public Command parse() throws DrBrownException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"        assert this.getInputSplit() !\u003d null : \"Input string array should not be null\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"        try {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"            if (this.getInputSplit().length \u003d\u003d 1) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"                throw new DrBrownException(Ui.getDeadlineExceptionNoDescription());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"            }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"            String[] deadlineSplit \u003d this.getInputSplit()[1].split(\"/by | /priority\");","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"            if (deadlineSplit.length \u003d\u003d 1) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"                throw new DrBrownException(Ui.getDeadlineExceptionNoDate());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"            }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"            Task deadline \u003d new Deadline(false, deadlineSplit[0].trim(),","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"                    LocalDateTime.parse(deadlineSplit[1].trim(), FILE_DATE_TIME_FORMATTER),","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"                    Task.Priority.valueOf(deadlineSplit[2].trim()));","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"            return new AddCommand(deadline);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException | IllegalArgumentException e) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"            throw new DrBrownException(Ui.getDeadlineExceptionOthers());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-08","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":57}},{"path":"src/main/java/drbrown/parsing/DeleteParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.parsing;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.command.Command;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.command.DeleteCommand;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.DrBrownException;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":" * A parser that handles the \"delete\" command input.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":" * Responsible for parsing the input to delete a task by its index.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"public class DeleteParser extends Parsing {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"    public DeleteParser(String[] inputSplit) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"        super(inputSplit);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     * Parses the input to create a {@link DeleteCommand} that deletes a task at the specified index.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"     * @return An instance of {@link DeleteCommand} for deleting the specified task.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If the input is invalid, such as missing the index or providing a non-numeric value.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"    public Command parse() throws DrBrownException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"        assert this.getInputSplit() !\u003d null : \"Input string array should not be null\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"        try {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"            if (this.getInputSplit().length \u003d\u003d 1) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"                throw new DrBrownException(Ui.getDeleteExceptionNoIndex());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"            }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"            int itemDeleteIndex \u003d parseInt(this.getInputSplit()[1]) - 1;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"            return new DeleteCommand(itemDeleteIndex);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"            throw new DrBrownException(Ui.getExceptionNotNumber());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-08","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":39}},{"path":"src/main/java/drbrown/parsing/EventParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.parsing;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.command.AddCommand;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.command.Command;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Event;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Task;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.DrBrownException;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":" * A parser that handles the \"event\" command input.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":" * Responsible for parsing the input to create an {@link Event} task","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":" * with a description, start date, and end date.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"public class EventParser extends Parsing {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"     * The formatter for parsing date and time in the specific format \"MMM dd yyyy HH:mm\".","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"    static final DateTimeFormatter FILE_DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"    /** The user input string to be parsed. */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"    private String userInput;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs an {@code EventParser} with the given user input and input split array.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"     * @param userInput The full user input string.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"     * @param inputSplit The user input split into parts for parsing.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"    public EventParser(String userInput, String[] inputSplit) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"        super(inputSplit);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"     * Parses the input to create an {@link AddCommand} that adds an {@link Event} task.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"     * @return An instance of {@link AddCommand} containing the {@link Event} task.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If the input is invalid, such as missing description, dates,","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"     *                          incorrect order of dates, or if the date format is incorrect.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"    public Command parse() throws DrBrownException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"        assert this.getInputSplit() !\u003d null : \"Input string array should not be null\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"        try {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"            if (this.getInputSplit().length \u003d\u003d 1) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"                throw new DrBrownException(Ui.getEventExceptionNoDescription());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"            }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"            boolean containsValidString \u003d this.userInput.contains(\"/from\") || this.userInput.contains(\"/to\")","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"                    || this.userInput.contains(\"/priority\");","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"            boolean correctOrderString \u003d this.userInput.indexOf(\"/from\") \u003e this.userInput.indexOf(\"/to\");","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Arnaxx54"},"content":"            if (!containsValidString || correctOrderString) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Arnaxx54"},"content":"                throw new DrBrownException(Ui.getEventExceptionNoDate());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Arnaxx54"},"content":"            }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Arnaxx54"},"content":"            String[] eventSplit \u003d this.getInputSplit()[1].split(\"/from | /to | /priority\");","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Arnaxx54"},"content":"            Task event \u003d new Event(false, eventSplit[0].trim(),","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Arnaxx54"},"content":"                    LocalDateTime.parse(eventSplit[1].trim(), FILE_DATE_TIME_FORMATTER),","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Arnaxx54"},"content":"                    LocalDateTime.parse(eventSplit[2].trim(), FILE_DATE_TIME_FORMATTER),","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Arnaxx54"},"content":"                    Task.Priority.valueOf(eventSplit[3].trim()));","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Arnaxx54"},"content":"            return new AddCommand(event);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Arnaxx54"},"content":"        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException | IllegalArgumentException e) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Arnaxx54"},"content":"            throw new DrBrownException(Ui.getEventExceptionOthers());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-08","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":74}},{"path":"src/main/java/drbrown/parsing/FindParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.parsing;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.command.Command;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.command.FindCommand;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.DrBrownException;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":" * A parser that handles the \"find\" command input.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" * Responsible for parsing the input to search for tasks containing a specific keyword.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"public class FindParser extends Parsing {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"    public FindParser(String[] inputSplit) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"        super(inputSplit);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"     * Parses the input to create a {@link FindCommand} that searches for tasks containing a specific keyword.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     * @return An instance of {@link FindCommand} for finding tasks with the specified keyword.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If the input is invalid, such as missing the keyword.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"    public Command parse() throws DrBrownException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"        assert this.getInputSplit() !\u003d null : \"Input string array should not be null\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"        if (this.getInputSplit().length \u003d\u003d 1) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"            throw new DrBrownException(Ui.getFindException());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"        return new FindCommand(this.getInputSplit()[1]);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-08","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":32}},{"path":"src/main/java/drbrown/parsing/ListParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.parsing;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.command.Command;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.command.ListCommand;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.DrBrownException;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":" * A parser that handles the \"list\" command input.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" * Responsible for parsing the input to display the list of tasks.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"public class ListParser extends Parsing {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"    public ListParser(String[] inputSplit) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"        super(inputSplit);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"     * Parses the input to create a {@link ListCommand} that lists all tasks.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     * @return An instance of {@link ListCommand} for listing all tasks.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If the input contains more than one word.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"    public Command parse() throws DrBrownException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"        assert this.getInputSplit() !\u003d null : \"Input string array should not be null\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"        if (this.getInputSplit().length !\u003d 1) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"            throw new DrBrownException(Ui.getListException());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"        return new ListCommand();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-08","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":32}},{"path":"src/main/java/drbrown/parsing/MarkParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.parsing;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.command.Command;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.command.MarkCommand;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.DrBrownException;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":" * A parser that handles the \"mark\" command input.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":" * Responsible for parsing the input to mark a task as completed by its index.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"public class MarkParser extends Parsing {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"    public MarkParser(String[] inputSplit) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"        super(inputSplit);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     * Parses the input to create a {@link MarkCommand} that marks a task as completed.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"     * @return An instance of {@link MarkCommand} for marking the specified task as completed.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If the input is invalid, such as missing the index or providing a non-numeric value.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"    public Command parse() throws DrBrownException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"        assert this.getInputSplit() !\u003d null : \"Input string array should not be null\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"        try {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"            if (this.getInputSplit().length \u003d\u003d 1) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"                throw new DrBrownException(Ui.getMarkException());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"            }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"            int itemMarkIndex \u003d parseInt(this.getInputSplit()[1]) - 1;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"            return new MarkCommand(itemMarkIndex);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"            throw new DrBrownException(Ui.getExceptionNotNumber());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-08","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":39}},{"path":"src/main/java/drbrown/parsing/Parsing.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.parsing;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.command.Command;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.DrBrownException;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":" * An abstract base class for parsing user input into specific commands.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":" * Subclasses are expected to implement the {@link #parse()} method to handle","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":" * specific command types.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"public abstract class Parsing {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"    /** The input split into an array of strings for parsing. */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"    private String[] inputSplit;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs a {@code Parsing} instance with the given input split.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"     * @param inputSplit The user input split into parts for parsing.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"    public Parsing(String[] inputSplit) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"        this.inputSplit \u003d inputSplit;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the input split into an array of strings.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"     * @return An array of strings representing the split input.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"    public String[] getInputSplit() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"        return this.inputSplit;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"     * Parses the user input into a {@link Command}.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"     * This method must be implemented by subclasses to handle specific parsing logic.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"     * @return A {@link Command} representing the parsed user input.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If there is an error during parsing.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"    public abstract Command parse() throws DrBrownException;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-17","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":43}},{"path":"src/main/java/drbrown/parsing/TodoParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.parsing;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.command.AddCommand;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.command.Command;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Task;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Todo;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.DrBrownException;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":" * A parser that handles the \"todo\" command input.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":" * Responsible for parsing the input to create a {@link Todo} task.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"public class TodoParser extends Parsing {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"    public TodoParser(String[] inputSplit) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"        super(inputSplit);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     * Parses the input to create an {@link AddCommand} that adds a {@link Todo} task.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"     * @return An instance of {@link AddCommand} containing the {@link Todo} task.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If the input is invalid, such as missing the description.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"    public Command parse() throws DrBrownException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"        assert this.getInputSplit() !\u003d null : \"Input string array should not be null\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"        try {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"            if (this.getInputSplit()[1].trim().isEmpty()) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"                throw new DrBrownException(Ui.getTodoExceptionNoDescription());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"            }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"            String[] todoSplit \u003d this.getInputSplit()[1].split(\"/priority\");","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"            if (todoSplit.length \u003d\u003d 1) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"                throw new DrBrownException(Ui.getTodoExceptionNoPriority());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"            }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"            Task todo \u003d new Todo(false, todoSplit[0].trim(), Task.Priority.valueOf(todoSplit[1].trim()));","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"            return new AddCommand(todo);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"        } catch (ArrayIndexOutOfBoundsException | IllegalArgumentException e) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"            throw new DrBrownException(Ui.getTodoExceptionOthers());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-08","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":47}},{"path":"src/main/java/drbrown/parsing/UnmarkParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.parsing;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.command.Command;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.command.UnmarkCommand;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.DrBrownException;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":" * A parser that handles the \"unmark\" command input.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":" * Responsible for parsing the input to unmark a task as not completed by its index.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"public class UnmarkParser extends Parsing {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"    public UnmarkParser(String[] inputSplit) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"        super(inputSplit);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     * Parses the input to create an {@link UnmarkCommand} that marks a task as not completed.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"     * @return An instance of {@link UnmarkCommand} for unmarking the specified task as not completed.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If the input is invalid, such as missing the index or providing a non-numeric value.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"    public Command parse() throws DrBrownException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"        assert this.getInputSplit() !\u003d null : \"Input string array should not be null\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"        try {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"            if (this.getInputSplit().length \u003d\u003d 1) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"                throw new DrBrownException(Ui.getUnmarkException());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"            }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"            int itemUnmarkIndex \u003d parseInt(this.getInputSplit()[1]) - 1;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"            return new UnmarkCommand(itemUnmarkIndex);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"            throw new DrBrownException(Ui.getExceptionNotNumber());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-08","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":39}},{"path":"src/main/java/drbrown/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":" * Represents a task with a deadline in the DrBrown application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" * A Deadline task has a description, a status (completed or not), a priority level, and an end date and time.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":" * It provides methods to format the task details for file storage and UI display.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"    private static final DateTimeFormatter FILE_DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"    private final LocalDateTime endDateTime;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs a new Deadline task with the specified completion status, description, end date/time,","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"     * and priority level.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"     * @param isCompleted  A boolean indicating whether the task is completed (true if completed,","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"     *                    false otherwise).","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"     * @param description  A string that describes the task.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"     * @param endDateTime  A {@link LocalDateTime} object representing the end date and time of the deadline;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"     *                    must not be null.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"     * @param priority     A {@link Priority} enum value representing the priority level of the task.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"    public Deadline(boolean isCompleted, String description, LocalDateTime endDateTime, Priority priority) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"        super(isCompleted, description, priority);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"        assert endDateTime !\u003d null : \"End time should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the string representation of the deadline task in a format suitable for file storage.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"     * The format includes the task type, status, description, priority, and end date/time.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string formatted for file storage, representing the deadline task.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"    public String toFileString() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"        return \"D\" + super.toFileString() + \" | \" + endDateTime.format(FILE_DATE_TIME_FORMATTER);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the string representation of the deadline task in a format suitable for UI display.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"     * The format is a humorous reminder of the urgency of meeting the deadline.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"     * @return A user-friendly string that humorously describes the urgency of meeting the deadline.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"    public String toUiString() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"        return Ui.getDeadlineUiString();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the string representation of the deadline task, including its type, status, description,","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Arnaxx54"},"content":"     * and formatted end date/time.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Arnaxx54"},"content":"     * The format is used primarily for logging or debugging purposes.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string representation of the deadline task, including its type, status, description, and end date/time.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Arnaxx54"},"content":"    public String toString() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Arnaxx54"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Arnaxx54"},"content":"                + endDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":69}},{"path":"src/main/java/drbrown/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":" * Represents an event task in the DrBrown application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" * An event task has a description, a completion status (completed or not), a priority level,","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":" * a start date/time, and an end date/time. It provides methods to format the task details","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":" * for file storage and UI display.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"public class Event extends Task {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"    private static final DateTimeFormatter FILE_DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"    private final LocalDateTime startDateTime;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"    private final LocalDateTime endDateTime;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs a new Event task with the specified completion status, description,","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"     * start date/time, end date/time, and priority level.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"     * @param isCompleted  A boolean indicating whether the task is completed","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"     *                     (true if completed, false otherwise).","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"     * @param description  A string that describes the event.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"     * @param startDateTime  A {@link LocalDateTime} object representing the start date and time of the event;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"     *                      must not be null.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"     * @param endDateTime  A {@link LocalDateTime} object representing the end date and time of the event;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"     *                    must not be null.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"     * @param priority  A {@link Priority} enum value representing the priority level of the task.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"    public Event(boolean isCompleted, String description, LocalDateTime startDateTime,","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"                 LocalDateTime endDateTime, Priority priority) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"        super(isCompleted, description, priority);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"        assert startDateTime !\u003d null : \"Start time should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"        assert endDateTime !\u003d null : \"End time should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the string representation of the event task in a format suitable for file storage.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"     * The format includes the type of task (Event), its completion status, description, priority,","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"     * start date/time, and end date/time, separated by vertical bars.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string formatted for file storage representing the event task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"    public String toFileString() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"        return \"E\" + super.toFileString() + \" | \"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"                + startDateTime.format(FILE_DATE_TIME_FORMATTER) + \" | \"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"                + endDateTime.format(FILE_DATE_TIME_FORMATTER);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the string representation of the event task in a format suitable for UI display.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Arnaxx54"},"content":"     * This method provides a user-friendly message that humorously describes the scheduled event.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Arnaxx54"},"content":"     * @return A user-friendly string that humorously describes the scheduled event.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Arnaxx54"},"content":"    public String toUiString() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Arnaxx54"},"content":"        return Ui.getEventUiString();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the string representation of the event task for console or text display.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Arnaxx54"},"content":"     * This format includes the type of task (Event), its completion status, description,","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Arnaxx54"},"content":"     * start date/time, and end date/time.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string representation of the event task, including its status, description,","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Arnaxx54"},"content":"     *     start date/time, and end date/time.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Arnaxx54"},"content":"    public String toString() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Arnaxx54"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Arnaxx54"},"content":"                + \" (from: \" + startDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" end: \"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Arnaxx54"},"content":"                + endDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":81}},{"path":"src/main/java/drbrown/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":" * Represents an abstract task in the DrBrown application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":" * A task has a description, a completion status, and a priority level.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":" * Specific types of tasks should extend this class and implement its abstract methods.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"public abstract class Task {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"     * Enum representing the priority levels of a task.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"    public static enum Priority {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"        LOW,","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"        MEDIUM,","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"        HIGH","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"    private boolean isCompleted;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"    private String description;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"    private Priority priority;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs a Task with the specified status, description, and priority.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"     * @param isCompleted  The completion status of the task (true if completed, false otherwise).","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"     * @param description  The description of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"     * @param priority     The priority level of the task.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"     * @throws AssertionError if isCompleted or description is null.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"    public Task(Boolean isCompleted, String description, Priority priority) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"        assert isCompleted !\u003d null : \"Task status should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"        assert description !\u003d null : \"Task description should not be null\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs a Task with a default description and priority.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"     * The default description is an empty string, and the task is not completed with LOW priority.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"    public Task() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"        this.description \u003d \"\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"        this.priority \u003d Priority.LOW;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"     * @return true if the task is completed, false otherwise.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"    public boolean getStatus() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"        return isCompleted;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Arnaxx54"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Arnaxx54"},"content":"    public String getDescription() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Arnaxx54"},"content":"        return description;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the priority level of the task.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Arnaxx54"},"content":"     * @return The priority level of the task.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Arnaxx54"},"content":"    public Priority getPriority() {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Arnaxx54"},"content":"        return this.priority;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Arnaxx54"},"content":"     * Sets the priority level of the task.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Arnaxx54"},"content":"     * @param priority The new priority level for the task.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Arnaxx54"},"content":"    public void setPriority(Priority priority) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Arnaxx54"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Arnaxx54"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Arnaxx54"},"content":"     * @param status The new completion status of the task (true if completed, false otherwise).","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Arnaxx54"},"content":"     * @throws AssertionError if status is null.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Arnaxx54"},"content":"    public void setStatus(Boolean status) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Arnaxx54"},"content":"        assert status !\u003d null : \"Task status should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Arnaxx54"},"content":"        this.isCompleted \u003d status;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the string representation of the task in the format suitable for file storage.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Arnaxx54"},"content":"     * The format is: \" | isCompleted | description | priority \".","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string formatted for file storage representing the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Arnaxx54"},"content":"    public String toFileString() {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Arnaxx54"},"content":"        return \" | \" + this.getStatus() + \" | \" + this.getDescription() + \" | \" + this.priority;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the string representation of the task in the format suitable for UI display.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Arnaxx54"},"content":"     * This method must be implemented by subclasses to provide specific UI formatting.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Arnaxx54"},"content":"     * @return A user-friendly string that describes the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Arnaxx54"},"content":"    public abstract String toUiString();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Arnaxx54"},"content":"     * Returns a string representation of the task for display purposes.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Arnaxx54"},"content":"     * The format is: \"[X] description | priority\" where \"X\" indicates completion.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string representing the task in a human-readable format.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Arnaxx54"},"content":"    public String toString() {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Arnaxx54"},"content":"        return \"[\" + (this.getStatus() ? \"X\" : \" \") + \"] \" + this.getDescription() + \" | \" + this.priority;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":124}},{"path":"src/main/java/drbrown/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.utils.Ui;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":" * Represents a Todo task in the DrBrown application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":" * A Todo task has a description, a completion status (completed or not), and a priority level.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":" * It provides methods to format the task details for file storage and UI display.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs a new Todo task with the specified completion status, description, and priority level.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"     * @param isCompleted  A boolean indicating whether the task is completed (true if completed, false otherwise).","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"     * @param description  A string that describes the task.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"     * @param priority     A {@link Priority} enum value representing the priority level of the task.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"    public Todo(boolean isCompleted, String description, Priority priority) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"        super(isCompleted, description, priority);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the string representation of the Todo task in a format suitable for file storage.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"     * The format includes the type of task (Todo), its completion status, description, and priority level.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string formatted for file storage representing the Todo task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"    public String toFileString() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"        return \"T\" + super.toFileString();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the string representation of the Todo task in a format suitable for UI display.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"     * This method provides a user-friendly message that humorously describes adding the task to the list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"     * @return A user-friendly string that adds a humorous comment about adding the task to the list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"    public String toUiString() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"        return Ui.getTodoUiString();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the string representation of the Todo task for console or text display.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"     * This format includes the type of task (Todo), its completion status, and description.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string representation of the Todo task, including its status and description.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"    public String toString() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":55}},{"path":"src/main/java/drbrown/utils/DrBrownException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.utils;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":" * Represents an exception specific to the DrBrown application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":" * This exception is used to indicate errors that occur during the execution of the program.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"public class DrBrownException extends Exception {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs a new DrBrownException with the specified detail message.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"     * @param message The detail message for the exception.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"    public DrBrownException(String message) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"        super(message);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"        assert message !\u003d null : \"Exception message should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":18}},{"path":"src/main/java/drbrown/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.utils;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.command.Command;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.parsing.ByeParser;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.parsing.DeadlineParser;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.parsing.DeleteParser;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.parsing.EventParser;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.parsing.FindParser;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.parsing.ListParser;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.parsing.MarkParser;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.parsing.TodoParser;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.parsing.UnmarkParser;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":" * A general parser that interprets user input and directs it to the appropriate","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":" * command-specific parser to create the corresponding {@link Command}.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":" * The parser identifies the command type from the user\u0027s input and processes it accordingly.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"public class Parser {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"     * Parses the user input to determine which command to execute.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"     * @param userInput The full input string entered by the user.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"     * @return An instance of {@link Command} that represents the user request.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If the input command is unrecognized or if specific parsers throw exceptions.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"    public static Command parse(String userInput) throws DrBrownException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"        String[] inputSplit \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"        return switch (inputSplit[0]) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"        case \"todo\" -\u003e new TodoParser(inputSplit).parse();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"        case \"deadline\" -\u003e new DeadlineParser(inputSplit).parse();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"        case \"event\" -\u003e new EventParser(userInput, inputSplit).parse();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"        case \"mark\" -\u003e new MarkParser(inputSplit).parse();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"        case \"unmark\" -\u003e new UnmarkParser(inputSplit).parse();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"        case \"list\" -\u003e new ListParser(inputSplit).parse();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"        case \"delete\" -\u003e new DeleteParser(inputSplit).parse();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"        case \"bye\" -\u003e new ByeParser(inputSplit).parse();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"        case \"find\" -\u003e new FindParser(inputSplit).parse();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"        default -\u003e throw new DrBrownException(Ui.getDefaultException());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"        };","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":45}},{"path":"src/main/java/drbrown/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.utils;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import static java.lang.Boolean.parseBoolean;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import java.io.File;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Deadline;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Event;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Task;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Todo;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":" * Handles the loading and saving of tasks to a file for the DrBrown application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":" * The tasks are stored in a specified file and are retrieved or updated as needed.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"public class Storage {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"    private final String filePath;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs a Storage object with the specified file path for storing tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"     * @param filePath The path to the file where tasks will be saved and loaded from.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"     * Loads tasks from the specified file and returns them as a TaskList.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"     * If the file does not exist, it creates a new file.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"     * @return A TaskList containing all the tasks loaded from the file.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If the file is corrupted or if an I/O error occurs.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"    public TaskList load() throws DrBrownException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"                file.createNewFile();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"            }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"            assert file.exists() : \"file doesn\u0027t exist\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"                String[] sentenceSplit \u003d scanner.nextLine().split(\" \\\\| \");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"                switch (sentenceSplit[0]) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"                case \"T\":","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"                    taskList.add(new Todo(parseBoolean(sentenceSplit[1]), sentenceSplit[2],","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Arnaxx54"},"content":"                            Task.Priority.valueOf(sentenceSplit[3])));","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Arnaxx54"},"content":"                    break;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Arnaxx54"},"content":"                case \"D\":","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Arnaxx54"},"content":"                    taskList.add(new Deadline(parseBoolean(sentenceSplit[1]), sentenceSplit[2],","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Arnaxx54"},"content":"                            LocalDateTime.parse(sentenceSplit[4], DATE_TIME_FORMATTER),","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Arnaxx54"},"content":"                            Task.Priority.valueOf(sentenceSplit[3])));","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Arnaxx54"},"content":"                    break;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Arnaxx54"},"content":"                case \"E\":","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Arnaxx54"},"content":"                    taskList.add(new Event(parseBoolean(sentenceSplit[1]), sentenceSplit[2],","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Arnaxx54"},"content":"                            LocalDateTime.parse(sentenceSplit[4], DATE_TIME_FORMATTER),","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Arnaxx54"},"content":"                            LocalDateTime.parse(sentenceSplit[5], DATE_TIME_FORMATTER),","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Arnaxx54"},"content":"                            Task.Priority.valueOf(sentenceSplit[3])));","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Arnaxx54"},"content":"                    break;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Arnaxx54"},"content":"                default:","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Arnaxx54"},"content":"                    throw new DrBrownException(Ui.getExceptionFileCorrupted());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Arnaxx54"},"content":"                }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Arnaxx54"},"content":"            }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Arnaxx54"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Arnaxx54"},"content":"            throw new DrBrownException(Ui.getExceptionFileFirstTime());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Arnaxx54"},"content":"        return taskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Arnaxx54"},"content":"     * Updates the file with the current list of tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Arnaxx54"},"content":"     * If the file does not exist, it creates a new file.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Arnaxx54"},"content":"     * @param tasks The TaskList containing the current tasks to be saved to the file.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Arnaxx54"},"content":"    public void update(TaskList tasks) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Arnaxx54"},"content":"        assert tasks !\u003d null : \"tasks should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Arnaxx54"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Arnaxx54"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Arnaxx54"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Arnaxx54"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Arnaxx54"},"content":"                file.createNewFile();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Arnaxx54"},"content":"            }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Arnaxx54"},"content":"            assert (file.exists()) : \"File doesn\u0027t exist\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Arnaxx54"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Arnaxx54"},"content":"            for (Task task : tasks.getList()) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Arnaxx54"},"content":"                fw.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Arnaxx54"},"content":"            }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Arnaxx54"},"content":"            fw.close();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Arnaxx54"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Arnaxx54"},"content":"            System.out.println(Ui.getExceptionFileWrongPath());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":104}},{"path":"src/main/java/drbrown/utils/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.utils;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Task;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":" * Represents a list of tasks in the DrBrown application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":" * Provides methods to add, remove, mark, unmark, find, and list tasks.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"public class TaskList {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"    public TaskList() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"     * Constructs a TaskList with an existing list of tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"     * @param tasks The initial list of tasks to be included in the TaskList.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"        assert tasks !\u003d null : \"Tasklist should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"     * @param item The task to be added.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"    public void add(Task item) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"        assert item !\u003d null : \"Task should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"        tasks.add(item);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the list of tasks in the TaskList.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"     * @return An ArrayList containing all the tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"        return tasks;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the number of tasks in the TaskList.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"    public int getCount() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Arnaxx54"},"content":"        return tasks.size();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Arnaxx54"},"content":"     * Removes a task from the TaskList based on its index.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Arnaxx54"},"content":"     * Displays a message confirming the deletion of the task.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Arnaxx54"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Arnaxx54"},"content":"     * @param ui    The Ui object to display messages to the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string message confirming the deletion of the task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If the index is out of bounds or the list is empty.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Arnaxx54"},"content":"    public String removeItem(int index, Ui ui) throws DrBrownException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Arnaxx54"},"content":"        try {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Arnaxx54"},"content":"            assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index should be within bounds of tasklist\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Arnaxx54"},"content":"            assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Arnaxx54"},"content":"            Task deleteTask \u003d this.tasks.get(index);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Arnaxx54"},"content":"            tasks.remove(deleteTask);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Arnaxx54"},"content":"            return ui.showDeleteTask(this, deleteTask);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Arnaxx54"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Arnaxx54"},"content":"            throw new DrBrownException(Ui.getExceptionWrongIndex());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Arnaxx54"},"content":"     * Finds and displays tasks that match the given keyword.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Arnaxx54"},"content":"     * If no matching tasks are found, it displays a message indicating no matches.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Arnaxx54"},"content":"     * @param keyword The keyword to search for in the tasks\u0027 descriptions.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Arnaxx54"},"content":"     * @param ui      The Ui object to display messages to the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string containing the list of matching tasks or a message indicating no matches.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If the task list is empty.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Arnaxx54"},"content":"    public String findMatching(String keyword, Ui ui) throws DrBrownException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Arnaxx54"},"content":"        assert keyword !\u003d null : \"Keyword should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Arnaxx54"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Arnaxx54"},"content":"        if (this.getCount() \u003d\u003d 0) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Arnaxx54"},"content":"            throw new DrBrownException(Ui.getExceptionEmptyList());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Arnaxx54"},"content":"        StringBuilder result \u003d new StringBuilder().append(ui.showFind()).append(\"\\n\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Arnaxx54"},"content":"        int listCount \u003d 1;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Arnaxx54"},"content":"        for (Task item : this.tasks) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Arnaxx54"},"content":"            if (item.getDescription().contains(keyword)) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Arnaxx54"},"content":"                result.append(listCount).append(\". \").append(item).append(\"\\n\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Arnaxx54"},"content":"                listCount++;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Arnaxx54"},"content":"            }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Arnaxx54"},"content":"        return listCount \u003d\u003d 1 ? \"Oops! Seems like there are no matching tasks.\" : result.toString();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Arnaxx54"},"content":"     * Displays all tasks in the TaskList.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Arnaxx54"},"content":"     * If the list is empty, it informs the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Arnaxx54"},"content":"     * @param ui The Ui object to display messages to the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string containing all tasks in the TaskList.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If the task list is empty.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Arnaxx54"},"content":"    public String listOut(Ui ui) throws DrBrownException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Arnaxx54"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Arnaxx54"},"content":"        if (this.getCount() \u003d\u003d 0) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Arnaxx54"},"content":"            throw new DrBrownException(Ui.getExceptionEmptyList());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Arnaxx54"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Arnaxx54"},"content":"        int listCount \u003d 1;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Arnaxx54"},"content":"        for (Task item : this.tasks) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Arnaxx54"},"content":"            result.append(listCount).append(\". \").append(item).append(\"\\n\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Arnaxx54"},"content":"            listCount++;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Arnaxx54"},"content":"        return ui.showList() + result.toString();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Arnaxx54"},"content":"     * Marks a task as completed based on its index.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Arnaxx54"},"content":"     * Displays a message confirming the task is marked.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Arnaxx54"},"content":"     * @param itemIndex The index of the task to be marked as completed.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Arnaxx54"},"content":"     * @param ui        The Ui object to display messages to the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string message confirming the task has been marked as completed.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If the index is out of bounds or the list is empty.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Arnaxx54"},"content":"    public String markTask(int itemIndex, Ui ui) throws DrBrownException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Arnaxx54"},"content":"        assert itemIndex \u003e\u003d 0 \u0026\u0026 itemIndex \u003c tasks.size() : \"Index should be within bounds of tasklist\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Arnaxx54"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Arnaxx54"},"content":"        try {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Arnaxx54"},"content":"            Task markTask \u003d this.tasks.get(itemIndex);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Arnaxx54"},"content":"            markTask.setStatus(true);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Arnaxx54"},"content":"            return ui.showMarkTask(markTask);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Arnaxx54"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Arnaxx54"},"content":"            throw new DrBrownException(Ui.getExceptionWrongIndex());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Arnaxx54"},"content":"     * Unmarks a task as incomplete based on its index.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Arnaxx54"},"content":"     * Displays a message confirming the task is unmarked.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Arnaxx54"},"content":"     * @param itemIndex The index of the task to be unmarked as incomplete.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Arnaxx54"},"content":"     * @param ui        The Ui object to display messages to the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string message confirming the task has been unmarked as incomplete.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Arnaxx54"},"content":"     * @throws DrBrownException If the index is out of bounds or the list is empty.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Arnaxx54"},"content":"    public String unmarkTask(int itemIndex, Ui ui) throws DrBrownException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Arnaxx54"},"content":"        assert itemIndex \u003e\u003d 0 \u0026\u0026 itemIndex \u003c tasks.size() : \"Index should be within bounds of tasklist\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Arnaxx54"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Arnaxx54"},"content":"        try {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Arnaxx54"},"content":"            Task unmarkTask \u003d this.tasks.get(itemIndex);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Arnaxx54"},"content":"            unmarkTask.setStatus(false);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Arnaxx54"},"content":"            return ui.showUnmarkTask(unmarkTask);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Arnaxx54"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Arnaxx54"},"content":"            throw new DrBrownException(Ui.getExceptionWrongIndex());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":170}},{"path":"src/main/java/drbrown/utils/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.utils;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"import drbrown.task.Task;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":" * Handles the user interface for the DrBrown application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":" * Provides methods to interact with the user by displaying messages and reading input.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"public class Ui {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"     * Displays the greeting message to the user when the application starts.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"     * @return The greeting message as a String.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"    public String showGreeting() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"        return \"Roads? Where We\u0027re Going, We Don\u0027t Need Roads?! So, what can I help you with today?\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"     * Displays the end message to the user when the application is closing.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"     * @return The end message as a String.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"    public String showEnd() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"        return \"Your future is whatever you make it, so make it a good one! Until next time, keep the DeLorean ready!\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"     * @param message The error message to display.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"     * @return The error message as a String.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"    public String showError(String message) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"        assert message !\u003d null : \"Message should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"        return message;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"     * Displays a message confirming the creation of a new task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"     * @param tasks The TaskList containing the current tasks.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"     * @param task  The task that was created.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string message confirming the task creation.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"    public String showTaskCreation(TaskList tasks, Task task) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"        return task.toUiString() + \"\\n\" + task + \"\\n\" + this.showCount(tasks);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Arnaxx54"},"content":"     * Displays a message confirming the marking of a task as completed.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Arnaxx54"},"content":"     * @param markTask The task that was marked as completed.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string message confirming the task has been marked as completed.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Arnaxx54"},"content":"    public String showMarkTask(Task markTask) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Arnaxx54"},"content":"        assert markTask !\u003d null : \"Task should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Arnaxx54"},"content":"        return \"Task complete! If my calculations are correct, when this baby hits 88 miles per hour...\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Arnaxx54"},"content":"                + \" you\u0027re gonna see some serious progress!\\n\\n\" + markTask;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Arnaxx54"},"content":"     * Displays a message confirming the unmarking of a task as incomplete.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Arnaxx54"},"content":"     * @param unmarkTask The task that was unmarked as incomplete.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string message confirming the task has been unmarked as incomplete.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Arnaxx54"},"content":"    public String showUnmarkTask(Task unmarkTask) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Arnaxx54"},"content":"        assert unmarkTask !\u003d null : \"Task should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Arnaxx54"},"content":"        return \"Looks like we\u0027re going back to the future-task unmarked! Time to revisit this one.\\n\\n\" + unmarkTask;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Arnaxx54"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string message introducing the task list.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Arnaxx54"},"content":"    public String showList() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Arnaxx54"},"content":"        return \"Here\u0027s your list! Like Doc Brown\u0027s flux capacitor, this will help keep everything in perfect sync!\\n\\n\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Arnaxx54"},"content":"     * Displays a message confirming the deletion of a task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Arnaxx54"},"content":"     * @param tasks      The TaskList containing the current tasks.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Arnaxx54"},"content":"     * @param deleteTask The task that was deleted.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string message confirming the deletion of the task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Arnaxx54"},"content":"    public String showDeleteTask(TaskList tasks, Task deleteTask) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Arnaxx54"},"content":"        assert deleteTask !\u003d null : \"Task should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Arnaxx54"},"content":"        return \"That task\u0027s history has been erased! Just like Marty\u0027s fading photo - it\u0027s gone, \"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Arnaxx54"},"content":"                + \"like it never existed!\\n\\n\" + deleteTask + \"\\n\" + this.showCount(tasks);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Arnaxx54"},"content":"     * Displays the total count of tasks in the list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Arnaxx54"},"content":"     * @param tasks The TaskList containing the current tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string message displaying the total count of tasks.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Arnaxx54"},"content":"    public String showCount(TaskList tasks) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Arnaxx54"},"content":"        assert tasks !\u003d null : \"Tasks should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Arnaxx54"},"content":"        return \"\\nYour total count is now \" + tasks.getCount() + \"! Like the time circuits, \"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Arnaxx54"},"content":"                + \"everything\u0027s in sync - keep those tasks ticking along!\";","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Arnaxx54"},"content":"     * Displays a default message when the input is unrecognized.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string message indicating unrecognized input.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Arnaxx54"},"content":"    public String showDefault() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Arnaxx54"},"content":"        return \"I\u0027m from the future, and even I don\u0027t know what that means.\";","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Arnaxx54"},"content":"     * Displays the matching tasks found in the list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Arnaxx54"},"content":"     * @return A string message introducing the matching tasks.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Arnaxx54"},"content":"    public String showFind() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Arnaxx54"},"content":"        return \"Here are the matching tasks in your list — it\u0027s your density... \"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Arnaxx54"},"content":"                + \"I mean, your destiny to get these done!\\n\";","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the response message for an input that is too long.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Arnaxx54"},"content":"     * @return The bye exception message.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Arnaxx54"},"content":"    public static String getByeException() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Arnaxx54"},"content":"        return \"Whoa, hold on! You\u0027ve written more letters than necessary! \"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Arnaxx54"},"content":"                + \"It\u0027s like trying to fit a flux capacitor into a toaster – it just doesn\u0027t belong!\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the response message for missing a description in a to-do command.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Arnaxx54"},"content":"     * @return The to-do exception message for no description.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Arnaxx54"},"content":"    public static String getTodoExceptionNoDescription() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Arnaxx54"},"content":"        return \"Great Scott! You can\u0027t add a to-do without a \"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Arnaxx54"},"content":"                + \"description!\\n\\nUse the format: todo {description} /priority {priority}\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the response message for missing a priority in a to-do command.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Arnaxx54"},"content":"     * @return The to-do exception message for no priority.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Arnaxx54"},"content":"    public static String getTodoExceptionNoPriority() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Arnaxx54"},"content":"        return \"Whoa, this priority is heavy! Set it to 1, 2, or 3 to \"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Arnaxx54"},"content":"                + \"keep the timeline intact! Use the format: todo {description} /priority {priority}\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the response message for other to-do related errors.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Arnaxx54"},"content":"     * @return The to-do exception message for other errors.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Arnaxx54"},"content":"    public static String getTodoExceptionOthers() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Arnaxx54"},"content":"        return \"Great Scott! You can\u0027t add a to-do without a description!\"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Arnaxx54"},"content":"                + \"\\n\\nUse the format: todo {description} /priority {priority}\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the response message for adding a to-do task.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Arnaxx54"},"content":"     * @return The message to be displayed when a to-do task is added.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Arnaxx54"},"content":"    public static String getTodoUiString() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Arnaxx54"},"content":"        return \"Doc, you don\u0027t just walk into a store and buy plutonium! \"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Arnaxx54"},"content":"                + \"But you sure can add this task to your list!\\n\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the response message for missing a description or date in a deadline command.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Arnaxx54"},"content":"     * @return The deadline exception message for no description.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Arnaxx54"},"content":"    public static String getDeadlineExceptionNoDescription() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Arnaxx54"},"content":"        return \"Great Scott! You can\u0027t add a deadline without a \"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Arnaxx54"},"content":"                + \"description and date!\\nUse the format: deadline {description} /by \"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Arnaxx54"},"content":"                + \"{date} /priority {priority}\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the response message for missing a date in a deadline command.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Arnaxx54"},"content":"     * @return The deadline exception message for no date.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Arnaxx54"},"content":"    public static String getDeadlineExceptionNoDate() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Arnaxx54"},"content":"        return \"Hello? Hello? Anybody home? Looks like something\u0027s missing \"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Arnaxx54"},"content":"                + \"here!\\nUse the format: deadline {description} /by {date} /priority {priority}\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the response message for other deadline related errors.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Arnaxx54"},"content":"     * @return The deadline exception message for other errors.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Arnaxx54"},"content":"    public static String getDeadlineExceptionOthers() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Arnaxx54"},"content":"        return \"Looks like your Uncle Joey didn\u0027t make parole again... \"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Arnaxx54"},"content":"                + \"and you missed the date! Let\u0027s fix that deadline!\\nUse the format: deadline \"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Arnaxx54"},"content":"                + \"{description} /by {MMM dd yyyy HH:mm} /priority {priority}\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the response message for adding a deadline task.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Arnaxx54"},"content":"     * @return The message to be displayed when a deadline task is added.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Arnaxx54"},"content":"    public static String getDeadlineUiString() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Arnaxx54"},"content":"        return \"Last night, Darth Vader came down from Planet Vulcan and told me that \"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Arnaxx54"},"content":"                + \"if you don\u0027t meet this deadline... he\u0027d melt your brain! So, better get moving!\\n\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the response message for missing an index in a delete command.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Arnaxx54"},"content":"     * @return The delete exception message for no index.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Arnaxx54"},"content":"    public static String getDeleteExceptionNoIndex() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Arnaxx54"},"content":"        return \"You can\u0027t erase something from history without a count!\\n\"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Arnaxx54"},"content":"                + \"Use the format: delete {count}\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the response message for missing a description or date in an event command.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Arnaxx54"},"content":"     * @return The event exception message for no description.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Arnaxx54"},"content":"    public static String getEventExceptionNoDescription() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Arnaxx54"},"content":"        return \"Great Scott! You can\u0027t add an event without a description \"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Arnaxx54"},"content":"                + \"and from and to date!\\nUse the format: \"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Arnaxx54"},"content":"                + \"event {description} /from {date} /to {date} /priority {priority}\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the response message for missing a date in an event command.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Arnaxx54"},"content":"     * @return The event exception message for no date.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Arnaxx54"},"content":"    public static String getEventExceptionNoDate() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Arnaxx54"},"content":"        return \"Looks like your Uncle Joey didn\u0027t make parole again... \"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Arnaxx54"},"content":"                + \"and you missed the date! Let\u0027s fix that event!\\nUse the format: \"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Arnaxx54"},"content":"                + \"event {description} /from {date} /to {date} /priority {priority}\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the response message for adding an event task.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Arnaxx54"},"content":"     * @return The message to be displayed when an event task is added.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Arnaxx54"},"content":"    public static String getEventUiString() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Arnaxx54"},"content":"        return \"The appropriate question is: \u0027When the hell are they?\u0027 Your event is now set in time!\\n\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the response message for other event related errors.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Arnaxx54"},"content":"     * @return The event exception message for other errors.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Arnaxx54"},"content":"    public static String getEventExceptionOthers() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Arnaxx54"},"content":"        return \"Looks like your Uncle Joey didn\u0027t make parole again... \"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Arnaxx54"},"content":"                + \"and you missed the date! Let\u0027s fix that event!\\nUse the format: \"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Arnaxx54"},"content":"                + \"event {description} /from {MMM dd yyyy HH:mm} /to {MMM dd yyyy HH:mm} /priority {priority}\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the response message for an invalid non-numeric input.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Arnaxx54"},"content":"     * @return The exception message for not a number.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Arnaxx54"},"content":"    public static String getExceptionNotNumber() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Arnaxx54"},"content":"        return \"That\u0027s not a number! Without the right input, we\u0027re never going to get \"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Arnaxx54"},"content":"                + \"this DeLorean off the ground!\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the response message for an input that is too short.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Arnaxx54"},"content":"     * @return The find exception message.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Arnaxx54"},"content":"    public static String getFindException() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Arnaxx54"},"content":"        return \"Whoa, hold on! You\u0027ve written too few letters than necessary! \"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Arnaxx54"},"content":"                + \"It\u0027s like trying to fit a flux capacitor into a toaster – it just doesn\u0027t belong!\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the response message for an input that is too long.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"Arnaxx54"},"content":"     * @return The list exception message.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Arnaxx54"},"content":"    public static String getListException() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"Arnaxx54"},"content":"        return \"Whoa, hold on! You\u0027ve written more letters than necessary! \"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"Arnaxx54"},"content":"                + \"It\u0027s like trying to fit a flux capacitor into a toaster - it just doesn\u0027t belong!\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the response message for missing an index in a mark command.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"Arnaxx54"},"content":"     * @return The mark exception message.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"Arnaxx54"},"content":"    public static String getMarkException() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"Arnaxx54"},"content":"        return \"Great Scott! You can\u0027t complete a task without a count!\\n\"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"Arnaxx54"},"content":"                + \"Use the format: mark {count}\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the response message for missing an index in an unmark command.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"Arnaxx54"},"content":"     * @return The unmark exception message.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"Arnaxx54"},"content":"    public static String getUnmarkException() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"Arnaxx54"},"content":"        return \"Great Scott! You can\u0027t go back in time without a count!\\n\"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"Arnaxx54"},"content":"                + \"Use the format: unmark {count}\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the default exception message for unknown commands.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"Arnaxx54"},"content":"     * @return The default exception message.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"Arnaxx54"},"content":"    public static String getDefaultException() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"Arnaxx54"},"content":"        return \"I\u0027m from the future, and even I don\u0027t know what that means.\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the exception message for a corrupted file format.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"Arnaxx54"},"content":"     * @return The file corrupted exception message.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"Arnaxx54"},"content":"    public static String getExceptionFileCorrupted() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"Arnaxx54"},"content":"        return \"The file provided might be corrupted since it does not follow the specified format.\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the exception message for first-time file creation.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"Arnaxx54"},"content":"     * @return The first-time file exception message.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"Arnaxx54"},"content":"    public static String getExceptionFileFirstTime() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"Arnaxx54"},"content":"        return \"Oops! It seems like this is your first time. \"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"Arnaxx54"},"content":"                + \"No worries, I\u0027ve created a brand new file to get you started.\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the exception message for a wrong file path.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"Arnaxx54"},"content":"     * @return The wrong path exception message.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"Arnaxx54"},"content":"    public static String getExceptionFileWrongPath() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"Arnaxx54"},"content":"        return \"Seems like you messed up the file path somehow!\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the exception message for an incorrect index.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"Arnaxx54"},"content":"     * @return The wrong index exception message.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"Arnaxx54"},"content":"    public static String getExceptionWrongIndex() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"Arnaxx54"},"content":"        return \"You got the count wrong! That\u0027s not how you calculate time \"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"Arnaxx54"},"content":"                + \"travel - you\u0027re off by a few gigawatts!\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"Arnaxx54"},"content":"     * Returns the exception message for an empty task list.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"Arnaxx54"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"Arnaxx54"},"content":"     * @return The empty list exception message.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"Arnaxx54"},"content":"    public static String getExceptionEmptyList() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"Arnaxx54"},"content":"        return \"Wait a minute, Doc! There\u0027s nothing here! We can\u0027t go \"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"Arnaxx54"},"content":"                + \"anywhere until you add something to the list!\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":382}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" spacing\u003d\"0\" stylesheets\u003d\"@../css/dialogBox.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"        \u003c!-- Bot Label --\u003e","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" styleClass\u003d\"bot-label\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"                \u003cInsets left\u003d\"10.0\" right\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"        \u003c!-- ImageView --\u003e","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"26.0\" fitWidth\u003d\"28.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"                \u003cInsets right\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":27}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"            xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"            fx:controller\u003d\"drbrown.gui.MainWindow\"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"            stylesheets\u003d\"@../css/mainWindow.css\" styleClass\u003d\"anchor-pane\"\u003e  \u003c!-- Link CSS and set styleClass --\u003e","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"294.0\"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" styleClass\u003d\"text-field\" /\u003e","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"                AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" text\u003d\"Send\" styleClass\u003d\"button\" /\u003e","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"                    vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\" styleClass\u003d\"scroll-pane\"\u003e","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" styleClass\u003d\"vbox\" /\u003e","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":25}},{"path":"src/test/java/drbrown/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":" * Unit tests for the {@link Deadline} class.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":" * This class contains unit tests for various functionalities of the {@code Deadline} class,","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":" * including the creation of deadlines, handling invalid date formats, handling invalid priorities,","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":" * and generating string representations for UI and file outputs.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"    private String description;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"    private String validTime;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"    private String invalidTime;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"    private DateTimeFormatter fileDateTimeFormatter;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"    private String invalidPriority;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"    private Task.Priority validPriority;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"     * Sets up test data before each test case.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"     * Initializes common test data such as task description, valid and invalid date formats,","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"     * a date-time formatter, and valid and invalid priorities.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"    @BeforeEach","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"    void setUp() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"        description \u003d \"Assignment\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"        validTime \u003d \"03-09-2024 10:10\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"        invalidTime \u003d \"03-09-24 10:10\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"        fileDateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"        validPriority \u003d Task.Priority.LOW;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"        invalidPriority \u003d \"VERYHIGH\";","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"     * Tests the successful creation of a {@link Deadline} task with valid date and time.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"     * Ensures that the string representation of the created {@code Deadline} object matches the expected format.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"    public void testSuccessfulCreationDeadline() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"        Deadline deadline \u003d new Deadline(false, description,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"                LocalDateTime.parse(validTime, fileDateTimeFormatter), validPriority);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"        assertEquals(\"[D][ ] Assignment | LOW (by: Sep 03 2024 10:10)\", deadline.toString());","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"     * Tests handling of an invalid date format when creating a {@link Deadline} task.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"     * Verifies that a {@code DateTimeParseException} is thrown when an invalid date format is provided.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Arnaxx54"},"content":"    public void testInvalidDateTimeDeadline() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Arnaxx54"},"content":"        try {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Arnaxx54"},"content":"            new Deadline(false, description,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Arnaxx54"},"content":"                    LocalDateTime.parse(invalidTime, fileDateTimeFormatter), validPriority);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Arnaxx54"},"content":"            fail(\"Expected DateTimeParseException to be thrown\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Arnaxx54"},"content":"        } catch (DateTimeParseException ignored) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Arnaxx54"},"content":"            // Exception is expected, so the test passes.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Arnaxx54"},"content":"     * Tests handling of an invalid priority when creating a {@link Deadline} task.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Arnaxx54"},"content":"     * Verifies that an {@code IllegalArgumentException} is thrown when an invalid priority is provided.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Arnaxx54"},"content":"    public void testInvalidPriorityDeadline() {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Arnaxx54"},"content":"        try {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Arnaxx54"},"content":"            new Deadline(false, description,","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Arnaxx54"},"content":"                    LocalDateTime.parse(validTime, fileDateTimeFormatter),","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Arnaxx54"},"content":"                    Task.Priority.valueOf(invalidPriority));","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Arnaxx54"},"content":"            fail(\"Expected IllegalArgumentException to be thrown\");","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Arnaxx54"},"content":"        } catch (IllegalArgumentException ignored) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Arnaxx54"},"content":"            // Exception is expected, so the test passes.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Arnaxx54"},"content":"     * Tests the file string representation of a {@link Deadline} task.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Arnaxx54"},"content":"     * Ensures that the string representation returned by {@code toFileString()} matches the expected format.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Arnaxx54"},"content":"    void testToFileStringDeadline() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Arnaxx54"},"content":"        Deadline deadline \u003d new Deadline(false, description,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Arnaxx54"},"content":"                LocalDateTime.parse(validTime, fileDateTimeFormatter), validPriority);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Arnaxx54"},"content":"        assertEquals(\"D | false | Assignment | LOW | 2024-09-03 1010\", deadline.toFileString());","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Arnaxx54"},"content":"     * Tests the UI string representation of a {@link Deadline} task.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Arnaxx54"},"content":"     * Ensures that the string representation returned by {@code toUiString()} matches the expected format.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Arnaxx54"},"content":"    void testToUiStringDeadline() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Arnaxx54"},"content":"        Deadline deadline \u003d new Deadline(false, description,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Arnaxx54"},"content":"                LocalDateTime.parse(validTime, fileDateTimeFormatter), validPriority);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Arnaxx54"},"content":"        assertEquals(\"Last night, Darth Vader came down from Planet Vulcan and told me that if you don\u0027t meet \"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Arnaxx54"},"content":"                        + \"this deadline... he\u0027d melt your brain! So, better get moving!\\n\",","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Arnaxx54"},"content":"                deadline.toUiString());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Arnaxx54"},"content":"     * Tests the successful creation of a marked (completed) {@link Deadline} task.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Arnaxx54"},"content":"     * Ensures that the string representation of the created {@code Deadline} object when marked as done","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Arnaxx54"},"content":"     * matches the expected format.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Arnaxx54"},"content":"    public void testSuccessfulCreationMarkDoneDeadline() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Arnaxx54"},"content":"        Deadline deadline \u003d new Deadline(true, description,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Arnaxx54"},"content":"                LocalDateTime.parse(validTime, fileDateTimeFormatter), validPriority);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Arnaxx54"},"content":"        assertEquals(\"[D][X] Assignment | LOW (by: Sep 03 2024 10:10)\", deadline.toString());","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":120}},{"path":"src/test/java/drbrown/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":" * Unit tests for the {@link Event} class.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":" * This class contains unit tests for various functionalities of the {@code Event} class,","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":" * including the creation of events, handling invalid date formats, handling invalid priorities,","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":" * and generating string representations for UI and file outputs.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"public class EventTest {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"    private String description;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"    private String validStartTime;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"    private String validEndTime;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"    private String invalidTime;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"    private DateTimeFormatter fileDateTimeFormatter;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"    private String invalidPriority;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"    private Task.Priority validPriority;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"     * Sets up test data before each test case.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"     * Initializes common test data such as task description, valid and invalid start and end times,","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"     * a date-time formatter, and valid and invalid priorities.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"    @BeforeEach","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"    void setUp() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"        description \u003d \"Meeting\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"        validStartTime \u003d \"03-09-2024 09:00\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"        validEndTime \u003d \"03-09-2024 10:00\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"        invalidTime \u003d \"03-09-24 09:00\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"        fileDateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"        validPriority \u003d Task.Priority.LOW;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"        invalidPriority \u003d \"VERYHIGH\";","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"     * Tests the successful creation of an {@link Event} task with valid start and end times.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"     * Ensures that the string representation of the created {@code Event} object matches the expected format.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"    public void testSuccessfulCreationEvent() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"        Event event \u003d new Event(false, description,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"                LocalDateTime.parse(validStartTime, fileDateTimeFormatter),","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"                LocalDateTime.parse(validEndTime, fileDateTimeFormatter), validPriority);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"        assertEquals(\"[E][ ] Meeting | LOW (from: Sep 03 2024 end: Sep 03 2024 10:00)\", event.toString());","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Arnaxx54"},"content":"     * Tests handling of an invalid date format when creating an {@link Event} task.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Arnaxx54"},"content":"     * Verifies that a {@code DateTimeParseException} is thrown when an invalid date format is provided.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Arnaxx54"},"content":"    public void testInvalidDateTimeEvent() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Arnaxx54"},"content":"        try {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Arnaxx54"},"content":"            new Event(false, description,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Arnaxx54"},"content":"                    LocalDateTime.parse(invalidTime, fileDateTimeFormatter),","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Arnaxx54"},"content":"                    LocalDateTime.parse(validEndTime, fileDateTimeFormatter), validPriority);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Arnaxx54"},"content":"            fail(\"Expected DateTimeParseException to be thrown\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Arnaxx54"},"content":"        } catch (DateTimeParseException ignored) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Arnaxx54"},"content":"            // Exception is expected, so the test passes.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Arnaxx54"},"content":"     * Tests handling of an invalid priority when creating an {@link Event} task.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Arnaxx54"},"content":"     * Verifies that an {@code IllegalArgumentException} is thrown when an invalid priority is provided.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Arnaxx54"},"content":"    public void testInvalidPriorityEvent() {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Arnaxx54"},"content":"        try {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Arnaxx54"},"content":"            new Event(false, description,","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Arnaxx54"},"content":"                    LocalDateTime.parse(validStartTime, fileDateTimeFormatter),","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Arnaxx54"},"content":"                    LocalDateTime.parse(validEndTime, fileDateTimeFormatter), Task.Priority.valueOf(invalidPriority));","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Arnaxx54"},"content":"            fail(\"Expected IllegalArgumentException to be thrown\");","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Arnaxx54"},"content":"        } catch (IllegalArgumentException ignored) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Arnaxx54"},"content":"            // Exception is expected, so the test passes.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Arnaxx54"},"content":"     * Tests the file string representation of an {@link Event} task.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Arnaxx54"},"content":"     * Ensures that the string representation returned by {@code toFileString()} matches the expected format.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Arnaxx54"},"content":"    void testToFileStringEvent() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Arnaxx54"},"content":"        Event event \u003d new Event(false, description,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Arnaxx54"},"content":"                LocalDateTime.parse(validStartTime, fileDateTimeFormatter),","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Arnaxx54"},"content":"                LocalDateTime.parse(validEndTime, fileDateTimeFormatter), validPriority);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Arnaxx54"},"content":"        assertEquals(\"E | false | Meeting | LOW | 2024-09-03 0900 | 2024-09-03 1000\", event.toFileString());","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Arnaxx54"},"content":"     * Tests the UI string representation of an {@link Event} task.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Arnaxx54"},"content":"     * Ensures that the string representation returned by {@code toUiString()} matches the expected format.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Arnaxx54"},"content":"    void testToUiStringEvent() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Arnaxx54"},"content":"        Event event \u003d new Event(false, description,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Arnaxx54"},"content":"                LocalDateTime.parse(validStartTime, fileDateTimeFormatter),","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Arnaxx54"},"content":"                LocalDateTime.parse(validEndTime, fileDateTimeFormatter), validPriority);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Arnaxx54"},"content":"        assertEquals(\"The appropriate question is: \u0027When the hell are they?\u0027 \"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Arnaxx54"},"content":"                + \"Your event is now set in time!\\n\", event.toUiString());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Arnaxx54"},"content":"     * Tests the successful creation of a marked (completed) {@link Event} task.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Arnaxx54"},"content":"     * Ensures that the string representation of the created {@code Event} object when marked as done","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Arnaxx54"},"content":"     * matches the expected format.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Arnaxx54"},"content":"    public void testSuccessfulCreationMarkDoneEvent() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Arnaxx54"},"content":"        Event event \u003d new Event(true, description,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Arnaxx54"},"content":"                LocalDateTime.parse(validStartTime, fileDateTimeFormatter),","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Arnaxx54"},"content":"                LocalDateTime.parse(validEndTime, fileDateTimeFormatter), validPriority);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Arnaxx54"},"content":"        assertEquals(\"[E][X] Meeting | LOW (from: Sep 03 2024 end: Sep 03 2024 10:00)\", event.toString());","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":126}},{"path":"src/test/java/drbrown/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"package drbrown.task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":" * Unit tests for the {@link Todo} class.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Arnaxx54"},"content":" * This class contains unit tests for various functionalities of the {@code Todo} class,","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Arnaxx54"},"content":" * including the creation of todos, handling invalid priorities, and generating string","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Arnaxx54"},"content":" * representations for UI and file outputs.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Arnaxx54"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Arnaxx54"},"content":"public class TodoTest {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"    private String description;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"    private String invalidPriority;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Arnaxx54"},"content":"    private Task.Priority validPriority;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Arnaxx54"},"content":"     * Sets up test data before each test case.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"     * Initializes common test data such as task description, valid priority, and invalid priority.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Arnaxx54"},"content":"    @BeforeEach","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Arnaxx54"},"content":"    void setUp() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Arnaxx54"},"content":"        description \u003d \"Buy groceries\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Arnaxx54"},"content":"        validPriority \u003d Task.Priority.LOW;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Arnaxx54"},"content":"        invalidPriority \u003d \"VERYHIGH\";","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Arnaxx54"},"content":"     * Tests the successful creation of a {@link Todo} task with a given description.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Arnaxx54"},"content":"     * Ensures that the string representation of the created {@code Todo} object matches the expected format.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Arnaxx54"},"content":"    public void testSuccessfulCreationTodo() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Arnaxx54"},"content":"        Todo todo \u003d new Todo(false, description, validPriority);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Arnaxx54"},"content":"        assertEquals(\"[T][ ] Buy groceries | LOW\", todo.toString());","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Arnaxx54"},"content":"     * Tests handling of an invalid priority when creating a {@link Todo} task.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Arnaxx54"},"content":"     * Verifies that an {@code IllegalArgumentException} is thrown when an invalid priority is provided.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Arnaxx54"},"content":"    public void testInvalidPriorityTodo() {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Arnaxx54"},"content":"        try {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Arnaxx54"},"content":"            new Todo(false, description, Task.Priority.valueOf(invalidPriority));","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Arnaxx54"},"content":"            fail(\"Expected IllegalArgumentException to be thrown\");","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Arnaxx54"},"content":"        } catch (IllegalArgumentException ignored) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Arnaxx54"},"content":"            // Exception is expected, so the test passes.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Arnaxx54"},"content":"        }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Arnaxx54"},"content":"     * Tests the file string representation of a {@link Todo} task.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Arnaxx54"},"content":"     * Ensures that the string representation returned by {@code toFileString()} matches the expected format.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Arnaxx54"},"content":"    void testToFileStringTodo() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Arnaxx54"},"content":"        Todo todo \u003d new Todo(false, description, validPriority);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Arnaxx54"},"content":"        assertEquals(\"T | false | Buy groceries | LOW\", todo.toFileString());","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Arnaxx54"},"content":"     * Tests the UI string representation of a {@link Todo} task.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Arnaxx54"},"content":"     * Ensures that the string representation returned by {@code toUiString()} matches the expected format.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Arnaxx54"},"content":"    void testToUiStringTodo() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Arnaxx54"},"content":"        Todo todo \u003d new Todo(false, description, validPriority);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Arnaxx54"},"content":"        assertEquals(\"Doc, you don\u0027t just walk into a store and buy plutonium! \"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Arnaxx54"},"content":"                + \"But you sure can add this task to your list!\\n\", todo.toUiString());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Arnaxx54"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Arnaxx54"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Arnaxx54"},"content":"     * Tests the successful creation of a marked (completed) {@link Todo} task.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Arnaxx54"},"content":"     * Ensures that the string representation of the created {@code Todo} object when marked as done","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Arnaxx54"},"content":"     * matches the expected format.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Arnaxx54"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Arnaxx54"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Arnaxx54"},"content":"    public void testSuccessfulCreationMarkDoneTodo() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Arnaxx54"},"content":"        Todo todo \u003d new Todo(true, description, validPriority);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Arnaxx54"},"content":"        assertEquals(\"[T][X] Buy groceries | LOW\", todo.toString());","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Arnaxx54"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Arnaxx54"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":87}},{"path":"text-ui-test/data/DrBrown.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"T | false | Read the Back to the Future script","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"D | false | Go to dinner | 2024-10-15 1600","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"E | false | Watch Back to the Future | 1945-09-12 1200 | 2027-11-20 0200","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"E | false | Watch Back to the Future | 1945-09-12 1200 | 2027-11-20 0200","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"T | false | Read the Back to the Future script","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"D | false | Go to dinner | 2024-10-15 1600","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"E | false | Watch Back to the Future | 1945-09-12 1200 | 2027-11-20 0200","lastModifiedDate":"2024-09-08","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":7}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Arnaxx54"},"content":"todo Read the Back to the Future script","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Arnaxx54"},"content":"deadline Submit project /by 2024-08-25","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Arnaxx54"},"content":"event Watch Back to the Future /from 18:00 /to 20:00","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Arnaxx54"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Arnaxx54"},"content":"mark 1","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Arnaxx54"},"content":"unmark 2","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Arnaxx54"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Arnaxx54"},"content":"unmark 1","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"bye","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"Arnaxx54":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Arnaxx54"},"content":"REM compile the code into the bin folder (compile all Java files in subdirectories)","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Arnaxx54"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\drbrown\\*.java ..\\src\\main\\java\\drbrown\\command\\*.java ..\\src\\main\\java\\drbrown\\task\\*.java ..\\src\\main\\java\\drbrown\\utils\\*.java","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Arnaxx54"},"content":"REM run the program, feed commands from input.txt file and redirect the output to ACTUAL.TXT","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Arnaxx54"},"content":"java -classpath ..\\bin drbrown.DrBrown \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":17,"Arnaxx54":4}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Arnaxx54"},"content":"java -classpath ../bin DrBrown \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":37,"Arnaxx54":1}}]
