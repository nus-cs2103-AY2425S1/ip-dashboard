[{"path":"data/Elsa.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"T | 1 | watch anime","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Runus01"},"content":"E | 1 | lecture | Mon 6am - Fri 5pm","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"Runus01":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"# Elsa User Guide","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"Runus01":1,"-":27}},{"path":"src/main/java/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"/**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Runus01"},"content":" * Represents the command that terminates the application.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Runus01"},"content":" * This command will display a goodbye message to the user and signal that the program should exit.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Runus01"},"content":" *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Runus01"},"content":" * @author Aaron","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Runus01"},"content":" */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Runus01"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Runus01"},"content":"     * Executes the ByeCommand by displaying a goodbye message to the user.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Runus01"},"content":"     * @param tasks The task list, which remains unchanged by this command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Runus01"},"content":"     * @param ui The Ui instance that will display the goodbye message.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Runus01"},"content":"    @Override","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Runus01"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Runus01"},"content":"        Ui.goodbye();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Runus01"},"content":"     * Indicates that this command is a goodbye command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Runus01"},"content":"     * @return true, as this command is meant to exit the application.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Runus01"},"content":"    @Override","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Runus01"},"content":"    public boolean isGoodbye() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Runus01"},"content":"        return true;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Runus01"},"content":"}","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"Runus01":28}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"/**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Runus01"},"content":" * Represents an abstract command that can be executed in the application.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Runus01"},"content":" * Each subclass of Command will implement the specific behavior for its command by overriding the abstract methods.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Runus01"},"content":" * Commands interact with a task list and the user interface during their execution.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Runus01"},"content":" *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Runus01"},"content":" * @author Aaron","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Runus01"},"content":" */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Runus01"},"content":"public abstract class Command {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Runus01"},"content":"     * Executes the command and performs the necessary operations on the task list and user interface.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Runus01"},"content":"     * @param tasks The task list that the command will operate on.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Runus01"},"content":"     * @param ui The Ui instance that handles interaction with the user.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Runus01"},"content":"     * @throws ElsaException If an error occurs during the execution of the command","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Runus01"},"content":"    public abstract void execute(TaskList tasks, Ui ui) throws ElsaException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Runus01"},"content":"     * Determines whether this command is a goodbye (exit) command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Runus01"},"content":"     * This method can be overridden by subclasses like ByeCommand to indicate that","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Runus01"},"content":"     * the command is meant to terminate the application.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Runus01"},"content":"     * @return true if the command signals the application to exit, false otherwise.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Runus01"},"content":"     *         By default, this returns false and is expected to be overridden by exit-related commands.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Runus01"},"content":"    public boolean isGoodbye() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Runus01"},"content":"        return false;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Runus01"},"content":"}","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"Runus01":29}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Runus01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Runus01"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Runus01"},"content":" * Represents a task that has a deadline.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Runus01"},"content":" * @author Aaron","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Runus01"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Runus01"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Runus01"},"content":"    protected String dueBy;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Runus01"},"content":"    protected LocalDate dueDate;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Runus01"},"content":"    protected String dueByTime;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Runus01"},"content":"    public Deadline(String description, boolean isDone, String dueBy) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Runus01"},"content":"        super(description, isDone);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Runus01"},"content":"        this.dueBy \u003d dueBy;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Runus01"},"content":"        dueDate \u003d LocalDate.parse(this.dueBy.substring(0, 10)); // First 10 characters of this.by represent \"yyyy-mm-dd\"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Runus01"},"content":"        dueByTime \u003d this.dueBy.substring(this.dueBy.length() - 5); // Last 4 characters represent time in \"hh:mm\"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Runus01"},"content":"    public String getDueBy() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Runus01"},"content":"        return dueBy;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Runus01"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Runus01"},"content":"    public String toString() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Runus01"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dueDate.format(DateTimeFormatter.ofPattern(\"MMM d, yyyy\")) + \" \" +","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Runus01"},"content":"                dueByTime + \")\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Runus01"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"Runus01":29}},{"path":"src/main/java/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"/**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Runus01"},"content":" * Represents the command that creates a new deadlineTask in the taskList.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Runus01"},"content":" *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Runus01"},"content":" * @author Aaron","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Runus01"},"content":" */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Runus01"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Runus01"},"content":"     * The description of the deadlineTask to be created.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Runus01"},"content":"    private String description;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Runus01"},"content":"     * The due date and time of the deadlineTask to be created.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Runus01"},"content":"    private String dueBy;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Runus01"},"content":"     * Constructs a DeadlineCommand with the specified task description.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Runus01"},"content":"     * @param description The description of the deadlineTask to be added.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Runus01"},"content":"     * @param dueBy The due date and time of the deadlineTask to be added.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Runus01"},"content":"    public DeadlineCommand(String description, String dueBy) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Runus01"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Runus01"},"content":"        this.dueBy \u003d dueBy;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Runus01"},"content":"     * Executes the command to add a new deadlineTask to the task list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Runus01"},"content":"     * @param tasks The task list where the new deadlineTask will be added.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Runus01"},"content":"     * @param ui The Ui instance, which is not used in this command but is included for method signature consistency.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Runus01"},"content":"    @Override","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Runus01"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Runus01"},"content":"        tasks.addDeadline(description, dueBy);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Runus01"},"content":"}","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"Runus01":38}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"/**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Runus01"},"content":" * Represents the command that deletes tasks in the taskList.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Runus01"},"content":" *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Runus01"},"content":" * @author Aaron","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Runus01"},"content":" */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Runus01"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Runus01"},"content":"     * The index of the task to be deleted.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Runus01"},"content":"    private int taskIndex;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Runus01"},"content":"     * Constructs a DeleteCommand with the specified task index.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Runus01"},"content":"     * @param taskIndex The index of the task to delete.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Runus01"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Runus01"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Runus01"},"content":"     * Executes the command to delete the task at the specified index.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Runus01"},"content":"     * @param tasks The task list to update.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Runus01"},"content":"     * @param ui The Ui instance, which is not used in this command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Runus01"},"content":"    @Override","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Runus01"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Runus01"},"content":"        tasks.deleteTask(taskIndex);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Runus01"},"content":"}","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"Runus01":31}},{"path":"src/main/java/Elsa.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Runus01"},"content":"import java.util.List;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Runus01"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Runus01"},"content":" * Represents Elsa, a chatbot.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Runus01"},"content":" * @author Aaron","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Runus01"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Runus01"},"content":"public class Elsa {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Runus01"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Runus01"},"content":"    private final Ui ui;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Runus01"},"content":"    public Elsa() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Runus01"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Runus01"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Runus01"},"content":"            Storage storage \u003d new Storage(); // Initialisation of the storage may throw an ElsaException","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Runus01"},"content":"            List\u003cTask\u003e savedTasks \u003d storage.populateTaskList();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Runus01"},"content":"            tasks \u003d new TaskList(savedTasks);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Runus01"},"content":"        } catch (ElsaException e) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Runus01"},"content":"            ui.showError(\"Oops, looks like an error occurred when loading the tasks: \" + e.getMessage());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Runus01"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Runus01"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Runus01"},"content":"    public void run() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Runus01"},"content":"        ui.greetUser();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Runus01"},"content":"        boolean isGoodbye \u003d false;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Runus01"},"content":"        while (!isGoodbye) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Runus01"},"content":"            try {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Runus01"},"content":"                String originalCommand \u003d ui.readCommand();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Runus01"},"content":"                Command command \u003d Parser.parse(originalCommand);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Runus01"},"content":"                command.execute(tasks, ui);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Runus01"},"content":"                isGoodbye \u003d command.isGoodbye();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Runus01"},"content":"            } catch (ElsaException e) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Runus01"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Runus01"},"content":"            }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Runus01"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Runus01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Runus01"},"content":"        new Elsa().run();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Runus01"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"Runus01":44}},{"path":"src/main/java/ElsaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"/**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Runus01"},"content":" * Represents exceptions specific to Elsa.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Runus01"},"content":" * This custom exception is thrown when an error related to Elsa\u0027s operations occur.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Runus01"},"content":" *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Runus01"},"content":" * @author Aaron","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Runus01"},"content":" */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Runus01"},"content":"public class ElsaException extends Exception {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Runus01"},"content":"     * Constructs a new ElsaException with the specified detail message.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Runus01"},"content":"     * @param message The detail message of the exception.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Runus01"},"content":"    public ElsaException(String message) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Runus01"},"content":"        super(message);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Runus01"},"content":"     * Adds a line above and below error messages for aesthetic purposes.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Runus01"},"content":"     * @param message The error message.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Runus01"},"content":"     * @return A string with the separator lines added above and below the error message.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Runus01"},"content":"    public static String addSeparatorLines(String message) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Runus01"},"content":"        String separator \u003d \"______________________________________\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Runus01"},"content":"        return separator + \"\\n\" + message + \"\\n\" + separator;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Runus01"},"content":"}","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"Runus01":27}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Runus01"},"content":" * Represents a task that is an event.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Runus01"},"content":" * @author Aaron","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Runus01"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Runus01"},"content":"public class Event extends Task {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Runus01"},"content":"    protected String start;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Runus01"},"content":"    protected String end;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Runus01"},"content":"    public Event(String description, boolean isDone, String start, String end) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Runus01"},"content":"        super(description, isDone);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Runus01"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Runus01"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Runus01"},"content":"    public String getStart() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Runus01"},"content":"        return start;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Runus01"},"content":"    public String getEnd() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Runus01"},"content":"        return end;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Runus01"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Runus01"},"content":"    public String toString() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Runus01"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Runus01"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"Runus01":27}},{"path":"src/main/java/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"/**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Runus01"},"content":" * Represents the command that creates a new eventTask in the taskList.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Runus01"},"content":" *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Runus01"},"content":" * @author Aaron","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Runus01"},"content":" */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Runus01"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Runus01"},"content":"     * The description of the eventTask to be created.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Runus01"},"content":"    private String description;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Runus01"},"content":"     * The start date and time of the eventTask to be created.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Runus01"},"content":"    private String start;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Runus01"},"content":"     * The end date and time of the eventTask to be created.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Runus01"},"content":"    private String end;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Runus01"},"content":"     * Constructs a EventCommand with the specified task description.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Runus01"},"content":"     * @param description The description of the eventTask to be added.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Runus01"},"content":"     * @param start The start date and time of the eventTask to be added.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Runus01"},"content":"     * @param end The end date and time of the eventTask to be added.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Runus01"},"content":"    public EventCommand(String description, String start, String end) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Runus01"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Runus01"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Runus01"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Runus01"},"content":"     * Executes the command to add a new eventTask to the task list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Runus01"},"content":"     * @param tasks The task list where the new eventTask will be added.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Runus01"},"content":"     * @param ui The Ui instance, which is not used in this command but is included for method signature consistency.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Runus01"},"content":"    @Override","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Runus01"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Runus01"},"content":"        tasks.addEvent(description, start, end);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Runus01"},"content":"}","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"Runus01":45}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"/**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Runus01"},"content":" * Represents the command that lists the tasks in the taskList.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Runus01"},"content":" *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Runus01"},"content":" * @author Aaron","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Runus01"},"content":" */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Runus01"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Runus01"},"content":"     * Executes the ListCommand by listing all the tasks in the taskList.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Runus01"},"content":"     * @param tasks The task list, which remains unchanged by this command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Runus01"},"content":"     * @param ui The Ui instance that will display the list of tasks.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Runus01"},"content":"    @Override","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Runus01"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Runus01"},"content":"        tasks.listTasks();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Runus01"},"content":"}","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"Runus01":17}},{"path":"src/main/java/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"/**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Runus01"},"content":" * Represents the command that marks tasks in the taskList.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Runus01"},"content":" *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Runus01"},"content":" * @author Aaron","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Runus01"},"content":" */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Runus01"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Runus01"},"content":"     * The index of the task to be marked as completed.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Runus01"},"content":"    private int taskIndex;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Runus01"},"content":"     * Constructs a MarkCommand with the specified task index.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Runus01"},"content":"     * @param taskIndex The index of the task to mark as completed.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Runus01"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Runus01"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Runus01"},"content":"     * Executes the command to mark the task at the specified index as completed.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Runus01"},"content":"     * @param tasks The task list to update.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Runus01"},"content":"     * @param ui The Ui instance, which is not used in this command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Runus01"},"content":"    @Override","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Runus01"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Runus01"},"content":"        tasks.markTask(taskIndex);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Runus01"},"content":"}","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"Runus01":31}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"/**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Runus01"},"content":" * Interprets and processes user commands.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Runus01"},"content":" * Converts user input into actionable commands for the application to execute.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Runus01"},"content":" *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Runus01"},"content":" * @author Aaron","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Runus01"},"content":" */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Runus01"},"content":"public class Parser {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Runus01"},"content":"     * This method creates a new scanner object to process user input.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Runus01"},"content":"    public static Command parse(String userInput) throws ElsaException {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Runus01"},"content":"            if (userInput.contains(\"bye\")) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Runus01"},"content":"                return new ByeCommand();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Runus01"},"content":"            } else if (userInput.contains(\"list\")) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Runus01"},"content":"                return new ListCommand();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Runus01"},"content":"            } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Runus01"},"content":"                int index \u003d Integer.parseInt(userInput.substring(5)) - 1;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Runus01"},"content":"                return new MarkCommand(index);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Runus01"},"content":"            } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Runus01"},"content":"                int index \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Runus01"},"content":"                return new UnmarkCommand(index);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Runus01"},"content":"            } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Runus01"},"content":"                // Ensure that the user input is long enough to contain a description","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Runus01"},"content":"                String description \u003d userInput.length() \u003e 5 ? userInput.substring(5).trim() : \"\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Runus01"},"content":"                if (description.isEmpty()) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Runus01"},"content":"                    String message \u003d ElsaException.addSeparatorLines(\"Oh, it appears that the description of your \" +","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Runus01"},"content":"                            \"ToDo item is empty...\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Runus01"},"content":"                    throw new ElsaException(message);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Runus01"},"content":"                }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Runus01"},"content":"                return new TodoCommand(description);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Runus01"},"content":"            } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Runus01"},"content":"                String[] parts \u003d userInput.split(\" /by \", 2);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Runus01"},"content":"                // Check if there are two parts and if \u0027by\u0027 is in the correct format","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Runus01"},"content":"                if (parts.length \u003c 2 || parts[1].trim().length() !\u003d 16 ||","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Runus01"},"content":"                        !parts[1].trim().matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2}\")) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Runus01"},"content":"                    String message \u003d ElsaException.addSeparatorLines(\"Oops, the format for the Deadline task is \" +","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Runus01"},"content":"                            \"a bit off.\\nPlease follow this format: deadline [activity] /by yyyy-mm-dd hh:mm\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Runus01"},"content":"                    throw new ElsaException(message);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Runus01"},"content":"                }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Runus01"},"content":"                String description \u003d parts[0].substring(9).trim();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Runus01"},"content":"                String dueBy \u003d parts[1].trim();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Runus01"},"content":"                // Check if the description is empty","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Runus01"},"content":"                if (description.isEmpty()) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Runus01"},"content":"                    String message \u003d ElsaException.addSeparatorLines(\"Oh, it appears that the description of your \" +","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Runus01"},"content":"                            \"Deadline task is empty...\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Runus01"},"content":"                    throw new ElsaException(message);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Runus01"},"content":"                }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Runus01"},"content":"                return new DeadlineCommand(description, dueBy);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Runus01"},"content":"            } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Runus01"},"content":"                String[] parts \u003d userInput.split(\" /from | /to \");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Runus01"},"content":"                return new EventCommand(parts[0].substring(6).trim(), parts[1].trim(), parts[2].trim());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Runus01"},"content":"            } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Runus01"},"content":"                int index \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Runus01"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Runus01"},"content":"            } else {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Runus01"},"content":"                // Elsa will ask for clarification upon encountering any unrecognised input","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Runus01"},"content":"                String message \u003d ElsaException.addSeparatorLines(\"Sorry, I\u0027m unable to perform this action: \" +","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Runus01"},"content":"                        userInput);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Runus01"},"content":"                throw new ElsaException(message);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Runus01"},"content":"            }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Runus01"},"content":"}","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"Runus01":62}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Runus01"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Runus01"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Runus01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Runus01"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Runus01"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Runus01"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Runus01"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Runus01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Runus01"},"content":"import java.util.List;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Runus01"},"content":"/**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Runus01"},"content":" * Handles the loading of tasks from the data file and saving tasks to the file.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Runus01"},"content":" * @author Aaron","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Runus01"},"content":" */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Runus01"},"content":"public class Storage {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Runus01"},"content":"    private static final Path DATA_DIR \u003d Paths.get(\"data\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Runus01"},"content":"    private static final Path DATA_FILE \u003d DATA_DIR.resolve(\"Elsa.txt\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Runus01"},"content":"    public Storage() throws ElsaException {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Runus01"},"content":"        ensureDataFileExists();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Runus01"},"content":"     * This method ensures that the directory for the Elsa.txt data file which is ..\\ip\\data exists.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Runus01"},"content":"     * If it does not exist, the method creates the ..\\ip\\data folder.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Runus01"},"content":"     * The method then checks if an Elsa.txt file exists within the ..\\ip\\data folder.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Runus01"},"content":"     * If it does not exist, a new Elsa.txt file is created.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Runus01"},"content":"    private static void ensureDataFileExists() throws ElsaException {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Runus01"},"content":"        try {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Runus01"},"content":"            if (!Files.exists(DATA_DIR)) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Runus01"},"content":"                Files.createDirectories(DATA_DIR);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Runus01"},"content":"            }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Runus01"},"content":"            if (!Files.exists(DATA_FILE)) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Runus01"},"content":"                Files.createFile(DATA_FILE);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Runus01"},"content":"            }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Runus01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Runus01"},"content":"            String message \u003d ElsaException.addSeparatorLines(\"Oops, it seems like an error has occurred while \" +","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Runus01"},"content":"                    \"creating directories or files:\\n\" + e.getMessage());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Runus01"},"content":"            throw new ElsaException(message);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Runus01"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Runus01"},"content":"     * This method updates the tasks arrayList to match the data in the Elsa.txt file.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Runus01"},"content":"     * @return A list of tasks, reflecting the content found in the Elsa.txt file.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Runus01"},"content":"    public List\u003cTask\u003e populateTaskList() throws ElsaException {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Runus01"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Runus01"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(DATA_FILE.toFile()))) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Runus01"},"content":"            String line;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Runus01"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Runus01"},"content":"                tasks.add(convertStringToTask(line));","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Runus01"},"content":"            }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Runus01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Runus01"},"content":"            String message \u003d ElsaException.addSeparatorLines(\"Oops, it appears that an error has occurred \" +","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Runus01"},"content":"                    \"while reading the data file:\\n\" + e.getMessage());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Runus01"},"content":"            throw new ElsaException(message);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Runus01"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Runus01"},"content":"        return tasks;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Runus01"},"content":"     * This method converts a line in the Elsa.txt data file to its corresponding Task object.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Runus01"},"content":"     * @param taskInfo A line of text from the file.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Runus01"},"content":"     * @return The corresponding Task object.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Runus01"},"content":"    private static Task convertStringToTask(String taskInfo) throws ElsaException {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Runus01"},"content":"        String[] parts \u003d taskInfo.split(\" \\\\| \");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Runus01"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Runus01"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Runus01"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Runus01"},"content":"        switch (taskType) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Runus01"},"content":"            case \"T\":","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Runus01"},"content":"                // Create a Todo task","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Runus01"},"content":"                return new Todo(description, isDone);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Runus01"},"content":"            case \"D\":","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Runus01"},"content":"                // Create a Deadline task","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Runus01"},"content":"                String dueBy \u003d parts[3];","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Runus01"},"content":"                return new Deadline(description, isDone, dueBy);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Runus01"},"content":"            case \"E\":","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Runus01"},"content":"                // Create an Event task","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Runus01"},"content":"                String[] eventTimes \u003d parts[3].split(\" - \");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Runus01"},"content":"                String start \u003d eventTimes[0].trim();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Runus01"},"content":"                String end \u003d eventTimes[1].trim();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Runus01"},"content":"                return new Event(description, isDone, start, end);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Runus01"},"content":"            default:","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Runus01"},"content":"                String message \u003d ElsaException.addSeparatorLines(\"Oops, it appears that the tasks saved \" +","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Runus01"},"content":"                        \"in our data file are of an invalid task type:\\n\" + taskType);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Runus01"},"content":"                throw new ElsaException(message);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Runus01"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Runus01"},"content":"     * Saves the list of tasks to the data file.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Runus01"},"content":"     * @param tasks The list of tasks to save.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Runus01"},"content":"    private void saveTasksToDataFile(List\u003cTask\u003e tasks) throws ElsaException {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Runus01"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(DATA_FILE.toFile(), false))) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Runus01"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Runus01"},"content":"                writer.write(taskToString(task));","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Runus01"},"content":"                writer.newLine();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Runus01"},"content":"            }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Runus01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Runus01"},"content":"            String message \u003d ElsaException.addSeparatorLines(\"Oops, it appears that an error has occurred while \" +","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Runus01"},"content":"                    \"writing to the data file:\\n\" + e.getMessage());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Runus01"},"content":"            throw new ElsaException(message);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Runus01"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Runus01"},"content":"     * Converts a Task object to a line of text for the file.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Runus01"},"content":"     * @param task The Task object.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Runus01"},"content":"     * @return The corresponding line of text.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Runus01"},"content":"    private String taskToString(Task task) throws ElsaException {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Runus01"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Runus01"},"content":"            return \"T | \" + (task.isDone ? \"1\" : \"0\") + \" | \" + task.getDescription();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Runus01"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Runus01"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Runus01"},"content":"            return \"D | \" + (task.isDone ? \"1\" : \"0\") + \" | \" + task.getDescription() + \" | \" + deadline.getDueBy();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Runus01"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Runus01"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Runus01"},"content":"            return \"E | \" + (task.isDone ? \"1\" : \"0\") + \" | \" + task.getDescription() + \" | \" +","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Runus01"},"content":"                    event.getStart() + \" - \" + event.getEnd();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Runus01"},"content":"        } else {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Runus01"},"content":"            String message \u003d ElsaException.addSeparatorLines(\"Oops, it appears that this task saved in our list \" +","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Runus01"},"content":"                    \"is of an unknown type:\\n\" + task.getClass().getSimpleName());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Runus01"},"content":"            throw new ElsaException(message);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Runus01"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Runus01"},"content":"}","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"Runus01":143}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Runus01"},"content":" * Represents a task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Runus01"},"content":" * @author Aaron","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Runus01"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Runus01"},"content":"public class Task {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Runus01"},"content":"    protected String description;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Runus01"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Runus01"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Runus01"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Runus01"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Runus01"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Runus01"},"content":"        return isDone ? \"X\" : \" \"; // mark a done task with \u0027X\u0027","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Runus01"},"content":"    public String getDescription() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Runus01"},"content":"        return description;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Runus01"},"content":"    public void done() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Runus01"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Runus01"},"content":"    public void notDone() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Runus01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Runus01"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Runus01"},"content":"    public String toString() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Runus01"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Runus01"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Runus01":34}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"import java.util.List;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Runus01"},"content":"/**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Runus01"},"content":" * Manages the list of tasks in the application.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Runus01"},"content":" * @author Aaron","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Runus01"},"content":" */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Runus01"},"content":"public class TaskList {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Runus01"},"content":"    private static List\u003cTask\u003e tasks;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Runus01"},"content":"     * Constructs a TaskList with the specified list of tasks.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Runus01"},"content":"     * @param tasks the initial list of tasks","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Runus01"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Runus01"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Runus01"},"content":"     * Adds a Todo task to the list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Runus01"},"content":"     * @param description the description of the Todo task","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Runus01"},"content":"    public void addTodo(String description) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Runus01"},"content":"        Todo newTodo \u003d new Todo(description, false);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Runus01"},"content":"        tasks.add(newTodo);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Runus01"},"content":"        Ui.addLine();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Runus01"},"content":"        System.out.println(\"Alright, I\u0027ve added this task:\\n  \" + tasks.get(tasks.size() - 1) + \"\\nWe have \" +","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Runus01"},"content":"                tasks.size() + \" tasks in our list now.\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Runus01"},"content":"        Ui.addLine();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Runus01"},"content":"     * Adds a Deadline task to the list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Runus01"},"content":"     * @param description the description of the Deadline task","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Runus01"},"content":"     * @param dueBy the due date and time of the Deadline task","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Runus01"},"content":"    public void addDeadline(String description, String dueBy) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Runus01"},"content":"        Deadline newDeadline \u003d new Deadline(description, false, dueBy);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Runus01"},"content":"        tasks.add(newDeadline);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Runus01"},"content":"        Ui.addLine();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Runus01"},"content":"        System.out.println(\"Alright, I\u0027ve added this task:\\n  \" + tasks.get(tasks.size() - 1) + \"\\nWe have \" +","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Runus01"},"content":"                tasks.size() + \" tasks in our list now.\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Runus01"},"content":"        Ui.addLine();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Runus01"},"content":"     * Adds an Event task to the list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Runus01"},"content":"     * @param description the description of the Event task","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Runus01"},"content":"     * @param start the start date and time of the Event task","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Runus01"},"content":"     * @param end the end date and time of the Event task","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Runus01"},"content":"    public void addEvent(String description, String start, String end) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Runus01"},"content":"        Event newEvent \u003d new Event(description, false, start, end);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Runus01"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Runus01"},"content":"        Ui.addLine();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Runus01"},"content":"        System.out.println(\"Alright, I\u0027ve added this task:\\n  \" + tasks.get(tasks.size() - 1) + \"\\nWe have \" +","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Runus01"},"content":"                tasks.size() + \" tasks in our list now.\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Runus01"},"content":"        Ui.addLine();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Runus01"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Runus01"},"content":"     * @param index the index of the task that is to be deleted from the task list","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Runus01"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Runus01"},"content":"        // Informs the user that the task has been deleted","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Runus01"},"content":"        Ui.addLine();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Runus01"},"content":"        System.out.println(\"Okay, I\u0027ve removed this task:\\n  \" + tasks.get(index).toString() + \"\\nWe have \" +","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Runus01"},"content":"                (tasks.size() - 1) + \" tasks in our list now.\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Runus01"},"content":"        Ui.addLine();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Runus01"},"content":"        // Deletes the task from the list","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Runus01"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Runus01"},"content":"     * Lists all the tasks in the task list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Runus01"},"content":"    public void listTasks() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Runus01"},"content":"        Ui.addLine();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Runus01"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Runus01"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Runus01"},"content":"            System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Runus01"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Runus01"},"content":"        Ui.addLine();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Runus01"},"content":"     * Marks a task as done with an \u0027X\u0027.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Runus01"},"content":"     * @param index the index of the task to be marked as done","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Runus01"},"content":"    public void markTask(int index) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Runus01"},"content":"        tasks.get(index).done();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Runus01"},"content":"        // Informs the user that the task has been marked as done","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Runus01"},"content":"        Ui.addLine();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Runus01"},"content":"        System.out.println(\"Great! I\u0027ve marked it as done:\\n  \" + tasks.get(index).toString());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Runus01"},"content":"        Ui.addLine();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Runus01"},"content":"     * Unmarks a task by removing any \u0027X\u0027.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Runus01"},"content":"     * @param index the index of the task to be unmarked","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Runus01"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Runus01"},"content":"        tasks.get(index).notDone();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Runus01"},"content":"        // Informs the user that the task has been marked as not done","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Runus01"},"content":"        Ui.addLine();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Runus01"},"content":"        System.out.println(\"Alright, I\u0027ve unchecked this task:\\n  \" + tasks.get(index).toString());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Runus01"},"content":"        Ui.addLine();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Runus01"},"content":"}","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"Runus01":116}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Runus01"},"content":" * Represents a task that needs to be done.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Runus01"},"content":" * @author Aaron","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Runus01"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Runus01"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Runus01"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Runus01"},"content":"        super(description, isDone);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Runus01"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Runus01"},"content":"    public String toString() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Runus01"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Runus01"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"Runus01":14}},{"path":"src/main/java/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"/**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Runus01"},"content":" * Represents the command that creates a new todoTask in the taskList.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Runus01"},"content":" *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Runus01"},"content":" * @author Aaron","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Runus01"},"content":" */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Runus01"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Runus01"},"content":"     * The description of the todoTask to be created.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Runus01"},"content":"    private String description;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Runus01"},"content":"     * Constructs a TodoCommand with the specified task description.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Runus01"},"content":"     * @param description The description of the todoTask to be added.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Runus01"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Runus01"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Runus01"},"content":"     * Executes the command to add a new todoTask with the specified description to the task list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Runus01"},"content":"     * @param tasks The task list where the new todoTask will be added.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Runus01"},"content":"     * @param ui The Ui instance, which is not used in this command but is included for method signature consistency.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Runus01"},"content":"    @Override","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Runus01"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Runus01"},"content":"        tasks.addTodo(description);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Runus01"},"content":"}","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"Runus01":31}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Runus01"},"content":"/**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Runus01"},"content":" * Represents the user interface of the application.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Runus01"},"content":" * Handles interactions with the user, including displaying messages and receiving user input.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Runus01"},"content":" * The class makes use of a Scanner object to read commands from the user via the console.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Runus01"},"content":" *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Runus01"},"content":" * @author Aaron","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Runus01"},"content":" */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Runus01"},"content":"public class Ui {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Runus01"},"content":"     * Scanner object to read user input from the console.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Runus01"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Runus01"},"content":"     * Constructs a new Ui object.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Runus01"},"content":"    public Ui() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Runus01"},"content":"     * Adds a horizontal separator line consisting of underscores to the console output.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Runus01"},"content":"     * This is used to visually separate different sections of the user interface.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Runus01"},"content":"    public static void addLine() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Runus01"},"content":"        System.out.println(\"______________________________________\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Runus01"},"content":"     * Greets the user and begins the conversation.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Runus01"},"content":"    public void greetUser() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Runus01"},"content":"        System.out.println(\"Hi! I\u0027m Elsa\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Runus01"},"content":"        System.out.println(\"It\u0027s nice to meet you.\\nHow can I help you?\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Runus01"},"content":"        addLine();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Runus01"},"content":"     * Ends the conversation and says bye to the user.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Runus01"},"content":"    public static void goodbye() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Runus01"},"content":"        addLine();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Runus01"},"content":"        System.out.println(\"Bye! It was so nice chatting with you.\\nSee you again soon!\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Runus01"},"content":"        addLine();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Runus01"},"content":"     * Reads a command from the user.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Runus01"},"content":"     * @return the user input as a String","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Runus01"},"content":"    public String readCommand() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Runus01"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Runus01"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Runus01"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Runus01"},"content":"    public void showError(String message) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Runus01"},"content":"        System.out.println(message);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Runus01"},"content":"}","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"Runus01":65}},{"path":"src/main/java/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"/**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Runus01"},"content":" * Represents the command that unmarks tasks in the taskList.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Runus01"},"content":" *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Runus01"},"content":" * @author Aaron","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Runus01"},"content":" */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Runus01"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Runus01"},"content":"     * The index of the task to be unmarked.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Runus01"},"content":"    private int taskIndex;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Runus01"},"content":"     * Constructs a UnmarkCommand with the specified task index.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Runus01"},"content":"     * @param taskIndex The index of the task to unmark.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Runus01"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Runus01"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Runus01"},"content":"     * Executes the command to unmark the task at the specified index.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Runus01"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Runus01"},"content":"     * @param tasks The task list to update.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Runus01"},"content":"     * @param ui The Ui instance, which is not used in this command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Runus01"},"content":"    @Override","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Runus01"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Runus01"},"content":"        tasks.unmarkTask(taskIndex);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Runus01"},"content":"}","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"Runus01":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"Hi!","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Runus01"},"content":"My name is Anna","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Runus01"},"content":":(","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Runus01"},"content":"list","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Runus01"},"content":"todo","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Runus01"},"content":"todo","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Runus01"},"content":"todo watch anime","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Runus01"},"content":"deadline do book review /by Friday","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Runus01"},"content":"deadline do book review /by 2024-01-20 23:59","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Runus01"},"content":"event lecture /from Mon 6am /to Fri 5pm","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Runus01"},"content":"list","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Runus01"},"content":"mark 1","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Runus01"},"content":"unmark 3","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Runus01"},"content":"mark 3","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Runus01"},"content":"delete 2","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Runus01"},"content":"list","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Runus01"},"content":"lisd","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Runus01"},"content":"bye","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"Runus01":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Runus01"},"content":"java -classpath ..\\bin Elsa \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Runus01":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Runus01"},"content":"java -classpath ../bin Elsa \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Runus01":1,"-":37}}]
