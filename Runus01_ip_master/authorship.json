[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"# Elsa User Guide","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"Runus01":1,"-":27}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Runus01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Runus01"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Runus01"},"content":" * Represents a task that has a deadline.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Runus01"},"content":" * @author Aaron","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Runus01"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Runus01"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Runus01"},"content":"    protected String by;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Runus01"},"content":"    protected LocalDate dueDate;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Runus01"},"content":"    protected String dueByTime;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Runus01"},"content":"    public Deadline(String description, boolean isDone, String by) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Runus01"},"content":"        super(description, isDone);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Runus01"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Runus01"},"content":"        dueDate \u003d LocalDate.parse(this.by.substring(0, 10)); // First 10 characters of this.by represent \"yyyy-mm-dd\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Runus01"},"content":"        dueByTime \u003d this.by.substring(this.by.length() - 5); // Last 4 characters represent time in \"hh:mm\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Runus01"},"content":"    public String getBy() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Runus01"},"content":"        return by;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Runus01"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Runus01"},"content":"    public String toString() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Runus01"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dueDate.format(DateTimeFormatter.ofPattern(\"MMM d, yyyy\")) + \" \" +","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Runus01"},"content":"                dueByTime + \")\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Runus01"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"Runus01":29}},{"path":"src/main/java/Elsa.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Runus01"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Runus01"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Runus01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Runus01"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Runus01"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Runus01"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Runus01"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Runus01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Runus01"},"content":"import java.util.List;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Runus01"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Runus01"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Runus01"},"content":" * Represents Elsa, a chatbot.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Runus01"},"content":" * @author Aaron","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Runus01"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Runus01"},"content":"public class Elsa {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Runus01"},"content":"    private static final List\u003cTask\u003e THINGS_TO_DO \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Runus01"},"content":"    private static final String BASE_DIR \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Runus01"},"content":"    private static final Path DATA_DIR \u003d Paths.get(BASE_DIR, \"data\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Runus01"},"content":"    private static final Path DATA_FILE \u003d DATA_DIR.resolve(\"Elsa.txt\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Runus01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Runus01"},"content":"        ensureDataFileExists();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Runus01"},"content":"        populateListOfTasks(THINGS_TO_DO);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Runus01"},"content":"        greetUser();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Runus01"},"content":"        processUserInput(THINGS_TO_DO);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Runus01"},"content":"        saveTasksToDataFile(THINGS_TO_DO);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Runus01"},"content":"     * This method ensures that the directory for the Elsa.txt data file which is ..\\ip\\data exists.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Runus01"},"content":"     * If it does not exist, the method creates the ..\\ip\\data folder.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Runus01"},"content":"     * The method then checks if an Elsa.txt file exists within the ..\\ip\\data folder.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Runus01"},"content":"     * If it does not exist, a new Elsa.txt file is created.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Runus01"},"content":"    private static void ensureDataFileExists() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Runus01"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Runus01"},"content":"            if (!Files.exists(DATA_DIR)) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Runus01"},"content":"                Files.createDirectories(DATA_DIR);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Runus01"},"content":"            }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Runus01"},"content":"            if (!Files.exists(DATA_FILE)) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Runus01"},"content":"                Files.createFile(DATA_FILE);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Runus01"},"content":"            }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Runus01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Runus01"},"content":"            System.out.println(\"Oops, it seems like an error has occurred while creating directories or files.\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Runus01"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Runus01"},"content":"     * This method updates the THINGS_TO_DO arrayList to match the data in the Elsa.txt file.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Runus01"},"content":"    private static void populateListOfTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Runus01"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Runus01"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(DATA_FILE.toFile()))) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Runus01"},"content":"            String line;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Runus01"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Runus01"},"content":"                lines.add(line);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Runus01"},"content":"            }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Runus01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Runus01"},"content":"            System.err.println(\"Oops, it appears that an error has occurred while reading the file: \" + e.getMessage());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Runus01"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Runus01"},"content":"        for (int i \u003d 0; i \u003c lines.size(); i++) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Runus01"},"content":"            tasks.add(convertStringToTask(lines.get(i)));","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Runus01"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Runus01"},"content":"     * This method converts a line in the Elsa.txt data file to its corresponding Task object.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Runus01"},"content":"    private static Task convertStringToTask(String taskInfo) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Runus01"},"content":"        String[] parts \u003d taskInfo.split(\" \\\\| \");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Runus01"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Runus01"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Runus01"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Runus01"},"content":"        switch (taskType) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Runus01"},"content":"            case \"T\":","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Runus01"},"content":"                // Create a Todo task","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Runus01"},"content":"                return new Todo(description, isDone);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Runus01"},"content":"            case \"D\":","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Runus01"},"content":"                // Create a Deadline task","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Runus01"},"content":"                String by \u003d parts[3];","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Runus01"},"content":"                return new Deadline(description, isDone, by);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Runus01"},"content":"            case \"E\":","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Runus01"},"content":"                // Create an Event task","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Runus01"},"content":"                String[] eventTimes \u003d parts[3].split(\" - \");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Runus01"},"content":"                String from \u003d eventTimes[0].trim();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Runus01"},"content":"                String to \u003d eventTimes[1].trim();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Runus01"},"content":"                return new Event(description, isDone, from, to);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Runus01"},"content":"            default:","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Runus01"},"content":"                throw new IllegalArgumentException(\"Invalid task type: \" + taskType);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Runus01"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Runus01"},"content":"     * This method saves the data of the tasks in the THINGS_TO_DO arrayList in the Elsa.txt file.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Runus01"},"content":"    private static void saveTasksToDataFile(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Runus01"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(DATA_FILE.toFile(), false))) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Runus01"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Runus01"},"content":"                String taskString \u003d taskToString(task);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Runus01"},"content":"                writer.write(taskString);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Runus01"},"content":"                writer.newLine();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Runus01"},"content":"            }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Runus01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Runus01"},"content":"            System.err.println(\"Oops, it appears that an error has occurred while writing to the file: \" +","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Runus01"},"content":"                               e.getMessage());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Runus01"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Runus01"},"content":"     * This method converts a task object in the tasks arrayList to a corresponding line for the Elsa.txt data file.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Runus01"},"content":"    private static String taskToString(Task task) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Runus01"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Runus01"},"content":"            return \"T | \" + (task.isDone ? \"1\" : \"0\") + \" | \" + task.getDescription();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Runus01"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Runus01"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Runus01"},"content":"            return \"D | \" + (task.isDone ? \"1\" : \"0\") + \" | \" + task.getDescription() + \" | \" + deadline.getBy();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Runus01"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Runus01"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Runus01"},"content":"            return \"E | \" + (task.isDone ? \"1\" : \"0\") + \" | \" + task.getDescription() + \" | \" +","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Runus01"},"content":"                    event.getFrom() + \" - \" + event.getTo();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Runus01"},"content":"        } else {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Runus01"},"content":"            throw new IllegalArgumentException(\"Unknown task type: \" + task.getClass().getSimpleName());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Runus01"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Runus01"},"content":"     * This method adds a horizontal separator line consisting of underscores.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Runus01"},"content":"    private static void addLine() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Runus01"},"content":"        System.out.println(\"______________________________________\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Runus01"},"content":"     * This method greets the user and begins the conversation.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Runus01"},"content":"    private static void greetUser() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Runus01"},"content":"        System.out.println(\"Hi! I\u0027m Elsa\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Runus01"},"content":"        System.out.println(\"It\u0027s nice to meet you.\\nHow can I help you?\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Runus01"},"content":"        addLine();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Runus01"},"content":"     * This method ends the conversation and says bye to the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Runus01"},"content":"    private static void goodbye() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Runus01"},"content":"        addLine();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Runus01"},"content":"        System.out.println(\"Bye! It was so nice chatting with you.\\nSee you again soon!\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Runus01"},"content":"        addLine();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Runus01"},"content":"     * This method adds a Todo_task to the list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Runus01"},"content":"    private static void addTodo(List\u003cTask\u003e tasks, String description) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Runus01"},"content":"        Todo newTodo \u003d new Todo(description, false);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Runus01"},"content":"        tasks.add(newTodo);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Runus01"},"content":"        addLine();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Runus01"},"content":"        System.out.println(\"Alright, I\u0027ve added this task:\\n  \" + tasks.get(tasks.size() - 1) + \"\\nWe have \" +","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Runus01"},"content":"                           tasks.size() + \" tasks in our list now.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Runus01"},"content":"        addLine();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Runus01"},"content":"     * This method adds a Deadline_task to the list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Runus01"},"content":"    private static void addDeadline(List\u003cTask\u003e tasks, String description, String by) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Runus01"},"content":"        Deadline newDeadline \u003d new Deadline(description, false, by);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Runus01"},"content":"        tasks.add(newDeadline);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Runus01"},"content":"        addLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Runus01"},"content":"        System.out.println(\"Alright, I\u0027ve added this task:\\n  \" + tasks.get(tasks.size() - 1) + \"\\nWe have \" +","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Runus01"},"content":"                           tasks.size() + \" tasks in our list now.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Runus01"},"content":"        addLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Runus01"},"content":"     * This method adds an Event_task to the list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Runus01"},"content":"    private static void addEvent(List\u003cTask\u003e tasks, String description, String from, String to) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Runus01"},"content":"        Event newEvent \u003d new Event(description, false, from, to);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Runus01"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Runus01"},"content":"        addLine();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Runus01"},"content":"        System.out.println(\"Alright, I\u0027ve added this task:\\n  \" + tasks.get(tasks.size() - 1) + \"\\nWe have \" +","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Runus01"},"content":"                           tasks.size() + \" tasks in our list now.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Runus01"},"content":"        addLine();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Runus01"},"content":"     * This method deletes a task from the list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Runus01"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Runus01"},"content":"     * @param userInput the input provided by the user","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Runus01"},"content":"    private static void deleteTask(List\u003cTask\u003e tasks, String userInput) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Runus01"},"content":"        // Finds the index of the task that is to be deleted","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Runus01"},"content":"        int taskIndex \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Runus01"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Runus01"},"content":"            // Informs the user that the task has been deleted","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Runus01"},"content":"            addLine();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Runus01"},"content":"            System.out.println(\"Okay, I\u0027ve removed this task:\\n  \" + tasks.get(taskIndex).toString() + \"\\nWe have \" +","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Runus01"},"content":"                               (tasks.size() - 1) + \" tasks in our list now.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Runus01"},"content":"            addLine();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Runus01"},"content":"            // Deletes the task from the list","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Runus01"},"content":"            tasks.remove(taskIndex);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Runus01"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Runus01"},"content":"     * This method lists all the tasks in the task list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Runus01"},"content":"    private static void listTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Runus01"},"content":"        addLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Runus01"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Runus01"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Runus01"},"content":"            System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Runus01"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Runus01"},"content":"        addLine();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Runus01"},"content":"     * This method marks any task as done with an \u0027X\u0027.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Runus01"},"content":"    private static void markTask(List\u003cTask\u003e tasks, String userInput) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Runus01"},"content":"        // Finds and marks the task the user is referring to as done","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Runus01"},"content":"        int taskIndex \u003d Integer.parseInt(userInput.substring(5)) - 1;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Runus01"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Runus01"},"content":"            tasks.get(taskIndex).done();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Runus01"},"content":"            // Informs the user that the task has been marked as done","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Runus01"},"content":"            addLine();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Runus01"},"content":"            System.out.println(\"Great! I\u0027ve marked it as done:\\n  \" + tasks.get(taskIndex).toString());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Runus01"},"content":"            addLine();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Runus01"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Runus01"},"content":"     * This method unmarks any task by removing any \u0027X\u0027.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Runus01"},"content":"    private static void unmarkTask(List\u003cTask\u003e tasks, String userInput) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Runus01"},"content":"        // Finds and marks the task the user is referring to as not done","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Runus01"},"content":"        int taskIndex \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Runus01"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Runus01"},"content":"            tasks.get(taskIndex).notDone();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Runus01"},"content":"            // Informs the user that the task has been marked as not done","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Runus01"},"content":"            addLine();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Runus01"},"content":"            System.out.println(\"Alright, I\u0027ve unchecked this task:\\n  \" + tasks.get(taskIndex).toString());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Runus01"},"content":"            addLine();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Runus01"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Runus01"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Runus01"},"content":"     * This method creates a new scanner object to process user input.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Runus01"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Runus01"},"content":"    private static void processUserInput(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Runus01"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Runus01"},"content":"        while (true) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Runus01"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Runus01"},"content":"            if (userInput.contains(\"bye\")) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Runus01"},"content":"                goodbye();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Runus01"},"content":"                break;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Runus01"},"content":"            } else if (userInput.contains(\"list\")) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Runus01"},"content":"                listTasks(tasks);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Runus01"},"content":"            } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Runus01"},"content":"                markTask(tasks, userInput);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Runus01"},"content":"            } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Runus01"},"content":"                unmarkTask(tasks, userInput);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Runus01"},"content":"            } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Runus01"},"content":"                if (userInput.trim().substring(4).isEmpty()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Runus01"},"content":"                    addLine();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Runus01"},"content":"                    System.out.println(\"Oh, it appears that the description of your ToDo item is empty...\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Runus01"},"content":"                    addLine();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Runus01"},"content":"                    continue;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Runus01"},"content":"                }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Runus01"},"content":"                addTodo(tasks, userInput.substring(5));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Runus01"},"content":"            } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Runus01"},"content":"                String[] parts \u003d userInput.split(\" /by \", 2);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Runus01"},"content":"                String description \u003d parts[0].replace(\"deadline \", \"\").trim();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Runus01"},"content":"                String by \u003d parts[1].trim();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Runus01"},"content":"                // Handle the case where the \u0027by\u0027 variable is not in the correct format of yyyy-mm-dd hhmm (time)","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Runus01"},"content":"                if (by.length() !\u003d 16 || !by.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2}\")) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Runus01"},"content":"                    addLine();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Runus01"},"content":"                    System.out.println(\"Please follow the yyyy-mm-dd hh:mm format for this task with a deadline.\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Runus01"},"content":"                    addLine();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Runus01"},"content":"                    continue;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"Runus01"},"content":"                }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Runus01"},"content":"                addDeadline(tasks, description, by);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Runus01"},"content":"            } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Runus01"},"content":"                String[] parts \u003d userInput.split(\" /from | /to \");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"Runus01"},"content":"                String description \u003d parts[0].replace(\"event \", \"\").trim();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"Runus01"},"content":"                String from \u003d parts[1].trim();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Runus01"},"content":"                String to \u003d parts[2].trim();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"Runus01"},"content":"                addEvent(tasks, description, from, to);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"Runus01"},"content":"            } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Runus01"},"content":"                deleteTask(tasks, userInput);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Runus01"},"content":"            } else {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"Runus01"},"content":"                // Elsa will ask for clarification upon encountering any unrecognised input","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"Runus01"},"content":"                addLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"Runus01"},"content":"                System.out.println(\"Sorry, I\u0027m unable to perform this action: \" + userInput);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"Runus01"},"content":"                addLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"Runus01"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"Runus01"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"Runus01"},"content":"        scanner.close();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"Runus01"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"Runus01":314}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Runus01"},"content":" * Represents a task that is an event.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Runus01"},"content":" * @author Aaron","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Runus01"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Runus01"},"content":"public class Event extends Task {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Runus01"},"content":"    protected String from;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Runus01"},"content":"    protected String to;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Runus01"},"content":"    public Event(String description, boolean isDone, String from, String to) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Runus01"},"content":"        super(description, isDone);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Runus01"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Runus01"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Runus01"},"content":"    public String getFrom() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Runus01"},"content":"        return from;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Runus01"},"content":"    public String getTo() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Runus01"},"content":"        return to;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Runus01"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Runus01"},"content":"    public String toString() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Runus01"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Runus01"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"Runus01":27}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Runus01"},"content":" * Represents a task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Runus01"},"content":" * @author Aaron","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Runus01"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Runus01"},"content":"public class Task {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Runus01"},"content":"    protected String description;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Runus01"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Runus01"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Runus01"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Runus01"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Runus01"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Runus01"},"content":"        return isDone ? \"X\" : \" \"; // mark a done task with \u0027X\u0027","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Runus01"},"content":"    public String getDescription() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Runus01"},"content":"        return description;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Runus01"},"content":"    public void done() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Runus01"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Runus01"},"content":"    public void notDone() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Runus01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Runus01"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Runus01"},"content":"    public String toString() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Runus01"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Runus01"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Runus01":34}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Runus01"},"content":" * Represents a task that needs to be done.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Runus01"},"content":" * @author Aaron","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Runus01"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Runus01"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Runus01"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Runus01"},"content":"        super(description, isDone);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Runus01"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Runus01"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Runus01"},"content":"    public String toString() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Runus01"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Runus01"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Runus01"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"Runus01":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Runus01"},"content":"Hi!","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Runus01"},"content":"My name is Anna","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Runus01"},"content":":(","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Runus01"},"content":"list","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Runus01"},"content":"todo","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Runus01"},"content":"todo","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Runus01"},"content":"todo watch anime","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Runus01"},"content":"deadline do book review /by Friday","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Runus01"},"content":"event lecture /from Mon 6am /to Fri 5pm","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Runus01"},"content":"list","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Runus01"},"content":"mark 1","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Runus01"},"content":"unmark 3","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Runus01"},"content":"mark 3","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Runus01"},"content":"delete 2","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Runus01"},"content":"list","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Runus01"},"content":"lisd","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Runus01"},"content":"bye","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"Runus01":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Runus01"},"content":"java -classpath ..\\bin Elsa \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Runus01":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Runus01"},"content":"java -classpath ../bin Elsa \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Runus01":1,"-":37}}]
