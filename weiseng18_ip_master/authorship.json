[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weiseng18"},"content":"    mainClass.set(\"duke.Panorama\")","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weiseng18"},"content":"    archiveBaseName \u003d \"panorama\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"weiseng18":2,"-":39}},{"path":"data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"weiseng18"},"content":"T|0|t","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weiseng18"},"content":"D|0|d|2019-12-01 1800","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weiseng18"},"content":"E|0|e|2019-09-01 1800|2019-09-02 1759","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weiseng18"},"content":"T|1|tm","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weiseng18"},"content":"D|1|dm|2020-05-01 2000","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weiseng18"},"content":"E|1|em|2020-03-01 2000|2020-03-02 1959","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"weiseng18":6}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiseng18"},"content":"package duke;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weiseng18"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weiseng18"},"content":" * Represents the commands available in the application.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weiseng18"},"content":" * Each command corresponds to a specific action that can be taken by the user.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weiseng18"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weiseng18"},"content":"public enum Command {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weiseng18"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weiseng18"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weiseng18"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weiseng18"},"content":"    LIST(\"list\"),","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weiseng18"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weiseng18"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weiseng18"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weiseng18"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weiseng18"},"content":"    HELP(\"help\"),","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weiseng18"},"content":"    FIND(\"find\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weiseng18"},"content":"    private String command;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weiseng18"},"content":"    private Command(String command) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weiseng18"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weiseng18"},"content":"     * Returns the corresponding {@code Command} for the given string.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weiseng18"},"content":"     * If the provided string does not match any known command, {@code null} is returned.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weiseng18"},"content":"     * @param command The string representing the command.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weiseng18"},"content":"     * @return The corresponding {@code Command}, or {@code null} if no match is found.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weiseng18"},"content":"    public static Command fromString(String command) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weiseng18"},"content":"        for (Command cmd: Command.values()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weiseng18"},"content":"            if (cmd.command.equalsIgnoreCase(command)) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weiseng18"},"content":"                return cmd;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weiseng18"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weiseng18"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weiseng18"},"content":"        return null;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weiseng18"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"weiseng18":41}},{"path":"src/main/java/duke/MyException/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiseng18"},"content":"package duke.MyException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weiseng18"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weiseng18"},"content":" * Thrown to indicate that a task description is empty.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weiseng18"},"content":" * This exception is used to signal that a user-provided input for a task","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weiseng18"},"content":" * does not include a required description.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weiseng18"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weiseng18"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weiseng18"},"content":"     * Constructs a new {@code EmptyDescriptionException} with a default error message.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weiseng18"},"content":"    public EmptyDescriptionException() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weiseng18"},"content":"        super(\"     Description cannot be empty.\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weiseng18"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"weiseng18":15}},{"path":"src/main/java/duke/MyException/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiseng18"},"content":"package duke.MyException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weiseng18"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weiseng18"},"content":" * Thrown to indicate that an invalid date has been specified.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weiseng18"},"content":" * This exception is used to signal that the date provided by the user","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weiseng18"},"content":" * does not conform to the expected format or is otherwise invalid.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weiseng18"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weiseng18"},"content":"public class InvalidDateException extends Exception {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weiseng18"},"content":"     * Constructs a new {@code InvalidDateException} with a default error message.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weiseng18"},"content":"    public InvalidDateException() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weiseng18"},"content":"        super(\"     Invalid date specified.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weiseng18"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"weiseng18":15}},{"path":"src/main/java/duke/MyException/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiseng18"},"content":"package duke.MyException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weiseng18"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weiseng18"},"content":" * Thrown to indicate that an unknown command has been issued.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weiseng18"},"content":" * This exception is used to signal that the user has entered a command","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weiseng18"},"content":" * that is not recognized by the application.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weiseng18"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weiseng18"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weiseng18"},"content":"     * Constructs a new {@code UnknownCommandException} with a default error message.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weiseng18"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weiseng18"},"content":"        super(\"     Unknown command.\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weiseng18"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"weiseng18":15}},{"path":"src/main/java/duke/MyTask/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiseng18"},"content":"package duke.MyTask;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weiseng18"},"content":"import duke.Parser.DateParser;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weiseng18"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weiseng18"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weiseng18"},"content":" * Represents a deadline task with a name and a due date.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weiseng18"},"content":" * A deadline task has a specific date and time by which it should be completed.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weiseng18"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weiseng18"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weiseng18"},"content":"    private LocalDateTime date;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weiseng18"},"content":"     * Constructs a {@code Deadline} task with the specified name and due date.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weiseng18"},"content":"     * @param name The name or description of the deadline task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weiseng18"},"content":"     * @param date The due date and time for the task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weiseng18"},"content":"    public Deadline(String name, LocalDateTime date) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weiseng18"},"content":"        super(name, \u0027D\u0027);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weiseng18"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weiseng18"},"content":"     * Returns a string representation of the deadline task in a format suitable for file storage.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weiseng18"},"content":"     * The format includes the task details and the due date, separated by \u0027|\u0027.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weiseng18"},"content":"     * @return A formatted string for writing the deadline task to a file.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weiseng18"},"content":"    @Override","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weiseng18"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weiseng18"},"content":"        return super.toFileString() + \"|\" + DateParser.formatForHardDisk(date);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weiseng18"},"content":"     * Returns a string representation of the deadline task for displaying in the user interface.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weiseng18"},"content":"     * The format includes the task details and the due date.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weiseng18"},"content":"     * @return A formatted string representing the deadline task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weiseng18"},"content":"    @Override","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weiseng18"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weiseng18"},"content":"        return super.toString() + \" (by: \" + DateParser.format(date) + \")\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weiseng18"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"weiseng18":47}},{"path":"src/main/java/duke/MyTask/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiseng18"},"content":"package duke.MyTask;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weiseng18"},"content":"import duke.Parser.DateParser;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weiseng18"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weiseng18"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weiseng18"},"content":" * Represents an event task with a name and a time range.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weiseng18"},"content":" * An event task has a start date and time and an end date and time.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weiseng18"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weiseng18"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weiseng18"},"content":"    private LocalDateTime from, to;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weiseng18"},"content":"     * Constructs an {@code Event} task with the specified name, start date, and end date.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weiseng18"},"content":"     * @param name The name or description of the event task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weiseng18"},"content":"     * @param from The start date and time of the event.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weiseng18"},"content":"     * @param to The end date and time of the event.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weiseng18"},"content":"    public Event(String name, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weiseng18"},"content":"        super(name, \u0027E\u0027);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weiseng18"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weiseng18"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weiseng18"},"content":"     * Returns a string representation of the event task in a format suitable for file storage.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weiseng18"},"content":"     * The format includes the task details, start date, and end date, separated by \u0027|\u0027.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weiseng18"},"content":"     * @return A formatted string for writing the event task to a file.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weiseng18"},"content":"    @Override","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weiseng18"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weiseng18"},"content":"        String dateFrom \u003d DateParser.formatForHardDisk(from);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weiseng18"},"content":"        String dateTo \u003d DateParser.formatForHardDisk(to);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weiseng18"},"content":"        return super.toFileString() + \"|\" + dateFrom + \"|\" + dateTo;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weiseng18"},"content":"     * Returns a string representation of the event task for displaying in the user interface.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weiseng18"},"content":"     * The format includes the task details, start date, and end date.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weiseng18"},"content":"     * @return A formatted string representing the event task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weiseng18"},"content":"    @Override","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weiseng18"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weiseng18"},"content":"        String dateFrom \u003d DateParser.format(from);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weiseng18"},"content":"        String dateTo \u003d DateParser.format(to);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"weiseng18"},"content":"        return super.toString() + \" (from: \" + dateFrom + \" to: \" + dateTo + \")\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weiseng18"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"weiseng18":53}},{"path":"src/main/java/duke/MyTask/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiseng18"},"content":"package duke.MyTask;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weiseng18"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weiseng18"},"content":" * Represents an abstract task with a name, status, and type.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weiseng18"},"content":" * Subclasses should extend this class to define specific types of tasks.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weiseng18"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weiseng18"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weiseng18"},"content":"    private String name;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weiseng18"},"content":"    private boolean isDone;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weiseng18"},"content":"    private char c;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weiseng18"},"content":"     * Constructs a {@code Task} with the specified name and type.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weiseng18"},"content":"     * The task is initialized as not done.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weiseng18"},"content":"     * @param name The name or description of the task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weiseng18"},"content":"     * @param c The type of the task, represented as a character.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weiseng18"},"content":"    public Task(String name, char c) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weiseng18"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weiseng18"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weiseng18"},"content":"        this.c \u003d c;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weiseng18"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weiseng18"},"content":"     * @param status {@code true} if the task is completed, {@code false} otherwise.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weiseng18"},"content":"    public void setIsDone(boolean status) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weiseng18"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weiseng18"},"content":"     * Returns a string representation of the task in a format suitable for file storage.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weiseng18"},"content":"     * The format uses \u0027|\u0027 as a separator between fields.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weiseng18"},"content":"     * @return A formatted string for writing the task to a file.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weiseng18"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weiseng18"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weiseng18"},"content":"        output +\u003d c;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weiseng18"},"content":"        output +\u003d \"|\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weiseng18"},"content":"        output +\u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weiseng18"},"content":"        output +\u003d \"|\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weiseng18"},"content":"        output +\u003d this.name;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weiseng18"},"content":"        return output;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"weiseng18"},"content":"     * Returns a string representation of the task for displaying in the user interface.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weiseng18"},"content":"     * The format includes the task type, completion status, and task name.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"weiseng18"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"weiseng18"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"weiseng18"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"weiseng18"},"content":"        output +\u003d \"[\" + c + \"]\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"weiseng18"},"content":"        output +\u003d \" \";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"weiseng18"},"content":"        output +\u003d this.isDone ? \"[x]\" : \"[ ]\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"weiseng18"},"content":"        output +\u003d \" \";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"weiseng18"},"content":"        output +\u003d this.name;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"weiseng18"},"content":"        return output;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"weiseng18"},"content":"    public String getName() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"weiseng18"},"content":"        return this.name;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"weiseng18"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"weiseng18":69}},{"path":"src/main/java/duke/MyTask/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiseng18"},"content":"package duke.MyTask;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weiseng18"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weiseng18"},"content":" * Represents a todo task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weiseng18"},"content":" * A todo task is a simple task with a name and no specific time or deadline.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weiseng18"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weiseng18"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weiseng18"},"content":"     * Constructs a {@code Todo} task with the specified name.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weiseng18"},"content":"     * The task type is automatically set to \u0027T\u0027.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weiseng18"},"content":"     * @param name The name or description of the todo task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weiseng18"},"content":"    public Todo(String name) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weiseng18"},"content":"        super(name, \u0027T\u0027);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weiseng18"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"weiseng18":19}},{"path":"src/main/java/duke/Panorama.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiseng18"},"content":"package duke;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weiseng18"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weiseng18"},"content":"import java.util.List;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weiseng18"},"content":"import java.util.Locale;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weiseng18"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weiseng18"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weiseng18"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weiseng18"},"content":"// Task folder","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weiseng18"},"content":"import duke.MyTask.Task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weiseng18"},"content":"// Exceptions folder","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weiseng18"},"content":"import duke.MyException.EmptyDescriptionException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weiseng18"},"content":"import duke.MyException.UnknownCommandException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weiseng18"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weiseng18"},"content":" * Main class for the Panorama application.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weiseng18"},"content":" * Handles user interactions, command processing, and task management.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weiseng18"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weiseng18"},"content":"public class Panorama {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weiseng18"},"content":"    private static TaskList taskList;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weiseng18"},"content":"    private static Ui ui;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weiseng18"},"content":"     * Handles user commands by parsing the input string and executing the corresponding actions.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weiseng18"},"content":"     * Recognizes commands such as MARK, UNMARK, BYE, LIST, TODO, DEADLINE, EVENT, DELETE, and HELP.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weiseng18"},"content":"     * @param input The user command input string.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weiseng18"},"content":"     * @return true if the BYE command was executed, false otherwise.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weiseng18"},"content":"     * @throws EmptyDescriptionException If a task command lacks a description.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weiseng18"},"content":"     * @throws UnknownCommandException If the command is not recognized.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weiseng18"},"content":"    static boolean handleCommand(String input) throws EmptyDescriptionException, UnknownCommandException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weiseng18"},"content":"        String[] tokens \u003d input.split(\" \");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weiseng18"},"content":"        Command command \u003d Command.fromString(tokens[0]);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weiseng18"},"content":"        switch (command) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weiseng18"},"content":"        case MARK:","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weiseng18"},"content":"            taskList.markTask(tokens[1]);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weiseng18"},"content":"            break;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weiseng18"},"content":"        case UNMARK:","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weiseng18"},"content":"            taskList.unmarkTask(tokens[1]);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weiseng18"},"content":"            break;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weiseng18"},"content":"        case BYE:","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weiseng18"},"content":"            ui.exit_greeting();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weiseng18"},"content":"            return true;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weiseng18"},"content":"        case LIST:","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"weiseng18"},"content":"            taskList.listEntries();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"weiseng18"},"content":"            break;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weiseng18"},"content":"        case TODO:","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"weiseng18"},"content":"            taskList.addTodoTask(input);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"weiseng18"},"content":"            break;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"weiseng18"},"content":"        case DEADLINE:","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"weiseng18"},"content":"            taskList.addDeadlineTask(input);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"weiseng18"},"content":"            break;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"weiseng18"},"content":"        case EVENT:","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"weiseng18"},"content":"            taskList.addEventTask(input);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"weiseng18"},"content":"            break;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"weiseng18"},"content":"        case DELETE:","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"weiseng18"},"content":"            taskList.deleteTask(tokens[1]);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"weiseng18"},"content":"            break;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"weiseng18"},"content":"        case HELP:","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"weiseng18"},"content":"            ui.display_help();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"weiseng18"},"content":"            break;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"weiseng18"},"content":"        case FIND:","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"weiseng18"},"content":"            taskList.find(tokens[1]);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"weiseng18"},"content":"            break;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"weiseng18"},"content":"        default:","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"weiseng18"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"weiseng18"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"weiseng18"},"content":"        return false;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"weiseng18"},"content":"     * Main method to run the Panorama application.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"weiseng18"},"content":"     * Initializes the task list, loads previous tasks, handles user input, and saves tasks before exiting.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"weiseng18"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"weiseng18"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"weiseng18"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"weiseng18"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"weiseng18"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"weiseng18"},"content":"        // force locale","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"weiseng18"},"content":"        Locale.setDefault(Locale.ENGLISH);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"weiseng18"},"content":"        ui.welcome_greeting();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"weiseng18"},"content":"        // Check for past data","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"weiseng18"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"weiseng18"},"content":"            List\u003cTask\u003e loadedTaskList \u003d storage.loadTaskList();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"weiseng18"},"content":"            taskList \u003d new TaskList(loadedTaskList);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"weiseng18"},"content":"            Ui.printLoadTaskList();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"weiseng18"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"weiseng18"},"content":"            Ui.handleDataTxtNotFound();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"weiseng18"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"weiseng18"},"content":"        String input;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"weiseng18"},"content":"        boolean hasExited \u003d false;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"weiseng18"},"content":"        while (!hasExited \u0026\u0026 scanner.hasNext()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"weiseng18"},"content":"            try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"weiseng18"},"content":"                input \u003d scanner.nextLine();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"weiseng18"},"content":"                hasExited \u003d handleCommand(input);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"weiseng18"},"content":"            } catch (EmptyDescriptionException e) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"weiseng18"},"content":"                Ui.handleEmptyDescriptionException();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"weiseng18"},"content":"            } catch (UnknownCommandException e) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"weiseng18"},"content":"                Ui.handleUnknownCommandException();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"weiseng18"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"weiseng18"},"content":"                Ui.handleDateTimeParseException();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"weiseng18"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"weiseng18"},"content":"        // Save task list to file after exiting","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"weiseng18"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"weiseng18"},"content":"            List\u003cTask\u003e memory \u003d taskList.getMemory();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"weiseng18"},"content":"            storage.saveTaskList(memory);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"weiseng18"},"content":"            Ui.printSavedToFile();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"weiseng18"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"weiseng18"},"content":"            Ui.handleFileSavingException();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"weiseng18"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"weiseng18"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"weiseng18":126,"-":2}},{"path":"src/main/java/duke/Parser/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiseng18"},"content":"package duke.Parser;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weiseng18"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weiseng18"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weiseng18"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weiseng18"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weiseng18"},"content":" * Provides utility methods for parsing and formatting dates.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weiseng18"},"content":" * Supports conversion between string representations and {@code LocalDateTime} objects.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weiseng18"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weiseng18"},"content":"public class DateParser {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weiseng18"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weiseng18"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weiseng18"},"content":"     * Parses a string in the format \"yyyy-MM-dd HHmm\" into a {@code LocalDateTime} object.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weiseng18"},"content":"     * @param dateStr The date string to be parsed.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weiseng18"},"content":"     * @return A {@code LocalDateTime} object representing the parsed date and time.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weiseng18"},"content":"     * @throws DateTimeParseException If the provided string cannot be parsed into a date.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weiseng18"},"content":"    public static LocalDateTime parse(String dateStr) throws DateTimeParseException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weiseng18"},"content":"        return LocalDateTime.parse(dateStr, INPUT_FORMATTER);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weiseng18"},"content":"     * Returns a string representation of the {@code LocalDateTime} object in the format \"MMM dd yyyy HHmm\".","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weiseng18"},"content":"     * This format is suitable for displaying to users in the terminal.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weiseng18"},"content":"     * @param dateTime The {@code LocalDateTime} object to be formatted.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weiseng18"},"content":"     * @return A string representing the date and time in the specified output format.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weiseng18"},"content":"    public static String format(LocalDateTime dateTime) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weiseng18"},"content":"        return dateTime.format(OUTPUT_FORMATTER);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weiseng18"},"content":"     * Returns a string representation of the {@code LocalDateTime} object in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weiseng18"},"content":"     * This format is suitable for storing date and time on disk.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weiseng18"},"content":"     * @param dateTime The {@code LocalDateTime} object to be formatted.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weiseng18"},"content":"     * @return A string representing the date and time in the specified storage format.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weiseng18"},"content":"    public static String formatForHardDisk(LocalDateTime dateTime) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weiseng18"},"content":"        return dateTime.format(INPUT_FORMATTER);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weiseng18"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"weiseng18":48}},{"path":"src/main/java/duke/Parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiseng18"},"content":"package duke.Parser;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weiseng18"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weiseng18"},"content":"import duke.MyTask.Task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weiseng18"},"content":"import duke.MyTask.Todo;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weiseng18"},"content":"import duke.MyTask.Deadline;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weiseng18"},"content":"import duke.MyTask.Event;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weiseng18"},"content":"import duke.MyException.EmptyDescriptionException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weiseng18"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weiseng18"},"content":" * Parses user input to create {@code Task} objects.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weiseng18"},"content":" * Supports parsing input for todo, deadline, and event tasks.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weiseng18"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weiseng18"},"content":"public class Parser {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weiseng18"},"content":"     * Parses input to create a {@code Todo} task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weiseng18"},"content":"     * The input should be in the format \"todo `name`\", where `name` is the description of the task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weiseng18"},"content":"     * @param input The user input string to be parsed.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weiseng18"},"content":"     * @return A {@code Todo} task with the specified `name`.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weiseng18"},"content":"     * @throws EmptyDescriptionException If the input does not contain a task description.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weiseng18"},"content":"    public static Task parseTodoInput(String input) throws EmptyDescriptionException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weiseng18"},"content":"        if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weiseng18"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weiseng18"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weiseng18"},"content":"        String name \u003d input.substring(5);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weiseng18"},"content":"        return new Todo(name);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weiseng18"},"content":"     * Parses input to create a {@code Deadline} task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weiseng18"},"content":"     * The input should be in the format \"deadline `name` /by `date`\", where `name` is the description","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weiseng18"},"content":"     * of the task and `date` is the due date.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weiseng18"},"content":"     * @param input The user input string to be parsed.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weiseng18"},"content":"     * @return A {@code Deadline} task with the specified `name` and due `date`.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weiseng18"},"content":"     * @throws EmptyDescriptionException If the input does not contain a task description or date.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weiseng18"},"content":"    public static Task parseDeadlineInput(String input) throws EmptyDescriptionException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weiseng18"},"content":"        if (input.length() \u003c\u003d 9) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weiseng18"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weiseng18"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weiseng18"},"content":"        String[] contentTokens \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weiseng18"},"content":"        String name \u003d contentTokens[0];","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"weiseng18"},"content":"        LocalDateTime date \u003d DateParser.parse(contentTokens[1]);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"weiseng18"},"content":"        return new Deadline(name, date);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"weiseng18"},"content":"     * Parses input to create an {@code Event} task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"weiseng18"},"content":"     * The input should be in the format \"event `name` /from `start_date` /to `end_date`\",","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"weiseng18"},"content":"     * where `name` is the description of the task, `start_date` is the start date and time,","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"weiseng18"},"content":"     * and `end_date` is the end date and time.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"weiseng18"},"content":"     * @param input The user input string to be parsed.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"weiseng18"},"content":"     * @return An {@code Event} task with the specified `name`, `start_date`, and `end_date`.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"weiseng18"},"content":"     * @throws EmptyDescriptionException If the input does not contain a task description or dates.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"weiseng18"},"content":"    public static Task parseEventInput(String input) throws EmptyDescriptionException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"weiseng18"},"content":"        if (input.length() \u003c\u003d 6) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"weiseng18"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"weiseng18"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"weiseng18"},"content":"        String[] contentTokens \u003d input.substring(6).split(\" /from \");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"weiseng18"},"content":"        String name \u003d contentTokens[0];","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"weiseng18"},"content":"        String[] dateRange \u003d contentTokens[1].split(\" /to \");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"weiseng18"},"content":"        LocalDateTime from \u003d DateParser.parse(dateRange[0]);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"weiseng18"},"content":"        LocalDateTime to \u003d DateParser.parse(dateRange[1]);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"weiseng18"},"content":"        return new Event(name, from, to);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"weiseng18"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"weiseng18":77}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiseng18"},"content":"package duke;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weiseng18"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weiseng18"},"content":"import java.util.List;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weiseng18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weiseng18"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weiseng18"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weiseng18"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weiseng18"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weiseng18"},"content":"import java.io.File;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weiseng18"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weiseng18"},"content":"// Parser folder","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weiseng18"},"content":"import duke.Parser.DateParser;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weiseng18"},"content":"// Task folder","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weiseng18"},"content":"import duke.MyTask.Task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weiseng18"},"content":"import duke.MyTask.Todo;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weiseng18"},"content":"import duke.MyTask.Deadline;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weiseng18"},"content":"import duke.MyTask.Event;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weiseng18"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weiseng18"},"content":" * Handles loading and saving of tasks from/to a file.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weiseng18"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weiseng18"},"content":"public class Storage {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weiseng18"},"content":"    // Constants","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weiseng18"},"content":"    private static final String SAVE_FILE_NAME \u003d \"./data.txt\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weiseng18"},"content":"     * Loads the task list from the file specified by {@code SAVE_FILE_NAME}.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weiseng18"},"content":"     * If the file does not exist, it returns an empty list.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weiseng18"},"content":"     * @return A list of {@code Task} objects loaded from the file.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weiseng18"},"content":"     * @throws FileNotFoundException If the file is not found.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weiseng18"},"content":"    List\u003cTask\u003e loadTaskList() throws FileNotFoundException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weiseng18"},"content":"        File myFile \u003d new File(SAVE_FILE_NAME);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weiseng18"},"content":"        Scanner myReader \u003d new Scanner(myFile);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weiseng18"},"content":"        // Temporary list for return","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weiseng18"},"content":"        List\u003cTask\u003e memory \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weiseng18"},"content":"        while (myReader.hasNextLine()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weiseng18"},"content":"            String task \u003d myReader.nextLine();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weiseng18"},"content":"            // Note that | is a special char in regex","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weiseng18"},"content":"            String[] tokens \u003d task.split(\"\\\\|\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"weiseng18"},"content":"            if (tokens[0].equals(\"T\")) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"weiseng18"},"content":"                memory.add(new Todo(tokens[2]));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weiseng18"},"content":"            } else if (tokens[0].equals(\"D\")) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"weiseng18"},"content":"                LocalDateTime date \u003d DateParser.parse(tokens[3]);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"weiseng18"},"content":"                memory.add(new Deadline(tokens[2], date));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"weiseng18"},"content":"            } else {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"weiseng18"},"content":"                LocalDateTime from \u003d DateParser.parse(tokens[3]);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"weiseng18"},"content":"                LocalDateTime to \u003d DateParser.parse(tokens[4]);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"weiseng18"},"content":"                memory.add(new Event(tokens[2], from, to));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"weiseng18"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"weiseng18"},"content":"            // Set marked/unmarked correctly","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"weiseng18"},"content":"            memory.get(memory.size() - 1).setIsDone(tokens[1].equals(\"1\"));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"weiseng18"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"weiseng18"},"content":"        return memory;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"weiseng18"},"content":"     * Saves the current list of tasks to the file specified by {@code SAVE_FILE_NAME}.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"weiseng18"},"content":"     * @param memory The list of {@code Task} objects to be saved.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"weiseng18"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"weiseng18"},"content":"    void saveTaskList(List\u003cTask\u003e memory) throws IOException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"weiseng18"},"content":"        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(SAVE_FILE_NAME));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"weiseng18"},"content":"        for (int i \u003d 0; i \u003c memory.size(); i++) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"weiseng18"},"content":"            writer.write(memory.get(i).toFileString() + \"\\n\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"weiseng18"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"weiseng18"},"content":"        writer.close();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"weiseng18"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"weiseng18":81}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiseng18"},"content":"package duke;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weiseng18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weiseng18"},"content":"import java.util.List;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weiseng18"},"content":"// Parser folder","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weiseng18"},"content":"import duke.Parser.Parser;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weiseng18"},"content":"// Exceptions folder","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weiseng18"},"content":"import duke.MyException.EmptyDescriptionException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weiseng18"},"content":"// Task folder","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weiseng18"},"content":"import duke.MyTask.Task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weiseng18"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weiseng18"},"content":" * Manages a list of {@code Task} objects.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weiseng18"},"content":" * Provides methods to add, list, mark, unmark, and delete tasks.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weiseng18"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weiseng18"},"content":"public class TaskList {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weiseng18"},"content":"    private List\u003cTask\u003e memory;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weiseng18"},"content":"     * Initializes an empty task list.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weiseng18"},"content":"    public TaskList() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weiseng18"},"content":"        memory \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weiseng18"},"content":"     * Initializes the task list with a pre-existing list of tasks.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weiseng18"},"content":"     * @param list The initial list of {@code Task} objects.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weiseng18"},"content":"    public TaskList(List\u003cTask\u003e list) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weiseng18"},"content":"        memory \u003d list;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weiseng18"},"content":"     * Adds a {@code Todo} task to the list.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weiseng18"},"content":"     * The input should be in the format \"todo `name`\", where `name` is the description of the task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weiseng18"},"content":"     * @param input The user input string to be parsed.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weiseng18"},"content":"     * @throws EmptyDescriptionException If the input does not contain a task description.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weiseng18"},"content":"    void addTodoTask(String input) throws EmptyDescriptionException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weiseng18"},"content":"        Task t \u003d Parser.parseTodoInput(input);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weiseng18"},"content":"        memory.add(t);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weiseng18"},"content":"        printTaskAdded(memory.size() - 1);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weiseng18"},"content":"     * Adds a {@code Deadline} task to the list.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"weiseng18"},"content":"     * The input should be in the format \"deadline `name` /by `date`\", where `name` is the description","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"weiseng18"},"content":"     * of the task and `date` is the due date.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"weiseng18"},"content":"     * @param input The user input string to be parsed.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"weiseng18"},"content":"     * @throws EmptyDescriptionException If the input does not contain a task description or date.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"weiseng18"},"content":"    void addDeadlineTask(String input) throws EmptyDescriptionException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"weiseng18"},"content":"        Task t \u003d Parser.parseDeadlineInput(input);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"weiseng18"},"content":"        memory.add(t);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"weiseng18"},"content":"        printTaskAdded(memory.size() - 1);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"weiseng18"},"content":"     * Adds an {@code Event} task to the list.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"weiseng18"},"content":"     * The input should be in the format \"event `name` /from `start_date` /to `end_date`\",","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"weiseng18"},"content":"     * where `name` is the description of the task, `start_date` is the start date and time,","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"weiseng18"},"content":"     * and `end_date` is the end date and time.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"weiseng18"},"content":"     * @param input The user input string to be parsed.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"weiseng18"},"content":"     * @throws EmptyDescriptionException If the input does not contain a task description or dates.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"weiseng18"},"content":"    void addEventTask(String input) throws EmptyDescriptionException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"weiseng18"},"content":"        Task t \u003d Parser.parseEventInput(input);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"weiseng18"},"content":"        memory.add(t);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"weiseng18"},"content":"        printTaskAdded(memory.size() - 1);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"weiseng18"},"content":"     * Lists all tasks in the task list.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"weiseng18"},"content":"     * Each task is displayed with its index number.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"weiseng18"},"content":"    void listEntries() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"weiseng18"},"content":"        System.out.println(Ui.SEPARATOR);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"weiseng18"},"content":"        for (int i \u003d 0; i \u003c memory.size(); i++) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"weiseng18"},"content":"            int num \u003d i + 1;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"weiseng18"},"content":"            System.out.print(Ui.INDENT + num + \". \");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"weiseng18"},"content":"            System.out.println(memory.get(i));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"weiseng18"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"weiseng18"},"content":"        System.out.println(Ui.SEPARATOR);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"weiseng18"},"content":"     * Marks a task as done.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"weiseng18"},"content":"     * The task is identified by its index in the list.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"weiseng18"},"content":"     * @param stringId The index of the task to be marked as done.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"weiseng18"},"content":"    void markTask(String stringId) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"weiseng18"},"content":"        int id \u003d Integer.parseInt(stringId) - 1;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"weiseng18"},"content":"        memory.get(id).setIsDone(true);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"weiseng18"},"content":"        System.out.println(Ui.SEPARATOR);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"weiseng18"},"content":"        System.out.println(Ui.INDENT + \"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"weiseng18"},"content":"        System.out.println(Ui.INDENT + memory.get(id));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"weiseng18"},"content":"        System.out.println(Ui.SEPARATOR);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"weiseng18"},"content":"     * Marks a task as not done.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"weiseng18"},"content":"     * The task is identified by its index in the list.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"weiseng18"},"content":"     * @param stringId The index of the task to be marked as not done.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"weiseng18"},"content":"    void unmarkTask(String stringId) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"weiseng18"},"content":"        int id \u003d Integer.parseInt(stringId) - 1;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"weiseng18"},"content":"        memory.get(id).setIsDone(false);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"weiseng18"},"content":"        System.out.println(Ui.SEPARATOR);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"weiseng18"},"content":"        System.out.println(Ui.INDENT + \"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"weiseng18"},"content":"        System.out.println(Ui.INDENT + memory.get(id));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"weiseng18"},"content":"        System.out.println(Ui.SEPARATOR);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"weiseng18"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"weiseng18"},"content":"     * The task is identified by its index in the list.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"weiseng18"},"content":"     * @param stringId The index of the task to be deleted.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"weiseng18"},"content":"    void deleteTask(String stringId) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"weiseng18"},"content":"        int id \u003d Integer.parseInt(stringId) - 1;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"weiseng18"},"content":"        Task task \u003d memory.remove(id);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"weiseng18"},"content":"        System.out.println(Ui.SEPARATOR);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"weiseng18"},"content":"        System.out.println(Ui.INDENT + \"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"weiseng18"},"content":"        System.out.println(Ui.INDENT + task);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"weiseng18"},"content":"        System.out.println(Ui.SEPARATOR);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"weiseng18"},"content":"    void find(String keyword) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"weiseng18"},"content":"        List\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"weiseng18"},"content":"        for (Task t: memory) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"weiseng18"},"content":"            String name \u003d t.getName();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"weiseng18"},"content":"            String[] words \u003d name.split(\" \");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"weiseng18"},"content":"            boolean found \u003d false;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"weiseng18"},"content":"            for (String word: words) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"weiseng18"},"content":"                if (word.equals(keyword)) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"weiseng18"},"content":"                    found \u003d true;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"weiseng18"},"content":"                    break;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"weiseng18"},"content":"                }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"weiseng18"},"content":"            }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"weiseng18"},"content":"            if (found) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"weiseng18"},"content":"                result.add(t);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"weiseng18"},"content":"            }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"weiseng18"},"content":"        }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"weiseng18"},"content":"        // NOTE: Assume that the ID for delete is still based on the global list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"weiseng18"},"content":"        System.out.println(Ui.SEPARATOR);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"weiseng18"},"content":"        System.out.println(Ui.INDENT + \"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"weiseng18"},"content":"        for (int i \u003d 0; i \u003c result.size(); i++) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"weiseng18"},"content":"            int num \u003d i + 1;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"weiseng18"},"content":"            System.out.print(Ui.INDENT + num + \". \");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"weiseng18"},"content":"            System.out.println(result.get(i));","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"weiseng18"},"content":"        }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"weiseng18"},"content":"        System.out.println(Ui.SEPARATOR);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"weiseng18"},"content":"     * Prints a message indicating that a task has been added.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"weiseng18"},"content":"     * @param index The index of the task that was added.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"weiseng18"},"content":"    private void printTaskAdded(int index) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"weiseng18"},"content":"        System.out.println(Ui.SEPARATOR);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"weiseng18"},"content":"        System.out.println(Ui.INDENT + \"Added task:\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"weiseng18"},"content":"        System.out.println(Ui.INDENT + memory.get(index));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"weiseng18"},"content":"        System.out.println(Ui.SEPARATOR);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"weiseng18"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"weiseng18"},"content":"     * @return The list of {@code Task} objects.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"weiseng18"},"content":"    public List\u003cTask\u003e getMemory() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"weiseng18"},"content":"        return memory;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"weiseng18"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"weiseng18":191}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiseng18"},"content":"package duke;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weiseng18"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weiseng18"},"content":" * Handles user interaction by printing various messages to the console.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weiseng18"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weiseng18"},"content":"public class Ui {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weiseng18"},"content":"    // Constants","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weiseng18"},"content":"    public static final String SEPARATOR \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weiseng18"},"content":"    public static final String INDENT \u003d \"     \"; // 5 spaces","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weiseng18"},"content":"     * Displays the welcome greeting message.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weiseng18"},"content":"    static void welcome_greeting() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weiseng18"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weiseng18"},"content":"        System.out.println(INDENT + \"Hello! I\u0027m Panorama\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weiseng18"},"content":"        System.out.println(INDENT + \"What can I do for you?\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weiseng18"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weiseng18"},"content":"     * Displays the exit greeting message.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weiseng18"},"content":"    static void exit_greeting() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weiseng18"},"content":"        String exit_statement \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weiseng18"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weiseng18"},"content":"        System.out.println(INDENT + exit_statement);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weiseng18"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weiseng18"},"content":"     * Displays a help message with a list of available commands.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weiseng18"},"content":"    static void display_help() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weiseng18"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weiseng18"},"content":"        System.out.println(INDENT + \"list\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weiseng18"},"content":"        System.out.println(INDENT + \"find (description)\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weiseng18"},"content":"        System.out.println(INDENT + \"bye\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weiseng18"},"content":"        System.out.println(INDENT + \"todo (description)\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weiseng18"},"content":"        System.out.println(INDENT + \"deadline (description) /by (date_string)\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weiseng18"},"content":"        System.out.println(INDENT + \"event (description) /from (date_string) /to (date_string)\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weiseng18"},"content":"        System.out.println(INDENT + \"mark (task_id)\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weiseng18"},"content":"        System.out.println(INDENT + \"unmark (task_id)\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weiseng18"},"content":"        System.out.println(INDENT + \"delete (task_id)\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weiseng18"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"weiseng18"},"content":"     * Sends the specified message to the console, followed by a separator.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"weiseng18"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"weiseng18"},"content":"     * @param err The message to be sent.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"weiseng18"},"content":"    private static void sendMessage(String err) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"weiseng18"},"content":"        System.out.println(INDENT + err);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"weiseng18"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"weiseng18"},"content":"     * Handles the exception where a task description is empty.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"weiseng18"},"content":"     * Prints an error message to the console.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"weiseng18"},"content":"    static void handleEmptyDescriptionException() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"weiseng18"},"content":"        sendMessage(\"The task description cannot be empty.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"weiseng18"},"content":"     * Handles the exception where an unknown command is provided.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"weiseng18"},"content":"     * Prints an error message to the console.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"weiseng18"},"content":"    static void handleUnknownCommandException() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"weiseng18"},"content":"        sendMessage(\"Unknown command.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"weiseng18"},"content":"     * Handles the exception where a date cannot be parsed.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"weiseng18"},"content":"     * Prints an error message to the console.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"weiseng18"},"content":"    static void handleDateTimeParseException() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"weiseng18"},"content":"        sendMessage(\"Invalid date.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"weiseng18"},"content":"     * Handles the situation where the data.txt file is not found.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"weiseng18"},"content":"     * Prints a message indicating that an empty task list is being started.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"weiseng18"},"content":"    static void handleDataTxtNotFound() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"weiseng18"},"content":"        sendMessage(\"./data.txt does not exist. Starting from an empty task list.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"weiseng18"},"content":"     * Handles the exception where saving to the file fails.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"weiseng18"},"content":"     * Prints an error message to the console.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"weiseng18"},"content":"    static void handleFileSavingException() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"weiseng18"},"content":"        sendMessage(\"Error in saving to file.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"weiseng18"},"content":"     * Prints a message indicating that the task list was successfully loaded.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"weiseng18"},"content":"    static void printLoadTaskList() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"weiseng18"},"content":"        sendMessage(\"Successfully loaded task list.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"weiseng18"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"weiseng18"},"content":"     * Prints a message indicating that the task list was successfully saved to the file.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"weiseng18"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"weiseng18"},"content":"    static void printSavedToFile() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"weiseng18"},"content":"        sendMessage(\"Successfully saved to file.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"weiseng18"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"weiseng18":115}},{"path":"src/test/java/duke/MyTask/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiseng18"},"content":"package duke.MyTask; // same package as the class being tested","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weiseng18"},"content":"import duke.Parser.DateParser;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weiseng18"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weiseng18"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weiseng18"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weiseng18"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weiseng18"},"content":"    String name \u003d \"Deadline Task\";","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weiseng18"},"content":"    LocalDateTime date \u003d LocalDateTime.now();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weiseng18"},"content":"    Deadline d \u003d new Deadline(name, date);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weiseng18"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weiseng18"},"content":"    public void toStringTest() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weiseng18"},"content":"        String expected \u003d \"[D] [ ] \" + name + \" (by: \" + DateParser.format(date) + \")\";","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weiseng18"},"content":"        assertEquals(d.toString(), expected);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weiseng18"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weiseng18"},"content":"    public void toFileStringTest() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weiseng18"},"content":"        String expected \u003d \"D|0|\" + name + \"|\" + DateParser.formatForHardDisk(date);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weiseng18"},"content":"        assertEquals(d.toFileString(), expected);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weiseng18"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"weiseng18":27}},{"path":"src/test/java/duke/MyTask/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiseng18"},"content":"package duke.MyTask; // same package as the class being tested","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weiseng18"},"content":"import duke.Parser.DateParser;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weiseng18"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weiseng18"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weiseng18"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weiseng18"},"content":"public class EventTest {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weiseng18"},"content":"    String name \u003d \"Event Task\";","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weiseng18"},"content":"    LocalDateTime from \u003d LocalDateTime.now();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weiseng18"},"content":"    LocalDateTime to \u003d from.plusYears(1);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weiseng18"},"content":"    Event e  \u003d new Event(name, from, to);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weiseng18"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weiseng18"},"content":"    public void toStringTest() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weiseng18"},"content":"        String dateFrom \u003d DateParser.format(from);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weiseng18"},"content":"        String dateTo \u003d DateParser.format(to);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weiseng18"},"content":"        String expected \u003d \"[E] [ ] \" + name + \" (from: \" + dateFrom + \" to: \" + dateTo + \")\";","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weiseng18"},"content":"        assertEquals(e.toString(), expected);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weiseng18"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weiseng18"},"content":"    public void toFileStringTest() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weiseng18"},"content":"        String dateFrom \u003d DateParser.formatForHardDisk(from);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weiseng18"},"content":"        String dateTo \u003d DateParser.formatForHardDisk(to);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weiseng18"},"content":"        String expected \u003d \"E|0|\" + name + \"|\" + dateFrom + \"|\" + dateTo;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weiseng18"},"content":"        assertEquals(e.toFileString(), expected);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weiseng18"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"weiseng18":33}},{"path":"src/test/java/duke/MyTask/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiseng18"},"content":"package duke.MyTask; // same package as the class being tested","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weiseng18"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weiseng18"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weiseng18"},"content":"public class TodoTest {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weiseng18"},"content":"    String name \u003d \"Todo Task\";","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weiseng18"},"content":"    Todo t \u003d new Todo(name);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weiseng18"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weiseng18"},"content":"    public void toStringTest() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weiseng18"},"content":"        String expected \u003d \"[T] [ ] \" + name;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weiseng18"},"content":"        assertEquals(t.toString(), expected);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weiseng18"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weiseng18"},"content":"    public void toFileStringTest() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weiseng18"},"content":"        String expected \u003d \"T|0|\" + name;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weiseng18"},"content":"        assertEquals(t.toFileString(), expected);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weiseng18"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"weiseng18":21}},{"path":"src/test/java/duke/Parser/DateParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiseng18"},"content":"package duke.Parser; // same package as the class being tested","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weiseng18"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weiseng18"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weiseng18"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weiseng18"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weiseng18"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weiseng18"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weiseng18"},"content":"public class DateParserTest {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weiseng18"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weiseng18"},"content":"    public void parseTest() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weiseng18"},"content":"        String dateStr \u003d \"2020-08-01 2347\";","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weiseng18"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weiseng18"},"content":"        LocalDateTime expected \u003d LocalDateTime.parse(dateStr, formatter);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weiseng18"},"content":"        assertEquals(DateParser.parse(dateStr), expected);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weiseng18"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weiseng18"},"content":"    public void parseExceptionTest() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weiseng18"},"content":"        String dateStr \u003d \"abcdef\";","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weiseng18"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weiseng18"},"content":"        DateTimeParseException e \u003d assertThrows(DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weiseng18"},"content":"            LocalDateTime.parse(dateStr, formatter);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weiseng18"},"content":"        });","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weiseng18"},"content":"        String expectedMessage \u003d \"Text \u0027\" + dateStr + \"\u0027 could not be parsed at index 0\";","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weiseng18"},"content":"        assertEquals(e.getMessage(), expectedMessage);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weiseng18"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"weiseng18":35}},{"path":"src/test/java/duke/Parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiseng18"},"content":"package duke.Parser; // same package as the class being tested","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weiseng18"},"content":"import duke.MyTask.Task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weiseng18"},"content":"import duke.MyTask.Todo;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weiseng18"},"content":"import duke.MyException.EmptyDescriptionException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weiseng18"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weiseng18"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weiseng18"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weiseng18"},"content":"public class ParserTest {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weiseng18"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weiseng18"},"content":"    public void parseTodoInputTest() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weiseng18"},"content":"        String name \u003d \"Todo Task\";","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weiseng18"},"content":"        String input \u003d \"todo \" + name;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weiseng18"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weiseng18"},"content":"            Task t \u003d Parser.parseTodoInput(input);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weiseng18"},"content":"            Todo expected \u003d new Todo(name);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weiseng18"},"content":"            assertEquals(t.toString(), expected.toString());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weiseng18"},"content":"        } catch (Exception e) {}","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weiseng18"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weiseng18"},"content":"    public void parseExceptionTest() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weiseng18"},"content":"        String input \u003d \"todo\";","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weiseng18"},"content":"        EmptyDescriptionException e \u003d assertThrows(EmptyDescriptionException.class, () -\u003e {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weiseng18"},"content":"            Parser.parseTodoInput(input);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weiseng18"},"content":"        });","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weiseng18"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weiseng18"},"content":"        String expectedMessage \u003d \"     Description cannot be empty.\";","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weiseng18"},"content":"        assertEquals(e.getMessage(), expectedMessage);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weiseng18"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weiseng18"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"weiseng18":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"weiseng18"},"content":"todo borrow book","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weiseng18"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weiseng18"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weiseng18"},"content":"mark 1","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weiseng18"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weiseng18"},"content":"unmark 1","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weiseng18"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"weiseng18":7}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weiseng18"},"content":"java -classpath ../bin Panorama \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weiseng18"},"content":"#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"weiseng18":2,"-":36}}]
