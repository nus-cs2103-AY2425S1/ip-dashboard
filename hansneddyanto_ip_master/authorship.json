[{"path":"data/hana.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hansneddyanto"},"content":"D | 1 | submit Thai writing homework | Aug 30 2024","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hansneddyanto"},"content":"E | 0 | LH Family Day | Aug 31 2024 | Aug 31 2024","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"hansneddyanto":2}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansneddyanto"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hansneddyanto"},"content":"    protected String by;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hansneddyanto"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hansneddyanto"},"content":"        super(description);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hansneddyanto"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hansneddyanto"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hansneddyanto"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hansneddyanto"},"content":"    public String toString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hansneddyanto"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hansneddyanto"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hansneddyanto"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"hansneddyanto":14}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansneddyanto"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hansneddyanto"},"content":"    protected String from;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hansneddyanto"},"content":"    protected String to;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hansneddyanto"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hansneddyanto"},"content":"        super(description);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hansneddyanto"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hansneddyanto"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hansneddyanto"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hansneddyanto"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hansneddyanto"},"content":"    public String toString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hansneddyanto"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hansneddyanto"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hansneddyanto"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"hansneddyanto":16}},{"path":"src/main/java/Hana.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansneddyanto"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hansneddyanto"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hansneddyanto"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hansneddyanto"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hansneddyanto"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hansneddyanto"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hansneddyanto"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hansneddyanto"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hansneddyanto"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hansneddyanto"},"content":"public class Hana {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hansneddyanto"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hansneddyanto"},"content":"        String line \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hansneddyanto"},"content":"        String greeting \u003d \"\"\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hansneddyanto"},"content":"                Hello I\u0027m Hana","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hansneddyanto"},"content":"                What can I do for you?","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hansneddyanto"},"content":"            \"\"\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hansneddyanto"},"content":"        String closing \u003d \"    Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hansneddyanto"},"content":"        Scanner scanner \u003d new Scanner(System.in);  // Create a Scanner object","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hansneddyanto"},"content":"        ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hansneddyanto"},"content":"        Storage storage \u003d new Storage(\"./data/hana.txt\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hansneddyanto"},"content":"        // Load data from hana.txt","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hansneddyanto"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hansneddyanto"},"content":"            tasks \u003d new ArrayList\u003c\u003e(storage.load());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hansneddyanto"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hansneddyanto"},"content":"            System.out.println(\"Failed to load tasks: \" + e.getMessage());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hansneddyanto"},"content":"            tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hansneddyanto"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hansneddyanto"},"content":"        // Regular expressions for mark and unmark commands","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hansneddyanto"},"content":"        Pattern markPattern \u003d Pattern.compile(\"^mark (\\\\d+)$\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hansneddyanto"},"content":"        Pattern unmarkPattern \u003d Pattern.compile(\"^unmark (\\\\d+)$\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hansneddyanto"},"content":"        System.out.println(line + greeting + line);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hansneddyanto"},"content":"        String input \u003d scanner.nextLine();  // Read user input","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hansneddyanto"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hansneddyanto"},"content":"            // Check for mark/unmark in input","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hansneddyanto"},"content":"            Matcher markMatcher \u003d markPattern.matcher(input);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hansneddyanto"},"content":"            Matcher unmarkMatcher \u003d unmarkPattern.matcher(input);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hansneddyanto"},"content":"            try {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hansneddyanto"},"content":"                if (input.equals(\"list\")) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hansneddyanto"},"content":"                    System.out.println(line);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hansneddyanto"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hansneddyanto"},"content":"                        System.out.println(\"    \" + (i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hansneddyanto"},"content":"                    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hansneddyanto"},"content":"                    System.out.println(line);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hansneddyanto"},"content":"                } else if (markMatcher.matches()) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hansneddyanto"},"content":"                    // taskNumber is index already","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hansneddyanto"},"content":"                    int taskNumber \u003d Integer.parseInt(markMatcher.group(1)) - 1;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hansneddyanto"},"content":"                    if (taskNumber \u003e\u003d 0 \u0026\u0026 taskNumber \u003c tasks.size()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hansneddyanto"},"content":"                        tasks.get(taskNumber).markAsDone();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hansneddyanto"},"content":"                        System.out.println(line + \"    Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hansneddyanto"},"content":"                        System.out.println(\"    \" + tasks.get(taskNumber) + \"\\n\" + line);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hansneddyanto"},"content":"                    } else {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hansneddyanto"},"content":"                        System.out.println(line + \"    Task number out of range.\\n\" + line);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hansneddyanto"},"content":"                    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hansneddyanto"},"content":"                } else if (unmarkMatcher.matches()) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hansneddyanto"},"content":"                    // taskNumber is index already","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hansneddyanto"},"content":"                    int taskNumber \u003d Integer.parseInt(unmarkMatcher.group(1)) - 1;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hansneddyanto"},"content":"                    if (taskNumber \u003e\u003d 0 \u0026\u0026 taskNumber \u003c tasks.size()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hansneddyanto"},"content":"                        tasks.get(taskNumber).markAsUndone();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hansneddyanto"},"content":"                        System.out.println(line + \"    OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hansneddyanto"},"content":"                        System.out.println(\"    \" + tasks.get(taskNumber) + \"\\n\" + line);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hansneddyanto"},"content":"                    } else {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hansneddyanto"},"content":"                        System.out.println(line + \"    Task number out of range.\\n\" + line);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hansneddyanto"},"content":"                    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hansneddyanto"},"content":"                } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hansneddyanto"},"content":"                    if (input.trim().equals(\"todo\")) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hansneddyanto"},"content":"                        throw new HanaException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hansneddyanto"},"content":"                    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hansneddyanto"},"content":"                    String description \u003d input.substring(5);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hansneddyanto"},"content":"                    tasks.add(new ToDo(description));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hansneddyanto"},"content":"                    System.out.println(line + \"    Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hansneddyanto"},"content":"                            \"       \" + tasks.get(tasks.size() - 1) + \"\\n\" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hansneddyanto"},"content":"                            \"    Now you have \" + tasks.size() + \" tasks in the list.\\n\" + line);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hansneddyanto"},"content":"                } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hansneddyanto"},"content":"                    if (input.trim().equals(\"deadline\") || input.startsWith(\"deadline /by\")) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"hansneddyanto"},"content":"                        throw new HanaException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"hansneddyanto"},"content":"                    } else if (!input.contains(\" /by \")) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"hansneddyanto"},"content":"                        throw new HanaException(\"OOPS!!! Please add deadline date/time by adding /by\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hansneddyanto"},"content":"                    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"hansneddyanto"},"content":"                    String[] parts \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hansneddyanto"},"content":"                    // Check date input","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"hansneddyanto"},"content":"                    try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"hansneddyanto"},"content":"                        LocalDate d1 \u003d LocalDate.parse(parts[1]);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"hansneddyanto"},"content":"                        parts[1] \u003d d1.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"hansneddyanto"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"hansneddyanto"},"content":"                        throw new HanaException(\"OOPS!!! The date format is incorrect. Please use the format YYYY-MM-DD.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"hansneddyanto"},"content":"                    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"hansneddyanto"},"content":"                    tasks.add(new Deadline(parts[0], parts[1]));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"hansneddyanto"},"content":"                    System.out.println(line + \"    Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"hansneddyanto"},"content":"                            \"       \" + tasks.get(tasks.size() - 1) + \"\\n\" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"hansneddyanto"},"content":"                            \"    Now you have \" + tasks.size() + \" tasks in the list.\\n\" + line);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"hansneddyanto"},"content":"                } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"hansneddyanto"},"content":"                    if (input.trim().equals(\"event\")  || input.startsWith(\"event /from\")) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"hansneddyanto"},"content":"                        throw new HanaException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"hansneddyanto"},"content":"                    } else if (!input.contains(\" /from \") || !input.contains(\" /to \")) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"hansneddyanto"},"content":"                        throw new HanaException(\"OOPS!!! Please add event time by adding /from and /to\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"hansneddyanto"},"content":"                    } else if (input.indexOf(\" /to \") \u003c input.indexOf(\" /from \")) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"hansneddyanto"},"content":"                        throw new HanaException(\"OOPS!!! Please add /from before /to\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"hansneddyanto"},"content":"                    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"hansneddyanto"},"content":"                    String[] parts \u003d input.substring(6).split(\" /from | /to \");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"hansneddyanto"},"content":"                    // Check date input","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"hansneddyanto"},"content":"                    try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"hansneddyanto"},"content":"                        LocalDate d1 \u003d LocalDate.parse(parts[1]);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"hansneddyanto"},"content":"                        LocalDate d2 \u003d LocalDate.parse(parts[2]);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"hansneddyanto"},"content":"                        parts[1] \u003d d1.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"hansneddyanto"},"content":"                        parts[2] \u003d d2.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"hansneddyanto"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"hansneddyanto"},"content":"                        throw new HanaException(\"OOPS!!! The date format is incorrect. \\nPlease use the format YYYY-MM-DD.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"hansneddyanto"},"content":"                    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"hansneddyanto"},"content":"                    tasks.add(new Event(parts[0], parts[1], parts[2]));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"hansneddyanto"},"content":"                    System.out.println(line + \"    Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"hansneddyanto"},"content":"                            \"       \" + tasks.get(tasks.size() - 1) + \"\\n\" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"hansneddyanto"},"content":"                            \"    Now you have \" + tasks.size() + \" tasks in the list.\\n\" + line);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"hansneddyanto"},"content":"                } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"hansneddyanto"},"content":"                    int taskNumber \u003d Integer.parseInt(input.substring(7).trim()) - 1;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"hansneddyanto"},"content":"                    if (taskNumber \u003c 0 || taskNumber \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"hansneddyanto"},"content":"                        throw new HanaException(\"OOPS!!! Task number out of range.\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"hansneddyanto"},"content":"                    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"hansneddyanto"},"content":"                    Task removedTask \u003d tasks.remove(taskNumber);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"hansneddyanto"},"content":"                    System.out.println(line + \"    Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"hansneddyanto"},"content":"                            \"       \" + removedTask + \"\\n\" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"hansneddyanto"},"content":"                            \"    Now you have \" + tasks.size() + \" tasks in the list.\\n\" + line);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"hansneddyanto"},"content":"                } else {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"hansneddyanto"},"content":"                    throw new HanaException(\"I\u0027m sorry, I don\u0027t understand that command.\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"hansneddyanto"},"content":"                }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"hansneddyanto"},"content":"            } catch (HanaException e) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"hansneddyanto"},"content":"                System.out.println(line + \"    \" + e.getMessage() + \"\\n\" + line);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"hansneddyanto"},"content":"            }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"hansneddyanto"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"hansneddyanto"},"content":"        }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"hansneddyanto"},"content":"        // Save the arraylist tasks into Storage","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"hansneddyanto"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"hansneddyanto"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"hansneddyanto"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"hansneddyanto"},"content":"            System.out.println(\"Failed to save tasks: \" + e.getMessage());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"hansneddyanto"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"hansneddyanto"},"content":"        System.out.println(line + closing + line);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"hansneddyanto"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"hansneddyanto"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"hansneddyanto":145}},{"path":"src/main/java/HanaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansneddyanto"},"content":"public class HanaException extends Exception {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hansneddyanto"},"content":"    public HanaException(String message) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hansneddyanto"},"content":"        super(message);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hansneddyanto"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hansneddyanto"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"hansneddyanto":5}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansneddyanto"},"content":"import java.io.File;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hansneddyanto"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hansneddyanto"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hansneddyanto"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hansneddyanto"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hansneddyanto"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hansneddyanto"},"content":"import java.util.List;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hansneddyanto"},"content":"public class Storage {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hansneddyanto"},"content":"    private String filePath;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hansneddyanto"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hansneddyanto"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hansneddyanto"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hansneddyanto"},"content":"    public List\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hansneddyanto"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hansneddyanto"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hansneddyanto"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hansneddyanto"},"content":"            file.getParentFile().mkdirs(); // Create directory if it doesn\u0027t exist","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hansneddyanto"},"content":"            file.createNewFile(); // Create file if it doesn\u0027t exist","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hansneddyanto"},"content":"        } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hansneddyanto"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(Paths.get(filePath));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hansneddyanto"},"content":"            for (String line : lines) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hansneddyanto"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hansneddyanto"},"content":"                switch (parts[0]) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hansneddyanto"},"content":"                case \"T\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hansneddyanto"},"content":"                    ToDo todo \u003d new ToDo(parts[2]);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hansneddyanto"},"content":"                    if (parts[1].equals(\"1\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hansneddyanto"},"content":"                        todo.markAsDone();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hansneddyanto"},"content":"                    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hansneddyanto"},"content":"                    tasks.add(todo);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hansneddyanto"},"content":"                    break;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hansneddyanto"},"content":"                case \"D\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hansneddyanto"},"content":"                    Deadline deadline \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hansneddyanto"},"content":"                    if (parts[1].equals(\"1\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hansneddyanto"},"content":"                        deadline.markAsDone();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hansneddyanto"},"content":"                    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hansneddyanto"},"content":"                    tasks.add(deadline);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hansneddyanto"},"content":"                    break;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hansneddyanto"},"content":"                case \"E\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hansneddyanto"},"content":"                    Event event \u003d new Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hansneddyanto"},"content":"                    if (parts[1].equals(\"1\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hansneddyanto"},"content":"                        event.markAsDone();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hansneddyanto"},"content":"                    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hansneddyanto"},"content":"                    tasks.add(event);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hansneddyanto"},"content":"                    break;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hansneddyanto"},"content":"                }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hansneddyanto"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hansneddyanto"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hansneddyanto"},"content":"        return tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hansneddyanto"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hansneddyanto"},"content":"    public void save(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hansneddyanto"},"content":"        FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hansneddyanto"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hansneddyanto"},"content":"            writer.write(taskToString(task) + System.lineSeparator());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hansneddyanto"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hansneddyanto"},"content":"        writer.close();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hansneddyanto"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hansneddyanto"},"content":"    private String taskToString(Task task) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hansneddyanto"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hansneddyanto"},"content":"            return \"T | \" + (task.isDone ? \"1\" : \"0\") + \" | \" + task.description;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hansneddyanto"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hansneddyanto"},"content":"            Deadline d \u003d (Deadline) task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hansneddyanto"},"content":"            return \"D | \" + (task.isDone ? \"1\" : \"0\") + \" | \" + d.description + \" | \" + d.by;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hansneddyanto"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hansneddyanto"},"content":"            Event e \u003d (Event) task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hansneddyanto"},"content":"            return \"E | \" + (task.isDone ? \"1\" : \"0\") + \" | \" + e.description + \" | \" + e.from + \" | \" + e.to;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hansneddyanto"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hansneddyanto"},"content":"        return \"\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hansneddyanto"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hansneddyanto"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"hansneddyanto":78}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansneddyanto"},"content":"public class Task {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hansneddyanto"},"content":"    protected String description;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hansneddyanto"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hansneddyanto"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hansneddyanto"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hansneddyanto"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hansneddyanto"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hansneddyanto"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hansneddyanto"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hansneddyanto"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hansneddyanto"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hansneddyanto"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hansneddyanto"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hansneddyanto"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hansneddyanto"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hansneddyanto"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hansneddyanto"},"content":"    public String toString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hansneddyanto"},"content":"        return \"[\" + getStatusIcon() + \"]\" + \" \" + description;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hansneddyanto"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hansneddyanto"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"hansneddyanto":25}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansneddyanto"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hansneddyanto"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hansneddyanto"},"content":"        super(description);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hansneddyanto"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hansneddyanto"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hansneddyanto"},"content":"    public String toString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hansneddyanto"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hansneddyanto"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hansneddyanto"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"hansneddyanto":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hansneddyanto"},"content":"todo read book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hansneddyanto"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hansneddyanto"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hansneddyanto"},"content":"todo join sports club","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hansneddyanto"},"content":"todo borrow book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hansneddyanto"},"content":"mark 1","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hansneddyanto"},"content":"mark 3","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hansneddyanto"},"content":"unmark 3","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hansneddyanto"},"content":"mark 4","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hansneddyanto"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hansneddyanto"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hansneddyanto"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hansneddyanto"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hansneddyanto"},"content":"byeee","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hansneddyanto"},"content":"bye","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"hansneddyanto":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hansneddyanto"},"content":"java -classpath ..\\bin Hana \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hansneddyanto"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hansneddyanto"},"content":"REM Display a message if the test passes or fails","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hansneddyanto"},"content":"if %errorlevel% neq 0 (","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hansneddyanto"},"content":"    echo TEST FAILED","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hansneddyanto"},"content":") else (","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hansneddyanto"},"content":"    echo TEST PASSED","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hansneddyanto"},"content":")","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"hansneddyanto":8,"-":20}}]
