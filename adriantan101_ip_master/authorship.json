[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adriantan101"},"content":"    mainClass.set(\"myapp.core.Ruby\")","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adriantan101"},"content":"    archiveBaseName \u003d \"ruby\"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":39,"adriantan101":2}},{"path":"data/ruby.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"adriantan101"},"content":"T | 1 | return book","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adriantan101"},"content":"T | 1 | wash dishes","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adriantan101"},"content":"D | 0 | submit assignment | 2024-08-31 2359","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"adriantan101":3}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"adriantan101"},"content":"T | 1 | read book","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adriantan101"},"content":"D | 0 | project | 2024-09-30 2359","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adriantan101"},"content":"E | 0 | meeting conference | 2024-09-23 2359 | 2025-01-23 2359","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"adriantan101":3}},{"path":"src/main/java/myapp/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adriantan101"},"content":"package myapp.command;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adriantan101"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adriantan101"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adriantan101"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adriantan101"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adriantan101"},"content":"import myapp.storage.Storage;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adriantan101"},"content":"import myapp.task.*;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adriantan101"},"content":"import myapp.ui.Ui;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adriantan101"},"content":"import myapp.exception.RubyException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adriantan101"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adriantan101"},"content":" * The {@code Parser} class is responsible for parsing user input commands","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adriantan101"},"content":" * and executing the appropriate actions based on the command keyword.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adriantan101"},"content":" * It interacts with the {@code TaskList}, {@code Storage}, and {@code Ui} classes","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adriantan101"},"content":" * to perform various operations on tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adriantan101"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adriantan101"},"content":"public class Parser {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adriantan101"},"content":"    private static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adriantan101"},"content":"     * Parses the given command and executes the appropriate action.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adriantan101"},"content":"     * @param command  The user input command.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adriantan101"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adriantan101"},"content":"     * @param ui       The user interface to display messages.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adriantan101"},"content":"     * @param storage  The storage object to save and load tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adriantan101"},"content":"     * @return A string response based on the command executed.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adriantan101"},"content":"     * @throws RubyException If the command is invalid or any error occurs.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adriantan101"},"content":"     * @throws IOException   If an I/O error occurs while saving tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adriantan101"},"content":"    public String parse(String command, TaskList taskList, Ui ui, Storage storage) throws RubyException, IOException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adriantan101"},"content":"        String[] words \u003d command.split(\" \", 2);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adriantan101"},"content":"        String keyword \u003d words[0];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adriantan101"},"content":"        return switch (keyword) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adriantan101"},"content":"            case \"bye\" -\u003e \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adriantan101"},"content":"            case \"list\" -\u003e taskList.listTasks();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adriantan101"},"content":"            case \"mark\" -\u003e handleMark(taskList, storage, words);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adriantan101"},"content":"            case \"unmark\" -\u003e handleUnmark(taskList, storage, words);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adriantan101"},"content":"            case \"todo\" -\u003e handleTodo(taskList, storage, words);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adriantan101"},"content":"            case \"deadline\" -\u003e handleDeadline(taskList, storage, words);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adriantan101"},"content":"            case \"event\" -\u003e handleEvent(taskList, storage, words);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adriantan101"},"content":"            case \"delete\" -\u003e handleDelete(taskList, storage, words);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adriantan101"},"content":"            case \"find\" -\u003e handleFind(taskList, words);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adriantan101"},"content":"            default -\u003e throw new RubyException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adriantan101"},"content":"        };","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adriantan101"},"content":"     * Handles the \"mark\" command to mark a task as done.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adriantan101"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adriantan101"},"content":"     * @param storage  The storage object to save the updated tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adriantan101"},"content":"     * @param words    The command split into words.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adriantan101"},"content":"     * @return A string response indicating the task is marked as done.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adriantan101"},"content":"     * @throws RubyException If the task number is not specified or invalid.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adriantan101"},"content":"     * @throws IOException   If an I/O error occurs while saving tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adriantan101"},"content":"    private String handleMark(TaskList taskList, Storage storage, String[] words) throws RubyException, IOException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adriantan101"},"content":"        if (words.length \u003c 2) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adriantan101"},"content":"            throw new RubyException(\"Please specify the task number to mark.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adriantan101"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adriantan101"},"content":"        int markIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adriantan101"},"content":"        taskList.getTask(markIndex).markAsDone();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adriantan101"},"content":"        storage.save(taskList.getTasks());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adriantan101"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n     \" + taskList.getTask(markIndex);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adriantan101"},"content":"     * Handles the \"unmark\" command to mark a task as not done.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adriantan101"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adriantan101"},"content":"     * @param storage  The storage object to save the updated tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adriantan101"},"content":"     * @param words    The command split into words.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adriantan101"},"content":"     * @return A string response indicating the task is marked as not done.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adriantan101"},"content":"     * @throws RubyException If the task number is not specified or invalid.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adriantan101"},"content":"     * @throws IOException   If an I/O error occurs while saving tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"adriantan101"},"content":"    private String handleUnmark(TaskList taskList, Storage storage, String[] words) throws RubyException, IOException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"adriantan101"},"content":"        if (words.length \u003c 2) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"adriantan101"},"content":"            throw new RubyException(\"Please specify the task number to unmark.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"adriantan101"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"adriantan101"},"content":"        int unmarkIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"adriantan101"},"content":"        taskList.getTask(unmarkIndex).markAsNotDone();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"adriantan101"},"content":"        storage.save(taskList.getTasks());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"adriantan101"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n     \" + taskList.getTask(unmarkIndex);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"adriantan101"},"content":"     * Handles the \"todo\" command to add a new todo task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"adriantan101"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"adriantan101"},"content":"     * @param storage  The storage object to save the updated tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"adriantan101"},"content":"     * @param words    The command split into words.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"adriantan101"},"content":"     * @return A string response indicating the todo task is added.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"adriantan101"},"content":"     * @throws RubyException If the description of the todo is empty.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"adriantan101"},"content":"     * @throws IOException   If an I/O error occurs while saving tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"adriantan101"},"content":"    private String handleTodo(TaskList taskList, Storage storage, String[] words) throws RubyException, IOException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"adriantan101"},"content":"        if (words.length \u003c 2 || words[1].trim().isEmpty()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"adriantan101"},"content":"            throw new RubyException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"adriantan101"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"adriantan101"},"content":"        Task todo \u003d new Todo(words[1].trim());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"adriantan101"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"adriantan101"},"content":"        storage.save(taskList.getTasks());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"adriantan101"},"content":"        return \"Got it. I\u0027ve added this task:\\n     \" + todo + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"adriantan101"},"content":"     * Handles the \"deadline\" command to add a new deadline task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"adriantan101"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"adriantan101"},"content":"     * @param storage  The storage object to save the updated tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"adriantan101"},"content":"     * @param words    The command split into words.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"adriantan101"},"content":"     * @return A string response indicating the deadline task is added.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"adriantan101"},"content":"     * @throws RubyException If the description or date/time of the deadline is invalid.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"adriantan101"},"content":"    private String handleDeadline(TaskList taskList, Storage storage, String[] words) throws RubyException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"adriantan101"},"content":"        if (words.length \u003c 2 || words[1].trim().isEmpty()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"adriantan101"},"content":"            throw new RubyException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"adriantan101"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"adriantan101"},"content":"        String[] deadlineParts \u003d words[1].split(\" /by \");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"adriantan101"},"content":"        if (deadlineParts.length \u003c 2) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"adriantan101"},"content":"            throw new RubyException(\"OOPS!!! The description of a deadline must include a date/time.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"adriantan101"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"adriantan101"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"adriantan101"},"content":"            LocalDateTime deadlineDate \u003d LocalDateTime.parse(deadlineParts[1].trim(), DATE_FORMAT);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"adriantan101"},"content":"            Task deadline \u003d new Deadline(deadlineParts[0].trim(), deadlineDate);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"adriantan101"},"content":"            taskList.addTask(deadline);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"adriantan101"},"content":"            storage.save(taskList.getTasks());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"adriantan101"},"content":"            return \"Got it. I\u0027ve added this task:\\n     \" + deadline + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"adriantan101"},"content":"        } catch (DateTimeParseException | IOException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"adriantan101"},"content":"            throw new RubyException(\"OOPS!!! The date/time format should be \u0027yyyy-MM-dd HH:mm\u0027.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"adriantan101"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"adriantan101"},"content":"     * Handles the \"event\" command to add a new event task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"adriantan101"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"adriantan101"},"content":"     * @param storage  The storage object to save the updated tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"adriantan101"},"content":"     * @param words    The command split into words.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"adriantan101"},"content":"     * @return A string response indicating the event task is added.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"adriantan101"},"content":"     * @throws RubyException If the description, start time, or end time of the event is invalid.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"adriantan101"},"content":"    private String handleEvent(TaskList taskList, Storage storage, String[] words) throws RubyException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"adriantan101"},"content":"        if (words.length \u003c 2 || words[1].trim().isEmpty()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"adriantan101"},"content":"            throw new RubyException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"adriantan101"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"adriantan101"},"content":"        String[] eventParts \u003d words[1].split(\" /from \");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"adriantan101"},"content":"        if (eventParts.length \u003c 2 || !eventParts[1].contains(\" /to \")) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"adriantan101"},"content":"            throw new RubyException(\"OOPS!!! The description of an event must include start and end times.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"adriantan101"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"adriantan101"},"content":"        String[] times \u003d eventParts[1].split(\" /to \");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"adriantan101"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"adriantan101"},"content":"            LocalDateTime startTime \u003d LocalDateTime.parse(times[0].trim(), DATE_FORMAT);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"adriantan101"},"content":"            LocalDateTime endTime \u003d LocalDateTime.parse(times[1].trim(), DATE_FORMAT);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"adriantan101"},"content":"            Task event \u003d new Event(eventParts[0].trim(), startTime, endTime);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"adriantan101"},"content":"            taskList.addTask(event);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"adriantan101"},"content":"            storage.save(taskList.getTasks());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"adriantan101"},"content":"            return \"Got it. I\u0027ve added this task:\\n     \" + event + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"adriantan101"},"content":"        } catch (DateTimeParseException | IOException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"adriantan101"},"content":"            throw new RubyException(\"OOPS!!! The date/time format should be \u0027yyyy-MM-dd HH:mm\u0027.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"adriantan101"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"adriantan101"},"content":"     * Handles the \"delete\" command to remove a task from the list.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"adriantan101"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"adriantan101"},"content":"     * @param storage  The storage object to save the updated tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"adriantan101"},"content":"     * @param words    The command split into words.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"adriantan101"},"content":"     * @return A string response indicating the task is deleted.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"adriantan101"},"content":"     * @throws RubyException If the task number is not specified or invalid.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"adriantan101"},"content":"     * @throws IOException   If an I/O error occurs while saving tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"adriantan101"},"content":"    private String handleDelete(TaskList taskList, Storage storage, String[] words) throws RubyException, IOException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"adriantan101"},"content":"        if (words.length \u003c 2) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"adriantan101"},"content":"            throw new RubyException(\"Please specify the task number to delete.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"adriantan101"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"adriantan101"},"content":"        int deleteIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"adriantan101"},"content":"        Task deletedTask \u003d taskList.getTask(deleteIndex);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"adriantan101"},"content":"        taskList.removeTask(deleteIndex);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"adriantan101"},"content":"        storage.save(taskList.getTasks());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"adriantan101"},"content":"        return \"Noted. I\u0027ve removed this task:\\n     \" + deletedTask + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"adriantan101"},"content":"     * Handles the \u0027find\u0027 command by searching for tasks that contain the specified keyword in their description.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"adriantan101"},"content":"     * @param taskList The list of tasks to search within.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"adriantan101"},"content":"     * @param words The keywords to search for in task descriptions.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"adriantan101"},"content":"     * @return A string containing the matching tasks found in the task list.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"adriantan101"},"content":"    private String handleFind(TaskList taskList, String[] words) throws RubyException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"adriantan101"},"content":"        if (words.length \u003c 2) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"adriantan101"},"content":"            throw new RubyException(\"Please specify a keyword to find tasks.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"adriantan101"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"adriantan101"},"content":"        String keyword \u003d words[1];","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"adriantan101"},"content":"        return taskList.findTasks(keyword);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"adriantan101"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"adriantan101"},"content":"     * @param command The user input command.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"adriantan101"},"content":"     * @return {@code true} if the command is \"bye\", otherwise {@code false}.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"adriantan101"},"content":"    public boolean isExit(String command) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"adriantan101"},"content":"        return command.equals(\"bye\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"adriantan101"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"adriantan101":233}},{"path":"src/main/java/myapp/core/Ruby.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adriantan101"},"content":"package myapp.core;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adriantan101"},"content":"import myapp.command.Parser;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adriantan101"},"content":"import myapp.exception.RubyException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adriantan101"},"content":"import myapp.storage.Storage;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adriantan101"},"content":"import myapp.task.Task;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adriantan101"},"content":"import myapp.task.TaskList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adriantan101"},"content":"import myapp.ui.Ui;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adriantan101"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adriantan101"},"content":"import java.util.List;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adriantan101"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adriantan101"},"content":" * The {@code Ruby} class represents the core of the Ruby chatbot application.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adriantan101"},"content":" * It initializes the user interface, storage, parser, and task list.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adriantan101"},"content":" * The class provides methods to run the application, process user commands,","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adriantan101"},"content":" * and interact with the task list.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adriantan101"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adriantan101"},"content":"public class Ruby {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adriantan101"},"content":"    private final Storage storage;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adriantan101"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adriantan101"},"content":"    private final Ui ui;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adriantan101"},"content":"    private final Parser parser;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adriantan101"},"content":"     * Constructs a new {@code Ruby} instance with the specified file path for storage.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adriantan101"},"content":"     * Initializes the UI, storage, and parser components. Loads tasks from the storage","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adriantan101"},"content":"     * into the task list. If an error occurs during loading, initializes an empty task list.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adriantan101"},"content":"     * @param filePath The file path where tasks are stored.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adriantan101"},"content":"    public Ruby(String filePath) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adriantan101"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adriantan101"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adriantan101"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adriantan101"},"content":"        try {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adriantan101"},"content":"            List\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adriantan101"},"content":"            taskList \u003d new TaskList(tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adriantan101"},"content":"        } catch (IOException | RubyException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adriantan101"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adriantan101"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adriantan101"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adriantan101"},"content":"     * Runs the Ruby chatbot application. Displays the welcome message,","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adriantan101"},"content":"     * then enters a loop to read and execute user commands until an exit command is received.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adriantan101"},"content":"     * Catches and displays errors encountered during command processing.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adriantan101"},"content":"    public void run() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adriantan101"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adriantan101"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adriantan101"},"content":"        while (!isExit) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adriantan101"},"content":"            try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adriantan101"},"content":"                String command \u003d ui.readCommand();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adriantan101"},"content":"                String response \u003d parser.parse(command, taskList, ui, storage);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adriantan101"},"content":"                ui.showResponse(response);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adriantan101"},"content":"                isExit \u003d parser.isExit(command);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adriantan101"},"content":"            } catch (RubyException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adriantan101"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adriantan101"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adriantan101"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adriantan101"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adriantan101"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adriantan101"},"content":"     * The main method to launch the Ruby chatbot application.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adriantan101"},"content":"     * Creates a new instance of {@code Ruby} with the specified file path for tasks","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adriantan101"},"content":"     * and calls the {@code run} method to start the application.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adriantan101"},"content":"     * @param args Command-line arguments (not used in this application).","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adriantan101"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adriantan101"},"content":"        new Ruby(\"data/tasks.txt\").run();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adriantan101"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"adriantan101":78}},{"path":"src/main/java/myapp/exception/RubyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adriantan101"},"content":"package myapp.exception;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adriantan101"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adriantan101"},"content":" * The {@code RubyException} class represents custom exceptions specific to the Ruby chatbot application.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adriantan101"},"content":" * This class extends the {@code Exception} class to provide custom error handling within the application.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adriantan101"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adriantan101"},"content":"public class RubyException extends Exception {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adriantan101"},"content":"     * Constructs a new {@code RubyException} with the specified detail message.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adriantan101"},"content":"     * The message provides information about the nature of the exception.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adriantan101"},"content":"     * @param message The detail message that describes the error.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adriantan101"},"content":"    public RubyException(String message) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adriantan101"},"content":"        super(message);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adriantan101"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"adriantan101":19}},{"path":"src/main/java/myapp/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adriantan101"},"content":"package myapp.storage;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adriantan101"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adriantan101"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adriantan101"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adriantan101"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adriantan101"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adriantan101"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adriantan101"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adriantan101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adriantan101"},"content":"import java.util.List;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adriantan101"},"content":"import myapp.task.*;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adriantan101"},"content":"import myapp.exception.RubyException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adriantan101"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adriantan101"},"content":" * The {@code Storage} class handles reading from and writing to a file that stores tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adriantan101"},"content":" * It allows tasks to be loaded into the application at startup and saved back to the file on updates.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adriantan101"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adriantan101"},"content":"public class Storage {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adriantan101"},"content":"    private final String filePath;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adriantan101"},"content":"     * Constructs a {@code Storage} object with the specified file path.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adriantan101"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adriantan101"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adriantan101"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adriantan101"},"content":"     * Loads tasks from the file specified by the file path.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adriantan101"},"content":"     * If the file does not exist, an empty list of tasks is returned.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adriantan101"},"content":"     * @return A list of tasks read from the file.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adriantan101"},"content":"     * @throws IOException    If an I/O error occurs while reading from the file.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adriantan101"},"content":"     * @throws RubyException  If the file contains an invalid task type or format.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adriantan101"},"content":"    public List\u003cTask\u003e load() throws IOException, RubyException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adriantan101"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adriantan101"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adriantan101"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adriantan101"},"content":"            return tasks;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adriantan101"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adriantan101"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adriantan101"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adriantan101"},"content":"        for (String line : lines) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adriantan101"},"content":"            String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adriantan101"},"content":"            Task task;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adriantan101"},"content":"            switch (parts[0]) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adriantan101"},"content":"            case \"T\":","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adriantan101"},"content":"                task \u003d new Todo(parts[2]);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adriantan101"},"content":"                break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adriantan101"},"content":"            case \"D\":","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adriantan101"},"content":"                LocalDateTime by \u003d LocalDateTime.parse(parts[3], formatter);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adriantan101"},"content":"                task \u003d new Deadline(parts[2], by);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adriantan101"},"content":"                break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adriantan101"},"content":"            case \"E\":","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adriantan101"},"content":"                LocalDateTime from \u003d LocalDateTime.parse(parts[3], formatter);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adriantan101"},"content":"                LocalDateTime to \u003d LocalDateTime.parse(parts[4], formatter);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adriantan101"},"content":"                task \u003d new Event(parts[2], from, to);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adriantan101"},"content":"                break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adriantan101"},"content":"            default:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adriantan101"},"content":"                throw new RubyException(\"Invalid task type.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adriantan101"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adriantan101"},"content":"            if (parts[1].equals(\"1\")) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adriantan101"},"content":"                task.markAsDone();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adriantan101"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adriantan101"},"content":"            tasks.add(task);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adriantan101"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adriantan101"},"content":"        return tasks;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adriantan101"},"content":"     * Saves the provided list of tasks to the file specified by the file path.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adriantan101"},"content":"     * Overwrites the contents of the file with the current list of tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adriantan101"},"content":"     * @param tasks The list of tasks to be saved to the file.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adriantan101"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adriantan101"},"content":"    public void save(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"adriantan101"},"content":"        FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adriantan101"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"adriantan101"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"adriantan101"},"content":"            String taskType \u003d task instanceof Todo ? \"T\" : task instanceof Deadline ? \"D\" : \"E\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"adriantan101"},"content":"            String dateTimeInfo \u003d \"\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"adriantan101"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"adriantan101"},"content":"                dateTimeInfo \u003d ((Deadline) task).getBy().format(formatter);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"adriantan101"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"adriantan101"},"content":"                dateTimeInfo \u003d ((Event) task).getFrom().format(formatter) + \" | \" +","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"adriantan101"},"content":"                        ((Event) task).getTo().format(formatter);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"adriantan101"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"adriantan101"},"content":"            writer.write(taskType + \" | \" + (task.isDone() ? \"1\" : \"0\") + \" | \" + task.getDescription() +","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"adriantan101"},"content":"                    (taskType.equals(\"T\") ? \"\" : \" | \" + dateTimeInfo) + \"\\n\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"adriantan101"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"adriantan101"},"content":"        writer.close();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"adriantan101"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"adriantan101":99}},{"path":"src/main/java/myapp/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adriantan101"},"content":"package myapp.task;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adriantan101"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adriantan101"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adriantan101"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adriantan101"},"content":" * The {@code Deadline} class represents a task that has a deadline.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adriantan101"},"content":" * It extends the {@code Task} class and includes additional information","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adriantan101"},"content":" * about the date and time by which the task must be completed.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adriantan101"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adriantan101"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adriantan101"},"content":"    private LocalDateTime by;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adriantan101"},"content":"     * Constructs a new {@code Deadline} task with the specified description","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adriantan101"},"content":"     * and deadline date and time.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adriantan101"},"content":"     * @param description A {@code String} describing the task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adriantan101"},"content":"     * @param by          A {@code LocalDateTime} object representing the deadline.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adriantan101"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adriantan101"},"content":"        super(description);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adriantan101"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adriantan101"},"content":"     * Returns the deadline date and time for this task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adriantan101"},"content":"     * @return A {@code LocalDateTime} object representing the deadline.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adriantan101"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adriantan101"},"content":"        return this.by;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adriantan101"},"content":"     * Returns a {@code String} representation of the deadline task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adriantan101"},"content":"     * The string includes the type of task, description, and formatted deadline.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adriantan101"},"content":"     * If the deadline is invalid, it shows \"Invalid Date\".","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adriantan101"},"content":"     * @return A {@code String} representation of this deadline task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adriantan101"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adriantan101"},"content":"    public String toString() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adriantan101"},"content":"        if (this.by \u003d\u003d null) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adriantan101"},"content":"            return \"[D]\" + super.toString() + \" (by: Invalid Date)\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adriantan101"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adriantan101"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\")) + \")\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adriantan101"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"adriantan101":49}},{"path":"src/main/java/myapp/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adriantan101"},"content":"package myapp.task;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adriantan101"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adriantan101"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adriantan101"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adriantan101"},"content":" * The {@code Event} class represents a task that occurs during a specific time period.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adriantan101"},"content":" * It extends the {@code Task} class and includes additional information about","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adriantan101"},"content":" * the start and end times of the event.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adriantan101"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adriantan101"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adriantan101"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adriantan101"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adriantan101"},"content":"     * Constructs a new {@code Event} task with the specified description,","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adriantan101"},"content":"     * start time, and end time.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adriantan101"},"content":"     * @param description A {@code String} describing the event.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adriantan101"},"content":"     * @param from        A {@code LocalDateTime} object representing the start time of the event.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adriantan101"},"content":"     * @param to          A {@code LocalDateTime} object representing the end time of the event.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adriantan101"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adriantan101"},"content":"        super(description);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adriantan101"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adriantan101"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adriantan101"},"content":"     * Returns the start time of the event.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adriantan101"},"content":"     * @return A {@code LocalDateTime} object representing the start time.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adriantan101"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adriantan101"},"content":"        return this.from;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adriantan101"},"content":"     * Returns the end time of the event.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adriantan101"},"content":"     * @return A {@code LocalDateTime} object representing the end time.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adriantan101"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adriantan101"},"content":"        return this.to;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adriantan101"},"content":"     * Returns a {@code String} representation of the event task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adriantan101"},"content":"     * The string includes the type of task, description, and formatted start and end times.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adriantan101"},"content":"     * If either date is invalid, it shows \"Invalid Date\".","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adriantan101"},"content":"     * @return A {@code String} representation of this event task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adriantan101"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adriantan101"},"content":"    public String toString() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adriantan101"},"content":"        if (from \u003d\u003d null || to \u003d\u003d null) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adriantan101"},"content":"            return \"[E]\" + super.toString() + \" (from: Invalid Date to: Invalid Date)\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adriantan101"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adriantan101"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\")) +","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adriantan101"},"content":"                \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\")) + \")\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adriantan101"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"adriantan101":62}},{"path":"src/main/java/myapp/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adriantan101"},"content":"package myapp.task;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adriantan101"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adriantan101"},"content":" * The {@code Task} class represents a general task with a description and a completion status.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adriantan101"},"content":" * It provides methods to manipulate and retrieve the task\u0027s details and status.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adriantan101"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adriantan101"},"content":"public class Task {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adriantan101"},"content":"    protected String description;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adriantan101"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adriantan101"},"content":"     * Constructs a new {@code Task} with the specified description.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adriantan101"},"content":"     * By default, the task is set to not done.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adriantan101"},"content":"     * @param description A {@code String} describing the task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adriantan101"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adriantan101"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adriantan101"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adriantan101"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adriantan101"},"content":"     * \"[X]\" indicates that the task is done, and \"[ ]\" indicates that it is not done.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adriantan101"},"content":"     * @return A {@code String} representing the task\u0027s status icon.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adriantan101"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adriantan101"},"content":"        return (this.isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adriantan101"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adriantan101"},"content":"     * Sets the {@code isDone} field to {@code true}.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adriantan101"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adriantan101"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adriantan101"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adriantan101"},"content":"     * Sets the {@code isDone} field to {@code false}.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adriantan101"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adriantan101"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adriantan101"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adriantan101"},"content":"     * @return A {@code String} representing the task\u0027s description.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adriantan101"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adriantan101"},"content":"        return this.description;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adriantan101"},"content":"     * Checks if the task is marked as done.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adriantan101"},"content":"     * @return {@code true} if the task is done; {@code false} otherwise.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adriantan101"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adriantan101"},"content":"        return this.isDone;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adriantan101"},"content":"     * Returns a {@code String} representation of the task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adriantan101"},"content":"     * The string includes the status icon and the description of the task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adriantan101"},"content":"     * @return A {@code String} representation of this task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adriantan101"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adriantan101"},"content":"    public String toString() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adriantan101"},"content":"        return getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adriantan101"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"adriantan101":76}},{"path":"src/main/java/myapp/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adriantan101"},"content":"package myapp.task;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adriantan101"},"content":"import myapp.exception.RubyException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adriantan101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adriantan101"},"content":"import java.util.List;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adriantan101"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adriantan101"},"content":" * The {@code TaskList} class manages a list of tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adriantan101"},"content":" * It provides methods to add, remove, retrieve, and list tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adriantan101"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adriantan101"},"content":"public class TaskList {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adriantan101"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adriantan101"},"content":"     * Constructs an empty {@code TaskList}.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adriantan101"},"content":"    public TaskList() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adriantan101"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adriantan101"},"content":"     * Constructs a {@code TaskList} with a specified list of tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adriantan101"},"content":"     * @param tasks A {@code List} of {@code Task} objects to initialize the task list with.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adriantan101"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adriantan101"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adriantan101"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adriantan101"},"content":"     * @param task The {@code Task} object to be added to the list.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adriantan101"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adriantan101"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adriantan101"},"content":"     * Removes a task from the task list at the specified index.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adriantan101"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adriantan101"},"content":"     * @throws RubyException If the index is out of bounds (less than 0 or greater than or equal to the list size).","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adriantan101"},"content":"    public void removeTask(int index) throws RubyException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adriantan101"},"content":"        if (index \u003c 0 || index \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adriantan101"},"content":"            throw new RubyException(\"Invalid task number.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adriantan101"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adriantan101"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adriantan101"},"content":"     * Retrieves a task from the task list at the specified index.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adriantan101"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adriantan101"},"content":"     * @return The {@code Task} object at the specified index.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adriantan101"},"content":"     * @throws RubyException If the index is out of bounds (less than 0 or greater than or equal to the list size).","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adriantan101"},"content":"    public Task getTask(int index) throws RubyException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adriantan101"},"content":"        if (index \u003c 0 || index \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adriantan101"},"content":"            throw new RubyException(\"Invalid task number.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adriantan101"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adriantan101"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adriantan101"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adriantan101"},"content":"     * @return An integer representing the size of the task list.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adriantan101"},"content":"    public int size() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adriantan101"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adriantan101"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adriantan101"},"content":"     * @return A {@code List} of {@code Task} objects contained in the task list.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adriantan101"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adriantan101"},"content":"        return this.tasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"adriantan101"},"content":"     * Returns a formatted string representation of all tasks in the task list.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"adriantan101"},"content":"     * Each task is prefixed with its index in the list.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"adriantan101"},"content":"     * @return A {@code String} representing the list of tasks with their indexes.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"adriantan101"},"content":"    public String listTasks() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"adriantan101"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"adriantan101"},"content":"        sb.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"adriantan101"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"adriantan101"},"content":"            sb.append(\"     \").append(i + 1).append(\".\").append(this.tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"adriantan101"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"adriantan101"},"content":"        return sb.toString();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"adriantan101"},"content":"     * Finds tasks in the list that contain the specified keyword in their description.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"adriantan101"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"adriantan101"},"content":"     * @return A {@code String} representing the tasks that match the search criteria.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"adriantan101"},"content":"    public String findTasks(String keyword) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"adriantan101"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"adriantan101"},"content":"        sb.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"adriantan101"},"content":"        int taskNumber \u003d 1;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"adriantan101"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"adriantan101"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"adriantan101"},"content":"                sb.append(\"     \").append(taskNumber++).append(\".\").append(task).append(\"\\n\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"adriantan101"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"adriantan101"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"adriantan101"},"content":"        if (taskNumber \u003d\u003d 1) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"adriantan101"},"content":"            sb.append(\"     No matching tasks found.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"adriantan101"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"adriantan101"},"content":"        return sb.toString();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"adriantan101"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"adriantan101":120}},{"path":"src/main/java/myapp/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adriantan101"},"content":"package myapp.task;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adriantan101"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adriantan101"},"content":" * The {@code Todo} class represents a task with only a description and no specific date/time.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adriantan101"},"content":" * It is a subclass of the {@code Task} class and inherits its behavior.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adriantan101"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adriantan101"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adriantan101"},"content":"     * Constructs a {@code Todo} task with the specified description.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adriantan101"},"content":"     * @param description A {@code String} describing the todo task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adriantan101"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adriantan101"},"content":"        super(description);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adriantan101"},"content":"     * Returns a string representation of the {@code Todo} task,","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adriantan101"},"content":"     * prefixed with \"[T]\" to indicate it is a Todo type.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adriantan101"},"content":"     * @return A {@code String} representation of the {@code Todo} task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adriantan101"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adriantan101"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adriantan101"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adriantan101"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"adriantan101":29}},{"path":"src/main/java/myapp/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adriantan101"},"content":"package myapp.ui;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adriantan101"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adriantan101"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adriantan101"},"content":" * The {@code Ui} class handles interactions with the user, including reading commands and displaying messages.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adriantan101"},"content":" * It provides methods to read user input and show responses, errors, and other messages.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adriantan101"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adriantan101"},"content":"public class Ui {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adriantan101"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adriantan101"},"content":"     * Constructs a new {@code Ui} instance and initializes the {@code Scanner} for reading user input.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adriantan101"},"content":"    public Ui() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adriantan101"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adriantan101"},"content":"     * Reads a command from the user input.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adriantan101"},"content":"     * @return A {@code String} representing the user\u0027s input command, trimmed of leading and trailing whitespace.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adriantan101"},"content":"    public String readCommand() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adriantan101"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adriantan101"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adriantan101"},"content":"     * This message is shown when the application starts.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adriantan101"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adriantan101"},"content":"        System.out.println(\"Hello! I\u0027m Ruby\\nWhat can I do for you?\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adriantan101"},"content":"     * Displays a response message to the user.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adriantan101"},"content":"     * @param response A {@code String} representing the message to be displayed to the user.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adriantan101"},"content":"    public void showResponse(String response) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adriantan101"},"content":"        System.out.println(response);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adriantan101"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adriantan101"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adriantan101"},"content":"     * @param error A {@code String} representing the error message to be displayed to the user.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adriantan101"},"content":"    public void showError(String error) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adriantan101"},"content":"        System.out.println(error);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adriantan101"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adriantan101"},"content":"     * Displays an error message indicating that there was an issue loading tasks from the file.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adriantan101"},"content":"     * This method is typically used when the application encounters problems during file operations.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adriantan101"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adriantan101"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adriantan101"},"content":"        System.out.println(\"An error occurred while loading tasks from the file.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adriantan101"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"adriantan101":60}},{"path":"src/test/java/myapp/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adriantan101"},"content":"package myapp.storage;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adriantan101"},"content":"import myapp.exception.RubyException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adriantan101"},"content":"import myapp.task.Deadline;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adriantan101"},"content":"import myapp.task.Event;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adriantan101"},"content":"import myapp.task.Task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adriantan101"},"content":"import myapp.task.Todo;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adriantan101"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adriantan101"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adriantan101"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adriantan101"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adriantan101"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adriantan101"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adriantan101"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adriantan101"},"content":"import java.util.List;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adriantan101"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adriantan101"},"content":"public class StorageTest {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adriantan101"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adriantan101"},"content":"    private final String tempFilePath \u003d \"test_tasks.txt\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adriantan101"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adriantan101"},"content":"    public void setUp() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adriantan101"},"content":"        storage \u003d new Storage(tempFilePath);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adriantan101"},"content":"    @AfterEach","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adriantan101"},"content":"    public void tearDown() throws IOException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adriantan101"},"content":"        Files.deleteIfExists(Path.of(tempFilePath));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adriantan101"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adriantan101"},"content":"    public void testLoad_emptyFile() throws IOException, RubyException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adriantan101"},"content":"        List\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adriantan101"},"content":"        assertTrue(tasks.isEmpty(), \"Task list should be empty when loading from an empty file\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adriantan101"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adriantan101"},"content":"    public void testLoad_validTasks() throws IOException, RubyException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adriantan101"},"content":"        String content \u003d \"\"\"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adriantan101"},"content":"                T | 0 | Read book","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adriantan101"},"content":"                D | 1 | Submit assignment | 2024-09-01 1800","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adriantan101"},"content":"                E | 0 | Project meeting | 2024-09-01 1400 | 2024-09-01 1600","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adriantan101"},"content":"                \"\"\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adriantan101"},"content":"        Files.write(Path.of(tempFilePath), content.getBytes());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adriantan101"},"content":"        List\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"adriantan101"},"content":"        assertEquals(3, tasks.size(), \"There should be three tasks loaded from the file\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"adriantan101"},"content":"        assertInstanceOf(Todo.class, tasks.get(0), \"First task should be a Todo\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"adriantan101"},"content":"        assertFalse(tasks.get(0).isDone(), \"First task should not be done\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"adriantan101"},"content":"        assertEquals(\"Read book\", tasks.get(0).getDescription());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"adriantan101"},"content":"        assertInstanceOf(Deadline.class, tasks.get(1), \"Second task should be a Deadline\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"adriantan101"},"content":"        assertTrue(tasks.get(1).isDone(), \"Second task should be done\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"adriantan101"},"content":"        assertEquals(\"Submit assignment\", tasks.get(1).getDescription());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"adriantan101"},"content":"        assertInstanceOf(Event.class, tasks.get(2), \"Third task should be an Event\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"adriantan101"},"content":"        assertFalse(tasks.get(2).isDone(), \"Third task should not be done\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"adriantan101"},"content":"        assertEquals(\"Project meeting\", tasks.get(2).getDescription());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"adriantan101"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"adriantan101"},"content":"    public void testLoad_invalidTaskType() throws IOException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"adriantan101"},"content":"        String content \u003d \"X | 0 | Invalid task\\n\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"adriantan101"},"content":"        Files.write(Path.of(tempFilePath), content.getBytes());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"adriantan101"},"content":"        assertThrows(RubyException.class, () -\u003e {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"adriantan101"},"content":"            storage.load();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"adriantan101"},"content":"        }, \"Loading an invalid task type should throw RubyException\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"adriantan101"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"adriantan101"},"content":"    public void testSave_tasksToFile() throws IOException, RubyException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"adriantan101"},"content":"        Todo todo \u003d new Todo(\"Read book\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"adriantan101"},"content":"        Deadline deadline \u003d new Deadline(\"Submit assignment\", LocalDateTime.of(2024, 9, 1, 18, 0));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"adriantan101"},"content":"        Event event \u003d new Event(\"Project meeting\", LocalDateTime.of(2024, 9, 1, 14, 0), LocalDateTime.of(2024, 9, 1, 16, 0));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"adriantan101"},"content":"        todo.markAsDone();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"adriantan101"},"content":"        List\u003cTask\u003e tasks \u003d List.of(todo, deadline, event);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"adriantan101"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"adriantan101"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(Path.of(tempFilePath));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"adriantan101"},"content":"        assertEquals(3, lines.size(), \"There should be three lines in the file\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"adriantan101"},"content":"        assertEquals(\"T | 1 | Read book\", lines.get(0), \"First line should represent the saved Todo task\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"adriantan101"},"content":"        assertEquals(\"D | 0 | Submit assignment | 2024-09-01 1800\", lines.get(1), \"Second line should represent the saved Deadline task\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"adriantan101"},"content":"        assertEquals(\"E | 0 | Project meeting | 2024-09-01 1400 | 2024-09-01 1600\", lines.get(2), \"Third line should represent the saved Event task\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"adriantan101"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"adriantan101":93}},{"path":"src/test/java/myapp/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adriantan101"},"content":"package myapp.task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adriantan101"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adriantan101"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adriantan101"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adriantan101"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"adriantan101"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"adriantan101"},"content":"public class TodoTest {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"adriantan101"},"content":"    private Todo todo;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"adriantan101"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"adriantan101"},"content":"    public void setUp() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"adriantan101"},"content":"        this.todo \u003d new Todo(\"Sample Todo Task\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"adriantan101"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"adriantan101"},"content":"    public void testConstructor() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"adriantan101"},"content":"        assertEquals(\"Sample Todo Task\", this.todo.getDescription());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"adriantan101"},"content":"        assertFalse(this.todo.isDone(), \"Task should not be marked as done initially\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"adriantan101"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"adriantan101"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"adriantan101"},"content":"        this.todo.markAsDone();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"adriantan101"},"content":"        assertTrue(this.todo.isDone(), \"Task should be marked as done\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"adriantan101"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"adriantan101"},"content":"    public void testMarkAsNotDone() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"adriantan101"},"content":"        todo.markAsDone();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"adriantan101"},"content":"        todo.markAsNotDone();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"adriantan101"},"content":"        assertFalse(todo.isDone(), \"Task should be marked as not done\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"adriantan101"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"adriantan101"},"content":"    public void testToString_notDone() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"adriantan101"},"content":"        String expected \u003d \"[T][ ] Sample Todo Task\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"adriantan101"},"content":"        assertEquals(expected, todo.toString());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"adriantan101"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"adriantan101"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"adriantan101"},"content":"    public void testToString_done() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"adriantan101"},"content":"        todo.markAsDone();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"adriantan101"},"content":"        String expected \u003d \"[T][X] Sample Todo Task\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"adriantan101"},"content":"        assertEquals(expected, todo.toString());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"adriantan101"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"adriantan101"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"adriantan101":50}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"adriantan101"},"content":"todo borrow book","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"adriantan101"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"adriantan101"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"adriantan101"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"adriantan101"},"content":"mark 2","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"adriantan101"},"content":"unmark 2","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"adriantan101"},"content":"bye","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"adriantan101":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"adriantan101"},"content":"java -classpath ..\\bin Ruby \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":20,"adriantan101":1}}]
