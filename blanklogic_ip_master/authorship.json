[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blanklogic"},"content":"public enum Command {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blanklogic"},"content":"    HELP,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blanklogic"},"content":"    LIST,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blanklogic"},"content":"    MARK,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blanklogic"},"content":"    UNMARK,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blanklogic"},"content":"    TODO,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blanklogic"},"content":"    DEADLINE,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blanklogic"},"content":"    EVENT,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blanklogic"},"content":"    DELETE,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blanklogic"},"content":"    BYE,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blanklogic"},"content":"    INVALID","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blanklogic"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"blanklogic":12}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blanklogic"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blanklogic"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blanklogic"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blanklogic"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blanklogic"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blanklogic"},"content":"        super(description);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blanklogic"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blanklogic"},"content":"        this.deadline \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blanklogic"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blanklogic"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blanklogic"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blanklogic"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blanklogic"},"content":"        return \"D \" + super.toFileFormat() + \" | \" + deadline.format(formatter);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blanklogic"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blanklogic"},"content":"    @Override","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blanklogic"},"content":"    public String toString() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blanklogic"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blanklogic"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline.format(formatter) + \")\";","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blanklogic"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blanklogic"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"blanklogic":23}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blanklogic"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blanklogic"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blanklogic"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blanklogic"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blanklogic"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blanklogic"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blanklogic"},"content":"        super(description);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blanklogic"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blanklogic"},"content":"        this.from \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blanklogic"},"content":"        this.to \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blanklogic"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blanklogic"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blanklogic"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blanklogic"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blanklogic"},"content":"        return \"E \" + super.toFileFormat() + \" | \" + from.format(formatter) + \" | \" + to.format(formatter);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blanklogic"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blanklogic"},"content":"    @Override","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blanklogic"},"content":"    public String toString() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blanklogic"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blanklogic"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(formatter) + \" to: \" + to.format(formatter) + \")\";","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blanklogic"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blanklogic"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"blanklogic":25}},{"path":"src/main/java/Friday.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blanklogic"},"content":"import java.io.File;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blanklogic"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blanklogic"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blanklogic"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blanklogic"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blanklogic"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blanklogic"},"content":"public class Friday {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blanklogic"},"content":"    private final ArrayList\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blanklogic"},"content":"    private static final String FILE_PATH \u003d \"./data/friday.txt\";","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blanklogic"},"content":"    private void loadTasks() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blanklogic"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blanklogic"},"content":"        try {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blanklogic"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blanklogic"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blanklogic"},"content":"                file.createNewFile();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blanklogic"},"content":"            } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blanklogic"},"content":"                Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blanklogic"},"content":"                while (sc.hasNextLine()) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blanklogic"},"content":"                    String[] taskData \u003d sc.nextLine().split(\" \\\\| \");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blanklogic"},"content":"                    if ((taskData.length \u003c 3) || !taskData[1].chars().allMatch(Character::isDigit)) continue;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blanklogic"},"content":"                    Task task;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blanklogic"},"content":"                    switch (taskData[0]) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blanklogic"},"content":"                        case \"T\":","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blanklogic"},"content":"                            task \u003d new Todo(taskData[2]);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blanklogic"},"content":"                            break;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blanklogic"},"content":"                        case \"D\":","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blanklogic"},"content":"                            task \u003d new Deadline(taskData[2], taskData[3]);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blanklogic"},"content":"                            break;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"blanklogic"},"content":"                        case \"E\":","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blanklogic"},"content":"                            task \u003d new Event(taskData[2], taskData[3], taskData[4]);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"blanklogic"},"content":"                            break;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"blanklogic"},"content":"                        default:","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"blanklogic"},"content":"                            System.out.println(\"\\tCorrupted data found: \"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"blanklogic"},"content":"                                    + String.join(\" | \", taskData));","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"blanklogic"},"content":"                            continue; // Skip corrupted data","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"blanklogic"},"content":"                    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"blanklogic"},"content":"                    if (taskData[1].equals(\"1\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"blanklogic"},"content":"                        task.markAsDone();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"blanklogic"},"content":"                    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"blanklogic"},"content":"                    items.add(task);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"blanklogic"},"content":"                }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"blanklogic"},"content":"                sc.close();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"blanklogic"},"content":"            }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"blanklogic"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"blanklogic"},"content":"            System.out.println(\"An error occurred while loading tasks: \" + e.getMessage());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"blanklogic"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"blanklogic"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"blanklogic"},"content":"    private void saveTasks() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"blanklogic"},"content":"        try {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"blanklogic"},"content":"            FileWriter writer \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"blanklogic"},"content":"            for (Task task : items) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"blanklogic"},"content":"                String taskData \u003d task.toFileFormat();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"blanklogic"},"content":"                writer.write(taskData + \"\\n\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"blanklogic"},"content":"            }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"blanklogic"},"content":"            writer.close();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"blanklogic"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"blanklogic"},"content":"            System.out.println(\"An error occurred while saving tasks: \" + e.getMessage());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"blanklogic"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"blanklogic"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"blanklogic"},"content":"    private void horizontalLine() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"blanklogic"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"blanklogic"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"blanklogic"},"content":"    private void welcomeMessage() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"blanklogic"},"content":"        horizontalLine();","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"blanklogic"},"content":"        System.out.println(\"\\tWelcome Back! I\u0027m Friday.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"blanklogic"},"content":"        System.out.println(\"\\tWhat can I do for you today?\");","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"blanklogic"},"content":"        System.out.println(\"\\tTo view the list of commands that I support, type \u0027help\u0027 for more information.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"blanklogic"},"content":"        horizontalLine();","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"blanklogic"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"blanklogic"},"content":"    private void help() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"blanklogic"},"content":"        System.out.println(\"\\tHere are the list of commands that I support\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"blanklogic"},"content":"        System.out.println(\"\\thelp - List of commands supported by me, Friday.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"blanklogic"},"content":"        System.out.println(\"\\tlist - View all entries to the current list of things\" +","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"blanklogic"},"content":"                \" you have asked me to take note of.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"blanklogic"},"content":"        System.out.println(\"\\tmark \u003cinteger\u003e - Mark an entry in the list as a completed task.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"blanklogic"},"content":"        System.out.println(\"\\tunmark \u003cinteger\u003e - Unmark an entry in the list as a completed task.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"blanklogic"},"content":"        System.out.println(\"\\ttodo \u003cstring\u003e - Remember a TODO Task for you to revisit again.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"blanklogic"},"content":"        System.out.println(\"\\tdeadline \u003cstring\u003e /by \u003cyyyy-mm-dd hhmm\u003e - Remember a Deadline Task for\" +","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"blanklogic"},"content":"                \" you to complete by the deadline.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"blanklogic"},"content":"        System.out.println(\"\\tevent \u003cstring\u003e /from \u003cyyyy-mm-dd hhmm\u003e /to \u003cyyyy-mm-dd hhmm\u003e - Remember an Event Task\" +","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"blanklogic"},"content":"                \" from when it begins to when it ends.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"blanklogic"},"content":"        System.out.println(\"\\tdelete \u003cinteger\u003e - Delete an entry from your current list.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"blanklogic"},"content":"        System.out.println(\"\\tbye - Exits this app and says Good Bye to Friday :)\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"blanklogic"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"blanklogic"},"content":"    private Command parseCommand(String input) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"blanklogic"},"content":"        String[] inputs \u003d input.split(\" \");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"blanklogic"},"content":"        try {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"blanklogic"},"content":"            return Command.valueOf(inputs[0].toUpperCase());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"blanklogic"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"blanklogic"},"content":"            return Command.INVALID;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"blanklogic"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"blanklogic"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"blanklogic"},"content":"    private void readInput() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"blanklogic"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"blanklogic"},"content":"        String input;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"blanklogic"},"content":"        Task currTask;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"blanklogic"},"content":"        while (true) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"blanklogic"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"blanklogic"},"content":"            horizontalLine();","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"blanklogic"},"content":"            String[] inputs \u003d input.split(\" \");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"blanklogic"},"content":"            Command command \u003d parseCommand(input);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"blanklogic"},"content":"            try {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"blanklogic"},"content":"                switch (command) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"blanklogic"},"content":"                    case BYE:","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"blanklogic"},"content":"                        System.out.println(\"\\tGood Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"blanklogic"},"content":"                        return;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"blanklogic"},"content":"                    case HELP:","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"blanklogic"},"content":"                        if (inputs.length \u003e 1) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"blanklogic"},"content":"                            throw new FridayException(\"Invalid input. \u0027help\u0027 command does not take any arguments.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"blanklogic"},"content":"                        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"blanklogic"},"content":"                        help();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"blanklogic"},"content":"                        break;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"blanklogic"},"content":"                    case LIST:","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"blanklogic"},"content":"                        if (inputs.length \u003e 1) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"blanklogic"},"content":"                            throw new FridayException(\"Invalid input. \u0027list\u0027 command does not take any arguments.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"blanklogic"},"content":"                        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"blanklogic"},"content":"                        System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"blanklogic"},"content":"                        for (int i \u003d 0; i \u003c items.size(); i++) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"blanklogic"},"content":"                            System.out.println(\"\\t\" + (i + 1) + \".\" + items.get(i).toString());","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"blanklogic"},"content":"                        }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"blanklogic"},"content":"                        break;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"blanklogic"},"content":"                    case MARK:","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"blanklogic"},"content":"                    case UNMARK:","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"blanklogic"},"content":"                        if (inputs.length !\u003d 2) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"blanklogic"},"content":"                            throw new FridayException(\"Invalid input. \u0027mark\u0027 and \u0027unmark\u0027 commands require exactly\" +","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"blanklogic"},"content":"                                    \" one argument.\\n\\tusage: mark \u003cinteger\u003e || unmark \u003cinteger\u003e\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"blanklogic"},"content":"                        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"blanklogic"},"content":"                        markUnmark(inputs);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"blanklogic"},"content":"                        break;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"blanklogic"},"content":"                    case TODO:","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"blanklogic"},"content":"                        if (inputs.length \u003c 2) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"blanklogic"},"content":"                            throw new FridayException(\"Invalid input. \u0027todo\u0027 command requires a description.\" +","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"blanklogic"},"content":"                                    \"\\n\\tusage: todo \u003cstring\u003e\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"blanklogic"},"content":"                        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"blanklogic"},"content":"                        currTask \u003d new Todo(input.substring(5));","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"blanklogic"},"content":"                        addTask(currTask);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"blanklogic"},"content":"                        break;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"blanklogic"},"content":"                    case DEADLINE:","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"blanklogic"},"content":"                        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"blanklogic"},"content":"                            throw new FridayException(\"Invalid input. \u0027deadline\u0027 command requires a\" +","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"blanklogic"},"content":"                                    \" description and a deadline.\\n\\tusage: deadline \u003cstring\u003e /by \u003cyyyy-MM-dd HHmm\u003e\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"blanklogic"},"content":"                        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"blanklogic"},"content":"                        String[] deadlineInputs \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"blanklogic"},"content":"                        if (deadlineInputs.length !\u003d 2) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"blanklogic"},"content":"                            throw new FridayException(\"Invalid input. \u0027deadline\u0027 command requires a\" +","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"blanklogic"},"content":"                                    \" description and deadline\\n\\tusage: deadline \u003cstring\u003e /by \u003cyyyy-MM-dd HHmm\u003e.\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"blanklogic"},"content":"                        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"blanklogic"},"content":"                        try {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"blanklogic"},"content":"                            currTask \u003d new Deadline(deadlineInputs[0], deadlineInputs[1]);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"blanklogic"},"content":"                            addTask(currTask);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"blanklogic"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"blanklogic"},"content":"                            System.out.println(\"\\tInvalid date format. Please use the format: yyyy-MM-dd HHmm.\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"blanklogic"},"content":"                        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"blanklogic"},"content":"                        break;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"blanklogic"},"content":"                    case EVENT:","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"blanklogic"},"content":"                        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"blanklogic"},"content":"                            throw new FridayException(\"Invalid input. \u0027event\u0027 command requires a description,\" +","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"blanklogic"},"content":"                                    \" start, and end time.\\n\\tusage: event \u003cstring\u003e /from \u003cyyyy-MM-dd HHmm\u003e\" +","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"blanklogic"},"content":"                                    \" /to \u003cyyyy-MM-dd HHmm\u003e\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"blanklogic"},"content":"                        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"blanklogic"},"content":"                        String[] eventInputs \u003d input.substring(6).split(\" /from | /to \");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"blanklogic"},"content":"                        if (eventInputs.length !\u003d 3) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"blanklogic"},"content":"                            throw new FridayException(\"Invalid input. \u0027event\u0027 command requires a description,\" +","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"blanklogic"},"content":"                                    \" start, and end time.\\n\\tusage: event \u003cstring\u003e /from \u003cyyyy-MM-dd HHmm\u003e\" +","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"blanklogic"},"content":"                                    \" /to \u003cyyyy-MM-dd HHmm\u003e.\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"blanklogic"},"content":"                        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"blanklogic"},"content":"                        try {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"blanklogic"},"content":"                            currTask \u003d new Event(eventInputs[0], eventInputs[1], eventInputs[2]);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"blanklogic"},"content":"                            addTask(currTask);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"blanklogic"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"blanklogic"},"content":"                            System.out.println(\"\\tInvalid date format. Please use the format: yyyy-MM-dd HHmm.\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"blanklogic"},"content":"                        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"blanklogic"},"content":"                        break;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"blanklogic"},"content":"                    case DELETE:","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"blanklogic"},"content":"                        if (inputs.length !\u003d 2) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"blanklogic"},"content":"                            throw new FridayException(\"Invalid input. \u0027delete\u0027 command requires exactly one argument.\" +","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"blanklogic"},"content":"                                    \"\\n\\tusage: delete \u003cinteger\u003e\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"blanklogic"},"content":"                        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"blanklogic"},"content":"                        deleteTask(inputs);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"blanklogic"},"content":"                        break;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"blanklogic"},"content":"                    default:","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"blanklogic"},"content":"                        throw new FridayException(\"Invalid input. Please ensure that this command is supported by me\" +","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"blanklogic"},"content":"                                \" and you have utilized the right syntax.\\n\\tCheck \u0027help\u0027 for more information.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"blanklogic"},"content":"                }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"blanklogic"},"content":"            } catch (FridayException e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"blanklogic"},"content":"                System.out.println(\"\\t\" + e.getMessage());","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"blanklogic"},"content":"            } finally {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"blanklogic"},"content":"                saveTasks();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"blanklogic"},"content":"                horizontalLine();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"blanklogic"},"content":"            }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"blanklogic"},"content":"        }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"blanklogic"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"blanklogic"},"content":"    private void addTask(Task task) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"blanklogic"},"content":"        items.add(task);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"blanklogic"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"blanklogic"},"content":"        System.out.println(\"\\t  \" + task);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"blanklogic"},"content":"        System.out.println(\"\\tNow you have \" + items.size() + \" tasks in the list.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"blanklogic"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"blanklogic"},"content":"    private void deleteTask(String[] inputs) throws FridayException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"blanklogic"},"content":"        if (!inputs[1].chars().allMatch(Character::isDigit))","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"blanklogic"},"content":"            throw new FridayException(\"Invalid input. usage: delete \u003cindex\u003e\\n\\tWhat would you like to delete?\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"blanklogic"},"content":"        int target \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"blanklogic"},"content":"        if (target \u003e items.size() || target \u003c\u003d 0)","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"blanklogic"},"content":"            throw new FridayException(\"Invalid input. It appears you are attempting to\" +","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"blanklogic"},"content":"                    \" access something that does not exist yet.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"blanklogic"},"content":"        Task task \u003d items.get(target - 1);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"blanklogic"},"content":"        items.remove(task);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"blanklogic"},"content":"        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"blanklogic"},"content":"        System.out.println(\"\\t  \" + task);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"blanklogic"},"content":"        System.out.println(\"\\tNow you have \" + items.size() + \" tasks in the list.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"blanklogic"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"blanklogic"},"content":"    private void markUnmark(String[] inputs) throws FridayException {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"blanklogic"},"content":"        if (!inputs[1].chars().allMatch(Character::isDigit))","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"blanklogic"},"content":"            throw new FridayException(\"Invalid input. Where would you like to \" + inputs[0] + \"?\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"blanklogic"},"content":"        int target \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"blanklogic"},"content":"        if (target \u003e items.size() || target \u003c\u003d 0)","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"blanklogic"},"content":"            throw new FridayException(\"Invalid input. It appears you are attempting to\" +","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"blanklogic"},"content":"                    \" access something that does not exist yet.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"blanklogic"},"content":"        Task task \u003d items.get(target - 1);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"blanklogic"},"content":"        if (inputs[0].equals(\"mark\")) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"blanklogic"},"content":"            task.markAsDone();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"blanklogic"},"content":"            System.out.println(\"\\tNice! I\u0027ve marked this task as done:\\n\\t  \" + task);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"blanklogic"},"content":"        } else {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"blanklogic"},"content":"            task.unmarkAsDone();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"blanklogic"},"content":"            System.out.println(\"\\tOK, I\u0027ve marked this task as not done yet:\\n\\t  \" + task);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"blanklogic"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"blanklogic"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"blanklogic"},"content":"    private void initialize() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"blanklogic"},"content":"        loadTasks();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"blanklogic"},"content":"        welcomeMessage();","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"blanklogic"},"content":"        readInput();","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"blanklogic"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"blanklogic"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"blanklogic"},"content":"        Friday bot \u003d new Friday();","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"blanklogic"},"content":"        bot.initialize();","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"blanklogic"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"blanklogic"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"blanklogic":251}},{"path":"src/main/java/FridayException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blanklogic"},"content":"public class FridayException extends RuntimeException {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blanklogic"},"content":"    public FridayException(String msg) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blanklogic"},"content":"        super(msg);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blanklogic"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blanklogic"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"blanklogic":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blanklogic"},"content":"public class Task {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blanklogic"},"content":"    protected String description;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blanklogic"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blanklogic"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blanklogic"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blanklogic"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blanklogic"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blanklogic"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blanklogic"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blanklogic"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blanklogic"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blanklogic"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blanklogic"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blanklogic"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blanklogic"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blanklogic"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blanklogic"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blanklogic"},"content":"        return \"| \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blanklogic"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blanklogic"},"content":"    @Override","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blanklogic"},"content":"    public String toString() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blanklogic"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blanklogic"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blanklogic"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"blanklogic":30}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blanklogic"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blanklogic"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blanklogic"},"content":"        super(description);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blanklogic"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blanklogic"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blanklogic"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blanklogic"},"content":"        return \"T \" + super.toFileFormat();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blanklogic"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blanklogic"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blanklogic"},"content":"    @Override","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blanklogic"},"content":"    public String toString() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blanklogic"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blanklogic"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blanklogic"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"blanklogic":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"blanklogic"},"content":"help","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blanklogic"},"content":"todo read book","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blanklogic"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blanklogic"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blanklogic"},"content":"todo join sports club","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blanklogic"},"content":"todo borrow book","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blanklogic"},"content":"mark 1","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blanklogic"},"content":"mark 2","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blanklogic"},"content":"mark 4","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blanklogic"},"content":"list","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blanklogic"},"content":"delete 3","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blanklogic"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blanklogic"},"content":"delete","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blanklogic"},"content":"delete a","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blanklogic"},"content":"mark","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blanklogic"},"content":"mark a","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blanklogic"},"content":"unmark","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blanklogic"},"content":"unmark a","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blanklogic"},"content":"todo","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blanklogic"},"content":"deadline","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blanklogic"},"content":"event","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blanklogic"},"content":"list a","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blanklogic"},"content":"bye","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"blanklogic":23}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blanklogic"},"content":"java -classpath ..\\bin Friday \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"blanklogic":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blanklogic"},"content":"java -classpath ../bin Friday \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"blanklogic":1,"-":37}}]
