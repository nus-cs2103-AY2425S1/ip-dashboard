[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tanwartushar"},"content":"    mainClass.set(\"donna.Donna\")","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tanwartushar"},"content":"    archiveBaseName \u003d \"donna\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"tanwartushar":2,"-":39}},{"path":"src/main/java/donna/Donna.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanwartushar"},"content":"package donna;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tanwartushar"},"content":"import donna.task.Deadline;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tanwartushar"},"content":"import donna.task.Event;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tanwartushar"},"content":"import donna.task.Task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tanwartushar"},"content":"import donna.task.ToDo;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tanwartushar"},"content":"import java.util.List;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tanwartushar"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tanwartushar"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tanwartushar"},"content":" * Represents the main class for the Donna chatbot.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tanwartushar"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tanwartushar"},"content":"public class Donna {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tanwartushar"},"content":"    private final Ui ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tanwartushar"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tanwartushar"},"content":"    private final Parser parser;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tanwartushar"},"content":"    private static Storage storage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tanwartushar"},"content":"    private static final String DIRECTORY_PATH \u003d \"data\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tanwartushar"},"content":"    private static final String FILE_PATH \u003d DIRECTORY_PATH + \"/donna-tasks.txt\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tanwartushar"},"content":"     * Constructs a Donna instance, initializing the user interface, storage,","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tanwartushar"},"content":"     * parser, and loading previously saved tasks.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tanwartushar"},"content":"    public Donna() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tanwartushar"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tanwartushar"},"content":"        storage \u003d new Storage(DIRECTORY_PATH, FILE_PATH);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tanwartushar"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tanwartushar"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tanwartushar"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tanwartushar"},"content":"        } catch (DonnaException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tanwartushar"},"content":"            ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tanwartushar"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tanwartushar"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tanwartushar"},"content":"     * Runs the main loop, processing user input and executing commands.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tanwartushar"},"content":"     * Handles exceptions and prints error messages as needed.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tanwartushar"},"content":"    private void run() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tanwartushar"},"content":"        boolean dataWasLoaded \u003d !tasks.isEmpty();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tanwartushar"},"content":"        ui.printGreeting(dataWasLoaded);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tanwartushar"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tanwartushar"},"content":"        while (true) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tanwartushar"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tanwartushar"},"content":"            try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tanwartushar"},"content":"                ParsedCommand result \u003d parser.parse(input);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tanwartushar"},"content":"                String commandType \u003d result.getCommandType();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tanwartushar"},"content":"                switch (commandType) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tanwartushar"},"content":"                case \"exit\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tanwartushar"},"content":"                    ui.printGoodbyeMessage();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tanwartushar"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tanwartushar"},"content":"                    sc.close();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tanwartushar"},"content":"                    return;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tanwartushar"},"content":"                case \"list\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tanwartushar"},"content":"                    ui.printTaskList(tasks);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tanwartushar"},"content":"                    break;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tanwartushar"},"content":"                case \"mark\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tanwartushar"},"content":"                    handleMark(result.getArgument1());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tanwartushar"},"content":"                    break;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tanwartushar"},"content":"                case \"unmark\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tanwartushar"},"content":"                    handleUnmark(result.getArgument1());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tanwartushar"},"content":"                    break;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tanwartushar"},"content":"                case \"delete\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tanwartushar"},"content":"                    handleDelete(result.getArgument1());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tanwartushar"},"content":"                    break;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tanwartushar"},"content":"                case \"add\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tanwartushar"},"content":"                    handleAdd(result.getArgument1(), result.getArgument2());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tanwartushar"},"content":"                    break;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tanwartushar"},"content":"                case \"find\":","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tanwartushar"},"content":"                    List\u003cTask\u003e foundTasks \u003d tasks.searchTasks(result.getArgument1());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tanwartushar"},"content":"                    ui.printFindResults(foundTasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tanwartushar"},"content":"                }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tanwartushar"},"content":"            } catch (DonnaException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tanwartushar"},"content":"                ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tanwartushar"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tanwartushar"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tanwartushar"},"content":"     * Handles the marking of a task as done.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tanwartushar"},"content":"     * @param taskNum S.No of the task to mark (index from 1).","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tanwartushar"},"content":"     * @throws DonnaException If the argument is not a valid task number.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tanwartushar"},"content":"    private void handleMark(String taskNum) throws DonnaException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tanwartushar"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tanwartushar"},"content":"            int taskIdx \u003d Integer.parseInt(taskNum) - 1;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tanwartushar"},"content":"            Task task \u003d tasks.markTask(taskIdx, true);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tanwartushar"},"content":"            ui.printTaskMarkedMessage(task, true);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tanwartushar"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tanwartushar"},"content":"            ui.printErrorMessage(DonnaException.invalidTaskNumber().getMessage());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tanwartushar"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tanwartushar"},"content":"     * Handles the marking of a task as not done.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tanwartushar"},"content":"     * @param taskNum Index of the task to unmark (index from 1).","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tanwartushar"},"content":"     * @throws DonnaException If the argument is not a valid task number.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tanwartushar"},"content":"    private void handleUnmark(String taskNum) throws DonnaException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tanwartushar"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tanwartushar"},"content":"            int taskIdx \u003d Integer.parseInt(taskNum) - 1;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tanwartushar"},"content":"            Task task \u003d tasks.markTask(taskIdx, false);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tanwartushar"},"content":"            ui.printTaskMarkedMessage(task, false);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tanwartushar"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tanwartushar"},"content":"            ui.printErrorMessage(DonnaException.invalidTaskNumber().getMessage());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tanwartushar"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tanwartushar"},"content":"     * Handles the deletion of a task.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tanwartushar"},"content":"     * @param taskNum Index of the task to delete (index from 1).","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tanwartushar"},"content":"     * @throws DonnaException If the argument is not a valid task number.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tanwartushar"},"content":"    private void handleDelete(String taskNum) throws DonnaException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tanwartushar"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tanwartushar"},"content":"            int taskIndex \u003d Integer.parseInt(taskNum) - 1;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tanwartushar"},"content":"            Task task \u003d tasks.deleteTask(taskIndex);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tanwartushar"},"content":"            ui.printTaskDeletedMessage(task, tasks.getTaskCount());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tanwartushar"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tanwartushar"},"content":"            ui.printErrorMessage(DonnaException.invalidTaskNumber().getMessage());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tanwartushar"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"tanwartushar"},"content":"     * Handles the addition of a task to the list.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"tanwartushar"},"content":"     * @param type Type of the task (e.g., \"todo\", \"deadline\", \"event\").","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"tanwartushar"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"tanwartushar"},"content":"     * @throws DonnaException If the type or description is invalid.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"tanwartushar"},"content":"    private void handleAdd(String type, String description) throws DonnaException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"tanwartushar"},"content":"        Task newTask;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"tanwartushar"},"content":"        switch (type) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"tanwartushar"},"content":"        case \"todo\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"tanwartushar"},"content":"            newTask \u003d new ToDo(description);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"tanwartushar"},"content":"            break;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"tanwartushar"},"content":"        case \"deadline\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"tanwartushar"},"content":"            String[] deadlineParts \u003d description.split(\" /by \", 2);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"tanwartushar"},"content":"            if (deadlineParts.length !\u003d 2) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"tanwartushar"},"content":"                throw DonnaException.emptyDescription(type);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"tanwartushar"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"tanwartushar"},"content":"            newTask \u003d new Deadline(deadlineParts[0], deadlineParts[1]);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"tanwartushar"},"content":"            break;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"tanwartushar"},"content":"        case \"event\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"tanwartushar"},"content":"            String[] eventParts \u003d description.split(\" /from \", 2);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"tanwartushar"},"content":"            if (eventParts.length !\u003d 2) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"tanwartushar"},"content":"                throw DonnaException.emptyDescription(type);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"tanwartushar"},"content":"            }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"tanwartushar"},"content":"            String[] eventTimes \u003d eventParts[1].split(\" /to \", 2);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"tanwartushar"},"content":"            if (eventTimes.length !\u003d 2) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"tanwartushar"},"content":"                throw DonnaException.emptyEventTime();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"tanwartushar"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"tanwartushar"},"content":"            newTask \u003d new Event(eventParts[0], eventTimes[0], eventTimes[1]);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"tanwartushar"},"content":"            break;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"tanwartushar"},"content":"        default:","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"tanwartushar"},"content":"            throw DonnaException.invalidTaskType(type);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"tanwartushar"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"tanwartushar"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"tanwartushar"},"content":"        ui.printTaskAddedMessage(newTask, tasks.getTaskCount());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"tanwartushar"},"content":"     * Main method to start the Donna application.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"tanwartushar"},"content":"     * @param args Arguments.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"tanwartushar"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"tanwartushar"},"content":"        new Donna().run();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"tanwartushar"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"tanwartushar":180}},{"path":"src/main/java/donna/DonnaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanwartushar"},"content":"package donna;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tanwartushar"},"content":"public class DonnaException extends Exception{","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tanwartushar"},"content":"    public DonnaException(String message) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tanwartushar"},"content":"        super(message);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tanwartushar"},"content":"    public static DonnaException emptyDescription(String taskType) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tanwartushar"},"content":"        return new DonnaException(\"Please provide the description for a \" + taskType + \" task\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tanwartushar"},"content":"    public static DonnaException emptyDeadline() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tanwartushar"},"content":"        return new DonnaException(\"Please provide a deadline for this task!\" + \"\\n\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tanwartushar"},"content":"                + \"Use /by to provide a deadline.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tanwartushar"},"content":"    public static DonnaException emptyEventTime() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tanwartushar"},"content":"        return new DonnaException(\"Please provide the timings for this event!\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tanwartushar"},"content":"                + \"\\n\" + \"Use /from and /to to provide timings.\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tanwartushar"},"content":"    public static DonnaException invalidTaskType(String taskType) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tanwartushar"},"content":"        return new DonnaException(\"Invalid request: \" + taskType + \"!\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tanwartushar"},"content":"                + \"\\n\" + \"Please use a valid task type (todo / deadline / event);\" + \"\\n\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tanwartushar"},"content":"                + \"type list to view the list of tasks, \" + \"\\n\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tanwartushar"},"content":"                + \"or type delete to remove tasks from the list.\" + \"\\n\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tanwartushar"},"content":"                + \"Use /by (for a deadline) and /from and /to (for an event) to specify\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tanwartushar"},"content":"                + \"\\n\" + \"timings for the task.\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tanwartushar"},"content":"    public static DonnaException invalidTaskNumber() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tanwartushar"},"content":"        return new DonnaException(\"Invalid task number :(\" + \"\\n\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tanwartushar"},"content":"            + \"No task assigned to this number yet. Retry with a valid task number!\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tanwartushar"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"tanwartushar":35}},{"path":"src/main/java/donna/ParsedCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanwartushar"},"content":"package donna;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tanwartushar"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tanwartushar"},"content":" * Represents a command parsed from user input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tanwartushar"},"content":" * This class encapsulates the type of command, and its associated arguments.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tanwartushar"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tanwartushar"},"content":"public class ParsedCommand {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tanwartushar"},"content":"    private final String commandType;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tanwartushar"},"content":"    private final String argument1;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tanwartushar"},"content":"    private final String argument2;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tanwartushar"},"content":"     * Constructs a ParsedCommand with the specified command type and arguments.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tanwartushar"},"content":"     * @param commandType The type of command (ex: \"add\").","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tanwartushar"},"content":"     * @param argument1 The first argument associated with the command. Can be null.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tanwartushar"},"content":"     * @param argument2 The second argument associated with the command. Can be null.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tanwartushar"},"content":"    public ParsedCommand(String commandType, String argument1, String argument2) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tanwartushar"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tanwartushar"},"content":"        this.argument1 \u003d argument1;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tanwartushar"},"content":"        this.argument2 \u003d argument2;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tanwartushar"},"content":"     * Constructs a ParsedCommand with the specified command type and one argument.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tanwartushar"},"content":"     * @param commandType The type of command (ex: \"find\", \"add\", \"delete\").","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tanwartushar"},"content":"     * @param argument1 The first argument associated with the command. Can be null.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tanwartushar"},"content":"    public ParsedCommand(String commandType, String argument1) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tanwartushar"},"content":"        this(commandType, argument1, null);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tanwartushar"},"content":"     * Constructs a ParsedCommand with the specified command type and no arguments.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tanwartushar"},"content":"     * @param commandType The type of command (ex: \"list\", \"exit\").","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tanwartushar"},"content":"    public ParsedCommand(String commandType) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tanwartushar"},"content":"        this(commandType, null, null);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tanwartushar"},"content":"    public String getCommandType() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tanwartushar"},"content":"        return commandType;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tanwartushar"},"content":"    public String getArgument1() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tanwartushar"},"content":"        return argument1;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tanwartushar"},"content":"    public String getArgument2() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tanwartushar"},"content":"        return argument2;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tanwartushar"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"tanwartushar":55}},{"path":"src/main/java/donna/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanwartushar"},"content":"package donna;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tanwartushar"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tanwartushar"},"content":" * Parses user input (commands and arguments) into ParsedCommand objects.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tanwartushar"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tanwartushar"},"content":"public class Parser {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tanwartushar"},"content":"     * Parses the given input string into a ParsedCommand object.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tanwartushar"},"content":"     * The input string is split into a command and arguments based on the first space.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tanwartushar"},"content":"     * Recognizes commands such as \"bye\", \"list\", \"mark\", \"unmark\", \"delete\", \"todo\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tanwartushar"},"content":"     * \"deadline\", \"event\", and \"find\".","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tanwartushar"},"content":"     * @param input Input string containing the command and arguments.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tanwartushar"},"content":"     * @return A ParsedCommand object representing the parsed command and arguments.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tanwartushar"},"content":"     * @throws DonnaException If the command is invalid or not recognized.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tanwartushar"},"content":"    public ParsedCommand parse(String input) throws DonnaException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tanwartushar"},"content":"        String[] inputWords \u003d input.split(\" \", 2);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tanwartushar"},"content":"        String command \u003d inputWords[0];","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tanwartushar"},"content":"        String arguments \u003d inputWords.length \u003e 1 ? inputWords[1] : \"\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tanwartushar"},"content":"        switch (command) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tanwartushar"},"content":"        case \"bye\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tanwartushar"},"content":"            return new ParsedCommand(\"exit\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tanwartushar"},"content":"        case \"list\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tanwartushar"},"content":"            return new ParsedCommand(\"list\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tanwartushar"},"content":"        case \"mark\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tanwartushar"},"content":"            return new ParsedCommand(\"mark\", arguments);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tanwartushar"},"content":"        case \"unmark\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tanwartushar"},"content":"            return new ParsedCommand(\"unmark\", arguments);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tanwartushar"},"content":"        case \"delete\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tanwartushar"},"content":"            return new ParsedCommand(\"delete\", arguments);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tanwartushar"},"content":"        case \"todo\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tanwartushar"},"content":"        case \"deadline\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tanwartushar"},"content":"        case \"event\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tanwartushar"},"content":"            return new ParsedCommand(\"add\", command, arguments);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tanwartushar"},"content":"        case \"find\":","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tanwartushar"},"content":"            return new ParsedCommand(\"find\", arguments);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tanwartushar"},"content":"        default:","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tanwartushar"},"content":"            throw DonnaException.invalidTaskType(command);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tanwartushar"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tanwartushar"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"tanwartushar":44}},{"path":"src/main/java/donna/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanwartushar"},"content":"package donna;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tanwartushar"},"content":"import donna.task.Deadline;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tanwartushar"},"content":"import donna.task.Event;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tanwartushar"},"content":"import donna.task.Task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tanwartushar"},"content":"import donna.task.ToDo;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tanwartushar"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tanwartushar"},"content":"import java.io.File;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tanwartushar"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tanwartushar"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tanwartushar"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tanwartushar"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tanwartushar"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tanwartushar"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tanwartushar"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tanwartushar"},"content":" * Handles the saving and loading of tasks to and from a file.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tanwartushar"},"content":" * Manages the file and directory paths for storing task data.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tanwartushar"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tanwartushar"},"content":"public class Storage {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tanwartushar"},"content":"    private final String directoryPath;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tanwartushar"},"content":"    private final String filePath;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tanwartushar"},"content":"     * Constructs a Storage instance with the specified directory and file paths.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tanwartushar"},"content":"     * @param directoryPath The path of the directory where the file is stored.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tanwartushar"},"content":"     * @param filePath The path of the file where tasks are saved.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tanwartushar"},"content":"    public Storage(String directoryPath, String filePath) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tanwartushar"},"content":"        this.directoryPath \u003d directoryPath;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tanwartushar"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tanwartushar"},"content":"     * Saves the tasks to a file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tanwartushar"},"content":"     * Creates the directory if it does not exist.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tanwartushar"},"content":"     * @param tasks The TaskList containing tasks to be saved.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tanwartushar"},"content":"    public void saveTasks(TaskList tasks) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tanwartushar"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tanwartushar"},"content":"            Files.createDirectories(Paths.get(this.directoryPath)); //ensure directory exists","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tanwartushar"},"content":"            try (BufferedWriter writer \u003d Files.newBufferedWriter(Paths.get(this.filePath))) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tanwartushar"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tanwartushar"},"content":"                    Task task \u003d tasks.get(i);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tanwartushar"},"content":"                    writer.write(task.toFileFormat());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tanwartushar"},"content":"                    writer.newLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tanwartushar"},"content":"                }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tanwartushar"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tanwartushar"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tanwartushar"},"content":"            System.out.println(\"An error has occurred in saving the tasks: \" + e.getMessage());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tanwartushar"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tanwartushar"},"content":"     * Loads tasks from a file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tanwartushar"},"content":"     * @return An ArrayList of tasks loaded from the file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tanwartushar"},"content":"     *         Empty ArrayList is returned if file does not exist or is corrupted.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tanwartushar"},"content":"     * @throws DonnaException If there is an error while creating tasks from the file data.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tanwartushar"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws DonnaException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tanwartushar"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tanwartushar"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tanwartushar"},"content":"            Path filePath \u003d Paths.get(this.filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tanwartushar"},"content":"            if (!Files.exists(filePath)) { //ensure that the directory exists- if not, it will be created","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tanwartushar"},"content":"                return tasks; //empty arrayList is returned when no file exists","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tanwartushar"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tanwartushar"},"content":"            File file \u003d new File(String.valueOf(filePath));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tanwartushar"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tanwartushar"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tanwartushar"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tanwartushar"},"content":"                String[] inWords \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tanwartushar"},"content":"                String taskType \u003d inWords[0];","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tanwartushar"},"content":"                boolean isDone \u003d inWords[1].equals(\"1\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tanwartushar"},"content":"                Task task \u003d null;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tanwartushar"},"content":"                switch (taskType) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tanwartushar"},"content":"                case \"T\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tanwartushar"},"content":"                    task \u003d new ToDo(inWords[2]);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tanwartushar"},"content":"                    break;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tanwartushar"},"content":"                case \"D\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tanwartushar"},"content":"                    task \u003d new Deadline(inWords[2], inWords[3]);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tanwartushar"},"content":"                    break;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tanwartushar"},"content":"                case \"E\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tanwartushar"},"content":"                    task \u003d new Event(inWords[2], inWords[3], inWords[4]);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tanwartushar"},"content":"                    break;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tanwartushar"},"content":"                }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tanwartushar"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tanwartushar"},"content":"                    if (isDone) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tanwartushar"},"content":"                        task.markDone();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tanwartushar"},"content":"                    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tanwartushar"},"content":"                    tasks.add(task);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tanwartushar"},"content":"                }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tanwartushar"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tanwartushar"},"content":"        } catch (IOException | ArrayIndexOutOfBoundsException |DonnaException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tanwartushar"},"content":"            return new ArrayList\u003cTask\u003e(); //return empty arrayList to start afresh","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tanwartushar"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tanwartushar"},"content":"        return tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tanwartushar"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"tanwartushar":107}},{"path":"src/main/java/donna/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanwartushar"},"content":"package donna;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tanwartushar"},"content":"import donna.task.Task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tanwartushar"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tanwartushar"},"content":"import java.util.List;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tanwartushar"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tanwartushar"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tanwartushar"},"content":" * Contains methods to add, delete, mark, search, and retrieve tasks.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tanwartushar"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tanwartushar"},"content":"public class TaskList {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tanwartushar"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tanwartushar"},"content":"     * Constructs a new, empty TaskList.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tanwartushar"},"content":"    public TaskList() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tanwartushar"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tanwartushar"},"content":"     * Constructs a TaskList with the specified list of tasks.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tanwartushar"},"content":"     * Used if data/donna-tasks.txt exists.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tanwartushar"},"content":"     * @param tasks An ArrayList of tasks to initialize the TaskList with.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tanwartushar"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tanwartushar"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tanwartushar"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tanwartushar"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tanwartushar"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tanwartushar"},"content":"        tasks.add(task);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tanwartushar"},"content":"     * Deletes a task from the TaskList.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tanwartushar"},"content":"     * @param taskIdx The index of the task to be deleted.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tanwartushar"},"content":"     * @return The deleted task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tanwartushar"},"content":"     * @throws DonnaException If the task index is out of range.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tanwartushar"},"content":"    public Task deleteTask(int taskIdx) throws DonnaException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tanwartushar"},"content":"        if (taskIdx \u003e\u003d 0 \u0026\u0026 taskIdx \u003c tasks.size()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tanwartushar"},"content":"            return tasks.remove(taskIdx);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tanwartushar"},"content":"        } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tanwartushar"},"content":"            throw DonnaException.invalidTaskNumber();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tanwartushar"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tanwartushar"},"content":"     * Marks a task as done or not done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tanwartushar"},"content":"     * @param taskIdx The index of the task to be marked.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tanwartushar"},"content":"     * @param isDone  True to mark the task as done, false to mark it as not done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tanwartushar"},"content":"     * @return The task that was marked.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tanwartushar"},"content":"     * @throws DonnaException If the task index is out of range.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tanwartushar"},"content":"    public Task markTask(int taskIdx, boolean isDone) throws DonnaException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tanwartushar"},"content":"        if (taskIdx \u003e\u003d 0 \u0026\u0026 taskIdx \u003c tasks.size()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tanwartushar"},"content":"            Task taskToMark \u003d tasks.get(taskIdx);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tanwartushar"},"content":"            if (isDone) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tanwartushar"},"content":"                taskToMark.markDone();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tanwartushar"},"content":"            } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tanwartushar"},"content":"                taskToMark.markNotDone();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tanwartushar"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tanwartushar"},"content":"            return taskToMark;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tanwartushar"},"content":"        } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tanwartushar"},"content":"            throw DonnaException.invalidTaskNumber();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tanwartushar"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tanwartushar"},"content":"     * Searches for tasks that contain the specified keyword.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tanwartushar"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tanwartushar"},"content":"     * @return A List of tasks that contain the keyword.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tanwartushar"},"content":"    public List\u003cTask\u003e searchTasks(String keyword) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tanwartushar"},"content":"        List\u003cTask\u003e searchQuery \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tanwartushar"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tanwartushar"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tanwartushar"},"content":"            if (task.containsKeyword(keyword)) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tanwartushar"},"content":"                searchQuery.add(task);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tanwartushar"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tanwartushar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tanwartushar"},"content":"        return searchQuery;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tanwartushar"},"content":"     * Returns the number of tasks in the TaskList.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tanwartushar"},"content":"     * @return The number of tasks.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tanwartushar"},"content":"    public int getTaskCount() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tanwartushar"},"content":"        return tasks.size();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tanwartushar"},"content":"     * Retrieves a task by its index.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tanwartushar"},"content":"     * @param idx The index of the task to retrieve.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tanwartushar"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tanwartushar"},"content":"    public Task get(int idx) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tanwartushar"},"content":"        return this.tasks.get(idx);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tanwartushar"},"content":"     * Checks if the TaskList is empty.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tanwartushar"},"content":"     * @return True if the TaskList is empty, false otherwise.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tanwartushar"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tanwartushar"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tanwartushar"},"content":"     * Returns the number of tasks in the TaskList.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tanwartushar"},"content":"     * @return The number of tasks.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tanwartushar"},"content":"    public int size() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tanwartushar"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tanwartushar"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"tanwartushar":131}},{"path":"src/main/java/donna/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanwartushar"},"content":"package donna;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tanwartushar"},"content":"import donna.task.Task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tanwartushar"},"content":"import java.util.List;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tanwartushar"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tanwartushar"},"content":" * Contains user interface methods for interacting with the application.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tanwartushar"},"content":" * Handles displaying messages, task lists, and error information to the user.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tanwartushar"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tanwartushar"},"content":"public class Ui {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tanwartushar"},"content":"    static private void printDashedLine() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tanwartushar"},"content":"        System.out.println(\"____________________________________________________________________\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tanwartushar"},"content":"    static private void printDonnaLogo() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tanwartushar"},"content":"        System.out.println(\" ____      \");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tanwartushar"},"content":"        System.out.println(\"|  _ \\\\  ___  _ __  _ __   __ _ \");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tanwartushar"},"content":"        System.out.println(\"| | | |/ _ \\\\| \u0027_ \\\\| \u0027_ \\\\ / _` |\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tanwartushar"},"content":"        System.out.println(\"| |_| | (_) | | | | | | | (_| |\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tanwartushar"},"content":"        System.out.println(\"|____/ \\\\___/|_| |_|_| |_|\\\\__,_|\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tanwartushar"},"content":"        System.out.println();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tanwartushar"},"content":"     * Prints a greeting message to the user.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tanwartushar"},"content":"     * @param dataWasLoaded True if any previously saved tasks were loaded; false otherwise.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tanwartushar"},"content":"    public void printGreeting(boolean dataWasLoaded) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tanwartushar"},"content":"        printDashedLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tanwartushar"},"content":"        printDonnaLogo();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tanwartushar"},"content":"        System.out.println(\"Hello! I\u0027m Donna\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tanwartushar"},"content":"        if (dataWasLoaded) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tanwartushar"},"content":"            System.out.println(\"We have had a chat before! Let\u0027s resume :)\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tanwartushar"},"content":"        } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tanwartushar"},"content":"            System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tanwartushar"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tanwartushar"},"content":"        printDashedLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tanwartushar"},"content":"     * Prints a goodbye message to the user.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tanwartushar"},"content":"    public void printGoodbyeMessage() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tanwartushar"},"content":"        printDashedLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tanwartushar"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tanwartushar"},"content":"        printDashedLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tanwartushar"},"content":"     * Prints a message confirming that a task has been added.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tanwartushar"},"content":"     * @param task The task that was added.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tanwartushar"},"content":"     * @param taskCount The current number of tasks in the list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tanwartushar"},"content":"    public void printTaskAddedMessage(Task task, int taskCount) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tanwartushar"},"content":"        printDashedLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tanwartushar"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \" );","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tanwartushar"},"content":"        System.out.println(\"    \" + task);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tanwartushar"},"content":"        if (taskCount \u003d\u003d 1) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tanwartushar"},"content":"            System.out.println(\"This is the first task in the list. \");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tanwartushar"},"content":"        } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tanwartushar"},"content":"            System.out.println(\"You now have \" + taskCount + \" tasks in the list. \");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tanwartushar"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tanwartushar"},"content":"        printDashedLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tanwartushar"},"content":"     * Prints a message confirming that a task has been deleted.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tanwartushar"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tanwartushar"},"content":"     * @param taskCount The current number of tasks in the list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tanwartushar"},"content":"    public void printTaskDeletedMessage(Task task, int taskCount) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tanwartushar"},"content":"        printDashedLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tanwartushar"},"content":"        System.out.println(\"Alright. The following task has been deleted: \");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tanwartushar"},"content":"        System.out.println(\"    \" + task);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tanwartushar"},"content":"        if (taskCount !\u003d 1){","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tanwartushar"},"content":"            System.out.println(\"You now have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tanwartushar"},"content":"        } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tanwartushar"},"content":"            System.out.println(\"You now have 1 task left in the list.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tanwartushar"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tanwartushar"},"content":"        printDashedLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tanwartushar"},"content":"     * Prints a message confirming the status of a task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tanwartushar"},"content":"     * @param task The task that was marked.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tanwartushar"},"content":"     * @param isMarked True if the task is marked as done; false otherwise.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tanwartushar"},"content":"    public void printTaskMarkedMessage(Task task, boolean isMarked) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tanwartushar"},"content":"        printDashedLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tanwartushar"},"content":"        if (isMarked) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tanwartushar"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tanwartushar"},"content":"        } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tanwartushar"},"content":"            System.out.println(\"OK, I have marked this task as not done yet: \");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tanwartushar"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tanwartushar"},"content":"        System.out.println(\"    \" + task);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tanwartushar"},"content":"        printDashedLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tanwartushar"},"content":"     * Prints the list of all tasks.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tanwartushar"},"content":"     * @param tasks The TaskList containing tasks to be displayed.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tanwartushar"},"content":"    public void printTaskList(TaskList tasks) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tanwartushar"},"content":"        printDashedLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tanwartushar"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tanwartushar"},"content":"            System.out.println(\"No tasks added to the list yet.\"+ \"\\n\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tanwartushar"},"content":"                    + \"use todo / deadline / event to add tasks to the list!\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tanwartushar"},"content":"        } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tanwartushar"},"content":"            System.out.println(\"There are \" + tasks.size() + \" task(s) in the list: \");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tanwartushar"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tanwartushar"},"content":"                System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tanwartushar"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tanwartushar"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tanwartushar"},"content":"        printDashedLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tanwartushar"},"content":"     * Prints an error message.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tanwartushar"},"content":"     * @param message The error message to be printed.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tanwartushar"},"content":"    public void printErrorMessage(String message) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tanwartushar"},"content":"        printDashedLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tanwartushar"},"content":"        System.out.println(message);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"tanwartushar"},"content":"        printDashedLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"tanwartushar"},"content":"     * Prints the results of a search query.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"tanwartushar"},"content":"     * @param tasks The list of tasks that match the search.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"tanwartushar"},"content":"    public void printFindResults(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"tanwartushar"},"content":"        printDashedLine();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"tanwartushar"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"tanwartushar"},"content":"            System.out.println(\"No tasks found matching the search criteria :(\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"tanwartushar"},"content":"        } else {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"tanwartushar"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"tanwartushar"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"tanwartushar"},"content":"                System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"tanwartushar"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"tanwartushar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"tanwartushar"},"content":"        printDashedLine();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"tanwartushar"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"tanwartushar":152}},{"path":"src/main/java/donna/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanwartushar"},"content":"package donna.task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tanwartushar"},"content":"import donna.DonnaException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tanwartushar"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tanwartushar"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tanwartushar"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tanwartushar"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tanwartushar"},"content":" * Represents a Deadline task which includes a description and a due date/time.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tanwartushar"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tanwartushar"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tanwartushar"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tanwartushar"},"content":"    private final String description;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tanwartushar"},"content":"    private final DateTimeFormatter inputFormatter \u003d","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tanwartushar"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tanwartushar"},"content":"    private final DateTimeFormatter outputFormatter \u003d","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tanwartushar"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tanwartushar"},"content":"     * Constructs a Deadline task with the specified description and due date/time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tanwartushar"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tanwartushar"},"content":"     * @param by The due date and time of the task in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tanwartushar"},"content":"     * @throws DonnaException If the description is empty or the date/time format is invalid.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tanwartushar"},"content":"    public Deadline(String description, String by) throws DonnaException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tanwartushar"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tanwartushar"},"content":"        if (by.trim().isEmpty()) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tanwartushar"},"content":"            throw DonnaException.emptyDeadline();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tanwartushar"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tanwartushar"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tanwartushar"},"content":"            this.by \u003d LocalDateTime.parse(by, inputFormatter);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tanwartushar"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tanwartushar"},"content":"            throw new DonnaException(","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tanwartushar"},"content":"                    \"Invalid date and time format! Please use dd/MM/yyyy HHmm (24hr format)\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tanwartushar"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tanwartushar"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tanwartushar"},"content":"     * Returns a string representation of the deadline in a format suitable for saving to a file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tanwartushar"},"content":"     * @return A string representing the deadline in the format \"D | mark status | description | date\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tanwartushar"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tanwartushar"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tanwartushar"},"content":"        return \"D | \" + (this.isDone() ? \"1\" : \"0\") + \" | \" + this.description + \" | \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tanwartushar"},"content":"                + this.by.format(inputFormatter);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tanwartushar"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tanwartushar"},"content":"    public String getType() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tanwartushar"},"content":"        return \"D\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tanwartushar"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tanwartushar"},"content":"     * Includes the description, status, and due date/time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tanwartushar"},"content":"     * @return A string representing the deadline task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tanwartushar"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tanwartushar"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tanwartushar"},"content":"        return super.toString()","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tanwartushar"},"content":"                + \"(by: \" + this.by.format(outputFormatter) + \")\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tanwartushar"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"tanwartushar":68}},{"path":"src/main/java/donna/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanwartushar"},"content":"package donna.task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tanwartushar"},"content":"import donna.DonnaException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tanwartushar"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tanwartushar"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tanwartushar"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tanwartushar"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tanwartushar"},"content":" * Represents an Event task which includes a description, start time, and end time.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tanwartushar"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tanwartushar"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tanwartushar"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tanwartushar"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tanwartushar"},"content":"    private final String description;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tanwartushar"},"content":"    private final DateTimeFormatter inputFormatter \u003d","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tanwartushar"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tanwartushar"},"content":"    private final DateTimeFormatter outputFormatter \u003d","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tanwartushar"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tanwartushar"},"content":"     * Constructs an Event task with the specified description, start time, and end time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tanwartushar"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tanwartushar"},"content":"     * @param from The start time of the event in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tanwartushar"},"content":"     * @param to The end time of the event in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tanwartushar"},"content":"     * @throws DonnaException If the start or end time is empty, or if the date and time format is invalid.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tanwartushar"},"content":"    public Event(String description, String from, String to) throws DonnaException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tanwartushar"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tanwartushar"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tanwartushar"},"content":"        if (from.trim().isEmpty() \u0026\u0026 to.trim().isEmpty()) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tanwartushar"},"content":"            throw DonnaException.emptyEventTime();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tanwartushar"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tanwartushar"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tanwartushar"},"content":"            this.from \u003d LocalDateTime.parse(from, inputFormatter);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tanwartushar"},"content":"            this.to \u003d LocalDateTime.parse(to, inputFormatter);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tanwartushar"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tanwartushar"},"content":"            throw new DonnaException(","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tanwartushar"},"content":"                    \"Invalid date and time format! Please use dd/MM/yyyy HHmm (24hr format)\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tanwartushar"},"content":"                    + \"\\n\" + \"Use this format for specifying the date and time for both,\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tanwartushar"},"content":"                    + \"\\n\" + \"/from and /to\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tanwartushar"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tanwartushar"},"content":"     * Returns a string representation of the event in a format suitable for saving to a file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tanwartushar"},"content":"     * @return A string representing the event in the format \"E | mark status | description | from | to\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tanwartushar"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tanwartushar"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tanwartushar"},"content":"        String fromFormatted \u003d from.format(inputFormatter);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tanwartushar"},"content":"        String toFormatted \u003d to.format(inputFormatter);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tanwartushar"},"content":"        return \"E | \" + (this.isDone() ? \"1\" : \"0\") + \" | \" + this.description + \" | \" + fromFormatted + \" | \"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tanwartushar"},"content":"                + toFormatted;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tanwartushar"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tanwartushar"},"content":"    public String getType() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tanwartushar"},"content":"        return \"E\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tanwartushar"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tanwartushar"},"content":"     * Includes the description, status, and time range.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tanwartushar"},"content":"     * @return A string representing the event task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tanwartushar"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tanwartushar"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tanwartushar"},"content":"        String fromFormatted \u003d from.format(outputFormatter);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tanwartushar"},"content":"        String toFormatted \u003d to.format(outputFormatter);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tanwartushar"},"content":"        return super.toString() //type, status \u0026 desc","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tanwartushar"},"content":"                + \"(from: \" + fromFormatted + \" to: \" + toFormatted + \")\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tanwartushar"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"tanwartushar":78}},{"path":"src/main/java/donna/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanwartushar"},"content":"package donna.task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tanwartushar"},"content":"import donna.DonnaException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tanwartushar"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tanwartushar"},"content":" * Represents a task with a description and a completion status.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tanwartushar"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tanwartushar"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tanwartushar"},"content":"    private final String description;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tanwartushar"},"content":"    private boolean isDone;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tanwartushar"},"content":"     * Constructs a Task with the specified description.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tanwartushar"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tanwartushar"},"content":"     * @throws DonnaException If the description is empty.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tanwartushar"},"content":"    public Task(String description) throws DonnaException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tanwartushar"},"content":"        if (description.trim().isEmpty()) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tanwartushar"},"content":"            throw DonnaException.emptyDescription(this.getClass().getSimpleName());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tanwartushar"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tanwartushar"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tanwartushar"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tanwartushar"},"content":"     * Checks if the task\u0027s description contains the specified keyword.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tanwartushar"},"content":"     * @param keyword The keyword to search for in the task\u0027s description.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tanwartushar"},"content":"     * @return true if the keyword is found in the description, false otherwise.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tanwartushar"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tanwartushar"},"content":"        return this.description.toLowerCase().contains(keyword);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tanwartushar"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tanwartushar"},"content":"    public void markDone() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tanwartushar"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tanwartushar"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tanwartushar"},"content":"    public void markNotDone() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tanwartushar"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tanwartushar"},"content":"     * Checks if the task is done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tanwartushar"},"content":"     * @return true if the task is marked as done, false otherwise.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tanwartushar"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tanwartushar"},"content":"        return isDone;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tanwartushar"},"content":"     * Returns the type of task as a string.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tanwartushar"},"content":"     * This method should be implemented by subclasses to return their specific type.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tanwartushar"},"content":"     * @return The \u0027T\u0027 / \u0027D\u0027 / \u0027E\u0027 for Todo, Deadline and Event tasks respectively.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tanwartushar"},"content":"    public abstract String getType();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tanwartushar"},"content":"     * Converts the task\u0027s data into a format suitable for saving to a file.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tanwartushar"},"content":"     * This method should be implemented by subclasses to return their specific file format.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tanwartushar"},"content":"     * @return A string representing the task in a fixed format.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tanwartushar"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tanwartushar"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tanwartushar"},"content":"     * Includes the task type, completion status, and description.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tanwartushar"},"content":"     * @return A string representing the task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tanwartushar"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tanwartushar"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tanwartushar"},"content":"        String isDoneStr \u003d isDone ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tanwartushar"},"content":"        return \"[\" + getType() + \"]\" + isDoneStr + description + \" \";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tanwartushar"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"tanwartushar":87}},{"path":"src/main/java/donna/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanwartushar"},"content":"package donna.task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tanwartushar"},"content":"import donna.DonnaException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tanwartushar"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tanwartushar"},"content":" * Represents a ToDo task which includes a description.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tanwartushar"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tanwartushar"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tanwartushar"},"content":"    private final String description;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tanwartushar"},"content":"     * Constructs a ToDo task with the specified description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tanwartushar"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tanwartushar"},"content":"     * @throws DonnaException If the description is empty.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tanwartushar"},"content":"    public ToDo(String description) throws DonnaException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tanwartushar"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tanwartushar"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tanwartushar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tanwartushar"},"content":"     * Returns a string representation of the to-do task in a format suitable for saving to a file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tanwartushar"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tanwartushar"},"content":"     * @return A string representing the to-do task in the format \"T | done status | description\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tanwartushar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tanwartushar"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tanwartushar"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tanwartushar"},"content":"        return \"T | \" + (this.isDone() ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tanwartushar"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tanwartushar"},"content":"    public String getType() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tanwartushar"},"content":"        return \"T\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tanwartushar"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"tanwartushar":36}},{"path":"src/test/java/donna/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanwartushar"},"content":"package donna.task;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tanwartushar"},"content":"import donna.DonnaException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tanwartushar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tanwartushar"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tanwartushar"},"content":"class DeadlineTest {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tanwartushar"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tanwartushar"},"content":"    void testDeadlineInitialisationWithValidData() throws DonnaException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tanwartushar"},"content":"        Deadline deadline \u003d new Deadline(\"Return books\", \"30/08/2024 2359\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tanwartushar"},"content":"        assertEquals(\"[D][ ] Return books (by: Aug 30 2024, 11:59pm)\", deadline.toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tanwartushar"},"content":"        assertFalse(deadline.isDone());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tanwartushar"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tanwartushar"},"content":"    void testDeadlineInitialisationWithEmptyDeadline() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tanwartushar"},"content":"        DonnaException exception \u003d assertThrows(DonnaException.class,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tanwartushar"},"content":"                () -\u003e new Deadline(\"Return books\", \"\"),","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tanwartushar"},"content":"                \"Expected to throw DonnaException for empty deadline.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tanwartushar"},"content":"        assertEquals(\"Please provide a deadline for this task!\" + \"\\n\" + \"Use /by to provide a deadline.\",","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tanwartushar"},"content":"                exception.getMessage());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tanwartushar"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tanwartushar"},"content":"    void testDeadlineInitialisationWithInvalidDateFormat() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tanwartushar"},"content":"        DonnaException exception \u003d assertThrows(DonnaException.class, () -\u003e new Deadline(\"Return books\",","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tanwartushar"},"content":"                        \"30-08-2024 2359\"), \"Expected to throw DonnaException for invalid date format.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tanwartushar"},"content":"        assertEquals(\"Invalid date and time format! Please use dd/MM/yyyy HHmm (24hr format)\",","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tanwartushar"},"content":"                exception.getMessage());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tanwartushar"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tanwartushar"},"content":"    void testMarkingDeadlineAsDone() throws DonnaException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tanwartushar"},"content":"        Deadline deadline \u003d new Deadline(\"Return books\", \"30/08/2024 2359\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tanwartushar"},"content":"        deadline.markDone();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tanwartushar"},"content":"        assertTrue(deadline.isDone());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tanwartushar"},"content":"        assertEquals(\"[D][X] Return books (by: Aug 30 2024, 11:59pm)\", deadline.toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tanwartushar"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tanwartushar"},"content":"    void testToFileFormat() throws DonnaException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tanwartushar"},"content":"        Deadline deadline \u003d new Deadline(\"Return books\", \"30/08/2024 2359\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tanwartushar"},"content":"        assertEquals(\"D | 0 | Return books | 30/08/2024 2359\", deadline.toFileFormat());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tanwartushar"},"content":"        // Mark as done and check","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tanwartushar"},"content":"        deadline.markDone();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tanwartushar"},"content":"        assertEquals(\"D | 1 | Return books | 30/08/2024 2359\", deadline.toFileFormat());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tanwartushar"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"tanwartushar":53}},{"path":"src/test/java/donna/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanwartushar"},"content":"package donna.task;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tanwartushar"},"content":"import donna.DonnaException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tanwartushar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tanwartushar"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tanwartushar"},"content":"public class TaskTest {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tanwartushar"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tanwartushar"},"content":"    void testTaskInitialisationWithValidDescription() throws DonnaException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tanwartushar"},"content":"        Task task \u003d new ToDo(\"Valid Task\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tanwartushar"},"content":"        assertEquals(\"[T][ ] Valid Task \", task.toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tanwartushar"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tanwartushar"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tanwartushar"},"content":"    void testTaskInitialisationWithEmptyDescription() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tanwartushar"},"content":"        assertThrows(DonnaException.class, () -\u003e new ToDo(\"\"),","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tanwartushar"},"content":"                \"Expected to throw DonnaException for empty description.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tanwartushar"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tanwartushar"},"content":"    void testMarkTaskAsDone() throws DonnaException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tanwartushar"},"content":"        Task task \u003d new ToDo(\"Valid Task\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tanwartushar"},"content":"        task.markDone();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tanwartushar"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tanwartushar"},"content":"        assertEquals(\"[T][X] Valid Task \", task.toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tanwartushar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tanwartushar"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tanwartushar"},"content":"    void testMarkTaskAsNotDone() throws DonnaException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tanwartushar"},"content":"        Task task \u003d new ToDo(\"Valid Task\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tanwartushar"},"content":"        task.markDone();  // Mark done first","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tanwartushar"},"content":"        task.markNotDone();  // Then mark not done","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tanwartushar"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tanwartushar"},"content":"        assertEquals(\"[T][ ] Valid Task \", task.toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tanwartushar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tanwartushar"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"tanwartushar":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanwartushar"},"content":"todo Read book","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tanwartushar"},"content":"deadline Submit assignment /by 12/12/2020 0000","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tanwartushar"},"content":"event Team meeting /from 12/12/2020 0000 /to 12/12/2020 0000","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tanwartushar"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tanwartushar"},"content":"mark 1","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tanwartushar"},"content":"unmark 2","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tanwartushar"},"content":"delete 3","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tanwartushar"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tanwartushar"},"content":"bye","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"tanwartushar":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tanwartushar"},"content":"#create bin directory if it doesnt exist","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"  mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"  rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tanwartushar"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/donna/**/*.java","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"  echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"  exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tanwartushar"},"content":"java -classpath ../bin Donna \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tanwartushar"},"content":"# remove any trailing spaces from ACTUAL.TXT","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tanwartushar"},"content":"sed -i \u0027\u0027 \u0027s/[ \\t]*$//\u0027 ACTUAL.TXT","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tanwartushar"},"content":"# compare thew output tp the expected output","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tanwartushar"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tanwartushar"},"content":"#diff --strip-trailing-cr ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"  echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"  exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"  echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"  exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"tanwartushar":8,"-":30}}]
