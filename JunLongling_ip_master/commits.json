{"authorDailyContributionsMap":{"JunLongling":[{"date":"2024-08-19","commitResults":[{"hash":"91a6428a31653dcc10ab207d17f2169ada7d1776","isMergeCommit":false,"messageTitle":"Completed Level 0. Rename, Greet, Exit","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":10}}},{"hash":"be018ce059592e1cd69b65f5f7ad5178cd002509","isMergeCommit":false,"messageTitle":"completed Level 1. Echo","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":1}}},{"hash":"9ea782f80c1407228b0a50498300b6309054e195","isMergeCommit":false,"messageTitle":"Completed Level 2. Add, List","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":1}}},{"hash":"67402c46d27b17907f44339d975f5dfbb45095f2","isMergeCommit":false,"messageTitle":"Completed Level 3. Mark as Done","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":91,"deletions":14}}},{"hash":"941b4e793084d4a21bc19a1333877af6e1d0b2a5","isMergeCommit":false,"messageTitle":"Completed Level 4. ToDos, Events, Deadlines","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":107,"deletions":49}}},{"hash":"970e60cadcf2549490593b5efff0a57db8dc8345","isMergeCommit":false,"messageTitle":"completed  Duke A-TextUiTesting: Automated Text UI Testing","messageBody":"","tags":["Duke-A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":0},"bat":{"insertions":0,"deletions":21},"sh":{"insertions":16,"deletions":21}}},{"hash":"7ded02a12882302388fec7a0465c756081e23f9d","isMergeCommit":false,"messageTitle":"completed Level 5. Handle Errors","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":113,"deletions":86}}},{"hash":"18797a8fd636f39ad41dca8b23df1aeea7aeba00","isMergeCommit":false,"messageTitle":"completed Level 6. Delete","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":2}}},{"hash":"db223280d543a0f0f1941b13d15390576cf8013a","isMergeCommit":false,"messageTitle":"Completed A-Enums: Use Enums","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":30}}}]},{"date":"2024-08-26","commitResults":[{"hash":"207af471dac96ce323abfc991bfe2f2af4a31a98","isMergeCommit":false,"messageTitle":"Add Save","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":94,"deletions":0}}},{"hash":"f4943b521c287624be3f093b490e2e6635aecc90","isMergeCommit":false,"messageTitle":"add deadline","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1}}},{"hash":"66cbc03774e4a710b82c7a6bad44c385893f971c","isMergeCommit":false,"messageTitle":"add deadline","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":7}}},{"hash":"e3ce9de8c2fd9c9cb8c4eff60d41191bd527b276","isMergeCommit":false,"messageTitle":"add level 8","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":99,"deletions":33}}},{"hash":"5c267ea68c374663ddd2921e16679819fe930e33","isMergeCommit":false,"messageTitle":"Add A-MoreOOP","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1},"java":{"insertions":456,"deletions":288}}},{"hash":"d51c665edbf0e626b4729ecc50cfbfcc6cdc6913","isMergeCommit":false,"messageTitle":"Add A-Packages","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":2},"java":{"insertions":24,"deletions":0}}},{"hash":"6b8990b1af9af62f1594a0daa90e603ad930d6ca","isMergeCommit":true,"messageTitle":"Add A-Gradle","messageBody":"","tags":["v0.1","A-Gradle"],"fileTypesAndContributionMap":{}}]},{"date":"2024-08-27","commitResults":[{"hash":"79b15bfbf658dfc59d63ca1fa2600aa65929daf7","isMergeCommit":false,"messageTitle":"Add A-JUnit","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"gradle":{"insertions":4,"deletions":12},"java":{"insertions":76,"deletions":2}}},{"hash":"249197289e367f447b3cc594f3d914b32a8f6ffd","isMergeCommit":false,"messageTitle":"Add A-Jar","messageBody":"","tags":["A-Jar","A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}},{"hash":"d5c28e204a62225e9b791c1309016b89cb555a73","isMergeCommit":false,"messageTitle":"Add A-JavaDoc","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":436,"deletions":3}}},{"hash":"69423967e138d6d89a4722149bfc5a702ee3eae1","isMergeCommit":false,"messageTitle":"Add Level-9","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":0}}},{"hash":"51329a5ca9ff124ba654d16d1c3b1264f337cd94","isMergeCommit":true,"messageTitle":"Add A-JavaDoc","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{}}]},{"date":"2024-09-05","commitResults":[{"hash":"8a9d1d214ec124ef05494760b503a9db2c1545a1","isMergeCommit":false,"messageTitle":"Add A-CheckStyle","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{"gradle":{"insertions":4,"deletions":0},"java":{"insertions":41,"deletions":21}}},{"hash":"13096bbfa84e461bd2d1aaf227e503442a04e67a","isMergeCommit":false,"messageTitle":"fix: address reviewer feedback for consistency in line breaks","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":3,"deletions":3}}},{"hash":"091f3f5e618d80bda50b19e1c0e3e4f0ed73229d","isMergeCommit":false,"messageTitle":"Add Level 10. GUI","messageBody":"","tags":["branch-level-10","Level-10"],"fileTypesAndContributionMap":{"gradle":{"insertions":16,"deletions":2},"txt":{"insertions":2,"deletions":2},"fxml":{"insertions":66,"deletions":0},"java":{"insertions":359,"deletions":155}}}]},{"date":"2024-09-06","commitResults":[{"hash":"349a5d9778d22854ea91e0c2379e02039bff9c96","isMergeCommit":false,"messageTitle":"no message","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"6ee0b825b6964d904349c83961bad09f8eb1f442","isMergeCommit":false,"messageTitle":"Review for varargs applicability; no changes needed","messageBody":"","tags":["v0.2","A-Varargs"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0}}}]},{"date":"2024-09-09","commitResults":[{"hash":"82b4f9c3c2512b80918e75e16855009ebb08a30a","isMergeCommit":false,"messageTitle":"Update build.gradle to generate a new JAR file","messageBody":"The current configuration does not generate a JAR file, which\nis necessary for distribution.\n\nThis change adds the necessary tasks to build.gradle for creating\na JAR file during the build process.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":1},"txt":{"insertions":3,"deletions":4}}},{"hash":"f2634d93931cd8861795aee74f8686c67f614629","isMergeCommit":false,"messageTitle":"Implement assert feature to document important assumptions in code","messageBody":"The code now includes assertions to check for critical assumptions at various points. These assertions validate important preconditions, such as ensuring non-null inputs, valid indices, and properly initialized objects. Additionally, assertions document control-flow and class invariants, such as ensuring that certain values remain within expected ranges.\n\nThis change enhances the robustness of the code by helping catch potential issues early during development. Assertions are not intended for normal error handling and will be disabled in production builds for performance reasons.\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":2},"java":{"insertions":57,"deletions":2}}}]},{"date":"2024-09-10","commitResults":[{"hash":"684cd40d3a7874d1550fe7e649fa3ed5d344a556","isMergeCommit":true,"messageTitle":"Merge pull request #1 from JunLongling/branch-A-Assertions","messageBody":"Add assertions to check critical assumptions","tags":["A-Assertions"],"fileTypesAndContributionMap":{}},{"hash":"426f569f204792f426cd777d3b376fd9c63699fe","isMergeCommit":false,"messageTitle":"Refactor Parser class to eliminate arrowhead anti-pattern","messageBody":"Refactored the `parseDateTime` method in the `Parser` class to remove\nnested try-catch blocks and avoid the arrowhead anti-pattern.\nThis improves code readability and maintainability by reducing\ndeep nesting and simplifying the control flow.\n\nThe refactoring maintains the functionality of parsing date strings\nusing multiple predefined formats, ensuring invalid inputs are\nhandled appropriately and providing feedback for invalid formats.\n","tags":["branch-A-CodeQuality"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":55,"deletions":29}}},{"hash":"1ff7a2c269b041e0bfde0eef365c2eb7df9cdb77","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-CodeQuality","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"2ab0dfbdcbedb49894504c136c683145e8ec97da","isMergeCommit":true,"messageTitle":"Merge pull request #2 from JunLongling/branch-A-CodeQuality","messageBody":"Refactor Parser class to eliminate arrowhead anti-pattern","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{}},{"hash":"2f95479a86c298ef78b2d24ffa78e207a0069c85","isMergeCommit":false,"messageTitle":"Refactor Parser class to use Streams for date parsing","messageBody":"Refactored the `parseDateTime` method in the `Parser` class to utilize\nJava Streams for cleaner and more efficient code. Streams are now\nused to attempt parsing with various date and time formats, and\nOptional is returned to handle success or failure gracefully.\n\nThis approach reduces nested if-else statements (arrowhead code)\nand enhances readability and maintainability of the code. DateTime\nand Date parsing functions have been separated for better structure.\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1},"java":{"insertions":39,"deletions":36}}},{"hash":"d732b7738ee5aa2fa710e374de3075f1cbc5e950","isMergeCommit":true,"messageTitle":"Merge pull request #3 from JunLongling/branch-A-Streams","messageBody":"Refactor Parser class to use Streams for date parsing","tags":["A-Streams"],"fileTypesAndContributionMap":{}},{"hash":"ff4818fa20a43a63396038f1d449ac5637485fb2","isMergeCommit":false,"messageTitle":"Set up Continuous Integration with GitHub Actions","messageBody":"This commit adds GitHub Actions for continuous integration. The workflow is\nconfigured to run tests automatically on each push to the repository. This\nensures that code changes meet quality standards before being merged.\n\nCI tasks include:\n- Compiling the codebase.\n- Running the unit tests.\n- Reporting test results for feedback.\n\nWith this setup, the team will benefit from automatic validation of code\nbefore it is merged, ensuring higher code quality and reducing potential\nissues.\n","tags":["A-CI"],"fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":1},"java":{"insertions":33,"deletions":29}}},{"hash":"5c9275241fd62bbf65956f02f04a91502f3c52ec","isMergeCommit":false,"messageTitle":"Complete C-Priority Implementation","messageBody":"- Added functionality to handle priority levels for tasks.\n- Updated related classes and methods to integrate priority settings.\n- Ensured correct priority display in task representations.\n- Added test cases to verify priority handling.\n\nDetails:\n- Implemented priority management in Deadline, Event, and ToDo tasks.\n- Updated `toString` and `toFileFormat` methods for accurate priority display.\n- Verified functionality with JUnit tests.\n","tags":["BCD-Extension"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1},"java":{"insertions":573,"deletions":250}}}]}]},"authorFileTypeContributionMap":{"JunLongling":{"java":1834,"md":0,"fxml":66,"sh":15,"bat":0,"gradle":23,"txt":1}},"authorContributionVariance":{"JunLongling":108510.164},"authorDisplayNameMap":{"JunLongling":"CS2103T-F14a-3 LING..LONG"}}
