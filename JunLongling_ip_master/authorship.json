[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JunLongling"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JunLongling"},"content":"    mainClass.set(\"GPT.GPT\")","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JunLongling"},"content":"    archiveBaseName \u003d \"GPT\"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JunLongling"},"content":"checkstyle {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JunLongling"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JunLongling"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JunLongling"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"JunLongling":8,"-":29}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JunLongling"},"content":"T | 0 | read a book","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JunLongling"},"content":"E | 0 | project meeting | 2019-12-02 1400 | 2019-12-02 1600","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"JunLongling":2}},{"path":"src/main/java/GPT/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunLongling"},"content":"package GPT;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JunLongling"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JunLongling"},"content":" * Represents an abstract command that can be executed in the GPT application.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JunLongling"},"content":" * Subclasses of Command should implement the execute method to define the behavior","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JunLongling"},"content":" * of the specific command.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JunLongling"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JunLongling"},"content":"public abstract class Command {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JunLongling"},"content":"     * Executes the command with the provided task list, user interface, and storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JunLongling"},"content":"     * Subclasses must implement this method to provide the specific behavior for the command.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JunLongling"},"content":"     * @param taskList The list of tasks to operate on.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JunLongling"},"content":"     * @param ui       The user interface that displays messages to the user.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JunLongling"},"content":"     * @param storage  The storage handler that manages task persistence.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JunLongling"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JunLongling"},"content":"     * Indicates whether this command will exit the program.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JunLongling"},"content":"     * By default, this returns false, meaning the program will continue running after","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JunLongling"},"content":"     * the command is executed. Subclasses can override this method to return true if","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JunLongling"},"content":"     * the command should terminate the application (e.g., a \"bye\" command).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JunLongling"},"content":"     * @return false by default, indicating that the program should not exit.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JunLongling"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JunLongling"},"content":"        return false;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JunLongling"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"JunLongling":29}},{"path":"src/main/java/GPT/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunLongling"},"content":"package GPT;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JunLongling"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JunLongling"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JunLongling"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JunLongling"},"content":" * Represents a task with a deadline in the GPT application.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JunLongling"},"content":" * This class extends the Task class to include a specific date and time by which the task should be completed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JunLongling"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JunLongling"},"content":"class Deadline extends Task {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JunLongling"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JunLongling"},"content":"    private LocalDateTime by;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JunLongling"},"content":"     * Constructs a Deadline task with the specified description and deadline.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JunLongling"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JunLongling"},"content":"     * @param by          The date and time by which the task should be completed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JunLongling"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JunLongling"},"content":"        super(description, TaskType.DEADLINE);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JunLongling"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JunLongling"},"content":"     * Returns a string format suitable for saving the deadline task to a file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JunLongling"},"content":"     * @return A string representation of the deadline task in a format suitable for file storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JunLongling"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JunLongling"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JunLongling"},"content":"        if (by !\u003d null) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JunLongling"},"content":"            return String.format(\"D | %d | %s | %s\",","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JunLongling"},"content":"                    isDone ? 1 : 0,","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JunLongling"},"content":"                    description,","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JunLongling"},"content":"                    by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")));","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JunLongling"},"content":"        } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JunLongling"},"content":"            return String.format(\"D | %d | %s | [Invalid Date]\",","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JunLongling"},"content":"                    isDone ? 1 : 0,","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JunLongling"},"content":"                    description);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JunLongling"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JunLongling"},"content":"     * Returns a string representation of the deadline task, including the deadline date and time.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JunLongling"},"content":"     * @return A string representation of the deadline task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JunLongling"},"content":"    @Override","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JunLongling"},"content":"    public String toString() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JunLongling"},"content":"        if (by !\u003d null) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JunLongling"},"content":"            return super.toString() + \" (by: \" + by.format(OUTPUT_FORMATTER) + \")\";","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JunLongling"},"content":"        } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JunLongling"},"content":"            return super.toString() + \" (by: [Invalid Date])\";","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JunLongling"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JunLongling"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"JunLongling":56}},{"path":"src/main/java/GPT/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunLongling"},"content":"package GPT;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JunLongling"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JunLongling"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JunLongling"},"content":" * Represents a command to add a new deadline task in the GPT application.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JunLongling"},"content":" * This command parses the user input to extract the task description and deadline,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JunLongling"},"content":" * and adds the task to the task list if the input is valid.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JunLongling"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JunLongling"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JunLongling"},"content":"    private String description;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JunLongling"},"content":"    private String by;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JunLongling"},"content":"     * Constructs a DeadlineCommand by parsing the user input to extract the task description","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JunLongling"},"content":"     * and deadline. If the input format is invalid, the description and deadline will be set to null.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JunLongling"},"content":"     * @param input The user input string containing the command to add a deadline task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JunLongling"},"content":"    public DeadlineCommand(String input) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JunLongling"},"content":"        String[] parts \u003d input.substring(8).trim().split(\"/by\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JunLongling"},"content":"        if (parts.length \u003c 2 || parts[0].trim().isEmpty()) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JunLongling"},"content":"            this.description \u003d null;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JunLongling"},"content":"            this.by \u003d null;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JunLongling"},"content":"        } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JunLongling"},"content":"            this.description \u003d parts[0].trim();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JunLongling"},"content":"            this.by \u003d parts[1].trim();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JunLongling"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JunLongling"},"content":"     * Executes the command to add a new deadline task to the task list. If the command format","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JunLongling"},"content":"     * is invalid, an error message is displayed. Otherwise, the task is added, saved, and a","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JunLongling"},"content":"     * confirmation message is shown.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JunLongling"},"content":"     * @param taskList The list of tasks to which the new task will be added.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JunLongling"},"content":"     * @param ui       The user interface that displays messages to the user.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JunLongling"},"content":"     * @param storage  The storage handler that manages task persistence.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JunLongling"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JunLongling"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JunLongling"},"content":"        if (description \u003d\u003d null || by \u003d\u003d null) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JunLongling"},"content":"            ui.showError(","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JunLongling"},"content":"                    \"Invalid command format for deadline.\\nUsage: deadline [task description] /by [date/time]\\n\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JunLongling"},"content":"                            + \"Example: deadline return book /by 2/12/2019 1800\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JunLongling"},"content":"            );","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JunLongling"},"content":"            return;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JunLongling"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JunLongling"},"content":"        LocalDateTime byDateTime \u003d Parser.parseDateTime(by);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JunLongling"},"content":"        if (byDateTime !\u003d null) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JunLongling"},"content":"            Task newTask \u003d new Deadline(description, byDateTime);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JunLongling"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JunLongling"},"content":"            storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JunLongling"},"content":"            ui.showTaskAdded(newTask, taskList.getTasks().size());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JunLongling"},"content":"        } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JunLongling"},"content":"            ui.showError(\"The task was not added because of an invalid date.\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JunLongling"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JunLongling"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"JunLongling":59}},{"path":"src/main/java/GPT/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunLongling"},"content":"package GPT;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JunLongling"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JunLongling"},"content":" * Represents a command to delete a task from the task list in the GPT application.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JunLongling"},"content":" * This command parses the user input to determine which task to delete by its index.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JunLongling"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JunLongling"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JunLongling"},"content":"    private int index;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JunLongling"},"content":"     * Constructs a DeleteCommand by parsing the user input to extract the index of the task","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JunLongling"},"content":"     * to be deleted. The index is adjusted to be zero-based (subtracting 1).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JunLongling"},"content":"     * @param input The user input string containing the command to delete a task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JunLongling"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JunLongling"},"content":"        this.index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JunLongling"},"content":"     * Executes the command to delete the specified task from the task list. If the task","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JunLongling"},"content":"     * index is valid, the task is removed, the updated list is saved, and a confirmation","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JunLongling"},"content":"     * message is shown. If the index is invalid, an error message is displayed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JunLongling"},"content":"     * @param taskList The list of tasks from which the task will be deleted.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JunLongling"},"content":"     * @param ui       The user interface that displays messages to the user.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JunLongling"},"content":"     * @param storage  The storage handler that manages task persistence.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JunLongling"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JunLongling"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JunLongling"},"content":"        try {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JunLongling"},"content":"            Task removedTask \u003d taskList.getTasks().get(index);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JunLongling"},"content":"            taskList.deleteTask(index);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JunLongling"},"content":"            storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JunLongling"},"content":"            ui.showTaskRemoved(removedTask, taskList.getTasks().size());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JunLongling"},"content":"        } catch (GPTException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JunLongling"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JunLongling"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JunLongling"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"JunLongling":39}},{"path":"src/main/java/GPT/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunLongling"},"content":"package GPT;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JunLongling"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JunLongling"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JunLongling"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JunLongling"},"content":" * Represents an event task with a start time and an end time in the GPT application.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JunLongling"},"content":" * This class extends the Task class to include specific start and end times for the event.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JunLongling"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JunLongling"},"content":"class Event extends Task {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JunLongling"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JunLongling"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JunLongling"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JunLongling"},"content":"     * Constructs an Event task with the specified description, start time, and end time.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JunLongling"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JunLongling"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JunLongling"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JunLongling"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JunLongling"},"content":"        super(description, TaskType.EVENT);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JunLongling"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JunLongling"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JunLongling"},"content":"     * Returns a string representation of the event task, including the start and end times.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JunLongling"},"content":"     * @return A string representation of the event task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JunLongling"},"content":"    @Override","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JunLongling"},"content":"    public String toString() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JunLongling"},"content":"        if (from !\u003d null \u0026\u0026 to !\u003d null) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JunLongling"},"content":"            return super.toString() + \" (from: \" + from.format(OUTPUT_FORMATTER) + \" to: \"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JunLongling"},"content":"                    + to.format(OUTPUT_FORMATTER) + \")\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JunLongling"},"content":"        } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JunLongling"},"content":"            return super.toString() + \" (from: [Invalid Date] to: [Invalid Date])\";","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JunLongling"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JunLongling"},"content":"     * Returns a string format suitable for saving the event task to a file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JunLongling"},"content":"     * @return A string representation of the event task in a format suitable for file storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JunLongling"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JunLongling"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JunLongling"},"content":"        if (from !\u003d null \u0026\u0026 to !\u003d null) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JunLongling"},"content":"            return String.format(\"E | %d | %s | %s | %s\",","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JunLongling"},"content":"                    isDone ? 1 : 0,","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JunLongling"},"content":"                    description,","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JunLongling"},"content":"                    from.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")),","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JunLongling"},"content":"                    to.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")));","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JunLongling"},"content":"        } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JunLongling"},"content":"            return String.format(\"E | %d | %s | [Invalid Date] | [Invalid Date]\",","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JunLongling"},"content":"                    isDone ? 1 : 0,","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JunLongling"},"content":"                    description);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JunLongling"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JunLongling"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"JunLongling":62}},{"path":"src/main/java/GPT/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunLongling"},"content":"package GPT;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JunLongling"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JunLongling"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JunLongling"},"content":" * Represents a command to add a new event task in the GPT application.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JunLongling"},"content":" * This command parses the user input to extract the task description, start time, and end time,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JunLongling"},"content":" * and adds the task to the task list if the input is valid.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JunLongling"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JunLongling"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JunLongling"},"content":"    private String description;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JunLongling"},"content":"    private String from;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JunLongling"},"content":"    private String to;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JunLongling"},"content":"     * Constructs an EventCommand by parsing the user input to extract the task description,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JunLongling"},"content":"     * start time, and end time. If the input format is invalid, the description, start time,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JunLongling"},"content":"     * and end time will be set to null.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JunLongling"},"content":"     * @param input The user input string containing the command to add an event task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JunLongling"},"content":"    public EventCommand(String input) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JunLongling"},"content":"        String[] parts \u003d input.substring(5).trim().split(\"/from|/to\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JunLongling"},"content":"        if (parts.length \u003c 3 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty() || parts[2].trim().isEmpty()) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JunLongling"},"content":"            this.description \u003d null;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JunLongling"},"content":"            this.from \u003d null;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JunLongling"},"content":"            this.to \u003d null;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JunLongling"},"content":"        } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JunLongling"},"content":"            this.description \u003d parts[0].trim();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JunLongling"},"content":"            this.from \u003d parts[1].trim();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JunLongling"},"content":"            this.to \u003d parts[2].trim();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JunLongling"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JunLongling"},"content":"     * Executes the command to add a new event task to the task list. If the command format","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JunLongling"},"content":"     * is invalid, an error message is displayed. Otherwise, the task is added, saved, and a","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JunLongling"},"content":"     * confirmation message is shown.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JunLongling"},"content":"     * @param taskList The list of tasks to which the new task will be added.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JunLongling"},"content":"     * @param ui       The user interface that displays messages to the user.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JunLongling"},"content":"     * @param storage  The storage handler that manages task persistence.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JunLongling"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JunLongling"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JunLongling"},"content":"        if (description \u003d\u003d null || from \u003d\u003d null || to \u003d\u003d null) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JunLongling"},"content":"            ui.showError(","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JunLongling"},"content":"                    \"Invalid command format for event.\\nUsage: event [task description] /from [start date/time] \"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JunLongling"},"content":"                            + \"/to [end date/time]\\n\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JunLongling"},"content":"                            + \"Example: event project meeting /from 2/12/2019 1400 /to 2/12/2019 1600\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JunLongling"},"content":"            );","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JunLongling"},"content":"            return;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JunLongling"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JunLongling"},"content":"        LocalDateTime fromDateTime \u003d Parser.parseDateTime(from);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JunLongling"},"content":"        LocalDateTime toDateTime \u003d Parser.parseDateTime(to);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JunLongling"},"content":"        if (fromDateTime !\u003d null \u0026\u0026 toDateTime !\u003d null) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JunLongling"},"content":"            Task newTask \u003d new Event(description, fromDateTime, toDateTime);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JunLongling"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JunLongling"},"content":"            storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JunLongling"},"content":"            ui.showTaskAdded(newTask, taskList.getTasks().size());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JunLongling"},"content":"        } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JunLongling"},"content":"            ui.showError(\"The task was not added because of an invalid date or time.\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JunLongling"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JunLongling"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"JunLongling":66}},{"path":"src/main/java/GPT/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunLongling"},"content":"package GPT;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JunLongling"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JunLongling"},"content":" * Represents a command to exit the GPT application.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JunLongling"},"content":" * This command displays a goodbye message and signals the application to terminate.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JunLongling"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JunLongling"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JunLongling"},"content":"     * Executes the command to exit the application by displaying a goodbye message.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JunLongling"},"content":"     * @param taskList The list of tasks (not used in this command).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JunLongling"},"content":"     * @param ui       The user interface that displays messages to the user.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JunLongling"},"content":"     * @param storage  The storage handler that manages task persistence (not used in this command).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JunLongling"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JunLongling"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JunLongling"},"content":"        ui.showGoodbyeMessage();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JunLongling"},"content":"     * Indicates that this command will exit the program.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JunLongling"},"content":"     * @return true, indicating that the program should terminate after this command is executed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JunLongling"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JunLongling"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JunLongling"},"content":"        return true;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JunLongling"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"JunLongling":28}},{"path":"src/main/java/GPT/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunLongling"},"content":"package GPT;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JunLongling"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JunLongling"},"content":"import java.util.List;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JunLongling"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JunLongling"},"content":" * Represents a command to find tasks in the GPT application based on a keyword.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JunLongling"},"content":" * The command searches through the task list and displays matching tasks.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JunLongling"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JunLongling"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JunLongling"},"content":"    private String keyword;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JunLongling"},"content":"     * Constructs a FindCommand by extracting the keyword from the user input.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JunLongling"},"content":"     * @param input The user input string containing the command to find tasks.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JunLongling"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JunLongling"},"content":"        this.keyword \u003d input.substring(5).trim(); // Extract keyword after \"find \"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JunLongling"},"content":"     * Executes the command to find tasks that match the keyword.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JunLongling"},"content":"     * Displays the matching tasks or a message if no tasks are found.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JunLongling"},"content":"     * @param taskList The list of tasks to search.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JunLongling"},"content":"     * @param ui       The user interface that displays messages to the user.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JunLongling"},"content":"     * @param storage  The storage handler that manages task persistence.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JunLongling"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JunLongling"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JunLongling"},"content":"        List\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JunLongling"},"content":"        for (Task task : taskList.getTasks()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JunLongling"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JunLongling"},"content":"                matchedTasks.add(task);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JunLongling"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JunLongling"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JunLongling"},"content":"        ui.showMatchingTasks(matchedTasks);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JunLongling"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"JunLongling":41}},{"path":"src/main/java/GPT/GPT.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunLongling"},"content":"package GPT;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JunLongling"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JunLongling"},"content":" * The main class for the GPT application, which handles the initialization of the","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JunLongling"},"content":" * user interface, storage, and task list, and runs the main application loop.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JunLongling"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JunLongling"},"content":"public class GPT {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JunLongling"},"content":"    private Ui ui;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JunLongling"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JunLongling"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JunLongling"},"content":"     * Constructs a new GPT application with the specified file path for task storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JunLongling"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JunLongling"},"content":"    public GPT(String filePath) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JunLongling"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JunLongling"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JunLongling"},"content":"        taskList \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JunLongling"},"content":"     * Runs the main loop of the GPT application, which continuously reads commands","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JunLongling"},"content":"     * from the user, processes them, and handles any exceptions that occur.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JunLongling"},"content":"    public void run() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JunLongling"},"content":"        ui.showWelcomeMessage(\"GPT\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JunLongling"},"content":"        while (true) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JunLongling"},"content":"            try {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JunLongling"},"content":"                String input \u003d ui.readCommand();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JunLongling"},"content":"                Command command \u003d Parser.parseCommand(input);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JunLongling"},"content":"                command.execute(taskList, ui, storage);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JunLongling"},"content":"                if (command.isExit()) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JunLongling"},"content":"                    break;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JunLongling"},"content":"                }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JunLongling"},"content":"            } catch (GPTException e) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JunLongling"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JunLongling"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JunLongling"},"content":"                ui.showError(\"An unexpected error occurred: \" + e.getMessage());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JunLongling"},"content":"            }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JunLongling"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JunLongling"},"content":"     * The main entry point of the GPT application. Initializes the application with","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JunLongling"},"content":"     * the specified file path for task storage and starts the main loop.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JunLongling"},"content":"     * @param args Command line arguments (not used).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JunLongling"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JunLongling"},"content":"        new GPT(\"data/tasks.txt\").run();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JunLongling"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"JunLongling":57}},{"path":"src/main/java/GPT/GPTException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunLongling"},"content":"package GPT;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JunLongling"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JunLongling"},"content":" * Represents a custom exception used in the GPT application.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JunLongling"},"content":" * This exception is thrown when an error specific to the GPT application occurs.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JunLongling"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JunLongling"},"content":"public class GPTException extends Exception {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JunLongling"},"content":"     * Constructs a new GPTException with the specified detail message.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JunLongling"},"content":"     * @param message The detail message, which is saved for later retrieval by the {@link #getMessage()} method.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JunLongling"},"content":"    public GPTException(String message) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JunLongling"},"content":"        super(message);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JunLongling"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"JunLongling":15}},{"path":"src/main/java/GPT/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunLongling"},"content":"package GPT;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JunLongling"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JunLongling"},"content":" * Represents a command that provides help information to the user in the GPT application.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JunLongling"},"content":" * This command displays a list of available commands and their usage when executed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JunLongling"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JunLongling"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JunLongling"},"content":"     * Executes the help command by displaying a list of available commands and their usage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JunLongling"},"content":"     * @param taskList The list of tasks (not used in this command).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JunLongling"},"content":"     * @param ui       The user interface that displays messages to the user.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JunLongling"},"content":"     * @param storage  The storage handler that manages task persistence (not used in this command).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JunLongling"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JunLongling"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JunLongling"},"content":"        ui.showLine();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JunLongling"},"content":"        System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JunLongling"},"content":"        System.out.println(\"You can try these commands:\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JunLongling"},"content":"        System.out.println(\"  todo [task description] - To add a ToDo task\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JunLongling"},"content":"        System.out.println(\"  deadline [task description] /by [date/time] - To add a Deadline task\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JunLongling"},"content":"        System.out.println(\"  event [task description] /from [start date/time]\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JunLongling"},"content":"                + \"/to [end date/time] - To add an Event task\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JunLongling"},"content":"        System.out.println(\"  list - To display all tasks\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JunLongling"},"content":"        System.out.println(\"  mark [task number] - To mark a task as done\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JunLongling"},"content":"        System.out.println(\"  unmark [task number] - To unmark a task\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JunLongling"},"content":"        System.out.println(\"  delete [task number] - To delete a task\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JunLongling"},"content":"        System.out.println(\"  bye - To exit the chatbot\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JunLongling"},"content":"        ui.showLine();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JunLongling"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"JunLongling":30}},{"path":"src/main/java/GPT/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunLongling"},"content":"package GPT;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JunLongling"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JunLongling"},"content":" * Represents a command to list all tasks in the GPT application.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JunLongling"},"content":" * This command displays the current list of tasks to the user.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JunLongling"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JunLongling"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JunLongling"},"content":"     * Executes the list command by displaying the current list of tasks.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JunLongling"},"content":"     * @param taskList The list of tasks to be displayed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JunLongling"},"content":"     * @param ui       The user interface that displays messages to the user.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JunLongling"},"content":"     * @param storage  The storage handler that manages task persistence (not used in this command).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JunLongling"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JunLongling"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JunLongling"},"content":"        ui.showTaskList(taskList.getTasks());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JunLongling"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"JunLongling":18}},{"path":"src/main/java/GPT/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunLongling"},"content":"package GPT;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JunLongling"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JunLongling"},"content":" * Represents a command to mark a task as completed in the GPT application.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JunLongling"},"content":" * This command identifies the task to be marked based on the user input and updates its status.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JunLongling"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JunLongling"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JunLongling"},"content":"    private int index;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JunLongling"},"content":"     * Constructs a MarkCommand by parsing the user input to determine the index of the task to be marked.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JunLongling"},"content":"     * The index is adjusted to be zero-based (subtracting 1).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JunLongling"},"content":"     * @param input The user input string containing the command to mark a task as completed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JunLongling"},"content":"    public MarkCommand(String input) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JunLongling"},"content":"        this.index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JunLongling"},"content":"     * Executes the command to mark the specified task as completed. If the task index is valid,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JunLongling"},"content":"     * the task is marked as completed, the updated list is saved, and a confirmation message is shown.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JunLongling"},"content":"     * If the index is invalid, an error message is displayed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JunLongling"},"content":"     * @param taskList The list of tasks containing the task to be marked.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JunLongling"},"content":"     * @param ui       The user interface that displays messages to the user.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JunLongling"},"content":"     * @param storage  The storage handler that manages task persistence.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JunLongling"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JunLongling"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JunLongling"},"content":"        try {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JunLongling"},"content":"            taskList.markTask(index);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JunLongling"},"content":"            storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JunLongling"},"content":"            ui.showTaskAdded(taskList.getTasks().get(index), taskList.getTasks().size());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JunLongling"},"content":"        } catch (GPTException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JunLongling"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JunLongling"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JunLongling"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"JunLongling":37}},{"path":"src/main/java/GPT/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunLongling"},"content":"package GPT;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JunLongling"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JunLongling"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JunLongling"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JunLongling"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JunLongling"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JunLongling"},"content":" * The Parser class is responsible for interpreting user input and converting it","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JunLongling"},"content":" * into executable commands or parsing date and time strings into LocalDateTime objects.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JunLongling"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JunLongling"},"content":"public class Parser {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JunLongling"},"content":"     * Parses the user input and returns the corresponding Command object.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JunLongling"},"content":"     * This method identifies the type of command based on the input and creates the appropriate Command subclass.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JunLongling"},"content":"     * @param input The user input string to be parsed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JunLongling"},"content":"     * @return The corresponding Command object based on the input.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JunLongling"},"content":"     * @throws GPTException If the input cannot be parsed into a valid command.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JunLongling"},"content":"    public static Command parseCommand(String input) throws GPTException {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JunLongling"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JunLongling"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JunLongling"},"content":"        } else if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JunLongling"},"content":"            return new ListCommand();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JunLongling"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JunLongling"},"content":"            return new MarkCommand(input);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JunLongling"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JunLongling"},"content":"            return new UnmarkCommand(input);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JunLongling"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JunLongling"},"content":"            return new DeleteCommand(input);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JunLongling"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JunLongling"},"content":"            return new TodoCommand(input);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JunLongling"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JunLongling"},"content":"            return new DeadlineCommand(input);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JunLongling"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JunLongling"},"content":"            return new EventCommand(input);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JunLongling"},"content":"        } else if (input.startsWith(\"find\")) { // Added \"find\" command","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JunLongling"},"content":"            return new FindCommand(input);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JunLongling"},"content":"        } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JunLongling"},"content":"            return new HelpCommand(); // Return a HelpCommand when an unrecognized input is entered","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JunLongling"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JunLongling"},"content":"     * Parses a date and time string into a LocalDateTime object.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JunLongling"},"content":"     * This method attempts to parse the input string using several predefined date and time formats.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JunLongling"},"content":"     * If the input matches one of the formats, a corresponding LocalDateTime object is returned.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JunLongling"},"content":"     * @param dateTimeStr The date and time string to be parsed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JunLongling"},"content":"     * @return A LocalDateTime object representing the parsed date and time, or null if the input is invalid.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JunLongling"},"content":"    public static LocalDateTime parseDateTime(String dateTimeStr) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JunLongling"},"content":"        DateTimeFormatter formatter1 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JunLongling"},"content":"        DateTimeFormatter formatter2 \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JunLongling"},"content":"        DateTimeFormatter formatter3 \u003d DateTimeFormatter.ofPattern(\"yyyy-M-d HHmm\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JunLongling"},"content":"        DateTimeFormatter formatter4 \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JunLongling"},"content":"        DateTimeFormatter formatter5 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JunLongling"},"content":"        try {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JunLongling"},"content":"            return LocalDateTime.parse(dateTimeStr, formatter1);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JunLongling"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JunLongling"},"content":"            try {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JunLongling"},"content":"                return LocalDateTime.parse(dateTimeStr, formatter2);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JunLongling"},"content":"            } catch (DateTimeParseException ex) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JunLongling"},"content":"                try {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JunLongling"},"content":"                    return LocalDateTime.parse(dateTimeStr, formatter3);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JunLongling"},"content":"                } catch (DateTimeParseException exc) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JunLongling"},"content":"                    try {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JunLongling"},"content":"                        LocalDate date \u003d LocalDate.parse(dateTimeStr, formatter4);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JunLongling"},"content":"                        return date.atStartOfDay();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JunLongling"},"content":"                    } catch (DateTimeParseException exc2) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JunLongling"},"content":"                        try {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JunLongling"},"content":"                            LocalDate date \u003d LocalDate.parse(dateTimeStr, formatter5);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JunLongling"},"content":"                            return date.atStartOfDay();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JunLongling"},"content":"                        } catch (DateTimeParseException exc3) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JunLongling"},"content":"                            System.out.println(\"Invalid date format. Please use yyyy-MM-dd HHmm, \"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JunLongling"},"content":"                                    + \"d/M/yyyy HHmm, or yyyy-MM-dd format.\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JunLongling"},"content":"                            return null;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JunLongling"},"content":"                        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JunLongling"},"content":"                    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JunLongling"},"content":"                }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JunLongling"},"content":"            }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JunLongling"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JunLongling"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"JunLongling":86}},{"path":"src/main/java/GPT/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunLongling"},"content":"package GPT;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JunLongling"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JunLongling"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JunLongling"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JunLongling"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JunLongling"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JunLongling"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JunLongling"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JunLongling"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JunLongling"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JunLongling"},"content":" * The Storage class is responsible for handling the loading and saving of tasks","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JunLongling"},"content":" * to and from a file in the GPT application. It manages the file I/O operations","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JunLongling"},"content":" * and ensures that tasks are correctly persisted.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JunLongling"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JunLongling"},"content":"public class Storage {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JunLongling"},"content":"    private Path filePath;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JunLongling"},"content":"     * Constructs a Storage object with the specified file path for storing tasks.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JunLongling"},"content":"     * If the directory for the file does not exist, it will be created.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JunLongling"},"content":"     * @param filePath The file path where tasks will be stored.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JunLongling"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JunLongling"},"content":"        this.filePath \u003d Paths.get(filePath);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JunLongling"},"content":"        try {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JunLongling"},"content":"            if (!Files.exists(this.filePath.getParent())) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JunLongling"},"content":"                Files.createDirectories(this.filePath.getParent());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JunLongling"},"content":"            }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JunLongling"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JunLongling"},"content":"            System.out.println(\"An error occurred while creating directories: \" + e.getMessage());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JunLongling"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JunLongling"},"content":"     * Loads tasks from the specified file and returns them as an ArrayList of Task objects.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JunLongling"},"content":"     * If the file does not exist or an error occurs during reading, an empty list is returned.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JunLongling"},"content":"     * @return An ArrayList of Task objects loaded from the file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JunLongling"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JunLongling"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JunLongling"},"content":"        if (Files.exists(filePath)) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JunLongling"},"content":"            try (BufferedReader reader \u003d Files.newBufferedReader(filePath)) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JunLongling"},"content":"                String line;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JunLongling"},"content":"                while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JunLongling"},"content":"                    String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JunLongling"},"content":"                    String taskType \u003d parts[0];","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JunLongling"},"content":"                    boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JunLongling"},"content":"                    String description \u003d parts[2];","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JunLongling"},"content":"                    Task task;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JunLongling"},"content":"                    if (taskType.equals(\"T\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JunLongling"},"content":"                        task \u003d new ToDo(description);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JunLongling"},"content":"                    } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JunLongling"},"content":"                        LocalDateTime byDateTime \u003d Parser.parseDateTime(parts[3]);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JunLongling"},"content":"                        task \u003d new Deadline(description, byDateTime);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JunLongling"},"content":"                    } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JunLongling"},"content":"                        LocalDateTime fromDateTime \u003d Parser.parseDateTime(parts[3]);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JunLongling"},"content":"                        LocalDateTime toDateTime \u003d Parser.parseDateTime(parts[4]);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JunLongling"},"content":"                        task \u003d new Event(description, fromDateTime, toDateTime);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JunLongling"},"content":"                    } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JunLongling"},"content":"                        System.out.println(\"Unknown task type: \" + taskType);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JunLongling"},"content":"                        continue;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JunLongling"},"content":"                    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JunLongling"},"content":"                    if (isDone) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JunLongling"},"content":"                        task.markAsDone();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JunLongling"},"content":"                    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JunLongling"},"content":"                    tasks.add(task);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JunLongling"},"content":"                }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JunLongling"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JunLongling"},"content":"                System.out.println(\"An error occurred while loading tasks: \" + e.getMessage());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JunLongling"},"content":"            }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JunLongling"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JunLongling"},"content":"        return tasks;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JunLongling"},"content":"     * Saves the given list of tasks to the specified file. Each task is written in","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JunLongling"},"content":"     * a format suitable for loading later.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JunLongling"},"content":"     * @param tasks The list of Task objects to be saved to the file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JunLongling"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JunLongling"},"content":"        try (BufferedWriter writer \u003d Files.newBufferedWriter(filePath)) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JunLongling"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JunLongling"},"content":"                writer.write(task.toFileFormat());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JunLongling"},"content":"                writer.newLine();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JunLongling"},"content":"            }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JunLongling"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JunLongling"},"content":"            System.out.println(\"An error occurred while saving tasks: \" + e.getMessage());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JunLongling"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JunLongling"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"JunLongling":97}},{"path":"src/main/java/GPT/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunLongling"},"content":"package GPT;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JunLongling"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JunLongling"},"content":" * Represents an abstract task in the GPT application.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JunLongling"},"content":" * This class provides common functionality for tasks, such as tracking the task\u0027s description,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JunLongling"},"content":" * completion status, and type. Subclasses of Task will provide more specific behavior.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JunLongling"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JunLongling"},"content":"abstract class Task {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JunLongling"},"content":"    protected String description;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JunLongling"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JunLongling"},"content":"    protected TaskType type;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JunLongling"},"content":"     * Constructs a Task with the specified description and type.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JunLongling"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JunLongling"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JunLongling"},"content":"     * @param type        The type of the task (e.g., ToDo, Deadline, Event).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JunLongling"},"content":"    public Task(String description, TaskType type) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JunLongling"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JunLongling"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JunLongling"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JunLongling"},"content":"     * Returns the status icon of the task, indicating whether it is done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JunLongling"},"content":"     * @return \"X\" if the task is done, otherwise a space \" \".","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JunLongling"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JunLongling"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JunLongling"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JunLongling"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JunLongling"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JunLongling"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JunLongling"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JunLongling"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JunLongling"},"content":"     * Returns the type of the task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JunLongling"},"content":"     * @return The TaskType of the task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JunLongling"},"content":"    public TaskType getType() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JunLongling"},"content":"        return type;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JunLongling"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JunLongling"},"content":"     * @return The task description.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JunLongling"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JunLongling"},"content":"        return description;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JunLongling"},"content":"     * Returns a string representation of the task suitable for saving to a file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JunLongling"},"content":"     * @return A formatted string representing the task, including its type, status, and description.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JunLongling"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JunLongling"},"content":"        return String.format(\"%s | %d | %s\",","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JunLongling"},"content":"                this.getClass().getSimpleName().charAt(0),","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JunLongling"},"content":"                isDone ? 1 : 0,","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JunLongling"},"content":"                description);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JunLongling"},"content":"     * Returns a string representation of the task, including its type, status, and description.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JunLongling"},"content":"     * @return A string representing the task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JunLongling"},"content":"    @Override","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JunLongling"},"content":"    public String toString() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JunLongling"},"content":"        return \"[\" + type.name().charAt(0) + \"][\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JunLongling"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"JunLongling":86}},{"path":"src/main/java/GPT/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunLongling"},"content":"package GPT;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JunLongling"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JunLongling"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JunLongling"},"content":" * Represents a list of tasks in the GPT application.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JunLongling"},"content":" * This class provides methods to add, delete, mark, and unmark tasks, as well as to retrieve the list of tasks.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JunLongling"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JunLongling"},"content":"public class TaskList {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JunLongling"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JunLongling"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JunLongling"},"content":"    public TaskList() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JunLongling"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JunLongling"},"content":"     * Constructs a TaskList with the specified list of tasks.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JunLongling"},"content":"     * @param tasks The list of tasks to initialize the TaskList with.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JunLongling"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JunLongling"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JunLongling"},"content":"     * Adds a new task to the TaskList.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JunLongling"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JunLongling"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JunLongling"},"content":"        tasks.add(task);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JunLongling"},"content":"     * Deletes a task from the TaskList at the specified index.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JunLongling"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JunLongling"},"content":"     * @throws GPTException If the index is out of range (less than 0 or greater than or equal to the list size).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JunLongling"},"content":"    public void deleteTask(int index) throws GPTException {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JunLongling"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JunLongling"},"content":"            throw new GPTException(\"The task number is out of range.\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JunLongling"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JunLongling"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JunLongling"},"content":"     * Marks a task as done in the TaskList at the specified index.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JunLongling"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JunLongling"},"content":"     * @throws GPTException If the index is out of range (less than 0 or greater than or equal to the list size).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JunLongling"},"content":"    public void markTask(int index) throws GPTException {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JunLongling"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JunLongling"},"content":"            throw new GPTException(\"The task number is out of range.\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JunLongling"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JunLongling"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JunLongling"},"content":"     * Unmarks a task as not done in the TaskList at the specified index.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JunLongling"},"content":"     * @param index The index of the task to be unmarked as not done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JunLongling"},"content":"     * @throws GPTException If the index is out of range (less than 0 or greater than or equal to the list size).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JunLongling"},"content":"    public void unmarkTask(int index) throws GPTException {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JunLongling"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JunLongling"},"content":"            throw new GPTException(\"The task number is out of range.\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JunLongling"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JunLongling"},"content":"        tasks.get(index).markAsNotDone();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JunLongling"},"content":"     * Returns the list of tasks in the TaskList.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JunLongling"},"content":"     * @return An ArrayList of Task objects.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JunLongling"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JunLongling"},"content":"        return tasks;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JunLongling"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"JunLongling":84}},{"path":"src/main/java/GPT/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunLongling"},"content":"package GPT;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JunLongling"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JunLongling"},"content":" * The TaskType enum represents the types of tasks that can exist in the GPT application.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JunLongling"},"content":" * It defines three types of tasks: TODO, DEADLINE, and EVENT.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JunLongling"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JunLongling"},"content":"public enum TaskType {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JunLongling"},"content":"     * Represents a task that needs to be done but does not have a specific deadline or time frame.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JunLongling"},"content":"    TODO,","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JunLongling"},"content":"     * Represents a task that has a specific deadline by which it must be completed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JunLongling"},"content":"    DEADLINE,","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JunLongling"},"content":"     * Represents a task that occurs during a specific time period, with a start and end time.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JunLongling"},"content":"    EVENT","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JunLongling"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"JunLongling":19}},{"path":"src/main/java/GPT/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunLongling"},"content":"package GPT;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JunLongling"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JunLongling"},"content":" * Represents a ToDo task in the GPT application.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JunLongling"},"content":" * A ToDo task is a task that needs to be done but does not have a specific deadline or time frame.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JunLongling"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JunLongling"},"content":"class ToDo extends Task {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JunLongling"},"content":"     * Constructs a ToDo task with the specified description.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JunLongling"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JunLongling"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JunLongling"},"content":"        super(description, TaskType.TODO);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JunLongling"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"JunLongling":16}},{"path":"src/main/java/GPT/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunLongling"},"content":"package GPT;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JunLongling"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JunLongling"},"content":" * Represents a command to add a new ToDo task in the GPT application.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JunLongling"},"content":" * This command parses the user input to extract the task description","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JunLongling"},"content":" * and adds the task to the task list if the input is valid.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JunLongling"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JunLongling"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JunLongling"},"content":"    private String description;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JunLongling"},"content":"     * Constructs a TodoCommand by parsing the user input to extract the task description.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JunLongling"},"content":"     * @param input The user input string containing the command to add a ToDo task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JunLongling"},"content":"    public TodoCommand(String input) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JunLongling"},"content":"        this.description \u003d input.substring(4).trim();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JunLongling"},"content":"     * Executes the command to add a new ToDo task to the task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JunLongling"},"content":"     * If the command format is invalid (i.e., the description is empty), an error message is displayed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JunLongling"},"content":"     * Otherwise, the task is added, saved, and a confirmation message is shown.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JunLongling"},"content":"     * @param taskList The list of tasks to which the new task will be added.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JunLongling"},"content":"     * @param ui       The user interface that displays messages to the user.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JunLongling"},"content":"     * @param storage  The storage handler that manages task persistence.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JunLongling"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JunLongling"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JunLongling"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JunLongling"},"content":"            ui.showError(\"The description of a todo cannot be empty. \"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JunLongling"},"content":"                    + \"\\nUsage: todo [task description]\\nExample: todo read a book\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JunLongling"},"content":"            return;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JunLongling"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JunLongling"},"content":"        Task newTask \u003d new ToDo(description);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JunLongling"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JunLongling"},"content":"        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JunLongling"},"content":"        ui.showTaskAdded(newTask, taskList.getTasks().size());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JunLongling"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"JunLongling":40}},{"path":"src/main/java/GPT/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunLongling"},"content":"package GPT;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JunLongling"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JunLongling"},"content":"import java.util.List;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JunLongling"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JunLongling"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JunLongling"},"content":" * The Ui (User Interface) class handles all interactions with the user in the GPT application.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JunLongling"},"content":" * This class is responsible for displaying messages, reading user input, and providing feedback based on user commands.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JunLongling"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JunLongling"},"content":"public class Ui {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JunLongling"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JunLongling"},"content":"     * Constructs a Ui object that uses a Scanner to read user input from the console.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JunLongling"},"content":"    public Ui() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JunLongling"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JunLongling"},"content":"     * Displays a welcome message to the user when the application starts.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JunLongling"},"content":"     * @param chatbotName The name of the chatbot to be displayed in the welcome message.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JunLongling"},"content":"    public void showWelcomeMessage(String chatbotName) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JunLongling"},"content":"        System.out.println(\"Type \u0027list\u0027 to display saved tasks or \u0027bye\u0027 to exit.\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JunLongling"},"content":"        printLine();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JunLongling"},"content":"        System.out.println(\"Hello! I\u0027m \" + chatbotName);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JunLongling"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JunLongling"},"content":"        printLine();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JunLongling"},"content":"     * Displays a goodbye message to the user when the application exits.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JunLongling"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JunLongling"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JunLongling"},"content":"     * Displays a horizontal line to separate different sections of output.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JunLongling"},"content":"    public void showLine() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JunLongling"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JunLongling"},"content":"     * Reads the next command entered by the user.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JunLongling"},"content":"     * @return The trimmed input string entered by the user.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JunLongling"},"content":"    public String readCommand() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JunLongling"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JunLongling"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JunLongling"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JunLongling"},"content":"    public void showError(String message) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JunLongling"},"content":"        printLine();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JunLongling"},"content":"        System.out.println(message);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JunLongling"},"content":"        printLine();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JunLongling"},"content":"     * Displays a message to the user when a task is added to the list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JunLongling"},"content":"     * @param task      The task that was added.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JunLongling"},"content":"     * @param taskCount The total number of tasks in the list after adding the new task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JunLongling"},"content":"    public void showTaskAdded(Task task, int taskCount) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JunLongling"},"content":"        printLine();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JunLongling"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JunLongling"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JunLongling"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JunLongling"},"content":"        printLine();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JunLongling"},"content":"     * Displays a message to the user when a task is removed from the list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JunLongling"},"content":"     * @param task      The task that was removed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JunLongling"},"content":"     * @param taskCount The total number of tasks remaining in the list after removing the task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JunLongling"},"content":"    public void showTaskRemoved(Task task, int taskCount) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JunLongling"},"content":"        printLine();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JunLongling"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JunLongling"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JunLongling"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JunLongling"},"content":"        printLine();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JunLongling"},"content":"     * Displays the current list of tasks to the user.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JunLongling"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JunLongling"},"content":"    public void showTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JunLongling"},"content":"        printLine();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JunLongling"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JunLongling"},"content":"            System.out.println(\"No tasks to show.\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JunLongling"},"content":"        } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"JunLongling"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"JunLongling"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"JunLongling"},"content":"                System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JunLongling"},"content":"            }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"JunLongling"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JunLongling"},"content":"        printLine();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JunLongling"},"content":"     * Displays the list of tasks that match the search keyword.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JunLongling"},"content":"     * @param tasks The list of tasks that match the search keyword.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JunLongling"},"content":"    public void showMatchingTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JunLongling"},"content":"        showLine();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JunLongling"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JunLongling"},"content":"            System.out.println(\"No matching tasks found.\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"JunLongling"},"content":"        } else {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"JunLongling"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"JunLongling"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JunLongling"},"content":"                System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JunLongling"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"JunLongling"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"JunLongling"},"content":"        showLine();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"JunLongling"},"content":"     * Prints a horizontal line to separate different sections of output.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"JunLongling"},"content":"    private void printLine() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"JunLongling"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"JunLongling"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"JunLongling":136}},{"path":"src/main/java/GPT/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunLongling"},"content":"package GPT;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JunLongling"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JunLongling"},"content":" * Represents a command to unmark a task as not done in the GPT application.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JunLongling"},"content":" * This command identifies the task to be unmarked based on the user input and updates its status.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JunLongling"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JunLongling"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JunLongling"},"content":"    private int index;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JunLongling"},"content":"     * Constructs an UnmarkCommand by parsing the user input to determine the index of the task to be unmarked.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JunLongling"},"content":"     * The index is adjusted to be zero-based (subtracting 1).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JunLongling"},"content":"     * @param input The user input string containing the command to unmark a task as not done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JunLongling"},"content":"    public UnmarkCommand(String input) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JunLongling"},"content":"        this.index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JunLongling"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JunLongling"},"content":"     * Executes the command to unmark the specified task as not done. If the task index is valid,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JunLongling"},"content":"     * the task is unmarked, the updated list is saved, and a confirmation message is shown.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JunLongling"},"content":"     * If the index is invalid, an error message is displayed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JunLongling"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JunLongling"},"content":"     * @param taskList The list of tasks containing the task to be unmarked.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JunLongling"},"content":"     * @param ui       The user interface that displays messages to the user.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JunLongling"},"content":"     * @param storage  The storage handler that manages task persistence.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JunLongling"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JunLongling"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JunLongling"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JunLongling"},"content":"        try {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JunLongling"},"content":"            taskList.unmarkTask(index);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JunLongling"},"content":"            storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JunLongling"},"content":"            ui.showTaskAdded(taskList.getTasks().get(index), taskList.getTasks().size());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JunLongling"},"content":"        } catch (GPTException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JunLongling"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JunLongling"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JunLongling"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"JunLongling":38}},{"path":"src/test/java/GPT/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunLongling"},"content":"package GPT;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JunLongling"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JunLongling"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JunLongling"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JunLongling"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JunLongling"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JunLongling"},"content":"    public void testToFileFormat_withValidDate() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JunLongling"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2023, 8, 26, 18, 0);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JunLongling"},"content":"        Deadline deadline \u003d new Deadline(\"Submit assignment\", dateTime);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JunLongling"},"content":"        String expectedFormat \u003d \"D | 0 | Submit assignment | 2023-08-26 1800\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JunLongling"},"content":"        assertEquals(expectedFormat, deadline.toFileFormat());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JunLongling"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JunLongling"},"content":"    public void testToFileFormat_withInvalidDate() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JunLongling"},"content":"        Deadline deadline \u003d new Deadline(\"Submit assignment\", null);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JunLongling"},"content":"        String expectedFormat \u003d \"D | 0 | Submit assignment | [Invalid Date]\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JunLongling"},"content":"        assertEquals(expectedFormat, deadline.toFileFormat());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JunLongling"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"JunLongling":29}},{"path":"src/test/java/GPT/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JunLongling"},"content":"package GPT;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JunLongling"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JunLongling"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JunLongling"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JunLongling"},"content":"public class EventTest {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JunLongling"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JunLongling"},"content":"    public void testToFileFormat_withValidDate() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JunLongling"},"content":"        LocalDateTime fromDateTime \u003d LocalDateTime.of(2023, 8, 26, 10, 0);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JunLongling"},"content":"        LocalDateTime toDateTime \u003d LocalDateTime.of(2023, 8, 26, 12, 0);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JunLongling"},"content":"        Event event \u003d new Event(\"Team meeting\", fromDateTime, toDateTime);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JunLongling"},"content":"        String expectedFormat \u003d \"E | 0 | Team meeting | 2023-08-26 1000 | 2023-08-26 1200\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JunLongling"},"content":"        assertEquals(expectedFormat, event.toFileFormat());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JunLongling"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JunLongling"},"content":"    public void testToFileFormat_withInvalidDate() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JunLongling"},"content":"        Event event \u003d new Event(\"Team meeting\", null, null);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JunLongling"},"content":"        String expectedFormat \u003d \"E | 0 | Team meeting | [Invalid Date] | [Invalid Date]\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JunLongling"},"content":"        assertEquals(expectedFormat, event.toFileFormat());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JunLongling"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JunLongling"},"content":"    public void testEventToString_withValidDate() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JunLongling"},"content":"        LocalDateTime fromDateTime \u003d LocalDateTime.of(2023, 8, 26, 10, 0);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JunLongling"},"content":"        LocalDateTime toDateTime \u003d LocalDateTime.of(2023, 8, 26, 12, 0);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JunLongling"},"content":"        Event event \u003d new Event(\"Team meeting\", fromDateTime, toDateTime);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JunLongling"},"content":"        String expectedString \u003d \"[E][ ] Team meeting (from: Aug 26 2023, 10:00AM to: Aug 26 2023, 12:00PM)\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JunLongling"},"content":"        // Normalize both strings to lowercase for comparison","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JunLongling"},"content":"        assertEquals(expectedString.toLowerCase(), event.toString().toLowerCase());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JunLongling"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JunLongling"},"content":"    public void testEventToString_withInvalidDate() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JunLongling"},"content":"        Event event \u003d new Event(\"Team meeting\", null, null);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JunLongling"},"content":"        String expectedString \u003d \"[E][ ] Team meeting (from: [Invalid Date] to: [Invalid Date])\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JunLongling"},"content":"        // No need to normalize here as there is no AM/PM in this string","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JunLongling"},"content":"        assertEquals(expectedString, event.toString());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JunLongling"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JunLongling"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"JunLongling":51}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JunLongling"},"content":"# Absolute paths","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JunLongling"},"content":"SRC_PATH\u003d\"/Users/junlongling/Downloads/NUS/Year 3/CS2103T/ip/src/main/java\"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JunLongling"},"content":"BIN_PATH\u003d\"/Users/junlongling/Downloads/NUS/Year 3/CS2103T/ip/bin\"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JunLongling"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JunLongling"},"content":"# Create bin directory if it doesn\u0027t exist","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JunLongling"},"content":"if [ ! -d \"$BIN_PATH\" ]; then","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JunLongling"},"content":"    mkdir -p \"$BIN_PATH\"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JunLongling"},"content":"# Delete output from previous run","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JunLongling"},"content":"if [ -e \"./ACTUAL.TXT\" ]; then","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JunLongling"},"content":"# Compile the code into the bin folder, terminates if an error occurred","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JunLongling"},"content":"if ! javac -cp \"$SRC_PATH\" -Xlint:none -d \"$BIN_PATH\" \"$SRC_PATH\"/*.java; then","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JunLongling"},"content":"# Run the program, feed commands from input.txt file and redirect the output to ACTUAL.TXT","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JunLongling"},"content":"java -classpath \"$BIN_PATH\" GPT \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JunLongling"},"content":"# Compare the output to the expected output","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JunLongling"},"content":"if diff ACTUAL.TXT EXPECTED.TXT; then","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"JunLongling":15,"-":18}}]
