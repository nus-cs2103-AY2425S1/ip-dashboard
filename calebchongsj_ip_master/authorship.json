[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"calebchongsj"},"content":"Acknowledgements:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"calebchongsj"},"content":"1) Used ChatGPT to convert profile pictures into circular ","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"calebchongsj"},"content":"shapes to improve GUI appearance.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"calebchongsj"},"content":"2) Referenced JavaFX GUI Tutorial from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"calebchongsj"},"content":"to guide me on implementing JavaFX into my chatbot.","lastModifiedDate":"2024-09-14","isFullCredit":false}],"authorContributionMap":{"calebchongsj":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"calebchongsj"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"calebchongsj"},"content":"checkstyle {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"calebchongsj"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"calebchongsj"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"calebchongsj"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"calebchongsj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"calebchongsj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"calebchongsj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"calebchongsj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"calebchongsj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"calebchongsj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"calebchongsj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"calebchongsj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"calebchongsj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"calebchongsj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"calebchongsj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"calebchongsj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"calebchongsj"},"content":"    mainClass.set(\"myapp.helperbuddy.Main\")","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"calebchongsj"},"content":"    archiveFileName \u003d \u0027YourHelperBuddy.jar\u0027","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"calebchongsj"},"content":"run {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"calebchongsj"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"calebchongsj"},"content":"}","lastModifiedDate":"2024-09-08","isFullCredit":false}],"authorContributionMap":{"calebchongsj":24,"-":33}},{"path":"src/main/java/myapp/quirkbot/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"calebchongsj"},"content":"package myapp.quirkbot;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"calebchongsj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"calebchongsj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"calebchongsj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"calebchongsj"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"calebchongsj"},"content":" * Deadline class representing a Deadline task","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"calebchongsj"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"calebchongsj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"calebchongsj"},"content":"    private final LocalDateTime deadlineBy;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"calebchongsj"},"content":"     * Constructs a {@code Deadline} task with the specified description and deadline.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"calebchongsj"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"calebchongsj"},"content":"     * @param deadlineBy  The deadline date and time for the task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"calebchongsj"},"content":"    public Deadline(String description, LocalDateTime deadlineBy) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"calebchongsj"},"content":"        super(description);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"calebchongsj"},"content":"        assert description !\u003d null \u0026\u0026 !description.isBlank() : \"Description should not be null or blank\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"calebchongsj"},"content":"        this.deadlineBy \u003d deadlineBy;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"calebchongsj"},"content":"     * Parses a string to create a Deadline task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"calebchongsj"},"content":"     * The string should be in the format used for saving to a file,","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"calebchongsj"},"content":"     * with fields separated by \" | \".","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"calebchongsj"},"content":"     * The fields are: task type (\"D\"), completion status (1 for done, 0 for not done),","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"calebchongsj"},"content":"     * description, and optionally, the deadline.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"calebchongsj"},"content":"     * If the deadline is missing or incorrectly formatted, a warning is printed, and the deadline will be null.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"calebchongsj"},"content":"     * @param taskData The string representing the Deadline task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"calebchongsj"},"content":"     * @return A Deadline object created from the string data.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"calebchongsj"},"content":"    public static Deadline parseTask(String taskData) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"calebchongsj"},"content":"        assert taskData !\u003d null \u0026\u0026 !taskData.isBlank() : \"Task data should not be null or blank\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"calebchongsj"},"content":"        String[] parts \u003d taskData.split(\" \\\\| \");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"calebchongsj"},"content":"        assert parts.length \u003e\u003d 3 : \"Task data should have at least 3 parts\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"calebchongsj"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"calebchongsj"},"content":"        LocalDateTime deadlineBy \u003d null;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"calebchongsj"},"content":"        if (parts.length \u003e 3) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"calebchongsj"},"content":"            try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"calebchongsj"},"content":"                deadlineBy \u003d LocalDateTime.parse(parts[3], DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"calebchongsj"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"calebchongsj"},"content":"                System.out.println(\"Warning: There is no date format provided\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"calebchongsj"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"calebchongsj"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"calebchongsj"},"content":"        Deadline deadline \u003d new Deadline(description, deadlineBy);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"calebchongsj"},"content":"        if (parts[1].trim().equals(\"1\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"calebchongsj"},"content":"            deadline.markDone();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"calebchongsj"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"calebchongsj"},"content":"        return deadline;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"calebchongsj"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"calebchongsj"},"content":"     * The string representation includes the task type (\"D\"),","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"calebchongsj"},"content":"     * completion status, description, and the deadline formatted as \"MMM dd yyyy HH:mm\".","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"calebchongsj"},"content":"     * For example, a completed task might be represented as:","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"calebchongsj"},"content":"     * \"[D][X] Finish assignment (by: Oct 10 2024 15:30)\".","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"calebchongsj"},"content":"     * @return A string representing the Deadline task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"calebchongsj"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"calebchongsj"},"content":"    public String toString() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"calebchongsj"},"content":"        String formattedDeadline \u003d (deadlineBy !\u003d null)","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"calebchongsj"},"content":"                ? \" (by: \"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"calebchongsj"},"content":"                + deadlineBy.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"))","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"calebchongsj"},"content":"                + \")\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"calebchongsj"},"content":"                : \"\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"calebchongsj"},"content":"        return \"[D][\" + (this.getDone() ? \"X\" : \" \") + \"] \"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"calebchongsj"},"content":"                + this.getDescription() + formattedDeadline;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"calebchongsj"},"content":"     * Converts the Deadline task into a format suitable for saving to a file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"calebchongsj"},"content":"     * The format includes the task type (\"D\"),","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"calebchongsj"},"content":"     * completion status (1 for done, 0 for not done), description,","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"calebchongsj"},"content":"     * and deadline formatted as \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"calebchongsj"},"content":"     * For example, a saved task might be represented as:","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"calebchongsj"},"content":"     * \"D | 1 | Finish assignment | 10/10/2024 1530\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"calebchongsj"},"content":"     * @return A string representing the Deadline task in file format.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"calebchongsj"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"calebchongsj"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"calebchongsj"},"content":"        String formattedDeadline \u003d (deadlineBy !\u003d null)","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"calebchongsj"},"content":"                ? \" | \"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"calebchongsj"},"content":"                + deadlineBy.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"))","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"calebchongsj"},"content":"                : \"\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"calebchongsj"},"content":"        return \"D | \" + (this.getDone() ? \"1\" : \"0\") + \" | \"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"calebchongsj"},"content":"                + this.getDescription() + formattedDeadline;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"calebchongsj"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"calebchongsj":93}},{"path":"src/main/java/myapp/quirkbot/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"calebchongsj"},"content":"package myapp.quirkbot;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"calebchongsj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"calebchongsj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"calebchongsj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"calebchongsj"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"calebchongsj"},"content":" * Event class representing an Event task","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"calebchongsj"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"calebchongsj"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"calebchongsj"},"content":"    private final LocalDateTime eventFrom;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"calebchongsj"},"content":"    private final LocalDateTime eventTo;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"calebchongsj"},"content":"     * Constructs an Event task with the specified description,","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"calebchongsj"},"content":"     * start date/time, and end date/time.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"calebchongsj"},"content":"     * @param description description of the event.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"calebchongsj"},"content":"     * @param eventFrom the start date and time of the event.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"calebchongsj"},"content":"     * @param eventTo the end date and time of the event.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"calebchongsj"},"content":"    public Event(String description, LocalDateTime eventFrom, LocalDateTime eventTo) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"calebchongsj"},"content":"        super(description);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"calebchongsj"},"content":"        assert description !\u003d null \u0026\u0026 !description.isBlank()","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"calebchongsj"},"content":"                : \"Description should not be null or blank\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"calebchongsj"},"content":"        assert eventFrom \u003d\u003d null || eventTo \u003d\u003d null","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"calebchongsj"},"content":"                : \"Event start time and end time should not be null or blank\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"calebchongsj"},"content":"        assert !eventFrom.isAfter(eventTo)","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"calebchongsj"},"content":"                : \"Event start time must be before or equal to end time\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"calebchongsj"},"content":"        this.eventFrom \u003d eventFrom;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"calebchongsj"},"content":"        this.eventTo \u003d eventTo;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"calebchongsj"},"content":"     * Parses a string to create an Event task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"calebchongsj"},"content":"     * The string should be in the format used for saving to a file,","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"calebchongsj"},"content":"     * with fields separated by \" | \".","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"calebchongsj"},"content":"     * The fields are: task type (\"E\"),","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"calebchongsj"},"content":"     * completion status (1 for done, 0 for not done),","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"calebchongsj"},"content":"     * description, start date/time, and optionally, end date/time.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"calebchongsj"},"content":"     * If the start or end date/time is missing or incorrectly formatted,","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"calebchongsj"},"content":"     * a warning is printed, and the respective date/time will be null.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"calebchongsj"},"content":"     * @param taskData The string representing the Event task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"calebchongsj"},"content":"     * @return An Event task object created from the string data.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"calebchongsj"},"content":"    public static Event parseTask(String taskData) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"calebchongsj"},"content":"        assert taskData !\u003d null \u0026\u0026 !taskData.isBlank()","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"calebchongsj"},"content":"                : \"Task data should not be null or blank\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"calebchongsj"},"content":"        String[] parts \u003d taskData.split(\" \\\\| \");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"calebchongsj"},"content":"        assert parts.length \u003e\u003d 4 : \"Task data should have at least 4 parts\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"calebchongsj"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"calebchongsj"},"content":"        LocalDateTime from \u003d null;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"calebchongsj"},"content":"        LocalDateTime to \u003d null;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"calebchongsj"},"content":"        try {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"calebchongsj"},"content":"            from \u003d LocalDateTime.parse(parts[3], DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"calebchongsj"},"content":"            if (parts.length \u003e 4) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"calebchongsj"},"content":"                to \u003d LocalDateTime.parse(parts[4], DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"calebchongsj"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"calebchongsj"},"content":"            assert from \u003d\u003d null || to \u003d\u003d null || !from.isAfter(to)","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"calebchongsj"},"content":"                    : \"Event start time must be before or equal to end time\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"calebchongsj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"calebchongsj"},"content":"            System.out.println(\"Warning: There is no date format provided.\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"calebchongsj"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"calebchongsj"},"content":"        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"calebchongsj"},"content":"        if (parts[1].trim().equals(\"1\")) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"calebchongsj"},"content":"            event.markDone();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"calebchongsj"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"calebchongsj"},"content":"        return event;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"calebchongsj"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"calebchongsj"},"content":"     * The string representation includes the task type (\"E\"),","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"calebchongsj"},"content":"     * completion status, description, and the event\u0027s start and end date/times","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"calebchongsj"},"content":"     * formatted as \"MMM dd yyyy HH:mm\".","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"calebchongsj"},"content":"     * For example, a completed event might be represented as:","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"calebchongsj"},"content":"     * \"[E][X] Team meeting (from: Oct 10 2024 09:00 to: Oct 10 2024 11:00)\".","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"calebchongsj"},"content":"     * @return A string representing the Event task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"calebchongsj"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"calebchongsj"},"content":"    public String toString() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"calebchongsj"},"content":"        String formattedFrom \u003d (eventFrom !\u003d null) ? \" (from: \"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"calebchongsj"},"content":"                + eventFrom.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"))","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"calebchongsj"},"content":"                : \"\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"calebchongsj"},"content":"        String formattedTo \u003d (eventTo !\u003d null) ? \" to: \"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"calebchongsj"},"content":"                + eventTo.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"))","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"calebchongsj"},"content":"                + \")\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"calebchongsj"},"content":"                : \"\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"calebchongsj"},"content":"        return \"[E][\" + (this.getDone() ? \"X\" : \" \") + \"] \"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"calebchongsj"},"content":"                + this.getDescription() + formattedFrom + formattedTo;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"calebchongsj"},"content":"     * Converts the Event task into a format suitable for saving to a file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"calebchongsj"},"content":"     * The format includes the task type (\"E\"),","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"calebchongsj"},"content":"     * completion status (1 for done, 0 for not done),","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"calebchongsj"},"content":"     * description, and start and end date/times","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"calebchongsj"},"content":"     * formatted as \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"calebchongsj"},"content":"     * For example, a saved event might be represented as:","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"calebchongsj"},"content":"     * \"E | 1 | Team meeting | 10/10/2024 0900 | 10/10/2024 1100\".","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"calebchongsj"},"content":"     * @return A string representing the Event task in file format.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"calebchongsj"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"calebchongsj"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"calebchongsj"},"content":"        String formattedFrom \u003d (eventFrom !\u003d null) ? \" | \"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"calebchongsj"},"content":"                + eventFrom.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"))","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"calebchongsj"},"content":"                : \"\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"calebchongsj"},"content":"        String formattedTo \u003d (eventTo !\u003d null) ? \" | \"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"calebchongsj"},"content":"                + eventTo.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"))","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"calebchongsj"},"content":"                : \"\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"calebchongsj"},"content":"        return \"E | \" + (this.getDone() ? \"1\" : \"0\") + \" | \"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"calebchongsj"},"content":"                + this.getDescription() + formattedFrom + formattedTo;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"calebchongsj"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"calebchongsj":116}},{"path":"src/main/java/myapp/quirkbot/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"calebchongsj"},"content":"package myapp.quirkbot;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"calebchongsj"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"calebchongsj"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"calebchongsj"},"content":" * Main class which launches the application","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"calebchongsj"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"calebchongsj"},"content":"public class Main {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"calebchongsj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"calebchongsj"},"content":"        Application.launch(Ui.class, args);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"calebchongsj"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"calebchongsj":12}},{"path":"src/main/java/myapp/quirkbot/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"calebchongsj"},"content":"package myapp.quirkbot;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"calebchongsj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"calebchongsj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"calebchongsj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"calebchongsj"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"calebchongsj"},"content":" * Parser class which helps to create a new Task object","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"calebchongsj"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"calebchongsj"},"content":"public class Parser {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"calebchongsj"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"calebchongsj"},"content":"     * Parses a command string to create an appropriate Task object","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"calebchongsj"},"content":"     * If the command format is incorrect or any part of the command is invalid,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"calebchongsj"},"content":"     * an error message is printed and no Task object is returned","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"calebchongsj"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"calebchongsj"},"content":"     * @param command user\u0027s command string to be parsed","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"calebchongsj"},"content":"     * @return Task object depending on the user\u0027s command","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"calebchongsj"},"content":"    public static Task parseCommand(String command) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"calebchongsj"},"content":"        assert command !\u003d null : \"Command string should not be null.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"calebchongsj"},"content":"        command \u003d command.trim();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"calebchongsj"},"content":"        assert !command.isEmpty() : \"Command string should not be empty.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"calebchongsj"},"content":"        if (command.startsWith(\"todo\")) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"calebchongsj"},"content":"            String description \u003d command.substring(4);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"calebchongsj"},"content":"            assert !description.isEmpty() : \"ToDo description should not be empty.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"calebchongsj"},"content":"            return new ToDo(description);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"calebchongsj"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"calebchongsj"},"content":"            String description \u003d command.substring(8).trim();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"calebchongsj"},"content":"            String[] parts \u003d command.split(\"/by\", 2);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"calebchongsj"},"content":"            assert parts.length \u003d\u003d 2 : \"Deadline command should contain \u0027/by\u0027 separator.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"calebchongsj"},"content":"            LocalDateTime deadline \u003d parseDateTime(parts[1].trim());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"calebchongsj"},"content":"            assert !description.isEmpty() : \"Deadline description should not be empty.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"calebchongsj"},"content":"            assert deadline !\u003d null : \"Deadline date/time should be valid.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"calebchongsj"},"content":"            return new Deadline(description, deadline);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"calebchongsj"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"calebchongsj"},"content":"            String description \u003d command.substring(5).trim();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"calebchongsj"},"content":"            String[] parts \u003d command.split(\"/from\", 2);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"calebchongsj"},"content":"            assert parts.length \u003d\u003d 2 : \"Event command should contain \u0027/from\u0027 separator.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"calebchongsj"},"content":"            String[] subParts \u003d parts[1].split(\"/to\", 2);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"calebchongsj"},"content":"            assert subParts.length \u003d\u003d 2 : \"Event command should contain \u0027/to\u0027 separator.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"calebchongsj"},"content":"            LocalDateTime from \u003d parseDateTime(subParts[0].trim());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"calebchongsj"},"content":"            LocalDateTime to \u003d parseDateTime(subParts[1].trim());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"calebchongsj"},"content":"            assert !description.isEmpty() : \"Event description should not be empty.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"calebchongsj"},"content":"            assert from !\u003d null : \"Event start date/time should be valid.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"calebchongsj"},"content":"            assert to !\u003d null : \"Event end date/time should be valid.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"calebchongsj"},"content":"            return new Event(description, from, to);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"calebchongsj"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"calebchongsj"},"content":"        return null;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"calebchongsj"},"content":"     * Parses a command string to create an appropriate datetime object","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"calebchongsj"},"content":"     * If the command format is incorrect or any part of the command is invalid,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"calebchongsj"},"content":"     * an error message is printed and no LocalDateTime object is returned","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"calebchongsj"},"content":"     * @param dateTimeStr user\u0027s command string to be parsed","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"calebchongsj"},"content":"     * @return LocalDateTime object depending on the user\u0027s command","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"calebchongsj"},"content":"    public static LocalDateTime parseDateTime(String dateTimeStr) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"calebchongsj"},"content":"        assert dateTimeStr !\u003d null : \"DateTime string should not be null.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"calebchongsj"},"content":"        dateTimeStr \u003d dateTimeStr.trim();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"calebchongsj"},"content":"        if (dateTimeStr.isEmpty()) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"calebchongsj"},"content":"            return null;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"calebchongsj"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"calebchongsj"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"calebchongsj"},"content":"            return LocalDateTime.parse(dateTimeStr, FORMATTER);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"calebchongsj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"calebchongsj"},"content":"            return null;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"calebchongsj"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"calebchongsj"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"calebchongsj":73}},{"path":"src/main/java/myapp/quirkbot/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"calebchongsj"},"content":"package myapp.quirkbot;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"calebchongsj"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"calebchongsj"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"calebchongsj"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"calebchongsj"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"calebchongsj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"calebchongsj"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"calebchongsj"},"content":" * Storage class which loads and saves task from the specified file","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"calebchongsj"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"calebchongsj"},"content":"public class Storage {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"calebchongsj"},"content":"    private String filePath;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"calebchongsj"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"calebchongsj"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"calebchongsj"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"calebchongsj"},"content":"        assert filePath !\u003d null \u0026\u0026 !filePath.trim().isEmpty() : \"File path should not be null or empty.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"calebchongsj"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"calebchongsj"},"content":"     * Loads tasks from the file into the provided list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"calebchongsj"},"content":"     * @param taskList The list to which tasks will be added.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"calebchongsj"},"content":"    public void loadTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"calebchongsj"},"content":"        assert taskList !\u003d null : \"Task list should not be null.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"calebchongsj"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"calebchongsj"},"content":"            String line;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"calebchongsj"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"calebchongsj"},"content":"                assert line !\u003d null : \"Line read from file should not be null.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"calebchongsj"},"content":"                Task task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"calebchongsj"},"content":"                if (line.startsWith(\"T\")) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"calebchongsj"},"content":"                    task \u003d ToDo.parseTask(line);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"calebchongsj"},"content":"                } else if (line.startsWith(\"D\")) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"calebchongsj"},"content":"                    task \u003d Deadline.parseTask(line);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"calebchongsj"},"content":"                } else if (line.startsWith(\"E\")) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"calebchongsj"},"content":"                    task \u003d Event.parseTask(line);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"calebchongsj"},"content":"                } else {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"calebchongsj"},"content":"                    throw new IllegalArgumentException(\"Unknown task type\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"calebchongsj"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"calebchongsj"},"content":"                assert task !\u003d null : \"Parsed task should not be null.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"calebchongsj"},"content":"                taskList.add(task);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"calebchongsj"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"calebchongsj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"calebchongsj"},"content":"            System.out.println(\"An error occurred while loading tasks from file.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"calebchongsj"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"calebchongsj"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"calebchongsj"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"calebchongsj"},"content":"     * Stores tasks from the current task list into the provided file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"calebchongsj"},"content":"     * @param taskList The list to which tasks will be copied and saved into the file","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"calebchongsj"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"calebchongsj"},"content":"        assert taskList !\u003d null : \"Task list should not be null.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"calebchongsj"},"content":"        try (FileWriter writer \u003d new FileWriter(filePath)) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"calebchongsj"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"calebchongsj"},"content":"                assert task !\u003d null : \"Task in the list should not be null.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"calebchongsj"},"content":"                writer.write(task.toFileFormat() + System.lineSeparator());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"calebchongsj"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"calebchongsj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"calebchongsj"},"content":"            System.out.println(\"An error occurred while saving tasks to file.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"calebchongsj"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"calebchongsj"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"calebchongsj":69}},{"path":"src/main/java/myapp/quirkbot/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"calebchongsj"},"content":"package myapp.quirkbot;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"calebchongsj"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"calebchongsj"},"content":" * Task abstract class which is inherited from subclasses","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"calebchongsj"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"calebchongsj"},"content":"abstract class Task {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"calebchongsj"},"content":"    private String description;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"calebchongsj"},"content":"    private boolean isDone;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"calebchongsj"},"content":"     * Constructs a Task with the specified description.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"calebchongsj"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"calebchongsj"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"calebchongsj"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"Task description should not be null or empty.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"calebchongsj"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"calebchongsj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"calebchongsj"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"calebchongsj"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"calebchongsj"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"calebchongsj"},"content":"        return this.description;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"calebchongsj"},"content":"     * Returns whether the task is marked as done.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"calebchongsj"},"content":"     * @return true if the task is done, false otherwise.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"calebchongsj"},"content":"    public boolean getDone() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"calebchongsj"},"content":"        return this.isDone;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"calebchongsj"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"calebchongsj"},"content":"     * This method sets the completion status of the task to true.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"calebchongsj"},"content":"    public void markDone() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"calebchongsj"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"calebchongsj"},"content":"        assert this.isDone : \"Task should be marked as done.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"calebchongsj"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"calebchongsj"},"content":"     * This method sets the completion status of the task to false.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"calebchongsj"},"content":"    public void markUndone() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"calebchongsj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"calebchongsj"},"content":"        assert !this.isDone : \"Task should be marked as not done.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"calebchongsj"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"calebchongsj"},"content":"     * This is an abstract method that must be implemented by concrete subclasses to provide","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"calebchongsj"},"content":"     * a specific format for displaying the task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"calebchongsj"},"content":"     * @return A string representing the task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"calebchongsj"},"content":"    public abstract String toString();","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"calebchongsj"},"content":"     * Converts the task to a format suitable for saving to a file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"calebchongsj"},"content":"     * This is an abstract method that must be implemented by concrete subclasses to provide","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"calebchongsj"},"content":"     * a specific format for saving the task to a file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"calebchongsj"},"content":"     * @return A string representing the task in a file-compatible format.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"calebchongsj"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"calebchongsj"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"calebchongsj":69}},{"path":"src/main/java/myapp/quirkbot/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"calebchongsj"},"content":"package myapp.quirkbot;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"calebchongsj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"calebchongsj"},"content":"import java.util.List;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"calebchongsj"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"calebchongsj"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"calebchongsj"},"content":" * TaskList class helps to manage the tasks present inside the task list","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"calebchongsj"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"calebchongsj"},"content":"public class TaskList {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"calebchongsj"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"calebchongsj"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"calebchongsj"},"content":"     * Initializes the task list as an empty ArrayList.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"calebchongsj"},"content":"    public TaskList() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"calebchongsj"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"calebchongsj"},"content":"     * Adds a Task to the list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"calebchongsj"},"content":"     * @param task The Task to be added to the list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"calebchongsj"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"calebchongsj"},"content":"        assert task !\u003d null : \"Task to be added should not be null.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"calebchongsj"},"content":"        tasks.add(task);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"calebchongsj"},"content":"     * Retrieves a Task from the list at the specified index.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"calebchongsj"},"content":"     * If the index is out of bounds (i.e., less than 0 or greater than or equal to the size of the list),","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"calebchongsj"},"content":"     * this method returns null","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"calebchongsj"},"content":"     * @param index The index of the Task to retrieve.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"calebchongsj"},"content":"     * @return The Task at the specified index, or null if the index is out of bounds.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"calebchongsj"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"calebchongsj"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index should be within the bounds of the list.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"calebchongsj"},"content":"        return (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) ? tasks.get(index) : null;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"calebchongsj"},"content":"     * Deletes and returns the Task from the list at the specified index.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"calebchongsj"},"content":"     * If the index is out of bounds (i.e., less than 0 or greater than or equal to the size of the list),","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"calebchongsj"},"content":"     * this method may throw an IndexOutOfBoundsException","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"calebchongsj"},"content":"     * @param index The index of the Task to delete.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"calebchongsj"},"content":"     * @return The Task that was removed from the list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"calebchongsj"},"content":"     * @throws IndexOutOfBoundsException If the index is out of bounds.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"calebchongsj"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"calebchongsj"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index should be within the bounds of the list.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"calebchongsj"},"content":"        return tasks.remove(index);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"calebchongsj"},"content":"     * Returns the number of Task objects in the list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"calebchongsj"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"calebchongsj"},"content":"    public int size() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"calebchongsj"},"content":"        return tasks.size();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"calebchongsj"},"content":"     * Returns the list of Task objects.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"calebchongsj"},"content":"     * @return The ArrayList of tasks.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"calebchongsj"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"calebchongsj"},"content":"        return tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"calebchongsj"},"content":"     * Searches for tasks that contain the specified keyword in their descriptions.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"calebchongsj"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"calebchongsj"},"content":"     * @return A list of tasks containing the keyword.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"calebchongsj"},"content":"    public List\u003cTask\u003e searchTasks(String keyword) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"calebchongsj"},"content":"        assert keyword !\u003d null : \"Search keyword should not be null.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"calebchongsj"},"content":"        return tasks.stream()","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"calebchongsj"},"content":"                .filter(task -\u003e task.getDescription().toLowerCase().contains(keyword.toLowerCase()))","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"calebchongsj"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"calebchongsj"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"calebchongsj":82}},{"path":"src/main/java/myapp/quirkbot/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"calebchongsj"},"content":"package myapp.quirkbot;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"calebchongsj"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"calebchongsj"},"content":" * To_Do class representing a To_Do task","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"calebchongsj"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"calebchongsj"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"calebchongsj"},"content":"     * Constructs a To_Do task with the specified description.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"calebchongsj"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"calebchongsj"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"calebchongsj"},"content":"        super(description);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"calebchongsj"},"content":"        assert description !\u003d null : \"Description should not be null.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"calebchongsj"},"content":"        assert !description.trim().isEmpty() : \"Description should not be empty.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"calebchongsj"},"content":"     * Parses a string to create a To_Do task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"calebchongsj"},"content":"     * The string should be in the format used for saving to a file, with fields separated by \" | \".","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"calebchongsj"},"content":"     * The fields are: task type (\"T\"), completion status (1 for done, 0 for not done), and description.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"calebchongsj"},"content":"     * @param taskData The string representing the To_Do task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"calebchongsj"},"content":"     * @return A To_Do object created from the string data.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"calebchongsj"},"content":"    public static ToDo parseTask(String taskData) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"calebchongsj"},"content":"        assert taskData !\u003d null : \"Task data should not be null.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"calebchongsj"},"content":"        String[] parts \u003d taskData.split(\" \\\\| \");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"calebchongsj"},"content":"        assert parts.length \u003e\u003d 3 : \"Task data should have at least 3 parts.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"calebchongsj"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"calebchongsj"},"content":"        assert !description.isEmpty() : \"Description should not be empty.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"calebchongsj"},"content":"        ToDo todo \u003d new ToDo(description);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"calebchongsj"},"content":"        if (parts[1].trim().equals(\"1\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"calebchongsj"},"content":"            todo.markDone();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"calebchongsj"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"calebchongsj"},"content":"        return todo;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"calebchongsj"},"content":"     * Returns a string representation of the To_Do task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"calebchongsj"},"content":"     * The string representation includes the task type (\"T\"), completion status, and description.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"calebchongsj"},"content":"     * For example, a completed task might be represented as: \"[T][X] Buy groceries\".","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"calebchongsj"},"content":"     * @return A string representing the To_Do task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"calebchongsj"},"content":"    @Override","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"calebchongsj"},"content":"    public String toString() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"calebchongsj"},"content":"        assert this.getDescription() !\u003d null : \"Description should not be null.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"calebchongsj"},"content":"        return \"[T][\" + (this.getDone() ? \"X\" : \" \") + \"] \" + this.getDescription();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"calebchongsj"},"content":"     * Converts the To_Do task into a format suitable for saving to a file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"calebchongsj"},"content":"     * The format includes the task type (\"T\"), completion status (1 for done, 0 for not done), and description.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"calebchongsj"},"content":"     * For example, a saved task might be represented as: \"T | 1 | Buy groceries\".","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"calebchongsj"},"content":"     * @return A string representing the To_Do task in file format.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"calebchongsj"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"calebchongsj"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"calebchongsj"},"content":"        assert this.getDescription() !\u003d null : \"Description should not be null.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"calebchongsj"},"content":"        return \"T | \" + (this.getDone() ? \"1\" : \"0\") + \" | \" + this.getDescription();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"calebchongsj"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"calebchongsj":62}},{"path":"src/main/java/myapp/quirkbot/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"calebchongsj"},"content":"package myapp.quirkbot;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"calebchongsj"},"content":"import java.io.File;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"calebchongsj"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"calebchongsj"},"content":"import java.util.List;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"calebchongsj"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"calebchongsj"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"calebchongsj"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"calebchongsj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"calebchongsj"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"calebchongsj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"calebchongsj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"calebchongsj"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"calebchongsj"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"calebchongsj"},"content":"import quirkbot.gui.MainWindow;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"calebchongsj"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"calebchongsj"},"content":" * Main class which represents the JavaFX GUI for the chatbot.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"calebchongsj"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"calebchongsj"},"content":"public class Ui extends Application {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"calebchongsj"},"content":"    private static final String HOME \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"calebchongsj"},"content":"    private static final String DIRECTORY_PATH \u003d HOME + \"/Documents/\";","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"calebchongsj"},"content":"    private static final String FILE_PATH \u003d DIRECTORY_PATH + \"TaskInfo.txt\";","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"calebchongsj"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"calebchongsj"},"content":"    private Storage storage;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"calebchongsj"},"content":"    private String commandType \u003d \"\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"calebchongsj"},"content":"     * Constructs a new GUI for the user.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"calebchongsj"},"content":"     * Initializes the GUI application and greets the user during startup.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"calebchongsj"},"content":"     * @param stage sets up the GUI application.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"calebchongsj"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"calebchongsj"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"calebchongsj"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"calebchongsj"},"content":"        storage \u003d initStorage();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"calebchongsj"},"content":"        if (storage \u003d\u003d null) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"calebchongsj"},"content":"            System.out.println(\"Oops! I couldn\u0027t set up storage. Let\u0027s try again later!\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"calebchongsj"},"content":"            return;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"calebchongsj"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"calebchongsj"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"calebchongsj"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"calebchongsj"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"calebchongsj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"calebchongsj"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"calebchongsj"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBuddy(this);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"calebchongsj"},"content":"            storage.loadTasks(taskList.getTasks());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"calebchongsj"},"content":"            stage.setTitle(\"QuirkBot - Your Friendly Assistant\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"calebchongsj"},"content":"            Image icon \u003d new Image(this.getClass().getResourceAsStream(\"/images/QuirkBot.png\"));","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"calebchongsj"},"content":"            stage.getIcons().add(icon);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"calebchongsj"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"calebchongsj"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"calebchongsj"},"content":"            stage.show();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"calebchongsj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"calebchongsj"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"calebchongsj"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"calebchongsj"},"content":"     * Initializes the storage by creating necessary directories and files if they do not exist.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"calebchongsj"},"content":"     * @return the Storage instance if initialization is successful, otherwise null.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"calebchongsj"},"content":"    public Storage initStorage() {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"calebchongsj"},"content":"        File directory \u003d new File(DIRECTORY_PATH);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"calebchongsj"},"content":"        if (!directory.exists() \u0026\u0026 !directory.mkdirs()) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"calebchongsj"},"content":"            System.out.println(\"Oh no! I couldn’t create the directory. Maybe try again later?\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"calebchongsj"},"content":"            return null;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"calebchongsj"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"calebchongsj"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"calebchongsj"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"calebchongsj"},"content":"            try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"calebchongsj"},"content":"                if (!file.createNewFile()) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"calebchongsj"},"content":"                    System.out.println(\"Oops! Couldn’t create the file. What a pickle!\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"calebchongsj"},"content":"                    return null;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"calebchongsj"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"calebchongsj"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"calebchongsj"},"content":"                System.out.println(\"A glitch occurred while creating the file. My bad!\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"calebchongsj"},"content":"                e.printStackTrace();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"calebchongsj"},"content":"                return null;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"calebchongsj"},"content":"            }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"calebchongsj"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"calebchongsj"},"content":"        return new Storage(FILE_PATH);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"calebchongsj"},"content":"     * Processes the user\u0027s command and returns the relevant response.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"calebchongsj"},"content":"     * @param command instruction to the chatbot.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"calebchongsj"},"content":"     * @return the response to the command.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"calebchongsj"},"content":"    public String processCommand(String command) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"calebchongsj"},"content":"        assert command !\u003d null : \"Oops! The command shouldn’t be null.\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"calebchongsj"},"content":"        String response;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"calebchongsj"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"calebchongsj"},"content":"            response \u003d \"Farewell! I’ll be here when you need me. 🌟\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"calebchongsj"},"content":"            handleExit();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"calebchongsj"},"content":"        } else if (command.equals(\"list\")) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"calebchongsj"},"content":"            response \u003d getTaskListMessage();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"calebchongsj"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"calebchongsj"},"content":"            commandType \u003d \"DeleteCommand\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"calebchongsj"},"content":"            response \u003d handleDeleteTask(command);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"calebchongsj"},"content":"        } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"calebchongsj"},"content":"            commandType \u003d \"MarkCommand\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"calebchongsj"},"content":"            response \u003d handleMarkTask(command);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"calebchongsj"},"content":"        } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"calebchongsj"},"content":"            response \u003d handleUnmarkTask(command);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"calebchongsj"},"content":"        } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"calebchongsj"},"content":"            response \u003d handleFindTask(command);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"calebchongsj"},"content":"        } else {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"calebchongsj"},"content":"            commandType \u003d \"AddCommand\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"calebchongsj"},"content":"            response \u003d handleAddTask(command);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"calebchongsj"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"calebchongsj"},"content":"        return response;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"calebchongsj"},"content":"     * Checks the type of the command entered by the user.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"calebchongsj"},"content":"     * @return the command type.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"calebchongsj"},"content":"    public String getCommandType() {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"calebchongsj"},"content":"        return commandType;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"calebchongsj"},"content":"     * Removes task and shows deleted task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"calebchongsj"},"content":"     * @param command entered by the user in the command box.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"calebchongsj"},"content":"     * @return the message of the deleted task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"calebchongsj"},"content":"    public String handleDeleteTask(String command) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"calebchongsj"},"content":"        assert command.startsWith(\"delete\") : \"Oh dear! The command should start with \u0027delete\u0027.\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"calebchongsj"},"content":"        try {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"calebchongsj"},"content":"            int taskIndex \u003d parseTaskIndex(command);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"calebchongsj"},"content":"            assert taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskList.size() : \"The task index seems to be out of bounds!\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"calebchongsj"},"content":"            Task removedTask \u003d taskList.deleteTask(taskIndex);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"calebchongsj"},"content":"            return showTaskRemoved(removedTask);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"calebchongsj"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"calebchongsj"},"content":"            return \"Oopsie! That’s not a valid task index.\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"calebchongsj"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"calebchongsj"},"content":"     * Marks task as done and shows the marked task to user.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"calebchongsj"},"content":"     * @param command entered by the user in the command box.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"calebchongsj"},"content":"     * @return the message of the marked task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"calebchongsj"},"content":"    public String handleMarkTask(String command) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"calebchongsj"},"content":"        assert command.startsWith(\"mark\") : \"Oops! The command should start with \u0027mark\u0027.\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"calebchongsj"},"content":"        try {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"calebchongsj"},"content":"            int taskIndex \u003d parseTaskIndex(command);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"calebchongsj"},"content":"            assert taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskList.size() : \"Hmm, that task index is not valid.\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"calebchongsj"},"content":"            Task currentTask \u003d taskList.getTask(taskIndex);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"calebchongsj"},"content":"            return showTaskMarked(currentTask);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"calebchongsj"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"calebchongsj"},"content":"            return \"Oh dear, that\u0027s not a valid task index.\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"calebchongsj"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"calebchongsj"},"content":"     * Marks task as not done and shows the unmarked task to user.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"calebchongsj"},"content":"     * @param command entered by the user in the command box.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"calebchongsj"},"content":"     * @return the message of the unmarked task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"calebchongsj"},"content":"    public String handleUnmarkTask(String command) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"calebchongsj"},"content":"        assert command.startsWith(\"unmark\") : \"Oops! The command should start with \u0027unmark\u0027.\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"calebchongsj"},"content":"        try {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"calebchongsj"},"content":"            int taskIndex \u003d parseTaskIndex(command);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"calebchongsj"},"content":"            assert taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskList.size() : \"The task index seems a bit off.\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"calebchongsj"},"content":"            Task currentTask \u003d taskList.getTask(taskIndex);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"calebchongsj"},"content":"            return showTaskUnmarked(currentTask);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"calebchongsj"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"calebchongsj"},"content":"            return \"Oopsie daisy! That index doesn’t look right.\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"calebchongsj"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"calebchongsj"},"content":"     * Finds specific task(s) from the task list based on the user keyword.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"calebchongsj"},"content":"     * @param command entered by the user in the command box.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"calebchongsj"},"content":"     * @return the message of the task to find.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"calebchongsj"},"content":"    public String handleFindTask(String command) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"calebchongsj"},"content":"        assert command.startsWith(\"find\") : \"Oops! The command should start with \u0027find\u0027.\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"calebchongsj"},"content":"        String keyword \u003d command.substring(5).trim();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"calebchongsj"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"calebchongsj"},"content":"            return \"Oops! You forgot to enter your search keyword. 😅\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"calebchongsj"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"calebchongsj"},"content":"        List\u003cTask\u003e searchResults \u003d taskList.searchTasks(keyword);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"calebchongsj"},"content":"        return showSearchResults(searchResults);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"calebchongsj"},"content":"     * Adds desired task to the task list and shows added task to user.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"calebchongsj"},"content":"     * @param command entered by the user in the command box.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"calebchongsj"},"content":"     * @return the message of the added task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"calebchongsj"},"content":"    public String handleAddTask(String command) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"calebchongsj"},"content":"        assert command !\u003d null \u0026\u0026 !command.trim().isEmpty() : \"Oh no! The command can’t be empty.\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"calebchongsj"},"content":"        Task currentTask \u003d Parser.parseCommand(command);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"calebchongsj"},"content":"        if (currentTask \u003d\u003d null) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"calebchongsj"},"content":"            return showErrorMessage(command);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"calebchongsj"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"calebchongsj"},"content":"        taskList.addTask(currentTask);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"calebchongsj"},"content":"        return showTaskAdded(currentTask, taskList.size());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"calebchongsj"},"content":"     * Parses the task index from the command string.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"calebchongsj"},"content":"     * @param command The command string containing the task index.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"calebchongsj"},"content":"     * @return the parsed task index, or -1 if the index is invalid.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"calebchongsj"},"content":"    public int parseTaskIndex(String command) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"calebchongsj"},"content":"        try {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"calebchongsj"},"content":"            return Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"calebchongsj"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"calebchongsj"},"content":"            return -1;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"calebchongsj"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"calebchongsj"},"content":"     * Shows an error message to user based on the invalid command.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"calebchongsj"},"content":"     * @param command entered by the user in the command box.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"calebchongsj"},"content":"     * @return the formatted error message.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"calebchongsj"},"content":"    public String showErrorMessage(String command) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"calebchongsj"},"content":"        assert command !\u003d null : \"The command shouldn’t be null!\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"calebchongsj"},"content":"        if (command.startsWith(\"todo\")) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"calebchongsj"},"content":"            return \"Oops! The todo task description can’t be empty. Give me something to work with!\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"calebchongsj"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"calebchongsj"},"content":"            return \"Oops! Your deadline task description is missing! Also, please use the dd/MM/yyyy HHmm format.\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"calebchongsj"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"calebchongsj"},"content":"            return \"Oops! Your event task description is missing! \"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"calebchongsj"},"content":"                    + \"Also, use the dd/MM/yyyy HHmm format for the timings.\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"calebchongsj"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"calebchongsj"},"content":"        return \"Oops! That command doesn’t seem right. \"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"calebchongsj"},"content":"                + \"Please use \u0027find\u0027, \u0027todo\u0027, \u0027deadline\u0027, \u0027event\u0027, \u0027delete\u0027, \u0027mark\u0027, \u0027unmark\u0027, \u0027list\u0027, or \u0027bye\u0027.\"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"calebchongsj"},"content":"                + \"Thanks a bunch!\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"calebchongsj"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"calebchongsj"},"content":"     * The application will exit 3 seconds after the message.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"calebchongsj"},"content":"    public void handleExit() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"calebchongsj"},"content":"        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"calebchongsj"},"content":"        PauseTransition pause \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"calebchongsj"},"content":"        pause.setOnFinished(e -\u003e Platform.exit());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"calebchongsj"},"content":"        pause.play();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"calebchongsj"},"content":"     * Displays a message indicating that a task has been added.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"calebchongsj"},"content":"     * Shows the details of the added task and the updated size of the task list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"calebchongsj"},"content":"     * @param task added to the list.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"calebchongsj"},"content":"     * @param tasklistSize updated number of tasks in the list.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"calebchongsj"},"content":"     * @return the formatted message of the added task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"calebchongsj"},"content":"    public String showTaskAdded(Task task, int tasklistSize) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"calebchongsj"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"calebchongsj"},"content":"        assert tasklistSize \u003e 0 : \"Task list size should be greater than 0\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"calebchongsj"},"content":"        return \"Great! I’ve added this task: \" + task","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"calebchongsj"},"content":"                + \"\\nYou now have \" + tasklistSize + \" tasks in your list. 🎉\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"calebchongsj"},"content":"     * Displays a message indicating that a task has been removed.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"calebchongsj"},"content":"     * Shows the details of the removed task and the updated size of the task list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"calebchongsj"},"content":"     * @param task removed from the list.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"calebchongsj"},"content":"     * @return the formatted message of the removed task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"calebchongsj"},"content":"    public String showTaskRemoved(Task task) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"calebchongsj"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"calebchongsj"},"content":"        return \"Done! I’ve removed this task: \" + task","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"calebchongsj"},"content":"                + \"\\nNow you have \" + taskList.size() + \" tasks left. 📉\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"calebchongsj"},"content":"     * Displays a message indicating that a task has been marked as done.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"calebchongsj"},"content":"     * Marks the provided task as done and shows its updated status.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"calebchongsj"},"content":"     * @param task marked as done.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"calebchongsj"},"content":"     * @return the formatted message of the marked task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"calebchongsj"},"content":"    public String showTaskMarked(Task task) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"calebchongsj"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"calebchongsj"},"content":"        task.markDone();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"calebchongsj"},"content":"        return \"Hooray! I’ve marked this task as done: \" + task;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"calebchongsj"},"content":"     * Displays a message indicating that a task has been marked as not done yet.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"calebchongsj"},"content":"     * Marks the provided task as not done and shows its updated status.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"calebchongsj"},"content":"     * @param task marked as not done.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"calebchongsj"},"content":"     * @return the formatted message of the unmarked task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"calebchongsj"},"content":"    public String showTaskUnmarked(Task task) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"calebchongsj"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"calebchongsj"},"content":"        task.markUndone();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"calebchongsj"},"content":"        return \"No worries! I’ve marked this task as not done yet: \" + task;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"calebchongsj"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"calebchongsj"},"content":"     * Shows all tasks in the provided TaskList with their corresponding index.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"calebchongsj"},"content":"     * @return the formatted list of tasks.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"calebchongsj"},"content":"    public String getTaskListMessage() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"calebchongsj"},"content":"        assert taskList !\u003d null : \"Task List should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"calebchongsj"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"calebchongsj"},"content":"        String taskListMessage \u003d tasks.stream()","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"calebchongsj"},"content":"                .map(task -\u003e (tasks.indexOf(task) + 1) + \". \" + task)","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"calebchongsj"},"content":"                .reduce(\"Here are the fabulous tasks in your list:\\n\", (acc, taskStr) -\u003e acc + taskStr + \"\\n\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"calebchongsj"},"content":"        return taskListMessage;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"calebchongsj"},"content":"     * Filters out the tasks from the list which match the user keyword.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"calebchongsj"},"content":"     * Displays all the relevant search results from the task list.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"calebchongsj"},"content":"     * @param tasks is the task list to be searched.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"calebchongsj"},"content":"     * @return the formatted search results.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"calebchongsj"},"content":"    public String showSearchResults(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"calebchongsj"},"content":"        assert tasks !\u003d null : \"Task List should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"calebchongsj"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"calebchongsj"},"content":"            return \"No tasks found that match your search. Maybe try a different keyword?\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"calebchongsj"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"calebchongsj"},"content":"        String searchResults \u003d tasks.stream()","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"calebchongsj"},"content":"                .map(task -\u003e (tasks.indexOf(task) + 1) + \". \" + task)","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"calebchongsj"},"content":"                .reduce(\"Here are the search results for you:\\n\", (acc, taskStr) -\u003e acc + taskStr + \"\\n\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"calebchongsj"},"content":"        return searchResults;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"calebchongsj"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"calebchongsj":345}},{"path":"src/main/java/quirkbot/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"calebchongsj"},"content":"package quirkbot.gui;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"calebchongsj"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"calebchongsj"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"calebchongsj"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"calebchongsj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"calebchongsj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"calebchongsj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"calebchongsj"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"calebchongsj"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"calebchongsj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"calebchongsj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"calebchongsj"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"calebchongsj"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"calebchongsj"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"calebchongsj"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"calebchongsj"},"content":" * DialogBox class which represents the dialog boxes for User and Duke","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"calebchongsj"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"calebchongsj"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"calebchongsj"},"content":"    @FXML","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"calebchongsj"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"calebchongsj"},"content":"    @FXML","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"calebchongsj"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"calebchongsj"},"content":"    private double radius \u003d 50.0;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"calebchongsj"},"content":"     * Constructs a DialogBox object with the specified text and image.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"calebchongsj"},"content":"     * This constructor loads the FXML layout for the dialog box and initializes","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"calebchongsj"},"content":"     * the dialog text and display picture.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"calebchongsj"},"content":"     * @param text to be displayed in the dialog box.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"calebchongsj"},"content":"     * @param img  to be displayed alongside the text.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"calebchongsj"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"calebchongsj"},"content":"        assert text !\u003d null : \"Dialog text should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"calebchongsj"},"content":"        assert img !\u003d null : \"Image should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"calebchongsj"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"calebchongsj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"calebchongsj"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"calebchongsj"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"calebchongsj"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"calebchongsj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"calebchongsj"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"calebchongsj"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"calebchongsj"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"calebchongsj"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"calebchongsj"},"content":"        makeProfilePictureCircular();","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"calebchongsj"},"content":"     * Creates and returns a DialogBox representing the user\u0027s dialog.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"calebchongsj"},"content":"     * The dialog box will display the specified text and image without flipping the alignment.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"calebchongsj"},"content":"     * @param text to be displayed in the user\u0027s dialog box.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"calebchongsj"},"content":"     * @param img  to be displayed alongside the user\u0027s dialog.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"calebchongsj"},"content":"     * @return DialogBox object containing the user\u0027s dialog.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"calebchongsj"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"calebchongsj"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"calebchongsj"},"content":"     * Changes the dialog colour style for different user commands.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"calebchongsj"},"content":"     * @param commandType the type of the user command.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"calebchongsj"},"content":"    public void changeDialogStyle(String commandType) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"calebchongsj"},"content":"        switch (commandType) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"calebchongsj"},"content":"        case \"AddCommand\":","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"calebchongsj"},"content":"            dialog.getStyleClass().add(\"add-label\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"calebchongsj"},"content":"            break;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"calebchongsj"},"content":"        case \"MarkCommand\":","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"calebchongsj"},"content":"            dialog.getStyleClass().add(\"marked-label\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"calebchongsj"},"content":"            break;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"calebchongsj"},"content":"        case \"DeleteCommand\":","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"calebchongsj"},"content":"            dialog.getStyleClass().add(\"delete-label\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"calebchongsj"},"content":"            break;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"calebchongsj"},"content":"        default:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"calebchongsj"},"content":"            break;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"calebchongsj"},"content":"        }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"calebchongsj"},"content":"     * Creates and returns a DialogBox representing the bot\u0027s dialog.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"calebchongsj"},"content":"     * The dialog box will display the specified text and image, with the alignment flipped","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"calebchongsj"},"content":"     * so that the image appears on the left side and the text on the right.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"calebchongsj"},"content":"     * @param text to be displayed in the bot\u0027s dialog box.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"calebchongsj"},"content":"     * @param img  to be displayed alongside the bot\u0027s dialog.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"calebchongsj"},"content":"     * @param commandType indicates the type of user command for bot to process.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"calebchongsj"},"content":"     * @return DialogBox object containing the bot\u0027s dialog.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"calebchongsj"},"content":"    public static DialogBox getBuddyDialog(String text, Image img, String commandType) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"calebchongsj"},"content":"        assert text !\u003d null : \"Dialog text for buddy should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"calebchongsj"},"content":"        assert img !\u003d null : \"Image for buddy should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"calebchongsj"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"calebchongsj"},"content":"        db.flip();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"calebchongsj"},"content":"        db.changeDialogStyle(commandType);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"calebchongsj"},"content":"        return db;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"calebchongsj"},"content":"     * Flips the dialog box horizontally, reversing the order of the text and image.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"calebchongsj"},"content":"     * This method is used to align the bot\u0027s dialog differently from the user\u0027s dialog.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"calebchongsj"},"content":"    public void flip() {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"calebchongsj"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"calebchongsj"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"calebchongsj"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"calebchongsj"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"calebchongsj"},"content":"        assert getAlignment().equals(Pos.TOP_LEFT) : \"Alignment should be TOP_LEFT after flip\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"calebchongsj"},"content":"        ObservableList\u003cNode\u003e reversedChildren \u003d FXCollections.observableArrayList(getChildren());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"calebchongsj"},"content":"        Collections.reverse(reversedChildren);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"calebchongsj"},"content":"        assert getChildren().equals(reversedChildren) : \"Children should be reversed after flip\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"calebchongsj"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"calebchongsj"},"content":"     * Makes the profile picture circular.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"calebchongsj"},"content":"    public void makeProfilePictureCircular() {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"calebchongsj"},"content":"        double diameter \u003d radius * 2;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"calebchongsj"},"content":"        Circle clip \u003d new Circle(radius, radius, radius);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"calebchongsj"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"calebchongsj"},"content":"        displayPicture.setFitWidth(diameter);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"calebchongsj"},"content":"        displayPicture.setFitHeight(diameter);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"calebchongsj"},"content":"        displayPicture.setPreserveRatio(true);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"calebchongsj"},"content":"        displayPicture.layoutBoundsProperty().addListener((obs, oldBounds, newBounds) -\u003e {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"calebchongsj"},"content":"            clip.setRadius(Math.min(newBounds.getWidth(), newBounds.getHeight()) / 2.0);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"calebchongsj"},"content":"        });","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"calebchongsj"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"calebchongsj":138}},{"path":"src/main/java/quirkbot/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"calebchongsj"},"content":"package quirkbot.gui;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"calebchongsj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"calebchongsj"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"calebchongsj"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"calebchongsj"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"calebchongsj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"calebchongsj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"calebchongsj"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"calebchongsj"},"content":"import myapp.quirkbot.Ui;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"calebchongsj"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"calebchongsj"},"content":" * MainWindow class which helps to create the visuals for the GUI.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"calebchongsj"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"calebchongsj"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"calebchongsj"},"content":"    @FXML","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"calebchongsj"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"calebchongsj"},"content":"    @FXML","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"calebchongsj"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"calebchongsj"},"content":"    @FXML","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"calebchongsj"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"calebchongsj"},"content":"    @FXML","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"calebchongsj"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"calebchongsj"},"content":"    private Ui buddy;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"calebchongsj"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"calebchongsj"},"content":"    private Image buddyImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"calebchongsj"},"content":"     * Initializes the height of the dialog container.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"calebchongsj"},"content":"    @FXML","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"calebchongsj"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"calebchongsj"},"content":"        assert scrollPane !\u003d null : \"ScrollPane must be initialized.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"calebchongsj"},"content":"        assert dialogContainer !\u003d null : \"DialogContainer must be initialized.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"calebchongsj"},"content":"        assert userInput !\u003d null : \"UserInput must be initialized.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"calebchongsj"},"content":"        assert sendButton !\u003d null : \"SendButton must be initialized.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"calebchongsj"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"calebchongsj"},"content":"        userInput.setPromptText(\"Type here...\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"calebchongsj"},"content":"     * Sets the buddy from the Ui class.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"calebchongsj"},"content":"    public void setBuddy(Ui buddy) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"calebchongsj"},"content":"        assert buddy !\u003d null : \"Buddy must not be null.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"calebchongsj"},"content":"        this.buddy \u003d buddy;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"calebchongsj"},"content":"     * Handles user input and processes it using the Ui class.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"calebchongsj"},"content":"     * Displays the user input and response in the dialog container.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"calebchongsj"},"content":"    @FXML","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"calebchongsj"},"content":"    public void handleUserInput() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"calebchongsj"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"calebchongsj"},"content":"        assert input !\u003d null : \"User input should not be null.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"calebchongsj"},"content":"        assert !input.trim().isEmpty() : \"User input should not be empty.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"calebchongsj"},"content":"        String response \u003d getResponse(input);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"calebchongsj"},"content":"        assert response !\u003d null : \"Buddy response should not be null.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"calebchongsj"},"content":"        String commandType \u003d buddy.getCommandType();","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"calebchongsj"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"calebchongsj"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"calebchongsj"},"content":"                DialogBox.getBuddyDialog(response, buddyImage, commandType)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"calebchongsj"},"content":"        );","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"calebchongsj"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"calebchongsj"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"calebchongsj"},"content":"     * Handles user input and processes it using the Ui class.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"calebchongsj"},"content":"     * @return the buddy response in the dialog container.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"calebchongsj"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"calebchongsj"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"calebchongsj"},"content":"        return buddy.processCommand(input);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"calebchongsj"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"calebchongsj":80}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"calebchongsj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"calebchongsj"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"calebchongsj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"calebchongsj"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"calebchongsj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"calebchongsj"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"calebchongsj"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"calebchongsj"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"calebchongsj"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"calebchongsj"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"calebchongsj"},"content":"    \u003cHBox.margin\u003e","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"calebchongsj"},"content":"        \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"calebchongsj"},"content":"    \u003c/HBox.margin\u003e","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"calebchongsj"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"calebchongsj"},"content":"        \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"calebchongsj"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"calebchongsj"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"calebchongsj":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"calebchongsj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"calebchongsj"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"calebchongsj"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"calebchongsj"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"calebchongsj"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"calebchongsj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"calebchongsj"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"quirkbot.gui.MainWindow\"\u003e","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"calebchongsj"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"calebchongsj"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"calebchongsj"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"calebchongsj"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"calebchongsj"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"calebchongsj"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"calebchongsj"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"calebchongsj"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"calebchongsj"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"calebchongsj"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"calebchongsj":19}},{"path":"src/test/java/myapp/quirkbot/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"calebchongsj"},"content":"package myapp.quirkbot;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"calebchongsj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"calebchongsj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"calebchongsj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"calebchongsj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"calebchongsj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"calebchongsj"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"calebchongsj"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"calebchongsj"},"content":"    public void testParsing() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"calebchongsj"},"content":"        String taskData \u003d \"D | 0 | programming assignment | 02/09/2024 2359\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"calebchongsj"},"content":"        String[] parts \u003d taskData.split(\" \\\\| \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"calebchongsj"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"calebchongsj"},"content":"        LocalDateTime deadlineBy \u003d null;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"calebchongsj"},"content":"        if (parts.length \u003e 3) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"calebchongsj"},"content":"            try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"calebchongsj"},"content":"                deadlineBy \u003d LocalDateTime.parse(parts[3], DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"calebchongsj"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"calebchongsj"},"content":"                System.out.println(\"Warning: There is no date format provided\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"calebchongsj"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"calebchongsj"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"calebchongsj"},"content":"        Deadline expectedTask \u003d new Deadline(description, deadlineBy);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"calebchongsj"},"content":"        Deadline actualTask \u003d Deadline.parseTask(taskData);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"calebchongsj"},"content":"        assertEquals(expectedTask.getDescription(), actualTask.getDescription());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"calebchongsj"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"calebchongsj"},"content":"    public void testFormatting() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"calebchongsj"},"content":"        String taskData \u003d \"D | 0 | programming assignment | 02/09/2024 2359\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"calebchongsj"},"content":"        String[] parts \u003d taskData.split(\" \\\\| \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"calebchongsj"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"calebchongsj"},"content":"        LocalDateTime deadlineBy \u003d Parser.parseDateTime(parts[3].trim());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"calebchongsj"},"content":"        Deadline task \u003d new Deadline(description, deadlineBy);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"calebchongsj"},"content":"        String expected \u003d \"D | \" + (task.getDone() ? \"1\" : \"0\") + \" | \" + task.getDescription()","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"calebchongsj"},"content":"                + \" | \" + deadlineBy.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"calebchongsj"},"content":"        String actual \u003d \"D | 0 | programming assignment | 02/09/2024 2359\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"calebchongsj"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"calebchongsj"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"calebchongsj":42}},{"path":"src/test/java/myapp/quirkbot/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"calebchongsj"},"content":"package myapp.quirkbot;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"calebchongsj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"calebchongsj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"calebchongsj"},"content":"public class ToDoTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"calebchongsj"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"calebchongsj"},"content":"    public void testParsing() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"calebchongsj"},"content":"        String taskData \u003d \"T | 1 | evening workout\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"calebchongsj"},"content":"        String[] parts \u003d taskData.split(\" \\\\| \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"calebchongsj"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"calebchongsj"},"content":"        ToDo expectedTask \u003d new ToDo(description);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"calebchongsj"},"content":"        ToDo actualTask \u003d ToDo.parseTask(taskData);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"calebchongsj"},"content":"        assertEquals(expectedTask.getDescription(), actualTask.getDescription());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"calebchongsj"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"calebchongsj"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"calebchongsj"},"content":"    public void testFormatting() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"calebchongsj"},"content":"        String taskData \u003d \"T | 1 | evening workout\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"calebchongsj"},"content":"        String[] parts \u003d taskData.split(\" \\\\| \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"calebchongsj"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"calebchongsj"},"content":"        ToDo task \u003d new ToDo(description);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"calebchongsj"},"content":"        task.markDone();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"calebchongsj"},"content":"        String expected \u003d \"T | \" + (task.getDone() ? \"1\" : \"0\") + \" | \" + task.getDescription();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"calebchongsj"},"content":"        String actual \u003d \"T | 1 | evening workout\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"calebchongsj"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"calebchongsj"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"calebchongsj"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"calebchongsj":29}}]
