[{"path":"data/list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rahula1008"},"content":"T | 0 | Borrow book","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahula1008"},"content":"D | 0 | return book  | 10-10-2024","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahula1008"},"content":"E | 0 | fintechmeeting | 10-10-2024 | 11-10-2024","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahula1008"},"content":"D | 1 | return book  | 10-10-2024","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"rahula1008":4}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahula1008"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahula1008"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahula1008"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahula1008"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahula1008"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahula1008"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahula1008"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahula1008"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahula1008"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahula1008"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahula1008"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahula1008"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahula1008"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahula1008"},"content":"    ","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahula1008"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"rahula1008":21}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahula1008"},"content":"/**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahula1008"},"content":" * This is the DukeException","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahula1008"},"content":" * for when the user types incorrect inputs","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahula1008"},"content":" * such as forgetting the description of the task","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahula1008"},"content":" * or forgetting to put the /by","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahula1008"},"content":" */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahula1008"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahula1008"},"content":"    ","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahula1008"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahula1008"},"content":"        super(message);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahula1008"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahula1008"},"content":"    ","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahula1008"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"rahula1008":14}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahula1008"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahula1008"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahula1008"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahula1008"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahula1008"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahula1008"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahula1008"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahula1008"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahula1008"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahula1008"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahula1008"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahula1008"},"content":"    public String toString() { ","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahula1008"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahula1008"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(formatter) + \" to: \" + to.format(formatter) + \")\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahula1008"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahula1008"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"rahula1008":22}},{"path":"src/main/java/SirPotato.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahula1008"},"content":"import java.util.Scanner;  // For user inputs","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahula1008"},"content":"import java.util.ArrayList; //To create the to-do list","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahula1008"},"content":"import java.io.File;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahula1008"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahula1008"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahula1008"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahula1008"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahula1008"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahula1008"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahula1008"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahula1008"},"content":"* SirPotato is the name of the chatbot ","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahula1008"},"content":"* that we will be using in this project","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahula1008"},"content":"* @author Rahul Agarwal","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahula1008"},"content":"*/","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahula1008"},"content":"public class SirPotato {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahula1008"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahula1008"},"content":"    private String logo \u003d \"Sir Potato\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahula1008"},"content":"    private String horizontal_line \u003d \"___________________________ \\n\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahula1008"},"content":"    private String indent \u003d \"   \";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahula1008"},"content":"    private ArrayList\u003cTask\u003e toDoList;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahula1008"},"content":"    DateTimeFormatter saveFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahula1008"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahula1008"},"content":"     * Constructor for the chatbot, named SirPotato","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahula1008"},"content":"     * Initialises the scanner and the toDoList.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rahula1008"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rahula1008"},"content":"    public SirPotato() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rahula1008"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rahula1008"},"content":"        this.toDoList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rahula1008"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rahula1008"},"content":"    private LocalDate parseData(String dateToParse) throws DateTimeParseException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rahula1008"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rahula1008"},"content":"        return LocalDate.parse(dateToParse, formatter);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rahula1008"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rahula1008"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rahula1008"},"content":"     * Displays the welcome message when the user first starts the chat","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rahula1008"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rahula1008"},"content":"    public void displayWelcomeMessage() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rahula1008"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rahula1008"},"content":"        System.out.println(\"What can I do ya for?\\n\" + horizontal_line);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rahula1008"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rahula1008"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rahula1008"},"content":"     * Displays the bye message when the user types \u0027bye\u0027.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rahula1008"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rahula1008"},"content":"    public void displayByeMessage() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rahula1008"},"content":"        System.out.println(\"Bye mate, see you around.\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rahula1008"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rahula1008"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rahula1008"},"content":"     * Displays the message that a task has been added to the list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rahula1008"},"content":"     * @param task the task that is being added to the toDoList.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rahula1008"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rahula1008"},"content":"    public void displayAddedTask(Task task) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rahula1008"},"content":"        System.out.println(horizontal_line);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rahula1008"},"content":"        System.out.println(indent + \"Got it. I\u0027ve added this task for ya.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rahula1008"},"content":"        System.out.println(indent + task);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rahula1008"},"content":"        System.out.println(indent + \"Now you\u0027ve got \" + toDoList.size() + \" tasks in the list mate\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rahula1008"},"content":"        System.out.println(horizontal_line);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rahula1008"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rahula1008"},"content":"    private void validateDateFormat(String date) throws DukeException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rahula1008"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rahula1008"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rahula1008"},"content":"            LocalDate.parse(date, dateFormatter);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rahula1008"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rahula1008"},"content":"            throw new DukeException(\"Mate, the date must be in the format dd-MM-yyyy.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rahula1008"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rahula1008"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rahula1008"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rahula1008"},"content":"     * Validates user input","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rahula1008"},"content":"     * @param userInput The user\u0027s input to the chatbot","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rahula1008"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rahula1008"},"content":"    public void checkForErrors(String userInput) throws DukeException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rahula1008"},"content":"        if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rahula1008"},"content":"            if (userInput.length() \u003c\u003d 5 || userInput.substring(5).isEmpty()) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rahula1008"},"content":"                throw new DukeException(\"Mate, you have got to give us a description of the task\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rahula1008"},"content":"            }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rahula1008"},"content":"        } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rahula1008"},"content":"            String[] sectionedString \u003d userInput.split(\"/by \");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rahula1008"},"content":"            if (sectionedString.length \u003c 2 || ","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rahula1008"},"content":"                sectionedString[0].substring(9).isEmpty() || ","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rahula1008"},"content":"                sectionedString[1].isEmpty()) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rahula1008"},"content":"                throw new DukeException(\"Mate, a deadline must include a task, and the deadline\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rahula1008"},"content":"            }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rahula1008"},"content":"            validateDateFormat(sectionedString[1].trim());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rahula1008"},"content":"        } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rahula1008"},"content":"            String[] sectionedString \u003d userInput.split(\" /from | /to \");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rahula1008"},"content":"            if (sectionedString.length \u003c 3 || sectionedString[0].substring(6).isEmpty() ||","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rahula1008"},"content":"                sectionedString[1].isEmpty() || sectionedString[2].isEmpty()) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rahula1008"},"content":"                throw new DukeException(\"Mate, an event should have the description, the start, and the end.\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rahula1008"},"content":"            }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rahula1008"},"content":"            validateDateFormat(sectionedString[1].trim());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rahula1008"},"content":"            validateDateFormat(sectionedString[2].trim());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rahula1008"},"content":"        } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rahula1008"},"content":"            if (userInput.length() \u003c\u003d 7) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rahula1008"},"content":"                throw new DukeException(\"You need to say which item to delete\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rahula1008"},"content":"            }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rahula1008"},"content":"        } else if (!userInput.equals(\"bye\") \u0026\u0026 !userInput.equals(\"list\") \u0026\u0026 !userInput.startsWith(\"mark\") \u0026\u0026 !userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rahula1008"},"content":"            throw new DukeException(\"I\u0027m sorry, that is not a valid input\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rahula1008"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rahula1008"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rahula1008"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rahula1008"},"content":"     * Prints out the deletion message ","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rahula1008"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rahula1008"},"content":"    public void displayDeletionMessage(Task task) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rahula1008"},"content":"        System.out.println(horizontal_line);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rahula1008"},"content":"        System.out.println(\"Gotcha mate, I\u0027ve deleted the following task: \");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rahula1008"},"content":"        System.out.println(task);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rahula1008"},"content":"        System.out.println(\"Now you\u0027ve got \" + (toDoList.size() - 1) + \" tasks left.\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rahula1008"},"content":"        System.out.println(horizontal_line);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rahula1008"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"rahula1008"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"rahula1008"},"content":"     * Populates the toDoList using data file ","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"rahula1008"},"content":"     * @param filePath the path of the data file to read","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"rahula1008"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"rahula1008"},"content":"    private void readFile(String filePath) throws FileNotFoundException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rahula1008"},"content":"        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"rahula1008"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"rahula1008"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"rahula1008"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"rahula1008"},"content":"            String[] sectionedString \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"rahula1008"},"content":"            String type \u003d sectionedString[0];","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"rahula1008"},"content":"            boolean isDone \u003d sectionedString[1].equals(\"1\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"rahula1008"},"content":"            String description \u003d sectionedString[2];","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"rahula1008"},"content":"            Task task \u003d null;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"rahula1008"},"content":"            if (type.equals(\"T\")) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"rahula1008"},"content":"                task \u003d new Todo(description);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"rahula1008"},"content":"            } else if (type.equals(\"D\")) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"rahula1008"},"content":"                LocalDate dl \u003d parseData(sectionedString[3]);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"rahula1008"},"content":"                task \u003d new Deadline(description, dl);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"rahula1008"},"content":"            } else if (type.equals(\"E\")) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"rahula1008"},"content":"                LocalDate from \u003d parseData(sectionedString[3]);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"rahula1008"},"content":"                LocalDate to \u003d parseData(sectionedString[4]);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"rahula1008"},"content":"                task \u003d new Event(description, from, to);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"rahula1008"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"rahula1008"},"content":"            System.out.println(task);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"rahula1008"},"content":"            toDoList.add(task);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"rahula1008"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"rahula1008"},"content":"        ","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"rahula1008"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"rahula1008"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"rahula1008"},"content":"     * Saves the toDoList and writes it to the data file","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"rahula1008"},"content":"     * @param filePath the path of data file to write to","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"rahula1008"},"content":"     * @param toDoList the toDoList that will be saved ","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"rahula1008"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"rahula1008"},"content":"    private void writeToFile(String filePath, ArrayList\u003cTask\u003e toDoList) throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"rahula1008"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"rahula1008"},"content":"        for (Task task : toDoList) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"rahula1008"},"content":"            String type \u003d task instanceof Todo ? \"T\" : task instanceof Deadline ? \"D\" : \"E\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"rahula1008"},"content":"            String isDone \u003d task.isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"rahula1008"},"content":"            String textToAdd \u003d type + \" | \" + isDone + \" | \" + task.description;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"rahula1008"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"rahula1008"},"content":"                textToAdd +\u003d \" | \" + ((Deadline) task).by.format(saveFormatter);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"rahula1008"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"rahula1008"},"content":"                textToAdd +\u003d \" | \" + ((Event) task).from.format(saveFormatter) + \" | \" + ","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"rahula1008"},"content":"                ((Event) task).to.format(saveFormatter);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"rahula1008"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"rahula1008"},"content":"            fw.write(textToAdd + System.lineSeparator());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"rahula1008"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"rahula1008"},"content":"        fw.close();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"rahula1008"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"rahula1008"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"rahula1008"},"content":"     * Starts the chat with the bot. Keeps accepting user input until the user types \u0027bye\u0027.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"rahula1008"},"content":"     * Saves the data to a file as you go / creates a file if one doesn\u0027t exist ","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"rahula1008"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"rahula1008"},"content":"    public void startChat() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"rahula1008"},"content":"        //Check to see if the data.txt file exists ","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"rahula1008"},"content":"        //If it doesn\u0027t, it will create the file and inform the user","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"rahula1008"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"rahula1008"},"content":"            File f \u003d new File(\"../../../data/list.txt\"); ","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"rahula1008"},"content":"            if (f.createNewFile()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"rahula1008"},"content":"                System.out.println(\"Creating your data file\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"rahula1008"},"content":"            } else {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"rahula1008"},"content":"                System.out.println(\"Initializing your data file\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"rahula1008"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"rahula1008"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"rahula1008"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"rahula1008"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"rahula1008"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"rahula1008"},"content":"        //Use the data file to populate the toDoList.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"rahula1008"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"rahula1008"},"content":"            System.out.println(\"Loading your data file\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"rahula1008"},"content":"            readFile(\"../../../data/list.txt\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"rahula1008"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"rahula1008"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"rahula1008"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"rahula1008"},"content":"        displayWelcomeMessage();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"rahula1008"},"content":"        while (true) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"rahula1008"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"rahula1008"},"content":"            try {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"rahula1008"},"content":"                checkForErrors(userInput);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"rahula1008"},"content":"                if (userInput.equals(\"bye\")) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"rahula1008"},"content":"                    try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"rahula1008"},"content":"                        writeToFile(\"../../../data/list.txt\", toDoList);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"rahula1008"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"rahula1008"},"content":"                        System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"rahula1008"},"content":"                    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"rahula1008"},"content":"                    System.out.println(horizontal_line + \"\\n\" + indent + \"Bye. Thanks mate.\" + \"\\n\" + horizontal_line + \"\\n\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"rahula1008"},"content":"                    return;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"rahula1008"},"content":"                } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"rahula1008"},"content":"                    System.out.println(horizontal_line);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"rahula1008"},"content":"                    System.out.println(indent + \"Here are the tasks in your list:\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"rahula1008"},"content":"                    System.out.println(indent + \"List: \");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"rahula1008"},"content":"                    for (int i \u003d 0; i \u003c toDoList.size(); i++) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"rahula1008"},"content":"                        System.out.println(indent + (i+1) + \". \" + toDoList.get(i));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"rahula1008"},"content":"                    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"rahula1008"},"content":"                    System.out.println(horizontal_line + \"\\n\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"rahula1008"},"content":"                } else if (userInput.length() \u003e\u003d 4 \u0026\u0026 userInput.substring(0, 4).equals(\"mark\")) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"rahula1008"},"content":"                    String[] commandParts \u003d userInput.split(\" \");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"rahula1008"},"content":"                    int itemNumber \u003d Integer.parseInt(commandParts[1]) - 1;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"rahula1008"},"content":"                    toDoList.get(itemNumber).setCompletion(true);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"rahula1008"},"content":"                    System.out.println(horizontal_line);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"rahula1008"},"content":"                    System.out.println(indent + \"Good on ya! I\u0027ve marked it done:\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"rahula1008"},"content":"                    System.out.println(indent + indent + toDoList.get(itemNumber));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"rahula1008"},"content":"                    System.out.println(horizontal_line);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"rahula1008"},"content":"                } else if (userInput.length() \u003e\u003d 6 \u0026\u0026 userInput.substring(0, 6).equals(\"unmark\")) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"rahula1008"},"content":"                    String[] commandParts \u003d userInput.split(\" \");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"rahula1008"},"content":"                    int itemNumber \u003d Integer.parseInt(commandParts[1]) - 1;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"rahula1008"},"content":"                    toDoList.get(itemNumber).setCompletion(false);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"rahula1008"},"content":"                    System.out.println(indent + \"What\u0027s happened here mate? I\u0027ve unmarked it for ya.\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"rahula1008"},"content":"                    System.out.println(indent + indent + toDoList.get(itemNumber));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"rahula1008"},"content":"                    System.out.println(horizontal_line);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"rahula1008"},"content":"                } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"rahula1008"},"content":"                    String description \u003d userInput.substring(5); ","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"rahula1008"},"content":"                    Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"rahula1008"},"content":"                    toDoList.add(todo);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"rahula1008"},"content":"                    displayAddedTask(todo);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"rahula1008"},"content":"                } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"rahula1008"},"content":"                    String[] sectionedString \u003d userInput.split(\"/by \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"rahula1008"},"content":"                    String description \u003d sectionedString[0].substring(9);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"rahula1008"},"content":"                    LocalDate by \u003d parseData(sectionedString[1]);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"rahula1008"},"content":"                    Deadline dl \u003d new Deadline(description, by);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"rahula1008"},"content":"                    toDoList.add(dl);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"rahula1008"},"content":"                    displayAddedTask(dl);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"rahula1008"},"content":"                } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"rahula1008"},"content":"                    String[] sectionedString \u003d userInput.split(\" /from | /to \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"rahula1008"},"content":"                    String description \u003d sectionedString[0].substring(6); ","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"rahula1008"},"content":"                    LocalDate from \u003d parseData(sectionedString[1]); ","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"rahula1008"},"content":"                    LocalDate to \u003d parseData(sectionedString[2]); ","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"rahula1008"},"content":"                    Event ev \u003d new Event(description, from, to);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"rahula1008"},"content":"                    toDoList.add(ev);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"rahula1008"},"content":"                    displayAddedTask(ev);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"rahula1008"},"content":"                } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"rahula1008"},"content":"                    String[] sectionedString \u003d userInput.split(\" \");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"rahula1008"},"content":"                    int itemToDelete \u003d Integer.parseInt(sectionedString[1]) - 1;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"rahula1008"},"content":"                    displayDeletionMessage(toDoList.get(itemToDelete));","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"rahula1008"},"content":"                    toDoList.remove(itemToDelete);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"rahula1008"},"content":"                } else {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"rahula1008"},"content":"                    throw new DukeException(\"That is not valid input mate. Please have another go.\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"rahula1008"},"content":"                }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"rahula1008"},"content":"            } catch (DukeException de) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"rahula1008"},"content":"                System.out.println(horizontal_line);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"rahula1008"},"content":"                System.out.println(indent + de.getMessage());","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"rahula1008"},"content":"                System.out.println(horizontal_line);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"rahula1008"},"content":"            }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"rahula1008"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"rahula1008"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"rahula1008"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"rahula1008"},"content":"        SirPotato potato \u003d new SirPotato();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"rahula1008"},"content":"        potato.startChat();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"rahula1008"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"rahula1008"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"rahula1008":282}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahula1008"},"content":"public class Task {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahula1008"},"content":"    protected String description;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahula1008"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahula1008"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahula1008"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahula1008"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahula1008"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahula1008"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahula1008"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); //return tick or X symbols","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahula1008"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahula1008"},"content":"    public String displayDescription() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahula1008"},"content":"        return description;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahula1008"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahula1008"},"content":"    public void setCompletion(boolean done) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahula1008"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahula1008"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahula1008"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahula1008"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahula1008"},"content":"        return (getStatusIcon() + \" \" + displayDescription());","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahula1008"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahula1008"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"rahula1008":26}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahula1008"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahula1008"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahula1008"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahula1008"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahula1008"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahula1008"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahula1008"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahula1008"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahula1008"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"rahula1008":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rahula1008"},"content":"todo borrow book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahula1008"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahula1008"},"content":"event meeting /from 10am /to 2pm","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahula1008"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahula1008"},"content":"mark 2","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahula1008"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahula1008"},"content":"unmark 2","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahula1008"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahula1008"},"content":"bye","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahula1008"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"rahula1008":10}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahula1008"},"content":"java -classpath ../bin SirPotato \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rahula1008"},"content":"diff -b ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"rahula1008":2,"-":36}}]
