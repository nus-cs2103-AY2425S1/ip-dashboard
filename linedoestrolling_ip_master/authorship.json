[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"# Elysia User Guide","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"![](docs/Ui.png)","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":"This chatbot will manage your tasks for you! Personality heavily inspired by Elysia from Honkai Impact 3.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"## Commands","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"1. list ","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":"   - lists all the current tasks in the tasklist","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":"   - Example: ```list```","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":"2. find","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"   - finds the task based on the string given(will match description)","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"   - Usage: find [string]","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"   - Example: ```find test```","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"3. mark","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"   - marks the task as completed. An [x] will be shown when listed","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"   - Usage: mark [task number]","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"   - Example: ```mark 2```","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"4. unmark","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"   - unmarks the task as uncompleted. A [ ] will be shown when listed","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"   - Usage: umark [task number]","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"   - Example: ```unmark 2```","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"5. delete","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"   - removes the task from the list","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"   - Usage: delete [task number]","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"   - Example: ```delete 3```","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"6. todo","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"linedoestrolling"},"content":"   - adds a todo task with only a description to the list","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"linedoestrolling"},"content":"   - use r tag to indicate recurring task","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"linedoestrolling"},"content":"   - Usage: todo [OPTIONAL: r] [description]","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"linedoestrolling"},"content":"   - Example: ```todo r finish ip```","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"linedoestrolling"},"content":"7. event","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"linedoestrolling"},"content":"   - adds an event with description, start date, and end date","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"linedoestrolling"},"content":"   - use r tag to indicate recurring task","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"linedoestrolling"},"content":"   - Date formats accepted: YYYY-MM-DD","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"linedoestrolling"},"content":"   - Usage: event [OPTIONAL: r] [description] /from [START_DATE] /to [END_DATE]","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"linedoestrolling"},"content":"   - Example: ```event Midterms everyday... /from 2024-09-1 /to 2024-09-10```","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"linedoestrolling"},"content":"8. deadline","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"linedoestrolling"},"content":"   - adds a deadline with description and date","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"linedoestrolling"},"content":"   - use r tag to indicate recurring task","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"linedoestrolling"},"content":"   - Date formats accepted: YYYY-MM-DD","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"linedoestrolling"},"content":"   - Usage: deadline [OPTIONAL: r] [description] /by [BY_DATE]","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"linedoestrolling"},"content":"   - Example: ```deadline r finish 2100 quiz /by 2024-08-23```","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"linedoestrolling"},"content":"9. bye","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"linedoestrolling"},"content":"   - Saves the current list of tasks in data.txt","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"linedoestrolling"},"content":"   - Currently does not close the application","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"linedoestrolling"},"content":"   - Example: ```bye```","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"linedoestrolling"},"content":"## Resources","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"linedoestrolling"},"content":"  elysia image: https://i.pinimg.com/736x/cd/0e/0d/cd0e0dbb19f35e33bb6e68b4f47d0db8.jpg ","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"linedoestrolling"},"content":"  captain image: https://static.wikia.nocookie.net/houkai3rd/images/c/cd/Captain_Hyperion.jpg/revision/latest?cb\u003d20180516154002","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"linedoestrolling"},"content":"  background image: https://upload-os-bbs.hoyolab.com/upload/2024/03/18/389611819/e648d4bfbec6d9e98084a8ccd469229c_3486531063307202938.jpg?x-oss-process\u003dimage%2Fresize%2Cs_1000%2Fauto-orient%2C0%2Finterlace%2C1%2Fformat%2Cwebp%2Fquality%2Cq_70","lastModifiedDate":"2024-09-23","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":53,"-":4}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"linedoestrolling"},"content":"    mainClass.set(\"elysia.ui.Launcher\")","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"linedoestrolling"},"content":"    archiveBaseName \u003d \"elysia\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"linedoestrolling"},"content":"    archiveFileName \u003d \u0027elysia.jar\u0027","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"linedoestrolling"},"content":"checkstyle {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"linedoestrolling"},"content":"    toolVersion \u003d \u002710.2\u0027;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-09-23","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":23,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"# Elysia User Guide","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"![](docs/Ui.png)","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":"This chatbot will manage your tasks for you! Personality heavily inspired by Elysia from Honkai Impact 3.","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"## Commands","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"1. list ","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":"   - lists all the current tasks in the tasklist","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":"   - Example: ```list```","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":"2. find","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"   - finds the task based on the string given(will match description)","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"   - Usage: find [string]","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"   - Example: ```find test```","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"3. mark","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"   - marks the task as completed. An [x] will be shown when listed","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"   - Usage: mark [task number]","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"   - Example: ```mark 2```","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"4. unmark","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"   - unmarks the task as uncompleted. A [ ] will be shown when listed","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"   - Usage: umark [task number]","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"   - Example: ```unmark 2```","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"5. delete","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"   - removes the task from the list","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"   - Usage: delete [task number]","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"   - Example: ```delete 3```","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"6. todo","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"linedoestrolling"},"content":"   - adds a todo task with only a description to the list","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"linedoestrolling"},"content":"   - use r tag to indicate recurring task","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"linedoestrolling"},"content":"   - Usage: todo [OPTIONAL: r] [description]","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"linedoestrolling"},"content":"   - Example: ```todo r finish ip```","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"linedoestrolling"},"content":"7. event","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"linedoestrolling"},"content":"   - adds an event with description, start date, and end date","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"linedoestrolling"},"content":"   - use r tag to indicate recurring task","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"linedoestrolling"},"content":"   - Date formats accepted: YYYY-MM-DD","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"linedoestrolling"},"content":"   - Usage: event [OPTIONAL: r] [description] /from [START_DATE] /to [END_DATE]","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"linedoestrolling"},"content":"   - Example: ```event Midterms everyday... /from 2024-09-1 /to 2024-09-10```","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"linedoestrolling"},"content":"8. deadline","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"linedoestrolling"},"content":"   - adds a deadline with description and date","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"linedoestrolling"},"content":"   - use r tag to indicate recurring task","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"linedoestrolling"},"content":"   - Date formats accepted: YYYY-MM-DD","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"linedoestrolling"},"content":"   - Usage: deadline [OPTIONAL: r] [description] /by [BY_DATE]","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"linedoestrolling"},"content":"   - Example: ```deadline r finish 2100 quiz /by 2024-08-23```","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"linedoestrolling"},"content":"9. bye","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"linedoestrolling"},"content":"   - Saves the current list of tasks in data.txt","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"linedoestrolling"},"content":"   - Currently does not close the application","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"linedoestrolling"},"content":"   - Example: ```bye```","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"linedoestrolling"},"content":"## Resources","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"linedoestrolling"},"content":"  elysia image: https://i.pinimg.com/736x/cd/0e/0d/cd0e0dbb19f35e33bb6e68b4f47d0db8.jpg ","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"linedoestrolling"},"content":"  captain image: https://static.wikia.nocookie.net/houkai3rd/images/c/cd/Captain_Hyperion.jpg/revision/latest?cb\u003d20180516154002","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"linedoestrolling"},"content":"  background image: https://upload-os-bbs.hoyolab.com/upload/2024/03/18/389611819/e648d4bfbec6d9e98084a8ccd469229c_3486531063307202938.jpg?x-oss-process\u003dimage%2Fresize%2Cs_1000%2Fauto-orient%2C0%2Finterlace%2C1%2Fformat%2Cwebp%2Fquality%2Cq_70","lastModifiedDate":"2024-09-24","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":57}},{"path":"src/main/java/elysia/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.commands;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"import elysia.storage.FileReaderWriter;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":"import elysia.tasks.TaskList;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":" * Represents a command to save the current task list and terminate the Elysia application.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":" * Extends the {@code Command} class and provides functionality to save the task list to a file.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":"     * Constructs a {@code ByeCommand} with the specified task list and file reader/writer.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"     * @param taskList the task list to be saved.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"     * @param fileReaderWriter the file reader/writer responsible for saving the task data to a file.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"    public ByeCommand(TaskList taskList, FileReaderWriter fileReaderWriter) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"        super(taskList, fileReaderWriter);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"     * Executes the {@code ByeCommand} by saving the task list to a file and returning the result.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"     * This method calls the {@code createFile()} and {@code writeFile()} methods from {@code FileReaderWriter}.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"     * @return a string indicating the result of creating and writing the task list to a file.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"    public String execute() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"        return fileReaderWriter.createFile() + \"\\n\" + fileReaderWriter.writeFile();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":32}},{"path":"src/main/java/elysia/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.commands;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"import elysia.exceptions.ElysiaException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":"import elysia.storage.FileReaderWriter;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":"import elysia.tasks.TaskList;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":" * Abstract class representing a command in the Elysia application.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":" * Defines the structure for commands that operate on a task list and interact with file storage.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":" * Subclasses should implement the {@code execute} method to define specific command behavior.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":"public abstract class Command {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":"    protected TaskList taskList;","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"    protected FileReaderWriter fileReaderWriter;","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"    protected String[] args;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"     * Constructs a new {@code Command} object with the specified task list and file reader/writer.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"     * @param taskList the task list to be manipulated by the command.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"     * @param fileReaderWriter the file reader/writer for saving or loading task data.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"    public Command(TaskList taskList, FileReaderWriter fileReaderWriter) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"        this.fileReaderWriter \u003d fileReaderWriter;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"     * Executes the command and returns the result as a string.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"linedoestrolling"},"content":"     * The specific behavior of the command is defined in subclasses.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"linedoestrolling"},"content":"     * @return a string representing the outcome or message of the executed command.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"linedoestrolling"},"content":"     * @throws ElysiaException if an error occurs during command execution.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"linedoestrolling"},"content":"    public abstract String execute() throws ElysiaException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":37}},{"path":"src/main/java/elysia/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.commands;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":"import java.util.Objects;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":"import elysia.exceptions.ArgumentFormatException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"import elysia.exceptions.EmptyTaskArgumentsException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":"import elysia.exceptions.WrongArgumentException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"import elysia.parser.DateTimeParser;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"import elysia.storage.FileReaderWriter;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"import elysia.tasks.Deadline;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":"import elysia.tasks.TaskList;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":" * Represents a command to create a new deadline task in the Elysia application.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":" * Extends the {@code Command} class and handles the parsing and validation of deadline task arguments.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"     * Constructs a {@code DeadlineCommand} with the specified task list, file reader/writer, and command arguments.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"     * Command format: deadline [optional: r] [DESCRIPTION] /by [BY_DATE]","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"     * @param taskList the task list to which the deadline will be added.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"     * @param fileReaderWriter the file reader/writer for saving or loading task data.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"     * @param args the command arguments, where the first argument is the command type and","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"     *             the second contains the task details.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"     * @throws DateTimeParseException if the date format is invalid when initializing the deadline.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"    public DeadlineCommand(TaskList taskList, FileReaderWriter fileReaderWriter, String[] args)","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"linedoestrolling"},"content":"            throws DateTimeParseException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"linedoestrolling"},"content":"        super(taskList, fileReaderWriter);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"linedoestrolling"},"content":"        this.args \u003d args;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"linedoestrolling"},"content":"     * Executes the {@code DeadlineCommand} to create a new deadline task.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"linedoestrolling"},"content":"     * Validates the command arguments, creates the deadline task, and adds it to the task list.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"linedoestrolling"},"content":"     * @return a string indicating the result of adding the new deadline task.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"linedoestrolling"},"content":"     * @throws EmptyTaskArgumentsException if no arguments are provided for the deadline command.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"linedoestrolling"},"content":"     * @throws ArgumentFormatException if the arguments are incorrectly formatted.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"linedoestrolling"},"content":"     * @throws WrongArgumentException if the date argument is of the wrong type or format.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"linedoestrolling"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"linedoestrolling"},"content":"    public String execute() throws EmptyTaskArgumentsException, ArgumentFormatException, WrongArgumentException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"linedoestrolling"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"linedoestrolling"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"linedoestrolling"},"content":"            throw new EmptyTaskArgumentsException(args[0]);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"linedoestrolling"},"content":"        String[] splitArgs \u003d args[1].split(\" \", 2);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"linedoestrolling"},"content":"        boolean isRecurring;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"linedoestrolling"},"content":"        String otherArgs;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"linedoestrolling"},"content":"        if (Objects.equals(splitArgs[0], \"r\")) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"linedoestrolling"},"content":"            isRecurring \u003d true;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"linedoestrolling"},"content":"            if (splitArgs.length \u003d\u003d 1) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"linedoestrolling"},"content":"                throw new EmptyTaskArgumentsException(args[0]);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"linedoestrolling"},"content":"            }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"linedoestrolling"},"content":"            otherArgs \u003d splitArgs[1];","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"linedoestrolling"},"content":"        } else {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"linedoestrolling"},"content":"            isRecurring \u003d false;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"linedoestrolling"},"content":"            otherArgs \u003d args[1];","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"linedoestrolling"},"content":"        String[] deadlineArgs \u003d otherArgs.split(\" /by \", 2);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"linedoestrolling"},"content":"        if (deadlineArgs.length !\u003d 2) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"linedoestrolling"},"content":"            throw new ArgumentFormatException(args[0]);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"linedoestrolling"},"content":"        for (String s: deadlineArgs) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"linedoestrolling"},"content":"            System.out.println(s);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"linedoestrolling"},"content":"        Deadline deadline;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"linedoestrolling"},"content":"        try {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"linedoestrolling"},"content":"            deadline \u003d new Deadline(deadlineArgs[0], DateTimeParser.parseDate(deadlineArgs[1]), isRecurring);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"linedoestrolling"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"linedoestrolling"},"content":"            throw new WrongArgumentException(\"date\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"linedoestrolling"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"linedoestrolling"},"content":"        assert(!Objects.equals(taskList.getSizeAsString(), \"0\"));","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"linedoestrolling"},"content":"        output.append(\"Added the task below to your list~\\n\").append(deadline).append(\"\\n\");","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"linedoestrolling"},"content":"        output.append(\"Wow! You now have \").append(taskList.getSizeAsString()).append(\" tasks in your list!\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"linedoestrolling"},"content":"        return output.toString();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":88}},{"path":"src/main/java/elysia/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.commands;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"import elysia.exceptions.EmptyArgumentException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":"import elysia.exceptions.WrongArgumentException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":"import elysia.storage.FileReaderWriter;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":"import elysia.tasks.Task;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"import elysia.tasks.TaskList;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":" * Represents a command to delete a task from the task list in the Elysia application.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":" * Extends the {@code Command} class and handles the parsing and validation of delete task arguments.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"     * Constructs a {@code DeleteCommand} with the specified task list, file reader/writer, and command arguments.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"     * @param taskList the task list from which the task will be deleted.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"     * @param fileReaderWriter the file reader/writer for saving or loading task data.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"     * @param args the command arguments, where the first argument is the command type and","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"     *             the second contains the task number.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"    public DeleteCommand(TaskList taskList, FileReaderWriter fileReaderWriter, String[] args) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"        super(taskList, fileReaderWriter);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"        this.args \u003d args;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"     * Executes the {@code DeleteCommand} to remove a task from the task list.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"     * Validates the command arguments and deletes the specified task if it exists.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"linedoestrolling"},"content":"     * @return a string indicating the result of the deletion, including the deleted task details.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"linedoestrolling"},"content":"     * @throws EmptyArgumentException if no task number is provided.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"linedoestrolling"},"content":"     * @throws WrongArgumentException if the provided task number is not a valid integer.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"linedoestrolling"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"linedoestrolling"},"content":"    public String execute() throws EmptyArgumentException, WrongArgumentException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"linedoestrolling"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"linedoestrolling"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"linedoestrolling"},"content":"            throw new EmptyArgumentException(args[0]);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"linedoestrolling"},"content":"        int taskNumber;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"linedoestrolling"},"content":"        try {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"linedoestrolling"},"content":"            taskNumber \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"linedoestrolling"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"linedoestrolling"},"content":"            throw new WrongArgumentException(\"task number\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"linedoestrolling"},"content":"        try {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"linedoestrolling"},"content":"            Task deletedTask \u003d taskList.deleteTask(taskNumber);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"linedoestrolling"},"content":"            output \u003d \"You don\u0027t need this task below anymore? Ok deleting it~\\n\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"linedoestrolling"},"content":"            output +\u003d deletedTask.toString();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"linedoestrolling"},"content":"            output +\u003d \"\\nWow! You now have \" + taskList.getSizeAsString() + \" tasks in your list!\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"linedoestrolling"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"linedoestrolling"},"content":"            output \u003d \"Uh oh, this task number does not exist...\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"linedoestrolling"},"content":"        return output;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":62}},{"path":"src/main/java/elysia/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.commands;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":"import java.util.Objects;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":"import elysia.exceptions.ArgumentFormatException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"import elysia.exceptions.EmptyTaskArgumentsException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":"import elysia.exceptions.WrongArgumentException;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"import elysia.parser.DateTimeParser;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"import elysia.storage.FileReaderWriter;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"import elysia.tasks.Event;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":"import elysia.tasks.TaskList;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":" * Represents a command to create a new event task in the Elysia application.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":" * Extends the {@code Command} class and handles the parsing and validation of event task arguments.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"     * Constructs an {@code EventCommand} with the specified task list, file reader/writer, and command arguments.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"     * Command format: event [optional: r] [DESCRIPTION] /from [START_DATE] /to [END_DATE]","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"     * @param taskList the task list to which the event will be added.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"     * @param fileReaderWriter the file reader/writer for saving or loading task data.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"     * @param args the command arguments, where the first argument is the command type and","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"     *             the second contains the event details.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"    public EventCommand(TaskList taskList, FileReaderWriter fileReaderWriter, String[] args) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"        super(taskList, fileReaderWriter);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"linedoestrolling"},"content":"        this.args \u003d args;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"linedoestrolling"},"content":"     * Executes the {@code EventCommand} to create a new event task.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"linedoestrolling"},"content":"     * Validates the command arguments, creates the event task, and adds it to the task list.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"linedoestrolling"},"content":"     * @return a string indicating the result of adding the new event task.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"linedoestrolling"},"content":"     * @throws EmptyTaskArgumentsException if no arguments are provided for the event command.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"linedoestrolling"},"content":"     * @throws ArgumentFormatException if the arguments are incorrectly formatted.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"linedoestrolling"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"linedoestrolling"},"content":"    public String execute() throws EmptyTaskArgumentsException, ArgumentFormatException, WrongArgumentException {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"linedoestrolling"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"linedoestrolling"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"linedoestrolling"},"content":"            throw new EmptyTaskArgumentsException(args[0]);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"linedoestrolling"},"content":"        String[] splitArgs \u003d args[1].split(\" \", 2);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"linedoestrolling"},"content":"        boolean isRecurring;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"linedoestrolling"},"content":"        String otherArgs;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"linedoestrolling"},"content":"        if (Objects.equals(splitArgs[0], \"r\")) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"linedoestrolling"},"content":"            isRecurring \u003d true;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"linedoestrolling"},"content":"            if (splitArgs.length \u003d\u003d 1) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"linedoestrolling"},"content":"                throw new EmptyTaskArgumentsException(args[0]);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"linedoestrolling"},"content":"            }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"linedoestrolling"},"content":"            otherArgs \u003d splitArgs[1];","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"linedoestrolling"},"content":"        } else {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"linedoestrolling"},"content":"            isRecurring \u003d false;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"linedoestrolling"},"content":"            otherArgs \u003d args[1];","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"linedoestrolling"},"content":"        String[] eventArgs \u003d otherArgs.split(\" /from | /to \");","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"linedoestrolling"},"content":"        if (eventArgs.length !\u003d 3) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"linedoestrolling"},"content":"            throw new ArgumentFormatException(args[0]);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"linedoestrolling"},"content":"        Event event;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"linedoestrolling"},"content":"        try {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"linedoestrolling"},"content":"            event \u003d new Event(eventArgs[0],","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"linedoestrolling"},"content":"                    DateTimeParser.parseDate(eventArgs[1]),","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"linedoestrolling"},"content":"                    DateTimeParser.parseDate(eventArgs[2]),","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"linedoestrolling"},"content":"                    isRecurring);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"linedoestrolling"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"linedoestrolling"},"content":"            throw new WrongArgumentException(\"date\");","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"linedoestrolling"},"content":"        taskList.addTask(event);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"linedoestrolling"},"content":"        assert(!Objects.equals(taskList.getSizeAsString(), \"0\"));","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"linedoestrolling"},"content":"        output.append(\"Added the task below to your list~\\n\").append(event).append(\"\\n\");","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"linedoestrolling"},"content":"        output.append(\"Wow! You now have \").append(taskList.getSizeAsString()).append(\" tasks in your list!\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"linedoestrolling"},"content":"        return output.toString();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":85}},{"path":"src/main/java/elysia/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.commands;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"import java.util.Objects;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":"import elysia.exceptions.ArgumentFormatException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":"import elysia.exceptions.ElysiaException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"import elysia.exceptions.EmptyArgumentException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":"import elysia.storage.FileReaderWriter;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"import elysia.tasks.TaskList;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":" * Represents a command to search for tasks in the task list based on a keyword.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":" * Extends the {@code Command} class and handles the parsing and validation of search arguments.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"    private String[] args;","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"     * Constructs a {@code FindCommand} with the specified task list, file reader/writer, and command arguments.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"     * @param taskList the task list to search through for matching tasks.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"     * @param fileReaderWriter the file reader/writer for saving or loading task data.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"     * @param args the command arguments, where the first argument is the command type and","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"     *             the second is the search keyword.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"    public FindCommand(TaskList taskList, FileReaderWriter fileReaderWriter, String[] args) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"        super(taskList, fileReaderWriter);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"        this.args \u003d args;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"linedoestrolling"},"content":"     * Executes the {@code FindCommand} to search for tasks matching the provided keyword.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"linedoestrolling"},"content":"     * Validates the command arguments, performs the search, and returns the matching tasks.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"linedoestrolling"},"content":"     * @return a string indicating the results of the search,","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"linedoestrolling"},"content":"     *     including matching tasks or a message if no tasks are found.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"linedoestrolling"},"content":"     * @throws ElysiaException if the command arguments are not formatted correctly or are empty.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"linedoestrolling"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"linedoestrolling"},"content":"    public String execute() throws ElysiaException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"linedoestrolling"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"linedoestrolling"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"linedoestrolling"},"content":"            throw new EmptyArgumentException(args[0]);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"linedoestrolling"},"content":"        } else if (args.length !\u003d 2) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"linedoestrolling"},"content":"            throw new ArgumentFormatException(args[0]);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"linedoestrolling"},"content":"        TaskList searchResults \u003d taskList.searchByKeyword(args[1]);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"linedoestrolling"},"content":"        if (Objects.equals(searchResults.getSizeAsString(), \"0\")) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"linedoestrolling"},"content":"            output \u003d \"I couldn\u0027t find anything...\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"linedoestrolling"},"content":"        } else {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"linedoestrolling"},"content":"            output \u003d \"Here\u0027s the tasks matching your search string! \"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"linedoestrolling"},"content":"                    + \"I hope you found what you\u0027re looking for!\\n\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"linedoestrolling"},"content":"            output +\u003d searchResults.toString();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"linedoestrolling"},"content":"        return output;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":60}},{"path":"src/main/java/elysia/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.commands;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"import elysia.storage.FileReaderWriter;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":"import elysia.tasks.TaskList;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":" * Represents a command to list all tasks in the Elysia application.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":" * Extends the {@code Command} class and provides functionality to display the current task list.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":"     * Constructs a {@code ListCommand} with the specified task list and file reader/writer.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"     * @param taskList the task list to be displayed.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"     * @param fileReaderWriter the file reader/writer for saving or loading task data (not used in this command).","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"    public ListCommand(TaskList taskList, FileReaderWriter fileReaderWriter) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"        super(taskList, fileReaderWriter);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"     * Executes the {@code ListCommand} and returns the current task list as a string.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"     * The output includes all tasks stored in the task list.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"     * @return a string representing the current list of tasks.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"    public String execute() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"        return \"Here\u0027s your list! \\n\" + taskList.toString();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":32}},{"path":"src/main/java/elysia/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.commands;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"import java.util.Objects;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":"import elysia.exceptions.EmptyArgumentException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":"import elysia.exceptions.WrongArgumentException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"import elysia.storage.FileReaderWriter;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":"import elysia.tasks.TaskList;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":" * Represents a command to mark a task as completed in the task list.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":" * Extends the {@code Command} class and handles the parsing and validation of task arguments.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"    private String[] args;","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"     * Constructs a {@code MarkCommand} with the specified task list, file reader/writer, and command arguments.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"     * @param taskList the task list in which the task will be marked.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"     * @param fileReaderWriter the file reader/writer for saving or loading task data.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"     * @param args the command arguments, where the first argument is the command type and","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"     *             the second is the task number to mark.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"    public MarkCommand(TaskList taskList, FileReaderWriter fileReaderWriter, String[] args) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"        super(taskList, fileReaderWriter);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"        this.args \u003d args;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"linedoestrolling"},"content":"     * Executes the {@code MarkCommand} to mark a specified task as completed.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"linedoestrolling"},"content":"     * Validates the command arguments and updates the task status in the task list.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"linedoestrolling"},"content":"     * @return a string indicating the result of marking the task, including confirmation or error messages.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"linedoestrolling"},"content":"     * @throws EmptyArgumentException if no task number is provided for the mark command.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"linedoestrolling"},"content":"     * @throws WrongArgumentException if the provided task number is not a valid integer.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"linedoestrolling"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"linedoestrolling"},"content":"    public String execute() throws EmptyArgumentException, WrongArgumentException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"linedoestrolling"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"linedoestrolling"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"linedoestrolling"},"content":"            throw new EmptyArgumentException(args[0]);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"linedoestrolling"},"content":"        int taskNumber;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"linedoestrolling"},"content":"        try {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"linedoestrolling"},"content":"            taskNumber \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"linedoestrolling"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"linedoestrolling"},"content":"            throw new WrongArgumentException(\"task number\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"linedoestrolling"},"content":"        try {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"linedoestrolling"},"content":"            boolean isRecurring \u003d taskList.markTask(taskNumber);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"linedoestrolling"},"content":"            output.append(\"Amazing! You\u0027ve completed this task! \\n\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"linedoestrolling"},"content":"            output.append(taskList.printTask(taskNumber));","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"linedoestrolling"},"content":"            assert(!Objects.equals(taskList.getSizeAsString(), \"0\"));","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"linedoestrolling"},"content":"            if (isRecurring) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"linedoestrolling"},"content":"                taskList.unmarkTask(taskNumber);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"linedoestrolling"},"content":"                output.append(\"\\n Since this task is recurring... I added it back to your tasks!\");","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"linedoestrolling"},"content":"            }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"linedoestrolling"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"linedoestrolling"},"content":"            output.append(\"Uh oh, this task number does not exist...\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"linedoestrolling"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"linedoestrolling"},"content":"            output.append(\"You haven\u0027t even added anything to your list!\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"linedoestrolling"},"content":"        return output.toString();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":70}},{"path":"src/main/java/elysia/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.commands;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"import java.util.Objects;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":"import elysia.exceptions.EmptyTaskArgumentsException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":"import elysia.exceptions.WrongArgumentException;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"import elysia.storage.FileReaderWriter;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":"import elysia.tasks.TaskList;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"import elysia.tasks.Todo;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":" * Represents a command to add a todo task to the task list.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":" * Extends the {@code Command} class and handles the parsing and validation of todo task arguments.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"     * Constructs a {@code TodoCommand} with the specified task list, file reader/writer, and command arguments.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"     * Command format: todo [optional: r] [DESCRIPTION]","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"     * @param taskList the task list to which the todo task will be added.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"     * @param fileReaderWriter the file reader/writer for saving or loading task data.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"     * @param args the command arguments, where the first argument is the command type and","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"     *             the second is the todo task description.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"    public TodoCommand(TaskList taskList, FileReaderWriter fileReaderWriter, String[] args) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"        super(taskList, fileReaderWriter);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"        this.args \u003d args;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"linedoestrolling"},"content":"     * Executes the {@code TodoCommand} to add a new todo task to the task list.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"linedoestrolling"},"content":"     * Validates the command arguments and creates a new todo task with the provided description.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"linedoestrolling"},"content":"     * @return a string indicating the result of adding the todo task,","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"linedoestrolling"},"content":"     *     including confirmation and the current task count.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"linedoestrolling"},"content":"     * @throws EmptyTaskArgumentsException if no description is provided for the todo task.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"linedoestrolling"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"linedoestrolling"},"content":"    public String execute() throws EmptyTaskArgumentsException, WrongArgumentException {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"linedoestrolling"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"linedoestrolling"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"linedoestrolling"},"content":"            throw new EmptyTaskArgumentsException(args[0]);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"linedoestrolling"},"content":"        String[] splitArgs \u003d args[1].split(\" \", 2);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"linedoestrolling"},"content":"        boolean isRecurring;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"linedoestrolling"},"content":"        String description;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"linedoestrolling"},"content":"        if (Objects.equals(splitArgs[0], \"r\")) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"linedoestrolling"},"content":"            isRecurring \u003d true;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"linedoestrolling"},"content":"            if (splitArgs.length \u003d\u003d 1) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"linedoestrolling"},"content":"                throw new EmptyTaskArgumentsException(args[0]);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"linedoestrolling"},"content":"            }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"linedoestrolling"},"content":"            description \u003d splitArgs[1];","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"linedoestrolling"},"content":"        } else {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"linedoestrolling"},"content":"            isRecurring \u003d false;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"linedoestrolling"},"content":"            description \u003d args[1];","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"linedoestrolling"},"content":"        Todo todo \u003d new Todo(description, isRecurring);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"linedoestrolling"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"linedoestrolling"},"content":"        assert(!Objects.equals(taskList.getSizeAsString(), \"0\"));","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"linedoestrolling"},"content":"        output.append(\"Added the task below to your list~\\n\").append(todo).append(\"\\n\");","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"linedoestrolling"},"content":"        output.append(\"Wow! You now have \").append(taskList.getSizeAsString()).append(\" tasks in your list!\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"linedoestrolling"},"content":"        return output.toString();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":67}},{"path":"src/main/java/elysia/commands/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.commands;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"import elysia.storage.FileReaderWriter;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":"import elysia.tasks.TaskList;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":" * Represents a command for handling unrecognized input in the Elysia application.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":" * Extends the {@code Command} class and provides a default response for unknown commands.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":"     * Constructs an {@code UnknownCommand} with the specified task list and file reader/writer.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"     * @param taskList the task list associated with the command.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"     * @param fileReaderWriter the file reader/writer for managing task data.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"    public UnknownCommand(TaskList taskList, FileReaderWriter fileReaderWriter) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"        super(taskList, fileReaderWriter);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"     * Executes the {@code UnknownCommand}, returning a message indicating that the command is unrecognized.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"     * @return a string response to the user, suggesting they clarify their input.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"    public String execute() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"        return \"What are you trying to say? You need to talk to pretty girls nicely...\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":31}},{"path":"src/main/java/elysia/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.commands;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"import java.util.Objects;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":"import elysia.exceptions.EmptyArgumentException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":"import elysia.exceptions.WrongArgumentException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"import elysia.storage.FileReaderWriter;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":"import elysia.tasks.TaskList;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":" * Represents a command to unmark a task in the task list.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":" * Extends the {@code Command} class and handles the parsing and validation of task arguments for unmarking tasks.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"    private String[] args;","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"     * Constructs an {@code UnmarkCommand} with the specified task list, file reader/writer, and command arguments.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"     * @param taskList the task list from which the task will be unmarked.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"     * @param fileReaderWriter the file reader/writer for saving or loading task data.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"     * @param args the command arguments, where the first argument is the command type and","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"     *             the second is the task number to unmark.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"    public UnmarkCommand(TaskList taskList, FileReaderWriter fileReaderWriter, String[] args) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"        super(taskList, fileReaderWriter);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"        this.args \u003d args;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"linedoestrolling"},"content":"     * Executes the {@code UnmarkCommand} to unmark a task in the task list.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"linedoestrolling"},"content":"     * Validates the command arguments and attempts to unmark the specified task.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"linedoestrolling"},"content":"     * @return a string indicating the result of unmarking the task, including confirmation and the task details.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"linedoestrolling"},"content":"     * @throws EmptyArgumentException if no task number is provided for unmarking.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"linedoestrolling"},"content":"     * @throws WrongArgumentException if the provided task number is not a valid integer.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"linedoestrolling"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"linedoestrolling"},"content":"    public String execute() throws EmptyArgumentException, WrongArgumentException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"linedoestrolling"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"linedoestrolling"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"linedoestrolling"},"content":"            throw new EmptyArgumentException(args[0]);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"linedoestrolling"},"content":"        int taskNumber;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"linedoestrolling"},"content":"        try {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"linedoestrolling"},"content":"            taskNumber \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"linedoestrolling"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"linedoestrolling"},"content":"            throw new WrongArgumentException(\"task number\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"linedoestrolling"},"content":"        try {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"linedoestrolling"},"content":"            taskList.unmarkTask(taskNumber);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"linedoestrolling"},"content":"            output.append(\"Making a pretty girl undo her work is not good for her health! \\n\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"linedoestrolling"},"content":"            output.append(taskList.printTask(taskNumber));","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"linedoestrolling"},"content":"            assert(!Objects.equals(taskList.getSizeAsString(), \"0\"));","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"linedoestrolling"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"linedoestrolling"},"content":"            output.append(\"Uh oh, this task number does not exist...\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"linedoestrolling"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"linedoestrolling"},"content":"            output.append(\"You haven\u0027t even added anything to your list!\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"linedoestrolling"},"content":"        return output.toString();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":66}},{"path":"src/main/java/elysia/exceptions/ArgumentFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.exceptions;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":" * Custom exception class to handle errors related to incorrect argument formatting","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":" * or an incorrect number of arguments in the Elysia application.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":" * Extends the {@code ElysiaException} class.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":"public class ArgumentFormatException extends ElysiaException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"    private String details;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":"     * Constructs a new {@code ArgumentFormatException} with a specified command type.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":"     * The exception message indicates that the arguments are either wrongly formatted","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"     * or the number of arguments is incorrect for the given command.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"     * @param commandType the type of command for which the arguments are incorrect or misformatted.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"    public ArgumentFormatException(String commandType) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"        super(\"Incorrect number of arguments or arguments formatted wrongly for \" + commandType);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"        this.details \u003d commandType;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"     * Returns the details about the command type that triggered the exception.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"     * @return a string representing the command type.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"    public String getDetails() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"        return details;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":32}},{"path":"src/main/java/elysia/exceptions/ElysiaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.exceptions;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":" * Custom exception class for handling errors specific to the Elysia application.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":" * Extends the {@code Exception} class and provides a mechanism to display custom error messages.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"public class ElysiaException extends Exception {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"     * Constructs a new {@code ElysiaException} with the specified detail message.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"     * The message can provide additional context about the error encountered in the application.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":"     * @param message the detail message that describes the exception.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"    public ElysiaException(String message) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"        super(message);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":18}},{"path":"src/main/java/elysia/exceptions/EmptyArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.exceptions;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":" * Custom exception class to handle cases where a required argument is missing for a specific command","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":" * in the Elysia application. Extends the {@code ElysiaException} class.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"public class EmptyArgumentException extends ElysiaException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"    private String details;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":"     * Constructs a new {@code EmptyArgumentException} with a specified command.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":"     * The exception message indicates that no argument was found for the command, and exactly one argument is expected.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"     * @param command the command for which the argument is missing.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"    public EmptyArgumentException(String command) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"        super(\"No argument found for \" + command + \" command. 1 expected\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"        this.details \u003d command;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"     * Returns the details about the command that triggered the exception due to a missing argument.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"     * @return a string representing the command that lacked the expected argument.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"    public String getDetails() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"        return details;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":30}},{"path":"src/main/java/elysia/exceptions/EmptyTaskArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.exceptions;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":" * Custom exception class to handle cases where no arguments are provided for a task-related command","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":" * in the Elysia application. Extends the {@code ElysiaException} class.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"public class EmptyTaskArgumentsException extends ElysiaException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"    private String details;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":"     * Constructs a new {@code EmptyTaskArgumentsException} with a specified task event type.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":"     * The exception message indicates that no arguments were provided for the task command.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"     * @param eventType the type of task event for which no arguments were provided.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"    public EmptyTaskArgumentsException(String eventType) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"        super(\"No arguments found for the task command.\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"        this.details \u003d eventType;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"     * Returns the details about the task event type that triggered the exception due to missing arguments.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"     * @return a string representing the task event type that lacked the expected arguments.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"    public String getDetails() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"        return details;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":30}},{"path":"src/main/java/elysia/exceptions/WrongArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.exceptions;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":" * Custom exception class to handle cases where arguments provided are of the wrong type or format","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":" * in the Elysia application. Extends the {@code ElysiaException} class.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"public class WrongArgumentException extends ElysiaException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"    private String details;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":"     * Constructs a new {@code WrongArgumentException} with a specified expected argument type.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":"     * The exception message indicates that the arguments provided are of the wrong type or format.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"     * @param argumentType the expected type or format of the arguments.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"    public WrongArgumentException(String argumentType) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"        super(\"Arguments are of the wrong type or wrong format. Argument type expected: \" + argumentType);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"        this.details \u003d argumentType;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"     * Returns the details about the expected argument type that triggered the exception.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"     * @return a string representing the expected argument type or format.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"    public String getDetails() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"        return details;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":30}},{"path":"src/main/java/elysia/parser/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.parser;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":" * Utility class for parsing and formatting date strings.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":" * Provides a method to parse raw date strings into a formatted date.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"public class DateTimeParser {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":"     * Parses a raw date string in ISO-8601 format (YYYY-MM-DD) and converts it","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"     * into a formatted date string of the pattern \"MMM dd yyyy\".","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"     * @param rawDate the raw date string to be parsed, expected to be in ISO-8601 format (e.g., \"2023-09-21\").","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"     * @return the formatted date string in the pattern \"MMM dd yyyy\" (e.g., \"Sep 21 2023\").","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"     * @throws DateTimeParseException if the raw date string is not in the expected format or cannot be parsed.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"    public static String parseDate(String rawDate) throws DateTimeParseException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"        LocalDate parsedDate \u003d LocalDate.parse(rawDate);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"        String date \u003d parsedDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"        return date;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":26}},{"path":"src/main/java/elysia/parser/InputOutputHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.parser;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"import elysia.commands.ByeCommand;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":"import elysia.commands.Command;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":"import elysia.commands.DeadlineCommand;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":"import elysia.commands.DeleteCommand;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"import elysia.commands.EventCommand;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":"import elysia.commands.FindCommand;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"import elysia.commands.ListCommand;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"import elysia.commands.MarkCommand;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"import elysia.commands.TodoCommand;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":"import elysia.commands.UnknownCommand;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":"import elysia.commands.UnmarkCommand;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":"import elysia.exceptions.ElysiaException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"import elysia.storage.FileReaderWriter;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"import elysia.tasks.TaskList;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":" * Handles user input and output for the Elysia application.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":" * This class is responsible for parsing user commands and interacting","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":" * with the task list and file system through various command objects.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"public class InputOutputHandler {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"    protected TaskList taskList;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"    protected FileReaderWriter fileReaderWriter;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"     * Constructs an InputOutputHandler and initializes the task list.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"     * This method sets up the {@code TaskList} but does not immediately","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"     * interact with the file storage.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"linedoestrolling"},"content":"    public InputOutputHandler() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"linedoestrolling"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"linedoestrolling"},"content":"        fileReaderWriter \u003d new FileReaderWriter(taskList);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"linedoestrolling"},"content":"     * Reads tasks from the file and returns any saved tasks as a message.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"linedoestrolling"},"content":"     * Initializes the {@code FileReaderWriter} object and reads from the task file.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"linedoestrolling"},"content":"     * @return a string message representing the tasks read from the file.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"linedoestrolling"},"content":"    public String fileMessage() {","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"linedoestrolling"},"content":"        return fileReaderWriter.readFile();","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"linedoestrolling"},"content":"     * Parses the user input and returns the corresponding command.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"linedoestrolling"},"content":"     * This method processes the user input and maps it to the appropriate","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"linedoestrolling"},"content":"     * command (such as adding, deleting, or marking tasks). If the command","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"linedoestrolling"},"content":"     * is unrecognized, it returns an {@code UnknownCommand}.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"linedoestrolling"},"content":"     * @param input the raw input string provided by the user.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"linedoestrolling"},"content":"     * @return a {@code Command} object corresponding to the parsed user input.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"linedoestrolling"},"content":"     * @throws ElysiaException if there is an error while parsing the command.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"linedoestrolling"},"content":"    public Command parseInput(String input) throws ElysiaException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"linedoestrolling"},"content":"        String[] splitInput \u003d input.split(\" \", 2);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"linedoestrolling"},"content":"        String command \u003d splitInput[0];","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"linedoestrolling"},"content":"        switch (command) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"linedoestrolling"},"content":"        case \"bye\":","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"linedoestrolling"},"content":"            return new ByeCommand(taskList, fileReaderWriter);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"linedoestrolling"},"content":"        case \"list\":","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"linedoestrolling"},"content":"            return new ListCommand(taskList, fileReaderWriter);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"linedoestrolling"},"content":"        case \"mark\":","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"linedoestrolling"},"content":"            return new MarkCommand(taskList, fileReaderWriter, splitInput);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"linedoestrolling"},"content":"        case \"unmark\":","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"linedoestrolling"},"content":"            return new UnmarkCommand(taskList, fileReaderWriter, splitInput);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"linedoestrolling"},"content":"        case \"todo\":","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"linedoestrolling"},"content":"            return new TodoCommand(taskList, fileReaderWriter, splitInput);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"linedoestrolling"},"content":"        case \"deadline\":","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"linedoestrolling"},"content":"            return new DeadlineCommand(taskList, fileReaderWriter, splitInput);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"linedoestrolling"},"content":"        case \"event\":","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"linedoestrolling"},"content":"            return new EventCommand(taskList, fileReaderWriter, splitInput);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"linedoestrolling"},"content":"        case \"delete\":","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"linedoestrolling"},"content":"            return new DeleteCommand(taskList, fileReaderWriter, splitInput);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"linedoestrolling"},"content":"        case \"find\":","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"linedoestrolling"},"content":"            return new FindCommand(taskList, fileReaderWriter, splitInput);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"linedoestrolling"},"content":"        default:","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"linedoestrolling"},"content":"            return new UnknownCommand(taskList, fileReaderWriter);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":83}},{"path":"src/main/java/elysia/storage/FileReaderWriter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.storage;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"import java.io.File;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":"import java.util.Objects;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"import elysia.exceptions.ElysiaException;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":"import elysia.tasks.Deadline;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":"import elysia.tasks.Event;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":"import elysia.tasks.TaskList;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"import elysia.tasks.Todo;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":" * Manages reading from and writing to a file for the elysia.ui.Elysia application.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":" * Supports creating a file, saving the current task list to a file, and loading tasks from a file.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"public class FileReaderWriter {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"    protected java.nio.file.Path path;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"    protected TaskList taskList;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"     * Constructs a FileReaderWriter with a reference to the task list to be managed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"     * The file used for storing tasks is set to \"data.txt\" by default.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"     * @param taskList The TaskList instance that will be saved to and loaded from the file.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"linedoestrolling"},"content":"    public FileReaderWriter(TaskList taskList) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"linedoestrolling"},"content":"        path \u003d java.nio.file.Paths.get(\"data.txt\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"linedoestrolling"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"linedoestrolling"},"content":"     * Creates a new file if it does not already exist.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"linedoestrolling"},"content":"     * @return A message indicating whether the file was successfully created or if an error occurred.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"linedoestrolling"},"content":"    public String createFile() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"linedoestrolling"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"linedoestrolling"},"content":"        try {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"linedoestrolling"},"content":"            File myObj \u003d new File(String.valueOf(path));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"linedoestrolling"},"content":"            if (myObj.createNewFile()) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"linedoestrolling"},"content":"                output \u003d (\"I created \" + myObj.getName() + \" for you~\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"linedoestrolling"},"content":"            }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"linedoestrolling"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"linedoestrolling"},"content":"            output \u003d \"Aww something went wrong :(\\n\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"linedoestrolling"},"content":"        return output;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"linedoestrolling"},"content":"     * Writes the current task list to the file in a format suitable for storage.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"linedoestrolling"},"content":"     * @return A message indicating whether the tasks were successfully saved or if an error occurred.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"linedoestrolling"},"content":"    public String writeFile() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"linedoestrolling"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"linedoestrolling"},"content":"        try {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"linedoestrolling"},"content":"            Files.writeString(path, taskList.toFile(), StandardCharsets.UTF_8);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"linedoestrolling"},"content":"            output \u003d \"Saving all your tasks for you~\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"linedoestrolling"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"linedoestrolling"},"content":"            output \u003d \"Aww something went wrong :(\\n\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"linedoestrolling"},"content":"        return output;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"linedoestrolling"},"content":"     * Reads tasks from the file and loads them into the task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"linedoestrolling"},"content":"     * Supports loading tasks of type ToDo, Deadline, and Event.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"linedoestrolling"},"content":"     * @return A message indicating whether the tasks were successfully loaded or if the file was not found.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"linedoestrolling"},"content":"    public String readFile() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"linedoestrolling"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"linedoestrolling"},"content":"        File file \u003d new File(path.toString());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"linedoestrolling"},"content":"        try {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"linedoestrolling"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"linedoestrolling"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"linedoestrolling"},"content":"                String taskInput \u003d sc.nextLine();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"linedoestrolling"},"content":"                String[] taskParts \u003d taskInput.split(\"\\\\|\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"linedoestrolling"},"content":"                switch(taskParts[0]) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"linedoestrolling"},"content":"                case \"T\":","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"linedoestrolling"},"content":"                    Todo newTodo \u003d new Todo(taskParts[3], Objects.equals(taskParts[2], \"r\"));","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"linedoestrolling"},"content":"                    if (Objects.equals(taskParts[1], \"1\")) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"linedoestrolling"},"content":"                        newTodo.updateStatus(true);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"linedoestrolling"},"content":"                    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"linedoestrolling"},"content":"                    taskList.addTask(newTodo);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"linedoestrolling"},"content":"                    break;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"linedoestrolling"},"content":"                case \"D\":","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"linedoestrolling"},"content":"                    Deadline newDeadline \u003d new Deadline(taskParts[3], taskParts[4],","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"linedoestrolling"},"content":"                            Objects.equals(taskParts[2], \"r\"));","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"linedoestrolling"},"content":"                    if (Objects.equals(taskParts[1], \"1\")) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"linedoestrolling"},"content":"                        newDeadline.updateStatus(true);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"linedoestrolling"},"content":"                    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"linedoestrolling"},"content":"                    taskList.addTask(newDeadline);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"linedoestrolling"},"content":"                    break;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"linedoestrolling"},"content":"                case \"E\":","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"linedoestrolling"},"content":"                    Event newEvent \u003d new Event(taskParts[3], taskParts[4], taskParts[5],","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"linedoestrolling"},"content":"                            Objects.equals(taskParts[2], \"r\"));","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"linedoestrolling"},"content":"                    if (Objects.equals(taskParts[1], \"1\")) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"linedoestrolling"},"content":"                        newEvent.updateStatus(true);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"linedoestrolling"},"content":"                    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"linedoestrolling"},"content":"                    taskList.addTask(newEvent);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"linedoestrolling"},"content":"                    break;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"linedoestrolling"},"content":"                default:","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"linedoestrolling"},"content":"                    throw new ElysiaException(\"Wrong file format.\");","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"linedoestrolling"},"content":"                }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"linedoestrolling"},"content":"            }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"linedoestrolling"},"content":"            output \u003d \"I loaded your past data! Aren\u0027t I amazing? Come on praise me!\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"linedoestrolling"},"content":"        } catch (ElysiaException | FileNotFoundException e) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"linedoestrolling"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"linedoestrolling"},"content":"        return output;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":120}},{"path":"src/main/java/elysia/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.tasks;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":" * Represents a deadline task with a specific due date.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":" * Extends the Task class and includes a date/time by which the task should be completed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":"    protected String by;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"     * Constructs a Deadline task with a description and a due date.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":"     * @param by The date and/or time by which the task is to be completed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"     * @param isRecurring Whether the task is recurring.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"    public Deadline(String description, String by, boolean isRecurring) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"        super(description, isRecurring);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"     * Converts the Deadline task to a string format suitable for saving to a file.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"     * The format is \"D\" followed by the format from Task, then a separator \"|\", and the due date.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"     * @return A string representation of the Deadline task in file format.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"    @Override","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"    public String toFile() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"        return \"D\" + super.toFile() + \"|\" + by;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"linedoestrolling"},"content":"     * Returns a string representation of the Deadline task, including its description and due date.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"linedoestrolling"},"content":"     * The format is \"[D]\" followed by the format from Task, then \"(by: due date)\".","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"linedoestrolling"},"content":"     * @return A string representation of the Deadline task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"linedoestrolling"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"linedoestrolling"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"linedoestrolling"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"linedoestrolling"},"content":"    @Override","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"linedoestrolling"},"content":"    public boolean containsString(String searchString) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"linedoestrolling"},"content":"        return super.containsString(searchString) || by.contains(searchString);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":48}},{"path":"src/main/java/elysia/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.tasks;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":" * Represents an event task with a specific start and end time.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":" * Extends the Task class and includes the time range during which the event occurs.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":"    protected String from;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"    protected String to;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":"     * Constructs an Event task with a description, start time, and end time.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"     * @param isRecurring Whether the task is recurring.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"    public Event(String description, String from, String to, boolean isRecurring) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"        super(description, isRecurring);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"     * Converts the Event task to a string format suitable for saving to a file.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"     * The format is \"E\" followed by the format from Task, then two separators \"|\",","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"     * with the start time and end time.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"     * @return A string representation of the Event task in file format.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"linedoestrolling"},"content":"    @Override","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"linedoestrolling"},"content":"    public String toFile() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"linedoestrolling"},"content":"        return \"E\" + super.toFile() + \"|\" + from + \"|\" + to;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"linedoestrolling"},"content":"     * Returns a string representation of the Event task, including its description,","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"linedoestrolling"},"content":"     * start time, and end time. The format is \"[E]\" followed by the format from Task,","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"linedoestrolling"},"content":"     * then \"(from: start time to: end time)\".","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"linedoestrolling"},"content":"     * @return A string representation of the Event task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"linedoestrolling"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"linedoestrolling"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"linedoestrolling"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"linedoestrolling"},"content":"    @Override","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"linedoestrolling"},"content":"    public boolean containsString(String searchString) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"linedoestrolling"},"content":"        return super.containsString(searchString) || from.contains(searchString) || to.contains(searchString);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":53}},{"path":"src/main/java/elysia/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.tasks;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":" * Represents a general task with a description and a status indicating whether it is completed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":" * Provides basic functionality to update the task\u0027s status and format it as a string for display or file storage.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"public class Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":"    protected String description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"    protected boolean isRecurring;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":"     * Constructs a Task with the given description.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":"     * The task is initially not marked as done.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"     * @param isRecurring Whether the task is recurring.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"    public Task(String description, boolean isRecurring) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"        this.isRecurring \u003d isRecurring;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"     * Updates the status of the task to mark it as done or not done.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"     * @param status A boolean value where true marks the task as done, and false marks it as not done.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"     * @return Boolean representing whether the task is recurring.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"linedoestrolling"},"content":"    public boolean updateStatus(boolean status) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"linedoestrolling"},"content":"        isDone \u003d status;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"linedoestrolling"},"content":"        return isRecurring;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"linedoestrolling"},"content":"     * Converts the Task to a string format suitable for saving to a file.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"linedoestrolling"},"content":"     * The format includes the completion status (1 for done, 0 for not done) and the task description.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"linedoestrolling"},"content":"     * @return A string representation of the Task in file format.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"linedoestrolling"},"content":"    public String toFile() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"linedoestrolling"},"content":"        return \"|\" + (isDone ? \"1\" : \"0\") + \"|\" + (isRecurring ? \"r\" : \"n\") + \"|\" + description;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"linedoestrolling"},"content":"     * Returns a string representation of the Task, including its status and description.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"linedoestrolling"},"content":"     * The format is \"[X]\" for a completed task or \"[ ]\" for an incomplete task, followed by the description.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"linedoestrolling"},"content":"     * @return A string representation of the Task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"linedoestrolling"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"linedoestrolling"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"linedoestrolling"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"linedoestrolling"},"content":"    public boolean containsString(String searchString) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"linedoestrolling"},"content":"        return description.contains(searchString);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":61}},{"path":"src/main/java/elysia/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.tasks;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":" * Manages a list of tasks. Provides functionality to add, delete, mark as done, unmark, and","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":" * display tasks. The list of tasks can also be converted to a format suitable for file storage.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"public class TaskList {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"    protected ArrayList\u003cTask\u003e list;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"    public TaskList() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"        list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"     * Adds a new task to the list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"        list.add(task);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"     * Deletes a task from the list based on its position in the list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"linedoestrolling"},"content":"     * @param index The 1-based index of the task to be deleted.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"linedoestrolling"},"content":"     * @return The task that was removed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"linedoestrolling"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range (index \u003c 1 or index \u003e list.size()).","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"linedoestrolling"},"content":"    public Task deleteTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"linedoestrolling"},"content":"        return list.remove(index - 1);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"linedoestrolling"},"content":"     * Marks a task as done based on its position in the list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"linedoestrolling"},"content":"     * @param taskNumber The 1-based index of the task to be marked as done.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"linedoestrolling"},"content":"     * @return Boolean representing whether the task is recurring.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"linedoestrolling"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range (index \u003c 1 or index \u003e list.size()).","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"linedoestrolling"},"content":"     * @throws NullPointerException If the task at the given index is null.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"linedoestrolling"},"content":"    public boolean markTask(int taskNumber) throws IndexOutOfBoundsException, NullPointerException {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"linedoestrolling"},"content":"        return list.get(taskNumber - 1).updateStatus(true);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"linedoestrolling"},"content":"     * Unmarks a task as done based on its position in the list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"linedoestrolling"},"content":"     * @param taskNumber The 1-based index of the task to be unmarked.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"linedoestrolling"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range (index \u003c 1 or index \u003e list.size()).","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"linedoestrolling"},"content":"     * @throws NullPointerException If the task at the given index is null.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"linedoestrolling"},"content":"    public void unmarkTask(int taskNumber) throws IndexOutOfBoundsException, NullPointerException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"linedoestrolling"},"content":"        list.get(taskNumber - 1).updateStatus(false);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"linedoestrolling"},"content":"     * Returns the string representation of a task at a specific position in the list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"linedoestrolling"},"content":"     * @param taskNumber The 1-based index of the task to be printed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"linedoestrolling"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"linedoestrolling"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range (index \u003c 1 or index \u003e list.size()).","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"linedoestrolling"},"content":"     * @throws NullPointerException If the task at the given index is null.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"linedoestrolling"},"content":"    public String printTask(int taskNumber) throws IndexOutOfBoundsException, NullPointerException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"linedoestrolling"},"content":"        return list.get(taskNumber - 1).toString();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"linedoestrolling"},"content":"     * Returns the number of tasks in the list as a string.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"linedoestrolling"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"linedoestrolling"},"content":"    public String getSizeAsString() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"linedoestrolling"},"content":"        return \"\" + list.size();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"linedoestrolling"},"content":"     * Converts the entire task list to a string format suitable for saving to a file.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"linedoestrolling"},"content":"     * Each task is represented in its file format, with tasks separated by newlines.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"linedoestrolling"},"content":"     * @return A string representation of the task list in file format.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"linedoestrolling"},"content":"    public String toFile() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"linedoestrolling"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"linedoestrolling"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"linedoestrolling"},"content":"            output +\u003d list.get(i).toFile() + \"\\n\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"linedoestrolling"},"content":"        return output;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"linedoestrolling"},"content":"     * Returns a string representation of the entire task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"linedoestrolling"},"content":"     * Each task is prefixed by its position in the list (1-based index), followed by its string representation.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"linedoestrolling"},"content":"     * @return A string representation of the task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"linedoestrolling"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"linedoestrolling"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"linedoestrolling"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"linedoestrolling"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"linedoestrolling"},"content":"            output +\u003d (i + 1) + \".\" + list.get(i).toString() + \"\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"linedoestrolling"},"content":"        return output;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"linedoestrolling"},"content":"     * Searches the task list for tasks that contain the given keyword.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"linedoestrolling"},"content":"     * @param keyword The keyword to search for in tasks.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"linedoestrolling"},"content":"     * @return A TaskList containing tasks that match the search criteria.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"linedoestrolling"},"content":"    public TaskList searchByKeyword(String keyword) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"linedoestrolling"},"content":"        TaskList searchResults \u003d new TaskList();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"linedoestrolling"},"content":"        for (Task task : list) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"linedoestrolling"},"content":"            if (task.containsString(keyword)) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"linedoestrolling"},"content":"                searchResults.addTask(task);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"linedoestrolling"},"content":"            }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"linedoestrolling"},"content":"        return searchResults;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":129}},{"path":"src/main/java/elysia/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.tasks;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":" * Represents a simple task that needs to be done, without any specific date or time.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":" * Extends the Task class and provides a unique identifier for ToDo tasks.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"     * Constructs a ToDo task with the given description.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":"     * @param isRecurring Whether the task is recurring.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"    public Todo(String description, boolean isRecurring) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"        super(description, isRecurring);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"     * Converts the ToDo task to a string format suitable for saving to a file.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"     * The format is \"T\" followed by the format from Task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"     * @return A string representation of the ToDo task in file format.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"    @Override","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"    public String toFile() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"        return \"T\" + super.toFile();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"linedoestrolling"},"content":"     * Returns a string representation of the ToDo task, including its description.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"linedoestrolling"},"content":"     * The format is \"[T]\" followed by the format from Task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"linedoestrolling"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"linedoestrolling"},"content":"     * @return A string representation of the ToDo task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"linedoestrolling"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"linedoestrolling"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"linedoestrolling"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":40}},{"path":"src/main/java/elysia/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.ui;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"    @FXML","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"    @FXML","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"        try {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"linedoestrolling"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"linedoestrolling"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"linedoestrolling"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"linedoestrolling"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"linedoestrolling"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"linedoestrolling"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"linedoestrolling"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"linedoestrolling"},"content":"    private void flip() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"linedoestrolling"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"linedoestrolling"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"linedoestrolling"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"linedoestrolling"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"linedoestrolling"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"linedoestrolling"},"content":"     * Shows what the user entered in a DialogBox","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"linedoestrolling"},"content":"     * @param text User input","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"linedoestrolling"},"content":"     * @param img User image","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"linedoestrolling"},"content":"     * @return a DialogBox containing the user input","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"linedoestrolling"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"linedoestrolling"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"linedoestrolling"},"content":"     * Shows Elysia\u0027s message in a flipped DialogBox","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"linedoestrolling"},"content":"     * @param text Elysia message","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"linedoestrolling"},"content":"     * @param img Elysia img","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"linedoestrolling"},"content":"     * @return a DialogBox containing Elysia message","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"linedoestrolling"},"content":"    public static DialogBox getElysiaDialog(String text, Image img) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"linedoestrolling"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"linedoestrolling"},"content":"        db.flip();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"linedoestrolling"},"content":"        return db;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":73}},{"path":"src/main/java/elysia/ui/Elysia.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.ui;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"import elysia.commands.Command;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":"import elysia.exceptions.ArgumentFormatException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":"import elysia.exceptions.ElysiaException;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":"import elysia.exceptions.EmptyArgumentException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"import elysia.exceptions.EmptyTaskArgumentsException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":"import elysia.exceptions.WrongArgumentException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"import elysia.parser.InputOutputHandler;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":" * The main class for the elysia.ui.Elysia application.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":" * This class handles the main program loop, where user input is continuously accepted and processed.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":" * It interacts with the user via the console and manages the flow of the application.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"public class Elysia {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"    private final InputOutputHandler handler \u003d new InputOutputHandler();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"     * Gets the fileMessage","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"     * @return String of the message when file is loaded","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"    public String getFileMessage() {","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"        return handler.fileMessage();","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"     * Gets the output string by parsing the input and executing the respective commands.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"linedoestrolling"},"content":"     * Catches the exceptions","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"linedoestrolling"},"content":"     * @param input The user\u0027s input as a string.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"linedoestrolling"},"content":"     * @return The output string to be put into DialogBox","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"linedoestrolling"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"linedoestrolling"},"content":"        String response;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"linedoestrolling"},"content":"        try {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"linedoestrolling"},"content":"            Command command \u003d handler.parseInput(input);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"linedoestrolling"},"content":"            response \u003d command.execute();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"linedoestrolling"},"content":"        } catch (ArgumentFormatException e) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"linedoestrolling"},"content":"            response \u003d \"You need to speak properly to a pretty girl...\\n\"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"linedoestrolling"},"content":"                    + \"Format your \" + e.getDetails() + \" properly!\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"linedoestrolling"},"content":"        } catch (EmptyArgumentException e) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"linedoestrolling"},"content":"            response \u003d \"Hmph! What do you even want me to \" + e.getDetails() + \"?\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"linedoestrolling"},"content":"        } catch (EmptyTaskArgumentsException e) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"linedoestrolling"},"content":"            response \u003d \"Hmph! You don\u0027t expect me to read your mind for this \" + e.getDetails() + \", do you?\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"linedoestrolling"},"content":"        } catch (WrongArgumentException e) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"linedoestrolling"},"content":"            response \u003d \"This doesn\u0027t look like a proper \" + e.getDetails() + \" argument to me...\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"linedoestrolling"},"content":"        } catch (ElysiaException e) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"linedoestrolling"},"content":"            response \u003d \"Uh oh you made a big oopsie(or maybe my maker did), I\u0027m need to leave now...\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"linedoestrolling"},"content":"        return response;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":54}},{"path":"src/main/java/elysia/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.ui;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":"public class Launcher {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":12}},{"path":"src/main/java/elysia/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.ui;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"import java.io.File;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"public class Main extends Application {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"    private Elysia elysia \u003d new Elysia();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"        try {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(elysia); // inject the Duke instance","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().showWelcome();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"            File f \u003d new File(\"data.txt\");","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"            if (f.exists()) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"                fxmlLoader.\u003cMainWindow\u003egetController().showFileMessage();","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"linedoestrolling"},"content":"            }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"linedoestrolling"},"content":"            stage.setTitle(\"Elysia\");","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"linedoestrolling"},"content":"            stage.show();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"linedoestrolling"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"linedoestrolling"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"linedoestrolling"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":38}},{"path":"src/main/java/elysia/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.ui;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":" * Controller for the main GUI.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"    @FXML","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"    @FXML","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"    @FXML","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"    @FXML","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"    private Elysia elysia;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/captain.jpg\"));","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"    private Image elysiaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/elysia.jpg\"));","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"linedoestrolling"},"content":"     * Initialises the scrollPane with a dialogContainer","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"linedoestrolling"},"content":"    @FXML","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"linedoestrolling"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"linedoestrolling"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"linedoestrolling"},"content":"    /** Injects the Duke instance */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"linedoestrolling"},"content":"    public void setDuke(Elysia elysia) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"linedoestrolling"},"content":"        this.elysia \u003d elysia;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"linedoestrolling"},"content":"     * Creates the welcome message DialogBox to be added upon application startup.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"linedoestrolling"},"content":"    @FXML","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"linedoestrolling"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"linedoestrolling"},"content":"        String welcome \u003d \"Hi~! I\u0027m Elysia! As you can see, I\u0027m a girl as beautiful as a flower!\\n\"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"linedoestrolling"},"content":"                + \"How can I help you today? I\u0027m all ears!\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"linedoestrolling"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getElysiaDialog(welcome, elysiaImage));","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"linedoestrolling"},"content":"     * Creates the message for loading a file in a DialogBox.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"linedoestrolling"},"content":"    @FXML","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"linedoestrolling"},"content":"    public void showFileMessage() {","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"linedoestrolling"},"content":"        String msg \u003d elysia.getFileMessage();","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"linedoestrolling"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getElysiaDialog(msg, elysiaImage));","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"linedoestrolling"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"linedoestrolling"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"linedoestrolling"},"content":"    @FXML","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"linedoestrolling"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"linedoestrolling"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"linedoestrolling"},"content":"        String response \u003d elysia.getResponse(input);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"linedoestrolling"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"linedoestrolling"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"linedoestrolling"},"content":"                DialogBox.getElysiaDialog(response, elysiaImage)","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"linedoestrolling"},"content":"        );","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"linedoestrolling"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":76}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"elysia.ui.MainWindow\"\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":19}},{"path":"src/test/java/elysia/commands/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.commands;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"import elysia.exceptions.EmptyTaskArgumentsException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":"import elysia.storage.FileReaderWriter;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"import elysia.tasks.TaskList;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":" * Unit test for the {@link TodoCommand} class.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":" * Tests the behavior of the {@code TodoCommand} when executed with insufficient arguments.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"public class TodoCommandTest {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"     * Tests that an {@code EmptyTaskArgumentsException} is thrown","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"     * when the {@code execute} method is called with insufficient arguments","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"     * for the todo command.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"    @Test","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"    void execute_emptyTodoArgument_exceptionThrown() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"        String[] args \u003d new String[]{\"todo\"};","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"        TodoCommand todoCommand \u003d new TodoCommand(taskList, new FileReaderWriter(taskList), args);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"        // Asserts that EmptyTaskArgumentsException is thrown when execute is called","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"        assertThrows(EmptyTaskArgumentsException.class, () -\u003e {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"            throw new EmptyTaskArgumentsException(\"\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"linedoestrolling"},"content":"        });","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":33}},{"path":"src/test/java/elysia/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linedoestrolling"},"content":"package elysia.tasks;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"linedoestrolling"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"linedoestrolling"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"linedoestrolling"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"linedoestrolling"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"linedoestrolling"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"linedoestrolling"},"content":" * Unit tests for the {@link TaskList} class.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"linedoestrolling"},"content":" * Tests the functionality of adding and deleting tasks, as well as handling exceptions.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"linedoestrolling"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"linedoestrolling"},"content":"public class TaskListTest {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"linedoestrolling"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"linedoestrolling"},"content":"     * Sets up the test environment before each test is run.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"linedoestrolling"},"content":"     * Initializes a new {@link TaskList} instance.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"linedoestrolling"},"content":"    @BeforeEach","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"linedoestrolling"},"content":"    void setup() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"linedoestrolling"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"linedoestrolling"},"content":"     * Tests that a task is added correctly to the task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"linedoestrolling"},"content":"     * Verifies that the task list size increases and the task is added at the correct position.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"linedoestrolling"},"content":"    @Test","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"linedoestrolling"},"content":"    void addTask_correctTask_taskAdded() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"linedoestrolling"},"content":"        Task newTask \u003d new Task(\"task\", false);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"linedoestrolling"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"linedoestrolling"},"content":"        assertEquals(1, taskList.list.size());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"linedoestrolling"},"content":"        assertEquals(newTask, taskList.list.get(0));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"linedoestrolling"},"content":"     * Tests the deletion of a task from the task list using a correct index.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"linedoestrolling"},"content":"     * Verifies that the task is removed and the task list size decreases.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"linedoestrolling"},"content":"    @Test","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"linedoestrolling"},"content":"    void deleteTask_correctIndex_taskDeleted() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"linedoestrolling"},"content":"        Task newTask \u003d new Task(\"task\", false);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"linedoestrolling"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"linedoestrolling"},"content":"        assertEquals(newTask, taskList.deleteTask(1));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"linedoestrolling"},"content":"        assertEquals(0, taskList.list.size());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"linedoestrolling"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"linedoestrolling"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"linedoestrolling"},"content":"     * Tests the deletion of a task from the task list using an incorrect index.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"linedoestrolling"},"content":"     * Verifies that an {@link IndexOutOfBoundsException} is thrown when trying to delete a task with an invalid index.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"linedoestrolling"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"linedoestrolling"},"content":"    @Test","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"linedoestrolling"},"content":"    void deleteTask_wrongIndex_exceptionThrown() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"linedoestrolling"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.deleteTask(1));","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"linedoestrolling"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"linedoestrolling"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"linedoestrolling":59}}]
