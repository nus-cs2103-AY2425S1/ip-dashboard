[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sam-theman88"},"content":"    implementation \u0027com.google.guava:guava:32.0.0-jre\u0027","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sam-theman88"},"content":"    mainClass.set(\"edith.Edith\")","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sam-theman88"},"content":"    archiveBaseName \u003d \"edith\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":39,"sam-theman88":3}},{"path":"data/edith.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sam-theman88"},"content":"[T] | [ ] | borrow book","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sam-theman88"},"content":"[D] | [X] | read book /by 29/9/2024 1800","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sam-theman88"},"content":"[E] | [X] | meeting /from 22/9/2024 1200 /to 22/9/2024 1400","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sam-theman88"},"content":"[D] | [ ] | return book /by 30/10/2024 1500","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"sam-theman88":4}},{"path":"src/main/java/edith/Edith.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sam-theman88"},"content":"package edith;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sam-theman88"},"content":"import edith.command.Command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sam-theman88"},"content":"import edith.task.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sam-theman88"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sam-theman88"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sam-theman88"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sam-theman88"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sam-theman88"},"content":" * Represents the main class for the EDITH chatbot application.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sam-theman88"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sam-theman88"},"content":" * The Edith class is responsible for initializing and running the chatbot. It handles user interactions,","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sam-theman88"},"content":" * processes commands, and manages the task list. The application uses the classes Ui for user interface operations,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sam-theman88"},"content":" * Storage for data persistence, TaskList for managing tasks, and Parser for interpreting user commands.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sam-theman88"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sam-theman88"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sam-theman88"},"content":"public class Edith {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sam-theman88"},"content":"    private final Ui ui;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sam-theman88"},"content":"    private final Storage storage;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sam-theman88"},"content":"    private final TaskList tasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sam-theman88"},"content":"    private final Parser parser;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sam-theman88"},"content":"     * Constructs an Edith instance with the specified file path for storage.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sam-theman88"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sam-theman88"},"content":"     * Initializes the user interface, storage, task list, and command parser. Attempts to load the existing task list","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sam-theman88"},"content":"     * from the specified file. If an error occurs during loading, it initializes with an empty task list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sam-theman88"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sam-theman88"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sam-theman88"},"content":"    public Edith(String filePath) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sam-theman88"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sam-theman88"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sam-theman88"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sam-theman88"},"content":"        TaskList tasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sam-theman88"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sam-theman88"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sam-theman88"},"content":"        } catch (EdithException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sam-theman88"},"content":"            ui.showErrorMessage(e.getMessage() + \" Starting with an empty list.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sam-theman88"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sam-theman88"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sam-theman88"},"content":"            ui.showErrorMessage(\"An error occurred while loading saved Edith.task list. Starting with an empty list.\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sam-theman88"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sam-theman88"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sam-theman88"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sam-theman88"},"content":"     * Starts the EDITH chatbot application.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sam-theman88"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sam-theman88"},"content":"     * Displays a greeting message, then enters a loop to continuously prompt the user for input, parse and execute","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sam-theman88"},"content":"     * commands. The loop terminates when an ExitCommand is executed. Handles any exceptions that occur during","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sam-theman88"},"content":"     * command execution or date/time parsing.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sam-theman88"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sam-theman88"},"content":"    public void run() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sam-theman88"},"content":"        ui.showGreeting();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sam-theman88"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sam-theman88"},"content":"        String userInput;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sam-theman88"},"content":"        while (true) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"sam-theman88"},"content":"            ui.showPrompt();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"sam-theman88"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"sam-theman88"},"content":"            try {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"sam-theman88"},"content":"                Command command \u003d parser.parse(userInput);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"sam-theman88"},"content":"                command.execute(tasks, ui, storage);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"sam-theman88"},"content":"                if (command.isExit()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"sam-theman88"},"content":"                    break;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"sam-theman88"},"content":"                }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"sam-theman88"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"sam-theman88"},"content":"                ui.showErrorMessage(ui.invalidDateTimeError());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"sam-theman88"},"content":"            } catch (EdithException e) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"sam-theman88"},"content":"                ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"sam-theman88"},"content":"            }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"sam-theman88"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"sam-theman88"},"content":"        scanner.close();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"sam-theman88"},"content":"     * Entry point for the EDITH application.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"sam-theman88"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"sam-theman88"},"content":"     * Creates an instance of Edith with the specified file path and starts the chatbot by calling the run","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"sam-theman88"},"content":"     * method.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"sam-theman88"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"sam-theman88"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"sam-theman88"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"sam-theman88"},"content":"        new Edith(\"./data/edith.txt\").run();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"sam-theman88"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"sam-theman88":96}},{"path":"src/main/java/edith/EdithException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sam-theman88"},"content":"package edith;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sam-theman88"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sam-theman88"},"content":" * EdithException is a custom exception class used in the EDITH chatbot application.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sam-theman88"},"content":" * It extends IllegalArgumentException to provide specific error messages related to invalid arguments or instructions.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sam-theman88"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sam-theman88"},"content":"public class EdithException extends IllegalArgumentException {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sam-theman88"},"content":"     * Constructs a new EdithException with the specified detail message.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sam-theman88"},"content":"     * The message is appended with a default instruction to provide a valid input.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sam-theman88"},"content":"     * @param message The detail message, which is saved for later retrieval by the getMessage() method.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sam-theman88"},"content":"    public EdithException(String message) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sam-theman88"},"content":"        super(message + \" Please provide a valid instruction with the correct relevant details.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sam-theman88"},"content":"     * Constructs a new EdithException with the specified detail message.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sam-theman88"},"content":"     * This constructor allows the creation of an exception with only the provided message","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sam-theman88"},"content":"     * without appending any default message.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sam-theman88"},"content":"     * @param message The detail message for the exception.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sam-theman88"},"content":"     * @param num An additional integer value for further use if needed.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sam-theman88"},"content":"    public EdithException(String message, int num) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sam-theman88"},"content":"        super(message);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sam-theman88"},"content":"}","lastModifiedDate":"2024-08-24","isFullCredit":false}],"authorContributionMap":{"sam-theman88":29}},{"path":"src/main/java/edith/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sam-theman88"},"content":"package edith;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sam-theman88"},"content":"import edith.command.Command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sam-theman88"},"content":"import edith.command.ExitCommand;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sam-theman88"},"content":"import edith.command.ListCommand;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sam-theman88"},"content":"import edith.command.AddCommand;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sam-theman88"},"content":"import edith.command.ListOnDateCommand;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sam-theman88"},"content":"import edith.command.MarkCommand;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sam-theman88"},"content":"import edith.command.UnmarkCommand;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sam-theman88"},"content":"import edith.command.DeleteCommand;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sam-theman88"},"content":"import edith.command.FindCommand;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sam-theman88"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sam-theman88"},"content":" * Parses user input and converts it into executable commands for the Edith chatbot.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sam-theman88"},"content":" * The Parser class interprets user commands and creates instances of appropriate","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sam-theman88"},"content":" * Command subclasses based on the input.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sam-theman88"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sam-theman88"},"content":"public class Parser {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sam-theman88"},"content":"     * Parses the provided user input and returns the corresponding Command.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sam-theman88"},"content":"     * This method interprets the user\u0027s command and creates the appropriate command","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sam-theman88"},"content":"     * instance to be executed.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sam-theman88"},"content":"     * \u003cp\u003ePossible commands include:","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sam-theman88"},"content":"     * \u003cul\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003e\"bye\" - Returns an ExitCommand.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003e\"list\" - Returns a ListCommand.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003e\"list [date]\" - Returns a ListOnDateCommand with the specified date.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003e\"mark [index]\" - Returns a MarkCommand with the specified task index.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003e\"unmark [index]\" - Returns a UnmarkCommand with the specified task index.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003e\"delete [index]\" - Returns a DeleteCommand with the specified task index.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003e\"find [keyword]\" - Returns a FindCommand with the specified keyword.\u003c/li\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003e\"todo [task]\" - Returns an AddCommand to add a ToDo task.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003e\"deadline [task] /by [dueDate]\" - Returns an AddCommand to add a Deadline task.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003e\"event [task] /from [startTime] /to [endTime]\" - Returns an AddCommand to add an Event task.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sam-theman88"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sam-theman88"},"content":"     * @param userInput The raw input string from the user.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sam-theman88"},"content":"     * @return The corresponding Command based on the user input.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sam-theman88"},"content":"     * @throws EdithException If the user input does not match any recognized command format.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sam-theman88"},"content":"    public Command parse(String userInput) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sam-theman88"},"content":"        if (userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sam-theman88"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sam-theman88"},"content":"        } else if (userInput.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sam-theman88"},"content":"            return new ListCommand();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sam-theman88"},"content":"        } else if (userInput.startsWith(\"list \")) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sam-theman88"},"content":"            String date \u003d userInput.substring(5).trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sam-theman88"},"content":"            return new ListOnDateCommand(date);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sam-theman88"},"content":"        } else if (userInput.startsWith(\"mark \")) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sam-theman88"},"content":"            int index \u003d Integer.parseInt(userInput.substring(5).trim()) - 1;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sam-theman88"},"content":"            return new MarkCommand(index);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sam-theman88"},"content":"        } else if (userInput.startsWith(\"unmark \")) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sam-theman88"},"content":"            int index \u003d Integer.parseInt(userInput.substring(7).trim()) - 1;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sam-theman88"},"content":"            return new UnmarkCommand(index);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sam-theman88"},"content":"        } else if (userInput.startsWith(\"delete \")) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sam-theman88"},"content":"            int index \u003d Integer.parseInt(userInput.substring(7).trim()) - 1;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sam-theman88"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sam-theman88"},"content":"        } else if (userInput.startsWith(\"find \")) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sam-theman88"},"content":"            String keyword \u003d userInput.substring(5).trim();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sam-theman88"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sam-theman88"},"content":"        } else if (userInput.startsWith(\"todo \") || userInput.startsWith(\"deadline \") || userInput.startsWith(\"event \")) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sam-theman88"},"content":"            return new AddCommand(userInput);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sam-theman88"},"content":"        } else {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"sam-theman88"},"content":"            throw new EdithException(\"Sorry but that is not an instruction I can execute.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"sam-theman88"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"sam-theman88"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"sam-theman88":68}},{"path":"src/main/java/edith/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sam-theman88"},"content":"package edith;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sam-theman88"},"content":"import edith.task.Task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sam-theman88"},"content":"import edith.task.ToDo;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sam-theman88"},"content":"import edith.task.Deadline;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sam-theman88"},"content":"import edith.task.Event;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sam-theman88"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sam-theman88"},"content":"import java.io.File;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sam-theman88"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sam-theman88"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sam-theman88"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sam-theman88"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sam-theman88"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sam-theman88"},"content":" * The Storage class handles the reading and writing of tasks to and from a file.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sam-theman88"},"content":" * It provides methods to save a list of tasks to a file and load tasks from a file.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sam-theman88"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sam-theman88"},"content":"public class Storage {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sam-theman88"},"content":"    private final String filePath;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sam-theman88"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sam-theman88"},"content":"     * @param filePath The path of the file where tasks are saved and loaded.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sam-theman88"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sam-theman88"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sam-theman88"},"content":"     * Saves the list of tasks to the specified file.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sam-theman88"},"content":"     * @param listOfTasks The ArrayList of Task objects to be saved.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sam-theman88"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sam-theman88"},"content":"    public void save(ArrayList\u003cTask\u003e listOfTasks) throws IOException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sam-theman88"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sam-theman88"},"content":"        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sam-theman88"},"content":"        for (Task task : listOfTasks) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sam-theman88"},"content":"            String typeOfTaskString \u003d task.typeOfTaskString();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sam-theman88"},"content":"            String statusString \u003d task.statusString();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sam-theman88"},"content":"            String taskString \u003d task.savedTaskString();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sam-theman88"},"content":"            writer.write(typeOfTaskString + \"| \" + statusString + \"| \" + taskString);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sam-theman88"},"content":"            writer.newLine();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sam-theman88"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sam-theman88"},"content":"        writer.close();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sam-theman88"},"content":"     * Loads the list of tasks from the specified file.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sam-theman88"},"content":"     * @return An ArrayList of Task objects loaded from the file.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sam-theman88"},"content":"     * @throws IOException If an I/O error occurs while reading from the file.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sam-theman88"},"content":"     * @throws EdithException If the file contains corrupted data or the data format is invalid.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sam-theman88"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException, EdithException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sam-theman88"},"content":"        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sam-theman88"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sam-theman88"},"content":"        File directory \u003d new File(file.getParent());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sam-theman88"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"sam-theman88"},"content":"            directory.mkdirs();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"sam-theman88"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"sam-theman88"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"sam-theman88"},"content":"            file.createNewFile();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"sam-theman88"},"content":"            return listOfTasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"sam-theman88"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"sam-theman88"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"sam-theman88"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"sam-theman88"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"sam-theman88"},"content":"            String[] taskData \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"sam-theman88"},"content":"            String typeOfTaskString \u003d taskData[0].trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"sam-theman88"},"content":"            String statusString \u003d taskData[1].trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"sam-theman88"},"content":"            String taskString \u003d taskData[2].trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"sam-theman88"},"content":"            Task task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"sam-theman88"},"content":"            switch (typeOfTaskString) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"sam-theman88"},"content":"            case \"[T]\":","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"sam-theman88"},"content":"                task \u003d new ToDo(taskString);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"sam-theman88"},"content":"                break;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"sam-theman88"},"content":"            case \"[D]\":","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"sam-theman88"},"content":"                String[] deadlineParts \u003d taskString.split(\" /by \");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"sam-theman88"},"content":"                String deadlineTask \u003d deadlineParts[0].trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"sam-theman88"},"content":"                String dueDate \u003d deadlineParts[1].trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"sam-theman88"},"content":"                task \u003d new Deadline(deadlineTask, dueDate);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"sam-theman88"},"content":"                break;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"sam-theman88"},"content":"            case \"[E]\":","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"sam-theman88"},"content":"                String[] eventParts \u003d taskString.split(\" /from | /to \");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"sam-theman88"},"content":"                String eventTask \u003d eventParts[0].trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"sam-theman88"},"content":"                String startTime \u003d eventParts[1].trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"sam-theman88"},"content":"                String endTime \u003d eventParts[2].trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"sam-theman88"},"content":"                task \u003d new Event(eventTask, startTime, endTime);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"sam-theman88"},"content":"                break;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"sam-theman88"},"content":"            default:","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"sam-theman88"},"content":"                throw new EdithException(\"An error occurred while parsing the Edith.task list. Data might be corrupted.\", 1);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"sam-theman88"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"sam-theman88"},"content":"            if (statusString.equals(\"[X]\")) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"sam-theman88"},"content":"                task.markTaskDone();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"sam-theman88"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"sam-theman88"},"content":"            listOfTasks.add(task);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"sam-theman88"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"sam-theman88"},"content":"        return listOfTasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"sam-theman88"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"sam-theman88":111}},{"path":"src/main/java/edith/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sam-theman88"},"content":"package edith;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sam-theman88"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sam-theman88"},"content":" * This Ui class handles all interactions with the user.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sam-theman88"},"content":" * It is responsible for displaying messages, prompts, errors, and other user interface elements.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sam-theman88"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sam-theman88"},"content":"public class Ui {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sam-theman88"},"content":"    private static final String LINE_BREAK \u003d \"\\n_______________________________________________________________________\\n\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sam-theman88"},"content":"    private static final String INDENTATION \u003d \"    \";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sam-theman88"},"content":"     * Displays a greeting message when the chatbot starts.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sam-theman88"},"content":"    public void showGreeting() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sam-theman88"},"content":"        String greeting \u003d \"Hello! I am EDITH, your personal chatbot companion:)\" + \"\\nHow may I assist you?\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sam-theman88"},"content":"        System.out.println(LINE_BREAK + greeting + LINE_BREAK);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sam-theman88"},"content":"     * Displays an exit message when the chatbot ends.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sam-theman88"},"content":"    public void showExitMessage() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sam-theman88"},"content":"        String exitMessage \u003d \"It has been my pleasure helping you. Hope to see you again soon!\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sam-theman88"},"content":"        System.out.println(INDENTATION + exitMessage + LINE_BREAK);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sam-theman88"},"content":"     * Displays a prompt to indicate that the user can input the next instruction.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sam-theman88"},"content":"    public void showPrompt() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sam-theman88"},"content":"        System.out.println(\"Your next instruction: \");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sam-theman88"},"content":"     * Displays a line break to separate sections of output for better readability.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sam-theman88"},"content":"    public void showLineBreak() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sam-theman88"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sam-theman88"},"content":"     * Displays a message with indentation for better formatting.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sam-theman88"},"content":"     * @param message The message to display with indentation.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sam-theman88"},"content":"    public void showIndentedMessage(String message) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sam-theman88"},"content":"        System.out.println(INDENTATION + message);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sam-theman88"},"content":"     * Displays an error message with indentation and a line break for better visibility.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sam-theman88"},"content":"     * @param message The error message to display.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sam-theman88"},"content":"    public void showErrorMessage(String message) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sam-theman88"},"content":"        System.err.println(INDENTATION + message + LINE_BREAK);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sam-theman88"},"content":"     * Returns an error message for invalid date/time formats.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sam-theman88"},"content":"     * @return A string message indicating the correct date/time format.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sam-theman88"},"content":"    public String invalidDateTimeError() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"sam-theman88"},"content":"        return \"Invalid date/time format. Please use \u0027day/month/year HHmm\u0027 (e.g \u002713/9/2024 1800\u0027).\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"sam-theman88"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"sam-theman88":67}},{"path":"src/main/java/edith/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sam-theman88"},"content":"package edith.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sam-theman88"},"content":"import edith.Ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sam-theman88"},"content":"import edith.Storage;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sam-theman88"},"content":"import edith.EdithException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sam-theman88"},"content":"import edith.task.Task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sam-theman88"},"content":"import edith.task.ToDo;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sam-theman88"},"content":"import edith.task.Deadline;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sam-theman88"},"content":"import edith.task.Event;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sam-theman88"},"content":"import edith.task.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sam-theman88"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sam-theman88"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sam-theman88"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sam-theman88"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sam-theman88"},"content":" * The AddCommand class parses a user instruction to create and add a new task","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sam-theman88"},"content":" * to the task list. It supports adding ToDo, Deadline, and Event tasks.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sam-theman88"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sam-theman88"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sam-theman88"},"content":"    private String instruction;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sam-theman88"},"content":"     * Constructs an AddCommand with the specified instruction.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sam-theman88"},"content":"     * @param instruction The instruction provided by the user for adding a task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sam-theman88"},"content":"    public AddCommand(String instruction) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sam-theman88"},"content":"        this.instruction \u003d instruction;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sam-theman88"},"content":"     * Executes the AddCommand by creating a task based on the user instruction,","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sam-theman88"},"content":"     * adding it to the task list, and saving the updated task list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sam-theman88"},"content":"     * \u003cp\u003eThis method will:","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sam-theman88"},"content":"     * \u003cul\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003eCreate a ToDo, Deadline, or Event task based on","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sam-theman88"},"content":"     *     the instruction provided.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003eThrow an EdithException if the instruction is invalid or incomplete.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003eUpdate the task list and save the changes using the provided Storage.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sam-theman88"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sam-theman88"},"content":"     * @param tasks The TaskList to which the task should be added.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sam-theman88"},"content":"     * @param ui The Ui used to display messages to the user.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sam-theman88"},"content":"     * @param storage The Storage used to save the updated task list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sam-theman88"},"content":"     * @throws EdithException If the user instruction is invalid or if there is an issue with the date/time format.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sam-theman88"},"content":"    @Override","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sam-theman88"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws EdithException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sam-theman88"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sam-theman88"},"content":"        if (instruction.startsWith(\"todo \")) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sam-theman88"},"content":"            String taskString \u003d instruction.substring(5).trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sam-theman88"},"content":"            if (taskString.isEmpty()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sam-theman88"},"content":"                throw new EdithException(\"Invalid Edith.task as no description for this todo was provided.\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sam-theman88"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sam-theman88"},"content":"            task \u003d new ToDo(taskString);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sam-theman88"},"content":"        } else if (instruction.startsWith(\"deadline \")) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sam-theman88"},"content":"            String[] parts \u003d instruction.substring(9).split(\" /by \");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sam-theman88"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sam-theman88"},"content":"                throw new EdithException(\"Deadlines must have both a description and a due date.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sam-theman88"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sam-theman88"},"content":"            String taskString \u003d parts[0].trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"sam-theman88"},"content":"            String dueDate \u003d parts[1].trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"sam-theman88"},"content":"            task \u003d new Deadline(taskString, dueDate);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"sam-theman88"},"content":"        } else if (instruction.startsWith(\"event \")) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"sam-theman88"},"content":"            String[] parts \u003d instruction.substring(6).split(\" /from | /to \");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"sam-theman88"},"content":"            if (parts.length !\u003d 3) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"sam-theman88"},"content":"                throw new EdithException(\"Edith.task.Event must have a description, start time, and end time.\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"sam-theman88"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"sam-theman88"},"content":"            String taskString \u003d parts[0].trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"sam-theman88"},"content":"            String startTime \u003d parts[1].trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"sam-theman88"},"content":"            String endTime \u003d parts[2].trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"sam-theman88"},"content":"            task \u003d new Event(taskString, startTime, endTime);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"sam-theman88"},"content":"        } else {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"sam-theman88"},"content":"            throw new EdithException(\"Invalid Edith.command for adding tasks.\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"sam-theman88"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"sam-theman88"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"sam-theman88"},"content":"            tasks.addTask(task);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"sam-theman88"},"content":"            ui.showIndentedMessage(\"Got it. I\u0027ve added this Edith.task:\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"sam-theman88"},"content":"            ui.showIndentedMessage(task.toString());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"sam-theman88"},"content":"            ui.showIndentedMessage(\"There are now \" + tasks.getNumOfTasks() + \" tasks in your list.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"sam-theman88"},"content":"            ui.showLineBreak();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"sam-theman88"},"content":"            storage.save(tasks.getListOfTasks());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"sam-theman88"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"sam-theman88"},"content":"            throw new EdithException(ui.invalidDateTimeError(), 1);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"sam-theman88"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"sam-theman88"},"content":"            ui.showErrorMessage(\"An error occurred while saving updated Edith.task list.\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"sam-theman88"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"sam-theman88"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"sam-theman88":93}},{"path":"src/main/java/edith/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sam-theman88"},"content":"package edith.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sam-theman88"},"content":"import edith.Ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sam-theman88"},"content":"import edith.Storage;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sam-theman88"},"content":"import edith.EdithException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sam-theman88"},"content":"import edith.task.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sam-theman88"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sam-theman88"},"content":" * Represents an abstract base class for commands in the Edith chatbot application.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sam-theman88"},"content":" * Commands are actions that the chatbot can execute based on user input.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sam-theman88"},"content":" * This class provides a common interface for all concrete command implementations.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sam-theman88"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sam-theman88"},"content":"public abstract class Command {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sam-theman88"},"content":"     * Executes the command using the provided task list, user interface, and storage.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sam-theman88"},"content":"     * Subclasses should implement this method to define the specific behavior of the command.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sam-theman88"},"content":"     * @param tasks The list of tasks to be manipulated by the command.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sam-theman88"},"content":"     * @param ui The user interface for displaying messages and prompts.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sam-theman88"},"content":"     * @param storage The storage for saving and loading tasks.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sam-theman88"},"content":"     * @throws EdithException If an error occurs during the execution of the command.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sam-theman88"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws EdithException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sam-theman88"},"content":"     * Determines whether this command signifies an exit action.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sam-theman88"},"content":"     * By default, commands do not signify an exit action.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sam-theman88"},"content":"     * Subclasses can override this method to return true if the command is an exit command.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sam-theman88"},"content":"     * @return true if the command is an exit command, false otherwise.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sam-theman88"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sam-theman88"},"content":"        return false;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sam-theman88"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"sam-theman88":35}},{"path":"src/main/java/edith/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sam-theman88"},"content":"package edith.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sam-theman88"},"content":"import edith.Ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sam-theman88"},"content":"import edith.Storage;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sam-theman88"},"content":"import edith.EdithException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sam-theman88"},"content":"import edith.task.Task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sam-theman88"},"content":"import edith.task.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sam-theman88"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sam-theman88"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sam-theman88"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sam-theman88"},"content":" * The DeleteCommand class removes a specific task identified by its index from the task list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sam-theman88"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sam-theman88"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sam-theman88"},"content":"    private int index;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sam-theman88"},"content":"     * Constructs a DeleteCommand with the specified index.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sam-theman88"},"content":"     * @param index The index of the task to be deleted from the task list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sam-theman88"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sam-theman88"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sam-theman88"},"content":"     * Executes the DeleteCommand by deleting the task at the specified index from the task list","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sam-theman88"},"content":"     * and updating the storage with the new task list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sam-theman88"},"content":"     * \u003cp\u003eThis method will:","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sam-theman88"},"content":"     * \u003cul\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003eCheck if the provided index is valid. If not, an EdithException is thrown.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003eRemove the task at the specified index from the task list.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003eDisplay a message confirming the removal and the updated number of tasks.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003eSave the updated task list using the provided Storage.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sam-theman88"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sam-theman88"},"content":"     * @param tasks The TaskList from which the task will be deleted.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sam-theman88"},"content":"     * @param ui The Ui used to display messages to the user.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sam-theman88"},"content":"     * @param storage The Storage used to save the updated task list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sam-theman88"},"content":"     * @throws EdithException If the index is invalid or the task to delete does not exist.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sam-theman88"},"content":"    @Override","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sam-theman88"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws EdithException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sam-theman88"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.getNumOfTasks()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sam-theman88"},"content":"            throw new EdithException(\"Edith.task.Task \" + index + \" does not exist. Please enter a valid Edith.task number.\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sam-theman88"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sam-theman88"},"content":"        Task taskToDelete \u003d tasks.getTask(index);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sam-theman88"},"content":"        tasks.deleteTask(index);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sam-theman88"},"content":"        ui.showIndentedMessage(\"Certainly. I\u0027ve removed this Edith.task:\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sam-theman88"},"content":"        ui.showIndentedMessage(taskToDelete.toString());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sam-theman88"},"content":"        ui.showIndentedMessage(\"There are now \" + tasks.getNumOfTasks() + \" tasks in your list.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sam-theman88"},"content":"        ui.showLineBreak();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sam-theman88"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sam-theman88"},"content":"            storage.save(tasks.getListOfTasks());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sam-theman88"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sam-theman88"},"content":"            ui.showErrorMessage(\"An error occurred while saving updated Edith.task list.\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sam-theman88"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sam-theman88"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"sam-theman88":64}},{"path":"src/main/java/edith/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sam-theman88"},"content":"package edith.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sam-theman88"},"content":"import edith.Ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sam-theman88"},"content":"import edith.Storage;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sam-theman88"},"content":"import edith.EdithException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sam-theman88"},"content":"import edith.task.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sam-theman88"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sam-theman88"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sam-theman88"},"content":" * The ExitCommand class is used to signal the end of the user\u0027s session with the chatbot.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sam-theman88"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sam-theman88"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sam-theman88"},"content":"     * Executes the ExitCommand by displaying the exit message to the user.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sam-theman88"},"content":"     * \u003cp\u003eThis method will:","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sam-theman88"},"content":"     * \u003cul\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003eDisplay a farewell message to the user through the Ui.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sam-theman88"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sam-theman88"},"content":"     * @param tasks The TaskList associated with the current session (not used in this command).","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sam-theman88"},"content":"     * @param ui The Ui used to display the exit message to the user.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sam-theman88"},"content":"     * @param storage The Storage used to save any changes (not used in this command).","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sam-theman88"},"content":"     * @throws EdithException This method does not throw any EdithException.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sam-theman88"},"content":"    @Override","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sam-theman88"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws EdithException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sam-theman88"},"content":"        ui.showExitMessage();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sam-theman88"},"content":"     * Returns whether this command is an exit command.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sam-theman88"},"content":"     * @return true because this command is an exit command.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sam-theman88"},"content":"    @Override","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sam-theman88"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sam-theman88"},"content":"        return true;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sam-theman88"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"sam-theman88":40}},{"path":"src/main/java/edith/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sam-theman88"},"content":"package edith.command;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sam-theman88"},"content":"import edith.Ui;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sam-theman88"},"content":"import edith.Storage;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sam-theman88"},"content":"import edith.EdithException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sam-theman88"},"content":"import edith.task.TaskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sam-theman88"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sam-theman88"},"content":" * Represents a command to find tasks in the task list that match a given keyword.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sam-theman88"},"content":" * The FindCommand class searches for task descriptions with the specified keyword and lists","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sam-theman88"},"content":" * the matching tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sam-theman88"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sam-theman88"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sam-theman88"},"content":"    private String keyword;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sam-theman88"},"content":"     * Constructs a FindCommand with the specified keyword.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sam-theman88"},"content":"     * The keyword is stored in lowercase to enable case-insensitive search.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sam-theman88"},"content":"     * @param keyword The keyword to search for in the task descriptions.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sam-theman88"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sam-theman88"},"content":"        this.keyword \u003d keyword.toLowerCase();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sam-theman88"},"content":"     * Executes the FindCommand by listing tasks that contain","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sam-theman88"},"content":"     * the specified keyword in their description.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sam-theman88"},"content":"     * \u003cp\u003eThis method will:","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sam-theman88"},"content":"     * \u003cul\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003eRetrieve and display tasks from the TaskList that contain the specified keyword in their description.\u003c/li\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sam-theman88"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sam-theman88"},"content":"     * @param tasks The TaskList containing all tasks to be listed.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sam-theman88"},"content":"     * @param ui The Ui used to display the tasks matching the specified keyword.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sam-theman88"},"content":"     * @param storage The Storage used to save changes (not used in this command).","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sam-theman88"},"content":"     * @throws EdithException This method does not throw any EdithException.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sam-theman88"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sam-theman88"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws EdithException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sam-theman88"},"content":"        tasks.findTasksByKeyword(keyword, ui);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sam-theman88"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"sam-theman88":44}},{"path":"src/main/java/edith/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sam-theman88"},"content":"package edith.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sam-theman88"},"content":"import edith.Ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sam-theman88"},"content":"import edith.Storage;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sam-theman88"},"content":"import edith.EdithException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sam-theman88"},"content":"import edith.task.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sam-theman88"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sam-theman88"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sam-theman88"},"content":" * The ListCommand class is used to retrieve and display all tasks that are currently in the user\u0027s task list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sam-theman88"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sam-theman88"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sam-theman88"},"content":"     * Executes the ListCommand by listing all tasks in the task list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sam-theman88"},"content":"     * \u003cp\u003eThis method will:","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sam-theman88"},"content":"     * \u003cul\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003eRetrieve all tasks from the TaskList.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003eDisplay the tasks to the user through the Ui.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sam-theman88"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sam-theman88"},"content":"     * @param tasks The TaskList containing all tasks to be listed.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sam-theman88"},"content":"     * @param ui The Ui used to display the list of tasks to the user.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sam-theman88"},"content":"     * @param storage The Storage used to save changes (not used in this command).","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sam-theman88"},"content":"     * @throws EdithException This method does not throw any EdithException.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sam-theman88"},"content":"    @Override","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sam-theman88"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws EdithException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sam-theman88"},"content":"        tasks.listTasks(ui);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sam-theman88"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"sam-theman88":31}},{"path":"src/main/java/edith/command/ListOnDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sam-theman88"},"content":"package edith.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sam-theman88"},"content":"import edith.Ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sam-theman88"},"content":"import edith.Storage;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sam-theman88"},"content":"import edith.EdithException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sam-theman88"},"content":"import edith.task.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sam-theman88"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sam-theman88"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sam-theman88"},"content":" * Represents a command to list tasks on a specific date.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sam-theman88"},"content":" * The ListOnDateCommand class is used to retrieve and display tasks that are due or starting on a specified date.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sam-theman88"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sam-theman88"},"content":"public class ListOnDateCommand extends Command {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sam-theman88"},"content":"    private String date;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sam-theman88"},"content":"     * Constructs a ListOnDateCommand with the specified date.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sam-theman88"},"content":"     * @param date A String representing the date for which tasks are to be listed.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sam-theman88"},"content":"     *             The date should be in the format \"d/M/yyyy\" (e.g., \"13/9/2024\").","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sam-theman88"},"content":"    public ListOnDateCommand(String date) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sam-theman88"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sam-theman88"},"content":"     * Executes the ListOnDateCommand by listing tasks that are due or starting on the specified date.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sam-theman88"},"content":"     * \u003cp\u003eThis method will:","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sam-theman88"},"content":"     * \u003cul\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003eRetrieve and display tasks from the TaskList that are due or starting on the specified date.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003eHandle any DateTimeParseException thrown if the date format is invalid, and wrap it in an EdithException.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sam-theman88"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sam-theman88"},"content":"     * @param tasks The TaskList containing all tasks to be checked.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sam-theman88"},"content":"     * @param ui The Ui used to display the tasks due or starting on the specified date.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sam-theman88"},"content":"     * @param storage The Storage used to save changes (not used in this command).","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sam-theman88"},"content":"     * @throws EdithException If there is an error in parsing the date or listing tasks.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sam-theman88"},"content":"    @Override","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sam-theman88"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws EdithException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sam-theman88"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sam-theman88"},"content":"            tasks.listTasksOnDate(date, ui);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sam-theman88"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sam-theman88"},"content":"            throw new EdithException(ui.invalidDateTimeError(), 1);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sam-theman88"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sam-theman88"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"sam-theman88":49}},{"path":"src/main/java/edith/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sam-theman88"},"content":"package edith.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sam-theman88"},"content":"import edith.Ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sam-theman88"},"content":"import edith.Storage;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sam-theman88"},"content":"import edith.EdithException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sam-theman88"},"content":"import edith.task.Task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sam-theman88"},"content":"import edith.task.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sam-theman88"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sam-theman88"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sam-theman88"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sam-theman88"},"content":" * The MarkCommand class is used to update the status of a task in the TaskList to indicate that it has been completed.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sam-theman88"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sam-theman88"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sam-theman88"},"content":"    private int index;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sam-theman88"},"content":"     * Constructs a MarkCommand with the specified index of the task to be marked as done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sam-theman88"},"content":"     * @param index An int representing the index of the task in the TaskList to be marked as done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sam-theman88"},"content":"     *              The index is zero-based, so the first task has an index of 0.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sam-theman88"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sam-theman88"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sam-theman88"},"content":"     * Executes the MarkCommand by marking the specified task as done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sam-theman88"},"content":"     * \u003cp\u003eThis method will:","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sam-theman88"},"content":"     * \u003cul\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003eCheck if the index is within the valid range of the TaskList. If not, an EdithException is thrown.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003eRetrieve the task at the specified index and mark it as done.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003eDisplay a confirmation message to the user indicating that the task has been marked as done.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003eSave the updated TaskList using the Storage object.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sam-theman88"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sam-theman88"},"content":"     * @param tasks The TaskList containing the tasks where one needs to be marked as done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sam-theman88"},"content":"     * @param ui The Ui used to display the confirmation message after marking the task as done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sam-theman88"},"content":"     * @param storage The Storage used to save the updated task list to persistent storage.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sam-theman88"},"content":"     * @throws EdithException If the specified index is out of range or if there is an error in marking the task as done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sam-theman88"},"content":"    @Override","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sam-theman88"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws EdithException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sam-theman88"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.getNumOfTasks()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sam-theman88"},"content":"            throw new EdithException(\"Edith.task.Task \" + index + \" does not exist. Please enter a valid Edith.task number.\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sam-theman88"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sam-theman88"},"content":"        Task taskToMark \u003d tasks.getTask(index);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sam-theman88"},"content":"        taskToMark.markTaskDone();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sam-theman88"},"content":"        ui.showIndentedMessage(\"Alright, great job! I\u0027ve marked Edith.task \" + (index + 1) + \" as done:\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sam-theman88"},"content":"        ui.showIndentedMessage(taskToMark.toString());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sam-theman88"},"content":"        ui.showLineBreak();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sam-theman88"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sam-theman88"},"content":"            storage.save(tasks.getListOfTasks());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sam-theman88"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sam-theman88"},"content":"            ui.showErrorMessage(\"An error occurred while saving updated Edith.task list.\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sam-theman88"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sam-theman88"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"sam-theman88":63}},{"path":"src/main/java/edith/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sam-theman88"},"content":"package edith.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sam-theman88"},"content":"import edith.Ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sam-theman88"},"content":"import edith.Storage;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sam-theman88"},"content":"import edith.EdithException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sam-theman88"},"content":"import edith.task.Task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sam-theman88"},"content":"import edith.task.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sam-theman88"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sam-theman88"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sam-theman88"},"content":" * Represents a command to mark a task as not done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sam-theman88"},"content":" * The UnmarkCommand class is used to update the status of a task in the TaskList to indicate that it is no longer completed.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sam-theman88"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sam-theman88"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sam-theman88"},"content":"    private int index;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sam-theman88"},"content":"     * Constructs an UnmarkCommand with the specified index of the task to be marked as not done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sam-theman88"},"content":"     * @param index An int representing the index of the task in the TaskList to be marked as not done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sam-theman88"},"content":"     *              The index is zero-based, so the first task has an index of 0.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sam-theman88"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sam-theman88"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sam-theman88"},"content":"     * Executes the UnmarkCommand by marking the specified task as not done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sam-theman88"},"content":"     * \u003cp\u003eThis method will:","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sam-theman88"},"content":"     * \u003cul\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003eCheck if the index is within the valid range of the TaskList. If not, an EdithException is thrown.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003eRetrieve the task at the specified index and mark it as not done.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003eDisplay a confirmation message to the user indicating that the task has been marked as not done.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sam-theman88"},"content":"     *     \u003cli\u003eSave the updated TaskList using the Storage object.\u003c/li\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sam-theman88"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sam-theman88"},"content":"     * @param tasks The TaskList containing the tasks where one needs to be marked as not done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sam-theman88"},"content":"     * @param ui The Ui used to display the confirmation message after marking the task as not done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sam-theman88"},"content":"     * @param storage The Storage used to save the updated task list to persistent storage.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sam-theman88"},"content":"     * @throws EdithException If the specified index is out of range or if there is an error in marking the task as not done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sam-theman88"},"content":"    @Override","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sam-theman88"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws EdithException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sam-theman88"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.getNumOfTasks()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sam-theman88"},"content":"            throw new EdithException(\"Edith.task.Task \" + index + \" does not exist. Please enter a valid Edith.task number.\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sam-theman88"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sam-theman88"},"content":"        Task taskToUnmark \u003d tasks.getTask(index);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sam-theman88"},"content":"        taskToUnmark.markTaskUndone();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sam-theman88"},"content":"        ui.showIndentedMessage(\"Sure, I\u0027ve marked Edith.task \" + (index + 1) + \" as not done yet:\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sam-theman88"},"content":"        ui.showIndentedMessage(taskToUnmark.toString());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sam-theman88"},"content":"        ui.showLineBreak();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sam-theman88"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sam-theman88"},"content":"            storage.save(tasks.getListOfTasks());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sam-theman88"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sam-theman88"},"content":"            ui.showErrorMessage(\"An error occurred while saving updated Edith.task list.\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sam-theman88"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sam-theman88"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"sam-theman88":63}},{"path":"src/main/java/edith/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sam-theman88"},"content":"package edith.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sam-theman88"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sam-theman88"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sam-theman88"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sam-theman88"},"content":"import java.util.Locale;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sam-theman88"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sam-theman88"},"content":" * Represents a Deadline task, which is a task that needs to be completed by a specific date and time.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sam-theman88"},"content":" * This class extends the abstract Task class.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sam-theman88"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sam-theman88"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sam-theman88"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sam-theman88"},"content":"    private String taskStringToSave;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sam-theman88"},"content":"     * Constructs a new Deadline task with the specified description and due date.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sam-theman88"},"content":"     * @param task           The description of the Deadline task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sam-theman88"},"content":"     * @param dueDateString  The due date of the task as a string in the format \"d/M/yyyy HHmm\".","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sam-theman88"},"content":"    public Deadline(String task, String dueDateString) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sam-theman88"},"content":"        super(\"[D] \", task);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sam-theman88"},"content":"        this.dueDate \u003d parseDueDate(dueDateString);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sam-theman88"},"content":"        this.taskStringToSave \u003d task + \" /by \" + dueDateString;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sam-theman88"},"content":"     * Parses a string representing a date and time into a LocalDateTime object.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sam-theman88"},"content":"     * @param dueDateString The due date string in the format \"d/M/yyyy HHmm\".","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sam-theman88"},"content":"     * @return The parsed LocalDateTime object.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sam-theman88"},"content":"    private LocalDateTime parseDueDate(String dueDateString) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sam-theman88"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sam-theman88"},"content":"        return LocalDateTime.parse(dueDateString, formatter);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sam-theman88"},"content":"     * Returns the due date of the task as a LocalDate object.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sam-theman88"},"content":"     * @return The due date as a LocalDate.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sam-theman88"},"content":"    public LocalDate getDueDate() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sam-theman88"},"content":"        return this.dueDate.toLocalDate();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sam-theman88"},"content":"     * Returns the string representation of the task to be saved to storage.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sam-theman88"},"content":"     * @return The string to be saved.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sam-theman88"},"content":"    @Override","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sam-theman88"},"content":"    public String savedTaskString() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sam-theman88"},"content":"        return taskStringToSave;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sam-theman88"},"content":"     * Returns the string representation of the Deadline task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sam-theman88"},"content":"     * @return A string describing the Deadline task, including its status, description, and due date.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sam-theman88"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sam-theman88"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"sam-theman88"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"E, d MMM yyyy, ha\", Locale.ENGLISH);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"sam-theman88"},"content":"        String formattedDueDate \u003d this.dueDate.format(formatter);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"sam-theman88"},"content":"        String string \u003d \" (due: \" + formattedDueDate + \")\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"sam-theman88"},"content":"        return typeOfTaskString() + statusString() + taskString() + string;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"sam-theman88"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"sam-theman88":70}},{"path":"src/main/java/edith/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sam-theman88"},"content":"package edith.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sam-theman88"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sam-theman88"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sam-theman88"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sam-theman88"},"content":"import java.util.Locale;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sam-theman88"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sam-theman88"},"content":" * Represents an Event task, which is a task that occurs during a specific time frame.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sam-theman88"},"content":" * This class extends the abstract Task class.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sam-theman88"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sam-theman88"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sam-theman88"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sam-theman88"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sam-theman88"},"content":"    private String taskStringToSave;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sam-theman88"},"content":"     * Constructs a new Event task with the specified description, start time, and end time.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sam-theman88"},"content":"     * @param task             The description of the Event task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sam-theman88"},"content":"     * @param startTimeString  The start time of the event as a string in the format \"d/M/yyyy HHmm\".","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sam-theman88"},"content":"     * @param endTimeString    The end time of the event as a string in the format \"d/M/yyyy HHmm\".","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sam-theman88"},"content":"    public Event(String task, String startTimeString, String endTimeString) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sam-theman88"},"content":"        super(\"[E] \", task);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sam-theman88"},"content":"        this.startTime \u003d parseTime(startTimeString);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sam-theman88"},"content":"        this.endTime \u003d parseTime(endTimeString);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sam-theman88"},"content":"        this.taskStringToSave \u003d task + \" /from \" + startTimeString + \" /to \" + endTimeString;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sam-theman88"},"content":"     * Parses a string representing a date and time into a LocalDateTime object.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sam-theman88"},"content":"     * @param timeString The time string in the format \"d/M/yyyy HHmm\".","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sam-theman88"},"content":"     * @return The parsed LocalDateTime object.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sam-theman88"},"content":"    private LocalDateTime parseTime(String timeString) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sam-theman88"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sam-theman88"},"content":"        return LocalDateTime.parse(timeString, formatter);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sam-theman88"},"content":"     * Returns the start time of the event as a LocalDate object.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sam-theman88"},"content":"     * @return The start time as a LocalDate.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sam-theman88"},"content":"    public LocalDate getStartTime() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sam-theman88"},"content":"        return this.startTime.toLocalDate();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sam-theman88"},"content":"     * Returns the end time of the event as a LocalDate object.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sam-theman88"},"content":"     * @return The end time as a LocalDate.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sam-theman88"},"content":"    public LocalDate getEndTime() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sam-theman88"},"content":"        return this.endTime.toLocalDate();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sam-theman88"},"content":"     * Returns the string representation of the task to be saved to storage.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sam-theman88"},"content":"     * @return The string to be saved.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"sam-theman88"},"content":"    @Override","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"sam-theman88"},"content":"    public String savedTaskString() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"sam-theman88"},"content":"        return taskStringToSave;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"sam-theman88"},"content":"     * Returns the string representation of the Event task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"sam-theman88"},"content":"     * @return A string describing the Event task, including its status, description, start time, and end time.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"sam-theman88"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"sam-theman88"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"sam-theman88"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"E, d MMM yyyy, ha\", Locale.ENGLISH);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"sam-theman88"},"content":"        String formattedStartTime \u003d this.startTime.format(formatter);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"sam-theman88"},"content":"        String formattedEndTime \u003d this.endTime.format(formatter);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"sam-theman88"},"content":"        String string \u003d \" (from: \" + formattedStartTime + \" - to: \" + formattedEndTime + \")\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"sam-theman88"},"content":"        return typeOfTaskString() + statusString() + taskString() + string;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"sam-theman88"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"sam-theman88":83}},{"path":"src/main/java/edith/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sam-theman88"},"content":"package edith.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sam-theman88"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sam-theman88"},"content":" * Represents a task with a type, description, and completion status.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sam-theman88"},"content":" * This is an abstract class that can be extended to create specific types of tasks.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sam-theman88"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sam-theman88"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sam-theman88"},"content":"    private String typeOfTask;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sam-theman88"},"content":"    private String task;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sam-theman88"},"content":"    private boolean isDone;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sam-theman88"},"content":"     * Constructs a new Task with the specified type and description.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sam-theman88"},"content":"     * @param typeOfTask The type of the task (e.g., \"[T]\" for ToDo, \"[D]\" for Deadline).","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sam-theman88"},"content":"     * @param task The description of the task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sam-theman88"},"content":"    public Task(String typeOfTask, String task) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sam-theman88"},"content":"        this.typeOfTask \u003d typeOfTask;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sam-theman88"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sam-theman88"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sam-theman88"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sam-theman88"},"content":"     * @return The task description.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sam-theman88"},"content":"    public String taskString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sam-theman88"},"content":"        return this.task;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sam-theman88"},"content":"     * Returns the string representation of the task to be saved to storage.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sam-theman88"},"content":"     * By default, this returns the task description.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sam-theman88"},"content":"     * @return The string representation of the task for storage.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sam-theman88"},"content":"    public String savedTaskString() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sam-theman88"},"content":"        return this.task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sam-theman88"},"content":"     * Returns the type of the task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sam-theman88"},"content":"     * @return The type of the task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sam-theman88"},"content":"    public String typeOfTaskString() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sam-theman88"},"content":"        return this.typeOfTask;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sam-theman88"},"content":"     * Returns the status of the task as a string.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sam-theman88"},"content":"     * \"[X] \" indicates the task is done, \"[ ] \" indicates the task is not done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sam-theman88"},"content":"     * @return The status of the task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sam-theman88"},"content":"    public String statusString() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sam-theman88"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sam-theman88"},"content":"            return \"[X] \";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sam-theman88"},"content":"        } else {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sam-theman88"},"content":"            return \"[ ] \";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sam-theman88"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"sam-theman88"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"sam-theman88"},"content":"    public void markTaskDone() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"sam-theman88"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"sam-theman88"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"sam-theman88"},"content":"    public void markTaskUndone() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"sam-theman88"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"sam-theman88"},"content":"     * Checks if the task\u0027s description contains the specified keyword.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"sam-theman88"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"sam-theman88"},"content":"     * @return true if the task\u0027s description contains the keyword, false otherwise.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"sam-theman88"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"sam-theman88"},"content":"        return taskString().toLowerCase().contains(keyword);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"sam-theman88"},"content":"     * Returns a string representation of the task, including its type, status, and description.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"sam-theman88"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"sam-theman88"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"sam-theman88"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"sam-theman88"},"content":"        return typeOfTaskString() + statusString() + taskString();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"sam-theman88"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"sam-theman88":99}},{"path":"src/main/java/edith/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sam-theman88"},"content":"package edith.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sam-theman88"},"content":"import edith.Ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sam-theman88"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sam-theman88"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sam-theman88"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sam-theman88"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sam-theman88"},"content":" * This TaskList class manages a list of tasks.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sam-theman88"},"content":" * It provides methods to add, delete, retrieve, and list tasks,","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sam-theman88"},"content":" * as well as to list tasks that are due or starting on a specific date.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sam-theman88"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sam-theman88"},"content":"public class TaskList {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sam-theman88"},"content":"    private final ArrayList\u003cTask\u003e listOfTasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sam-theman88"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sam-theman88"},"content":"    public TaskList() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sam-theman88"},"content":"        this.listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sam-theman88"},"content":"     * Constructs a TaskList with the specified list of tasks.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sam-theman88"},"content":"     * @param listOfTasks The list of tasks to initialize this TaskList with.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sam-theman88"},"content":"    public TaskList(ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sam-theman88"},"content":"        this.listOfTasks \u003d listOfTasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sam-theman88"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sam-theman88"},"content":"     * @return The ArrayList of Task objects.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sam-theman88"},"content":"    public ArrayList\u003cTask\u003e getListOfTasks() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sam-theman88"},"content":"        return this.listOfTasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sam-theman88"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sam-theman88"},"content":"     * @param task The task to add to the list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sam-theman88"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sam-theman88"},"content":"        listOfTasks.add(task);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sam-theman88"},"content":"     * Deletes the task at the specified index from the list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sam-theman88"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sam-theman88"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sam-theman88"},"content":"        listOfTasks.remove(index);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sam-theman88"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sam-theman88"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sam-theman88"},"content":"     * @return The Task at the specified index.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"sam-theman88"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"sam-theman88"},"content":"        return listOfTasks.get(index);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"sam-theman88"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"sam-theman88"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"sam-theman88"},"content":"    public int getNumOfTasks() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"sam-theman88"},"content":"        return listOfTasks.size();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"sam-theman88"},"content":"     * Lists all tasks in the task list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"sam-theman88"},"content":"     * @param ui The Ui object used to display the tasks.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"sam-theman88"},"content":"    public void listTasks(Ui ui) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"sam-theman88"},"content":"        if (listOfTasks.isEmpty()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"sam-theman88"},"content":"            ui.showIndentedMessage(\"Great news, you have no outstanding tasks! Have a break!\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"sam-theman88"},"content":"        } else {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"sam-theman88"},"content":"            ui.showIndentedMessage(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"sam-theman88"},"content":"            for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"sam-theman88"},"content":"                ui.showIndentedMessage((i + 1) + \") \" + listOfTasks.get(i));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"sam-theman88"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"sam-theman88"},"content":"            ui.showLineBreak();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"sam-theman88"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"sam-theman88"},"content":"     * Lists tasks that are due or starting on a specific date.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"sam-theman88"},"content":"     * @param date The date to filter tasks by.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"sam-theman88"},"content":"     * @param ui   The Ui object used to display the tasks.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"sam-theman88"},"content":"    public void listTasksOnDate(String date, Ui ui) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"sam-theman88"},"content":"        int index \u003d 1;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"sam-theman88"},"content":"        boolean isDue \u003d false;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"sam-theman88"},"content":"        boolean isStartingOn \u003d false;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"sam-theman88"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"sam-theman88"},"content":"        LocalDate localDate \u003d LocalDate.parse(date, formatter);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"sam-theman88"},"content":"        ui.showIndentedMessage(\"Here are your tasks due by \" + date + \":\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"sam-theman88"},"content":"        for (Task task : listOfTasks) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"sam-theman88"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"sam-theman88"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"sam-theman88"},"content":"                if (deadline.getDueDate().isEqual(localDate)) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"sam-theman88"},"content":"                    ui.showIndentedMessage(index + \") \" + deadline);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"sam-theman88"},"content":"                    index++;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"sam-theman88"},"content":"                    isDue \u003d true;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"sam-theman88"},"content":"                }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"sam-theman88"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"sam-theman88"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"sam-theman88"},"content":"                if (event.getEndTime().isEqual(localDate)) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"sam-theman88"},"content":"                    ui.showIndentedMessage(index + \") \" + event);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"sam-theman88"},"content":"                    index++;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"sam-theman88"},"content":"                    isDue \u003d true;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"sam-theman88"},"content":"                }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"sam-theman88"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"sam-theman88"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"sam-theman88"},"content":"        if (!isDue) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"sam-theman88"},"content":"            ui.showIndentedMessage(\"NOTHING\\n\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"sam-theman88"},"content":"        } else {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"sam-theman88"},"content":"            System.out.println(\"\\n\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"sam-theman88"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"sam-theman88"},"content":"        ui.showIndentedMessage(\"Here are your events starting on \" + date + \":\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"sam-theman88"},"content":"        for (Task task : listOfTasks) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"sam-theman88"},"content":"            if (task instanceof Event) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"sam-theman88"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"sam-theman88"},"content":"                if (event.getStartTime().isEqual(localDate)) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"sam-theman88"},"content":"                    ui.showIndentedMessage(index + \") \" + event);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"sam-theman88"},"content":"                    index++;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"sam-theman88"},"content":"                    isStartingOn \u003d true;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"sam-theman88"},"content":"                }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"sam-theman88"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"sam-theman88"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"sam-theman88"},"content":"        if (!isStartingOn) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"sam-theman88"},"content":"            ui.showIndentedMessage(\"NOTHING\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"sam-theman88"},"content":"            ui.showLineBreak();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"sam-theman88"},"content":"        } else {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"sam-theman88"},"content":"            ui.showLineBreak();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"sam-theman88"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"sam-theman88"},"content":"     * Finds and lists tasks that contain the specified keyword.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"sam-theman88"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"sam-theman88"},"content":"     * @param ui The Ui object used to display the tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"sam-theman88"},"content":"    public void findTasksByKeyword(String keyword, Ui ui) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"sam-theman88"},"content":"        int index \u003d 1;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"sam-theman88"},"content":"        boolean hasKeyword \u003d false;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"sam-theman88"},"content":"        ui.showIndentedMessage(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"sam-theman88"},"content":"        for (Task task : listOfTasks) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"sam-theman88"},"content":"            if (task.containsKeyword(keyword)) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"sam-theman88"},"content":"                ui.showIndentedMessage(index + \") \" + task);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"sam-theman88"},"content":"                index++;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"sam-theman88"},"content":"                hasKeyword \u003d true;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"sam-theman88"},"content":"            }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"sam-theman88"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"sam-theman88"},"content":"        if (!hasKeyword) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"sam-theman88"},"content":"            ui.showIndentedMessage(\"NOTHING\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"sam-theman88"},"content":"            ui.showLineBreak();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"sam-theman88"},"content":"        } else {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"sam-theman88"},"content":"            ui.showLineBreak();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"sam-theman88"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"sam-theman88"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"sam-theman88":181}},{"path":"src/main/java/edith/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sam-theman88"},"content":"package edith.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sam-theman88"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sam-theman88"},"content":" * Represents a ToDo task, which is a simple task without a specific date or time.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sam-theman88"},"content":" * This class extends the abstract Task class.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sam-theman88"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sam-theman88"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sam-theman88"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sam-theman88"},"content":"     * Constructs a new ToDo task with the specified description.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sam-theman88"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sam-theman88"},"content":"     * @param task The description of the ToDo task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sam-theman88"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sam-theman88"},"content":"    public ToDo(String task) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sam-theman88"},"content":"        super(\"[T] \", task);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sam-theman88"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"sam-theman88":16}},{"path":"src/test/java/edith/command/ListOnDateCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sam-theman88"},"content":"package edith.command;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sam-theman88"},"content":"import edith.Ui;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sam-theman88"},"content":"import edith.Storage;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sam-theman88"},"content":"import edith.EdithException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sam-theman88"},"content":"import edith.task.Deadline;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sam-theman88"},"content":"import edith.task.Event;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sam-theman88"},"content":"import edith.task.TaskList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sam-theman88"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sam-theman88"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sam-theman88"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sam-theman88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sam-theman88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sam-theman88"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sam-theman88"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sam-theman88"},"content":"public class ListOnDateCommandTest {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sam-theman88"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sam-theman88"},"content":"    private Ui ui;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sam-theman88"},"content":"    private Storage storage;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sam-theman88"},"content":"    @BeforeEach","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sam-theman88"},"content":"    public void setUp() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sam-theman88"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sam-theman88"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sam-theman88"},"content":"        storage \u003d new Storage(\"./data/test-edith.txt\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sam-theman88"},"content":"    @Test","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sam-theman88"},"content":"    public void execute_validDateWithTasks_success() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sam-theman88"},"content":"        tasks.addTask(new Deadline(\"Return book\", \"2/11/2024 1800\"));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sam-theman88"},"content":"        tasks.addTask(new Event(\"Meeting\", \"2/11/2024 1800\", \"2/11/2024 2200\"));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sam-theman88"},"content":"        ListOnDateCommand command \u003d new ListOnDateCommand(\"2/11/2024\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sam-theman88"},"content":"        String output \u003d captureOutput(() -\u003e {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sam-theman88"},"content":"            try {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sam-theman88"},"content":"                command.execute(tasks, ui, storage);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sam-theman88"},"content":"            } catch (EdithException e) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sam-theman88"},"content":"                fail(\"Exception should not be thrown for a valid date.\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sam-theman88"},"content":"            }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sam-theman88"},"content":"        });","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sam-theman88"},"content":"        assertTrue(output.contains(\"Return book\"));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sam-theman88"},"content":"        assertTrue(output.contains(\"Meeting\"));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sam-theman88"},"content":"    @Test","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"sam-theman88"},"content":"    public void execute_validDateNoTasks_success() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"sam-theman88"},"content":"        ListOnDateCommand command \u003d new ListOnDateCommand(\"2/11/2024\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"sam-theman88"},"content":"        String output \u003d captureOutput(() -\u003e {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"sam-theman88"},"content":"            try {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"sam-theman88"},"content":"                command.execute(tasks, ui, storage);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"sam-theman88"},"content":"            } catch (EdithException e) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"sam-theman88"},"content":"                fail(\"Exception should not be thrown for a valid date.\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"sam-theman88"},"content":"            }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"sam-theman88"},"content":"        });","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"sam-theman88"},"content":"        assertTrue(output.contains(\"NOTHING\"));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"sam-theman88"},"content":"    @Test","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"sam-theman88"},"content":"    public void execute_invalidDateFormat_edithExceptionThrown() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"sam-theman88"},"content":"        try {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"sam-theman88"},"content":"            ListOnDateCommand command \u003d new ListOnDateCommand(\"2nd November 2024\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"sam-theman88"},"content":"            command.execute(tasks, ui, storage);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"sam-theman88"},"content":"            fail();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"sam-theman88"},"content":"        } catch (EdithException e) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"sam-theman88"},"content":"            assertEquals(\"Invalid date/time format. Please use \u0027day/month/year HHmm\u0027 (e.g \u002713/9/2024 1800\u0027).\", e.getMessage());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"sam-theman88"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"sam-theman88"},"content":"    private String captureOutput(Runnable task) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"sam-theman88"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"sam-theman88"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"sam-theman88"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"sam-theman88"},"content":"        try {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"sam-theman88"},"content":"            task.run();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"sam-theman88"},"content":"        } finally {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"sam-theman88"},"content":"            System.setOut(originalOut);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"sam-theman88"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"sam-theman88"},"content":"        return outputStream.toString();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"sam-theman88"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"sam-theman88":86}},{"path":"src/test/java/edith/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sam-theman88"},"content":"package edith.task;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sam-theman88"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sam-theman88"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sam-theman88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sam-theman88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sam-theman88"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sam-theman88"},"content":"    private String taskDescription \u003d \"Return book\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sam-theman88"},"content":"    private String dueDateString \u003d \"2/11/2024 1800\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sam-theman88"},"content":"    private String invalidDueDateString \u003d \"2 Nov 2024 1800\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sam-theman88"},"content":"    @Test","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sam-theman88"},"content":"    public void constructor_validDate_success() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sam-theman88"},"content":"        Deadline deadline \u003d new Deadline(taskDescription, dueDateString);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sam-theman88"},"content":"        assertEquals(\"Return book\", deadline.taskString());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sam-theman88"},"content":"        assertEquals(LocalDateTime.of(2024, 11, 2, 18, 0), deadline.getDueDate().atTime(18, 0));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sam-theman88"},"content":"    @Test","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sam-theman88"},"content":"    public void savedTaskString_validInput_success() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sam-theman88"},"content":"        Deadline deadline \u003d new Deadline(taskDescription, dueDateString);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sam-theman88"},"content":"        assertEquals(\"Return book /by 2/11/2024 1800\", deadline.savedTaskString());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sam-theman88"},"content":"    @Test","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sam-theman88"},"content":"    public void toString_validInput_success() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sam-theman88"},"content":"        Deadline deadline \u003d new Deadline(taskDescription, dueDateString);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sam-theman88"},"content":"        String expectedString \u003d \"[D] [ ] Return book (due: Sat, 2 Nov 2024, 6PM)\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sam-theman88"},"content":"        assertEquals(expectedString, deadline.toString());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sam-theman88"},"content":"    @Test","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sam-theman88"},"content":"    public void getDueDate_validInput_success() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sam-theman88"},"content":"        Deadline deadline \u003d new Deadline(taskDescription, dueDateString);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sam-theman88"},"content":"        assertEquals(LocalDate.of(2024, 11, 2), deadline.getDueDate());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sam-theman88"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"sam-theman88":41}},{"path":"src/test/java/edith/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sam-theman88"},"content":"package edith.task;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sam-theman88"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sam-theman88"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sam-theman88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sam-theman88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sam-theman88"},"content":"public class EventTest {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sam-theman88"},"content":"    private String taskDescription \u003d \"Meeting\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sam-theman88"},"content":"    private String startTimeString \u003d \"10/10/2024 1400\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sam-theman88"},"content":"    private String endTimeString \u003d \"10/10/2024 1600\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"sam-theman88"},"content":"    private String invalidStartTimeString \u003d \"10 Oct 2024 1400\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"sam-theman88"},"content":"    @Test","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"sam-theman88"},"content":"    public void constructor_validTimes_success() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"sam-theman88"},"content":"        Event event \u003d new Event(taskDescription, startTimeString, endTimeString);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"sam-theman88"},"content":"        assertEquals(\"Meeting\", event.taskString());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"sam-theman88"},"content":"        assertEquals(LocalDateTime.of(2024, 10, 10, 14, 0), event.getStartTime().atTime(14, 0));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"sam-theman88"},"content":"        assertEquals(LocalDateTime.of(2024, 10, 10, 16, 0), event.getEndTime().atTime(16, 0));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"sam-theman88"},"content":"    @Test","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"sam-theman88"},"content":"    public void savedTaskString_validInput_success() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"sam-theman88"},"content":"        Event event \u003d new Event(taskDescription, startTimeString, endTimeString);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"sam-theman88"},"content":"        assertEquals(\"Meeting /from 10/10/2024 1400 /to 10/10/2024 1600\", event.savedTaskString());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"sam-theman88"},"content":"    @Test","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"sam-theman88"},"content":"    public void toString_validInput_success() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"sam-theman88"},"content":"        Event event \u003d new Event(taskDescription, startTimeString, endTimeString);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"sam-theman88"},"content":"        String expectedString \u003d \"[E] [ ] Meeting (from: Thu, 10 Oct 2024, 2PM - to: Thu, 10 Oct 2024, 4PM)\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"sam-theman88"},"content":"        assertEquals(expectedString, event.toString());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"sam-theman88"},"content":"    @Test","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"sam-theman88"},"content":"    public void getStartTime_validInput_success() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"sam-theman88"},"content":"        Event event \u003d new Event(taskDescription, startTimeString, endTimeString);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"sam-theman88"},"content":"        assertEquals(LocalDate.of(2024, 10, 10), event.getStartTime());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"sam-theman88"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"sam-theman88"},"content":"    @Test","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"sam-theman88"},"content":"    public void getEndTime_validInput_success() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"sam-theman88"},"content":"        Event event \u003d new Event(taskDescription, startTimeString, endTimeString);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"sam-theman88"},"content":"        assertEquals(LocalDate.of(2024, 10, 10), event.getEndTime());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"sam-theman88"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"sam-theman88"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"sam-theman88":49}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sam-theman88"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"sam-theman88"},"content":"todo borrow book","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"sam-theman88"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"sam-theman88"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"sam-theman88"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"sam-theman88"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"sam-theman88"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"sam-theman88"},"content":"mark 1","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"sam-theman88"},"content":"mark 2","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"sam-theman88"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"sam-theman88"},"content":"unmark 2","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"sam-theman88"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"sam-theman88"},"content":"bye","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"sam-theman88":13}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"sam-theman88"},"content":"java -classpath ../bin Edith \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":37,"sam-theman88":1}}]
