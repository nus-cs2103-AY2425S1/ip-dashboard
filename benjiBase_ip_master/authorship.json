[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"benjiBase"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run duke.Nameless.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"benjiBase":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"benjiBase"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"benjiBase"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"benjiBase"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"benjiBase":3,"-":41}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"benjiBase"},"content":"D | 0 | readbook | Aug-27-2024 1300","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"benjiBase"},"content":"D | 0 | do ip project | Aug-30-2024 1600","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"benjiBase"},"content":"E | 0 | go to school | Aug-27-2024 1300 | Aug-27-2024 2200","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"benjiBase"},"content":"T | 1 | join sports cca","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"benjiBase"},"content":"T | 0 | sleep","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"benjiBase":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"benjiBase"},"content":"# duke.Nameless User Guide","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"benjiBase":1,"-":29}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benjiBase"},"content":"package duke;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"benjiBase"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"benjiBase"},"content":"    private final String LINE \u003d \"______________________________________________________________\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"benjiBase"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"benjiBase"},"content":"        super(message);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"benjiBase"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"benjiBase"},"content":"    public String getMessage() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"benjiBase"},"content":"        return  LINE + \"\\n\" + super.getMessage() + \"\\n\" + LINE;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"benjiBase"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"benjiBase":14}},{"path":"src/main/java/duke/Nameless.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benjiBase"},"content":"package duke;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"benjiBase"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"benjiBase"},"content":"import duke.task.Event;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"benjiBase"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"benjiBase"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"benjiBase"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"benjiBase"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"benjiBase"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"benjiBase"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"benjiBase"},"content":" * A class that run main program","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"benjiBase"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"benjiBase"},"content":"public class Nameless {","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"benjiBase"},"content":"    private final DateTimeFormatter PARSE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd hh:mm a\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"benjiBase"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"benjiBase"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"benjiBase"},"content":"    private TypeOfException exception;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"benjiBase"},"content":"    private Ui ui;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"benjiBase"},"content":"    public Nameless(String filePath) throws DukeException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"benjiBase"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"benjiBase"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"benjiBase"},"content":"        exception \u003d new TypeOfException();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"benjiBase"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"benjiBase"},"content":"            tasks \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"benjiBase"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"benjiBase"},"content":"            exception.showLoadingError();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"benjiBase"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"benjiBase"},"content":"        }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"benjiBase"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"benjiBase"},"content":"     * Run the program until user input \"bye\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"benjiBase"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"benjiBase"},"content":"    public void run() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"benjiBase"},"content":"        ui.greetings();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"benjiBase"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"benjiBase"},"content":"        while(true) {","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"benjiBase"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"benjiBase"},"content":"            try {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"benjiBase"},"content":"                if(input.equals(\"bye\")) {","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"benjiBase"},"content":"                    bye();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"benjiBase"},"content":"                    break;","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"benjiBase"},"content":"                } else if(input.equals(\"list\")) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"benjiBase"},"content":"                    ui.showList(tasks);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"benjiBase"},"content":"                } else if(input.matches(\"mark \\\\d+\")) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"benjiBase"},"content":"                    ui.showMarkTask(tasks, Parser.splitGetNum(input));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"benjiBase"},"content":"                } else if(input.matches(\"unmark \\\\d+\")) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"benjiBase"},"content":"                    ui.showUnmarkTask(tasks, Parser.splitGetNum(input));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"benjiBase"},"content":"                } else if(input.matches(\"todo(?: .+)?\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"benjiBase"},"content":"                    todo(input);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"benjiBase"},"content":"                } else if(input.matches(\"deadline(?: .+)?\")) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"benjiBase"},"content":"                    deadline(input);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"benjiBase"},"content":"                } else if(input.matches(\"event(?: .+)?\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"benjiBase"},"content":"                    event(input);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"benjiBase"},"content":"                } else if(input.matches(\"delete \\\\d+\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"benjiBase"},"content":"                    ui.showDeleteTask(tasks, Parser.splitGetNum(input));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"benjiBase"},"content":"                } else if (input.matches(\"find(?: .+)?\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"benjiBase"},"content":"                    find(input);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"benjiBase"},"content":"                } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"benjiBase"},"content":"                    exception.noIdea();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"benjiBase"},"content":"                }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"benjiBase"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"benjiBase"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"benjiBase"},"content":"            }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"benjiBase"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"benjiBase"},"content":"    private void bye() throws DukeException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"benjiBase"},"content":"        storage.writeFile(tasks.getTasks());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"benjiBase"},"content":"        ui.goodbye();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"benjiBase"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"benjiBase"},"content":"     * Adds a new todo task when input is \"todo\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"benjiBase"},"content":"     * Prints the output of the added task","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"benjiBase"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"benjiBase"},"content":"    private void todo(String input) throws DukeException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"benjiBase"},"content":"        String words \u003d Parser.splitGetWords(input);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"benjiBase"},"content":"        if (words.isEmpty()) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"benjiBase"},"content":"            exception.todoFormatError();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"benjiBase"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"benjiBase"},"content":"        tasks.addTask(new Todo(words));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"benjiBase"},"content":"        ui.showAddTask(tasks);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"benjiBase"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"benjiBase"},"content":"     * Adds a new deadline task when input is \"deadline\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"benjiBase"},"content":"     * Prints the output of the added task","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"benjiBase"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"benjiBase"},"content":"    private void deadline(String input) throws DukeException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"benjiBase"},"content":"        String[] words \u003d Parser.splitGetWords(input).split(\" /by \", 2);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"benjiBase"},"content":"        if(words.length !\u003d 2) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"benjiBase"},"content":"            exception.deadlineFormatError();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"benjiBase"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"benjiBase"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"benjiBase"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(words[1], PARSE_FORMAT);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"benjiBase"},"content":"            tasks.addTask(new Deadline(words[0], date));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"benjiBase"},"content":"            ui.showAddTask(tasks);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"benjiBase"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"benjiBase"},"content":"            exception.timeFormatError();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"benjiBase"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"benjiBase"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"benjiBase"},"content":"     * Adds a new event task when input is \"event\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"benjiBase"},"content":"     * Prints the output of the added task","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"benjiBase"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"benjiBase"},"content":"    private void event(String input) throws DukeException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"benjiBase"},"content":"        String[] words \u003d Parser.splitGetWords(input).split(\" /from | /to \", 3);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"benjiBase"},"content":"        if (words.length !\u003d 3) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"benjiBase"},"content":"            exception.eventFormatError();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"benjiBase"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"benjiBase"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"benjiBase"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(words[1], PARSE_FORMAT);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"benjiBase"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(words[2], PARSE_FORMAT);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"benjiBase"},"content":"            tasks.addTask(new Event(words[0], from, to));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"benjiBase"},"content":"            ui.showAddTask(tasks);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"benjiBase"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"benjiBase"},"content":"            exception.timeFormatError();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"benjiBase"},"content":"        }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"benjiBase"},"content":"    private void find(String input) throws DukeException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"benjiBase"},"content":"        String word \u003d Parser.splitGetWords(input);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"benjiBase"},"content":"        if (word.isEmpty()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"benjiBase"},"content":"            exception.findFormatError();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"benjiBase"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"benjiBase"},"content":"        ui.showFindTask(tasks, word);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"benjiBase"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"benjiBase"},"content":"        new Nameless(\"data/tasks.txt\").run();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"benjiBase"},"content":"}","lastModifiedDate":"2024-08-17","isFullCredit":false}],"authorContributionMap":{"benjiBase":139}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benjiBase"},"content":"package duke;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"benjiBase"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"benjiBase"},"content":" * A class that deals converting user input into different data output we want.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"benjiBase"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"benjiBase"},"content":"public class Parser {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"benjiBase"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"benjiBase"},"content":"     * Returns the number user tries to key in from scanner.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"benjiBase"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"benjiBase"},"content":"    public static int splitGetNum(String input){","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"benjiBase"},"content":"        String[] words \u003d input.split(\" \");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"benjiBase"},"content":"        return Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"benjiBase"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"benjiBase"},"content":"     * Returns the tasks user want to store after main todo, event, deadline command.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"benjiBase"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"benjiBase"},"content":"    public static String splitGetWords(String input){","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"benjiBase"},"content":"        String[] words \u003d input.split(\" \", 2);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"benjiBase"},"content":"        return words.length \u003e 1 ? words[1] : \"\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"benjiBase"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"benjiBase":22}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benjiBase"},"content":"package duke;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"benjiBase"},"content":"import duke.task.Task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"benjiBase"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"benjiBase"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"benjiBase"},"content":"import duke.task.Event;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"benjiBase"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"benjiBase"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"benjiBase"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"benjiBase"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"benjiBase"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"benjiBase"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"benjiBase"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"benjiBase"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"benjiBase"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"benjiBase"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"benjiBase"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"benjiBase"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"benjiBase"},"content":" * Storage class to handle reading and writing to file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"benjiBase"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"benjiBase"},"content":"public class Storage {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"benjiBase"},"content":"    private static Path filePath;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"benjiBase"},"content":"    private String line;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"benjiBase"},"content":"    private final DateTimeFormatter DISPLAY_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM-dd-yyyy HHmm\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"benjiBase"},"content":"    public Storage(String filePath) throws DukeException {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"benjiBase"},"content":"        Storage.filePath \u003d Paths.get(filePath);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"benjiBase"},"content":"        createFile();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"benjiBase"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"benjiBase"},"content":"     * Creates directory if it does not exist.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"benjiBase"},"content":"     * @throws DukeException if error creating directory","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"benjiBase"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"benjiBase"},"content":"    private void createDirectory() throws  DukeException {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"benjiBase"},"content":"        Path directory \u003d filePath.getParent();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"benjiBase"},"content":"        if (Files.notExists(directory)) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"benjiBase"},"content":"            try {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"benjiBase"},"content":"                Files.createDirectories(directory);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"benjiBase"},"content":"                System.out.println(\"new directory created: \" + directory);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"benjiBase"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"benjiBase"},"content":"                throw new DukeException(\"Error creating directory\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"benjiBase"},"content":"            }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"benjiBase"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"benjiBase"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"benjiBase"},"content":"     * Checks if file path have a directory.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"benjiBase"},"content":"     * If it does not exist, it creates the directory and creates file if it does not exist.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"benjiBase"},"content":"     * @throws DukeException if error creating file","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"benjiBase"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"benjiBase"},"content":"    public void createFile() throws DukeException {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"benjiBase"},"content":"        if(Files.notExists(filePath)){","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"benjiBase"},"content":"            createDirectory();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"benjiBase"},"content":"            try {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"benjiBase"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"benjiBase"},"content":"                System.out.println(\"new file created: \" + filePath);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"benjiBase"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"benjiBase"},"content":"                throw new DukeException(\"Error creating file\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"benjiBase"},"content":"            }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"benjiBase"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"benjiBase"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"benjiBase"},"content":"     * Writes tasks to file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"benjiBase"},"content":"     * @param tasks ArrayList of tasks to be written to file","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"benjiBase"},"content":"     * @throws DukeException Error writing to file","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"benjiBase"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"benjiBase"},"content":"    public void writeFile(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"benjiBase"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(filePath.toString()))) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"benjiBase"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"benjiBase"},"content":"                bw.write(task.toFileString());","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"benjiBase"},"content":"                bw.newLine();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"benjiBase"},"content":"            }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"benjiBase"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"benjiBase"},"content":"            throw new DukeException(\"Error writing to file\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"benjiBase"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"benjiBase"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"benjiBase"},"content":"     * Loads tasks from file to use in Nameless class","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"benjiBase"},"content":"     * @return ArrayList of tasks to be","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"benjiBase"},"content":"     * @throws DukeException Error reading file","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"benjiBase"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"benjiBase"},"content":"    public ArrayList\u003cTask\u003e loadFile() throws DukeException {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"benjiBase"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"benjiBase"},"content":"        boolean isDone;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"benjiBase"},"content":"        try(BufferedReader br \u003d new BufferedReader(new FileReader(filePath.toString()))) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"benjiBase"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"benjiBase"},"content":"                isDone \u003d line.charAt(4) \u003d\u003d \u00271\u0027;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"benjiBase"},"content":"                tasks.add(stringToTask(line));","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"benjiBase"},"content":"                tasks.get(tasks.size() - 1).setDone(isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"benjiBase"},"content":"            };","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"benjiBase"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"benjiBase"},"content":"            throw new DukeException(\"Error reading file\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"benjiBase"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"benjiBase"},"content":"        return tasks;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"benjiBase"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"benjiBase"},"content":"     * Converts string to Task object.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"benjiBase"},"content":"     * @param line String to be converted to Task object","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"benjiBase"},"content":"     * @return Task object","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"benjiBase"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"benjiBase"},"content":"    private Task stringToTask(String line) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"benjiBase"},"content":"        String[] words \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"benjiBase"},"content":"        if(words[0].equals(\"T\")){","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"benjiBase"},"content":"            return new Todo(words[2]);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"benjiBase"},"content":"        } else if(words[0].equals(\"D\")){","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"benjiBase"},"content":"            return new Deadline(words[2], LocalDateTime.parse(words[3], DISPLAY_FORMAT));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"benjiBase"},"content":"        } else if(words[0].equals(\"E\")){","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"benjiBase"},"content":"            return new Event(words[2], LocalDateTime.parse(words[3], DISPLAY_FORMAT),","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"benjiBase"},"content":"                    LocalDateTime.parse(words[4], DISPLAY_FORMAT));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"benjiBase"},"content":"        } else {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"benjiBase"},"content":"            return null;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"benjiBase"},"content":"        }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"benjiBase"},"content":"}","lastModifiedDate":"2024-08-26","isFullCredit":false}],"authorContributionMap":{"benjiBase":118}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benjiBase"},"content":"package duke;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"benjiBase"},"content":"import duke.task.Task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"benjiBase"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"benjiBase"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"benjiBase"},"content":" * A class that handle storing and dealing of task in ArrayList.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"benjiBase"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"benjiBase"},"content":"public class TaskList {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"benjiBase"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"benjiBase"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"benjiBase"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"benjiBase"},"content":"    public TaskList() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"benjiBase"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"benjiBase"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"benjiBase"},"content":"        tasks.add(task);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"benjiBase"},"content":"    public void deleteTask(int index) throws DukeException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"benjiBase"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"benjiBase"},"content":"            throw new DukeException(\"Invalid nameless.task number.\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"benjiBase"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"benjiBase"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"benjiBase"},"content":"    public Task get(int index) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"benjiBase"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"benjiBase"},"content":"    public int size() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"benjiBase"},"content":"        return tasks.size();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"benjiBase"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"benjiBase"},"content":"        return tasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"benjiBase"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"benjiBase":42}},{"path":"src/main/java/duke/TypeOfException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benjiBase"},"content":"package duke;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"benjiBase"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"benjiBase"},"content":" * A class that throws different type of exception expecting during runtime of program","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"benjiBase"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"benjiBase"},"content":"public class TypeOfException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"benjiBase"},"content":"    public void showLoadingError() throws DukeException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"benjiBase"},"content":"        throw new DukeException(\"Error loading file\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"benjiBase"},"content":"    public void noIdea() throws DukeException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"benjiBase"},"content":"        throw new DukeException(\"Sorry! I don\u0027t understand what you are saying.\" +","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"benjiBase"},"content":"                \" Please enter a valid command. todo, deadline, event, list, done, delete, bye\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"benjiBase"},"content":"    public void todoFormatError() throws DukeException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"benjiBase"},"content":"        throw new DukeException(\"incorrect format use \u0027todo \u003cnameless.task\u003e\u0027\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"benjiBase"},"content":"    public void deadlineFormatError() throws DukeException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"benjiBase"},"content":"        throw new DukeException(\"incorrect format use \u0027deadline \u003cnameless.task\u003e /by \u003cdate time\u003e\u0027\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"benjiBase"},"content":"    public void eventFormatError() throws DukeException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"benjiBase"},"content":"        throw new DukeException(\"incorrect format use \u0027event \u003cnameless.task\u003e /from \u003cdate time\u003e /to \u003cdate time\u003e\u0027\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"benjiBase"},"content":"    public void timeFormatError() throws DukeException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"benjiBase"},"content":"        throw new DukeException(\"incorrect format must be in yyyy-mm-dd hh:mm am/pm\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"benjiBase"},"content":"    public void findFormatError() throws DukeException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"benjiBase"},"content":"        throw new DukeException(\"incorrect format use \u0027find \u003ckeyword\u003e\u0027\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"benjiBase"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"benjiBase":36}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benjiBase"},"content":"package duke;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"benjiBase"},"content":"import duke.task.Task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"benjiBase"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"benjiBase"},"content":" * A class that deals with interactions in terminal.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"benjiBase"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"benjiBase"},"content":"public class Ui {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"benjiBase"},"content":"    private final String LINE \u003d \"______________________________________________________________\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"benjiBase"},"content":"    private final String NAME \u003d \"duke\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"benjiBase"},"content":"    private final String GREETINGS \u003d \"Hello, I\u0027m \" + NAME + \"\\n\" + \"What can I do for you?\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"benjiBase"},"content":"    private final String GOODBYE \u003d \"Bye. Hope to see you again!\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"benjiBase"},"content":"    public void greetings () {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"benjiBase"},"content":"        System.out.println(LINE + \"\\n\" + GREETINGS + \"\\n\" + LINE);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"benjiBase"},"content":"    public void goodbye () {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"benjiBase"},"content":"        System.out.println(LINE + \"\\n\" + GOODBYE + \"\\n\" + LINE);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"benjiBase"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"benjiBase"},"content":"     * Show the message printed when a task is added.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"benjiBase"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"benjiBase"},"content":"    public void showAddTask (TaskList tasks) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"benjiBase"},"content":"        System.out.println(LINE + \"\\n\" + \"Got it. I\u0027ve added this task:\" +","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"benjiBase"},"content":"                \"\\n     \" + tasks.get(tasks.size() - 1).toString() + \"\\n\" +","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"benjiBase"},"content":"                \"Now you have \" + tasks.size() + \" task left \\n\" + LINE);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"benjiBase"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"benjiBase"},"content":"     * Show the message printed when a task is deleted.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"benjiBase"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"benjiBase"},"content":"    public void showDeleteTask (TaskList tasks, int index) throws DukeException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"benjiBase"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"benjiBase"},"content":"        tasks.deleteTask(index);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"benjiBase"},"content":"        System.out.println(LINE + \"\\n\" + \"Noted. I\u0027ve removed this task:\" +","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"benjiBase"},"content":"                \"\\n     \" + task.toString() + \"\\n\" +","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"benjiBase"},"content":"                \"Now you have \" + tasks.size() + \" task left \\n\" + LINE);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"benjiBase"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"benjiBase"},"content":"     * Show the entire list when user input \"list\".","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"benjiBase"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"benjiBase"},"content":"    public void showList(TaskList tasks) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"benjiBase"},"content":"        System.out.println(LINE + \"\\n Here are the tasks in your list:\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"benjiBase"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"benjiBase"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i).toString());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"benjiBase"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"benjiBase"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"benjiBase"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"benjiBase"},"content":"     * Show the message printed when a task is marked.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"benjiBase"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"benjiBase"},"content":"    public void showMarkTask (TaskList tasks, int index) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"benjiBase"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"benjiBase"},"content":"        tasks.get(index).markTask();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"benjiBase"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"benjiBase"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"benjiBase"},"content":"     * Show the message printed when a task is unmarked.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"benjiBase"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"benjiBase"},"content":"    public void showUnmarkTask (TaskList tasks, int index) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"benjiBase"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"benjiBase"},"content":"        tasks.get(index).unMarkTask();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"benjiBase"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"benjiBase"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"benjiBase"},"content":"     * Returns the task that matches the keyword","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"benjiBase"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"benjiBase"},"content":"    public void showFindTask (TaskList tasks, String keyword) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"benjiBase"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"benjiBase"},"content":"        System.out.println(LINE + \"\\n Here are the matching tasks in your list:\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"benjiBase"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"benjiBase"},"content":"            if (tasks.get(i).toString().contains(keyword)) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"benjiBase"},"content":"                count++;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"benjiBase"},"content":"                System.out.println(count + \". \" + tasks.get(i).toString());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"benjiBase"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"benjiBase"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"benjiBase"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"benjiBase"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"benjiBase":87}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benjiBase"},"content":"package duke.task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"benjiBase"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"benjiBase"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"benjiBase"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"benjiBase"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"benjiBase"},"content":"    protected final DateTimeFormatter display_format \u003d DateTimeFormatter.ofPattern(\"MMM-dd-yyyy HHmm\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"benjiBase"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"benjiBase"},"content":"        super(description);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"benjiBase"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"benjiBase"},"content":"    @Override","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"benjiBase"},"content":"    public String toString() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"benjiBase"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(display_format) + \")\";","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"benjiBase"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"benjiBase"},"content":"     * Returns string representation of the task to be saved in the text file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"benjiBase"},"content":"     * @return String of Deadline","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"benjiBase"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"benjiBase"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"benjiBase"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"benjiBase"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by.format(display_format);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"benjiBase"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"benjiBase":28}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benjiBase"},"content":"package duke.task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"benjiBase"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"benjiBase"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"benjiBase"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"benjiBase"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"benjiBase"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"benjiBase"},"content":"    private final DateTimeFormatter display_format \u003d DateTimeFormatter.ofPattern(\"MMM-dd-yyyy HHmm\");","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"benjiBase"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"benjiBase"},"content":"        super(description);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"benjiBase"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"benjiBase"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"benjiBase"},"content":"    @Override","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"benjiBase"},"content":"    public String toString() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"benjiBase"},"content":"        return \"[E]\" + super.toString() + \" \" +","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"benjiBase"},"content":"                \"(from: \" + from.format(display_format) + \" to: \" + to.format(display_format) + \")\";","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"benjiBase"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"benjiBase"},"content":"     * Returns string representation of the task to be saved in the text file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"benjiBase"},"content":"     * @return String of Event","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"benjiBase"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"benjiBase"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"benjiBase"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"benjiBase"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" +","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"benjiBase"},"content":"                from.format(display_format) + \" | \" + to.format(display_format);","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"benjiBase"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"benjiBase":31}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benjiBase"},"content":"package duke.task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"benjiBase"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"benjiBase"},"content":"    protected String description;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"benjiBase"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"benjiBase"},"content":"    public abstract String toFileString();","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"benjiBase"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"benjiBase"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"benjiBase"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"benjiBase"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"benjiBase"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"benjiBase"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"benjiBase"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"benjiBase"},"content":"    public void unMarkTask() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"benjiBase"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"benjiBase"},"content":"        System.out.println(\"OK, I\u0027ve unmarked this task as not done yet: \\n\" +","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"benjiBase"},"content":"                \"   [\" + this.getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"benjiBase"},"content":"    public void markTask() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"benjiBase"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"benjiBase"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" +","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"benjiBase"},"content":"                \"   [\" + this.getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"benjiBase"},"content":"    @Override","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"benjiBase"},"content":"    public String toString() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"benjiBase"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"benjiBase"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"benjiBase":36}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benjiBase"},"content":"package duke.task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"benjiBase"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"benjiBase"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"benjiBase"},"content":"        super(description);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"benjiBase"},"content":"    @Override","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"benjiBase"},"content":"    public String toString() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"benjiBase"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"benjiBase"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"benjiBase"},"content":"     * Returns string representation of the task to be saved in the text file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"benjiBase"},"content":"     * @return String of Todo","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"benjiBase"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"benjiBase"},"content":"    @Override","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"benjiBase"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"benjiBase"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"benjiBase"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"benjiBase":21}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benjiBase"},"content":"package duke;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"benjiBase"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"benjiBase"},"content":"import duke.task.Event;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"benjiBase"},"content":"import duke.task.Task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"benjiBase"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"benjiBase"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"benjiBase"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"benjiBase"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"benjiBase"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"benjiBase"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"benjiBase"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"benjiBase"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"benjiBase"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"benjiBase"},"content":"public class StorageTest {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"benjiBase"},"content":"    private final DateTimeFormatter parse_format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd hh:mm a\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"benjiBase"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"benjiBase"},"content":"    public void testCreateFile() throws DukeException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"benjiBase"},"content":"        new Storage(\"testing/test.txt\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"benjiBase"},"content":"        assertTrue(Files.exists(Paths.get(\"testing/test.txt\")), \"File should be created\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"benjiBase"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"benjiBase"},"content":"    public void testWriteFile() throws DukeException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"benjiBase"},"content":"        Storage storage \u003d new Storage(\"testing/test.txt\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"benjiBase"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"benjiBase"},"content":"        ArrayList\u003cTask\u003e tasksFromFile \u003d storage.loadFile();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"benjiBase"},"content":"        StringBuilder results \u003d new StringBuilder();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"benjiBase"},"content":"        tasks.addTask(new Todo(\"read book\"));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"benjiBase"},"content":"        tasks.addTask(new Deadline(\"finish assignment\",","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"benjiBase"},"content":"                LocalDateTime.parse(\"2024-08-24 04:00 pm\", parse_format)));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"benjiBase"},"content":"        tasks.addTask(new Event(\"go sleep\",","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"benjiBase"},"content":"                LocalDateTime.parse(\"2024-08-24 10:00 pm\", parse_format),","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"benjiBase"},"content":"                LocalDateTime.parse(\"2024-08-24 07:00 am\", parse_format)));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"benjiBase"},"content":"        storage.writeFile(tasks.getTasks());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"benjiBase"},"content":"        for(Task task : tasksFromFile) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"benjiBase"},"content":"            results.append(task.toFileString()).append(\"\\n\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"benjiBase"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"benjiBase"},"content":"        String expect \u003d \"T | 0 | read book\\n\"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"benjiBase"},"content":"                + \"D | 0 | finish assignment | Aug-24-2024 1600\\n\"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"benjiBase"},"content":"                + \"E | 0 | go sleep | Aug-24-2024 2200 | Aug-24-2024 0700\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"benjiBase"},"content":"        assertEquals(expect, results.toString().trim(), \"File should have such content\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"benjiBase"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"benjiBase":57}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benjiBase"},"content":"package duke.task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"benjiBase"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"benjiBase"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"benjiBase"},"content":"public class TodoTest {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"benjiBase"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"benjiBase"},"content":"    public void testToString() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"benjiBase"},"content":"        Todo test1 \u003d new Todo(\"read book\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"benjiBase"},"content":"        Todo test2 \u003d new Todo(\"finish assignment\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"benjiBase"},"content":"        test2.markTask();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"benjiBase"},"content":"        assertEquals(\"[T][ ] read book\", test1.toString(), \"Task without marking\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"benjiBase"},"content":"        assertEquals(\"[T][X] finish assignment\", test2.toString(),\"Task should be marked as done\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"benjiBase"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"benjiBase"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"benjiBase"},"content":"        Todo test \u003d new Todo(\"read book\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"benjiBase"},"content":"        test.markTask();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"benjiBase"},"content":"        assertEquals(\"[T][X] read book\", test.toString(), \"Task should be marked as done\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"benjiBase"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"benjiBase"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"benjiBase"},"content":"    public void testToFileString() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"benjiBase"},"content":"        Todo test1 \u003d new Todo(\"read book\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"benjiBase"},"content":"        test1.isDone \u003d true;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"benjiBase"},"content":"        Todo test2 \u003d new Todo(\"go sleep\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"benjiBase"},"content":"        assertEquals(\"T | 1 | read book\", test1.toFileString(), \"Task complete in text file\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"benjiBase"},"content":"        assertEquals(\"T | 0 | go sleep\", test2.toFileString(), \"Task incomplete in text file\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"benjiBase"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"benjiBase"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"benjiBase":33}},{"path":"testing/test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"benjiBase"},"content":"T | 0 | read book","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"benjiBase"},"content":"D | 0 | finish assignment | Aug-24-2024 1600","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"benjiBase"},"content":"E | 0 | go sleep | Aug-24-2024 2200 | Aug-24-2024 0700","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"benjiBase":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"benjiBase"},"content":"todo borrow book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"benjiBase"},"content":"deadline return book /by 6th June","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"benjiBase"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"benjiBase"},"content":"todo join sports club","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"benjiBase"},"content":"todo borrow book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"benjiBase"},"content":"mark 1","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"benjiBase"},"content":"mark 4","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"benjiBase"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"benjiBase"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"benjiBase"},"content":"event","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"benjiBase"},"content":"deadline","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"benjiBase"},"content":"todo","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"benjiBase"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"benjiBase"},"content":"delete 5","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"benjiBase"},"content":"delete 4","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"benjiBase"},"content":"list","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"benjiBase"},"content":"bye","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"benjiBase":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"benjiBase"},"content":"java -classpath ..\\bin Nameless \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"benjiBase":1,"-":20}}]
