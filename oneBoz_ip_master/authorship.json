[{"path":"Friday.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"oneBoz"},"content":"[E][X] Natlan exploration (from: 2024-08-30 to: 2024-09-30)","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oneBoz"},"content":"[D][ ] CS2103T iP (by: 2024-08-30)","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oneBoz"},"content":"[T][ ] read","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"oneBoz":3}},{"path":"FridayTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"oneBoz"},"content":"[E][ ] Natlan exploration (from: 2024-08-30 to: 2024-09-30)","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oneBoz"},"content":"[D][ ] CS2103T iP (by: 2024-08-30)","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oneBoz"},"content":"[T][ ] read","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"oneBoz":3}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oneBoz"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oneBoz"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oneBoz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oneBoz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oneBoz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oneBoz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oneBoz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oneBoz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oneBoz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oneBoz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"oneBoz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"oneBoz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"oneBoz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"oneBoz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"oneBoz"},"content":"    mainClass.set(\"gui.Launcher\")","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"oneBoz"},"content":"    archiveBaseName \u003d \"Friday\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"oneBoz"},"content":"checkstyle {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"oneBoz"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"oneBoz"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"oneBoz":21,"-":39}},{"path":"gui.Friday.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"oneBoz"},"content":"[T][X] hi","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oneBoz"},"content":"[T][X] read","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oneBoz"},"content":"[E][ ] yap (from: tues to: fri)","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"oneBoz":3}},{"path":"src/main/java/enumeration/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oneBoz"},"content":"package enumeration;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oneBoz"},"content":"public enum CommandType {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oneBoz"},"content":"    LIST(\"list\"),","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oneBoz"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oneBoz"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oneBoz"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oneBoz"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oneBoz"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oneBoz"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oneBoz"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oneBoz"},"content":"    FIND(\"find\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oneBoz"},"content":"    private final String type;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oneBoz"},"content":"     * @param type","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oneBoz"},"content":"    CommandType(String type) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oneBoz"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oneBoz"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"oneBoz"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"oneBoz"},"content":"        return type;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"oneBoz"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"oneBoz":28}},{"path":"src/main/java/exception/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oneBoz"},"content":"package exception;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oneBoz"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oneBoz"},"content":" * Exception thrown to indicate that an invalid index has been accessed in an array or collection.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oneBoz"},"content":" * This exception can be used to signal errors such as accessing an index that is out of bounds.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oneBoz"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oneBoz"},"content":"public class InvalidIndexException extends Exception {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oneBoz"},"content":"     * Constructs a new InvalidIndexException with {@code null} as its detail message.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oneBoz"},"content":"     * The cause is not initialized and may subsequently be initialized by a call to {@link Throwable#initCause}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oneBoz"},"content":"    public InvalidIndexException() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oneBoz"},"content":"        super();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oneBoz"},"content":"     * Constructs a new InvalidIndexException with the specified detail message.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oneBoz"},"content":"     * The cause is not initialized and may subsequently be initialized by a call to {@link Throwable#initCause}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oneBoz"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oneBoz"},"content":"     * @param msg the detail message, saved for later retrieval by the {@link Throwable#getMessage()} method.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"oneBoz"},"content":"    public InvalidIndexException(String msg) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"oneBoz"},"content":"        super(msg);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"oneBoz"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"oneBoz":28}},{"path":"src/main/java/exception/InvalidInputFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oneBoz"},"content":"package exception;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oneBoz"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oneBoz"},"content":" * Exception thrown to indicate that an input has an invalid format.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oneBoz"},"content":" * This exception is typically used to signal errors when parsing or processing input that doesn\u0027t conform","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oneBoz"},"content":" * to the expected format.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oneBoz"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oneBoz"},"content":"public class InvalidInputFormatException extends Exception {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oneBoz"},"content":"     * Constructs a new InvalidInputFormatException with {@code null} as its detail message.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oneBoz"},"content":"     * The cause is not initialized and may subsequently be initialized by a call to {@link Throwable#initCause}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oneBoz"},"content":"    public InvalidInputFormatException() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oneBoz"},"content":"        super();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oneBoz"},"content":"     * Constructs a new InvalidInputFormatException with the specified detail message.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oneBoz"},"content":"     * The cause is not initialized and may subsequently be initialized by a call to {@link Throwable#initCause}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oneBoz"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oneBoz"},"content":"     * @param msg the detail message, saved for later retrieval by the {@link Throwable#getMessage()} method.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"oneBoz"},"content":"    public InvalidInputFormatException(String msg) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"oneBoz"},"content":"        super(msg);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"oneBoz"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"oneBoz":27}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oneBoz"},"content":"package gui;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oneBoz"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oneBoz"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oneBoz"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oneBoz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oneBoz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oneBoz"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oneBoz"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oneBoz"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oneBoz"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oneBoz"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oneBoz"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oneBoz"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oneBoz"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oneBoz"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oneBoz"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oneBoz"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oneBoz"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oneBoz"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oneBoz"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"oneBoz"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"oneBoz"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"oneBoz"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"oneBoz"},"content":"        try {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"oneBoz"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"oneBoz"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"oneBoz"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"oneBoz"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"oneBoz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"oneBoz"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"oneBoz"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"oneBoz"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"oneBoz"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"oneBoz"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"oneBoz"},"content":"    private void flip() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"oneBoz"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"oneBoz"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"oneBoz"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"oneBoz"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"oneBoz"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"oneBoz"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"oneBoz"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"oneBoz"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"oneBoz"},"content":"        db.flip();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"oneBoz"},"content":"        return db;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"oneBoz"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"oneBoz":61}},{"path":"src/main/java/gui/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oneBoz"},"content":"package gui;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oneBoz"},"content":"public class Duke {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oneBoz"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oneBoz"},"content":"        System.out.println(\"Hello!\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oneBoz"},"content":"     * Generates a response for the user\u0027s chat message.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oneBoz"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oneBoz"},"content":"        return \"Duke heard: \" + input;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oneBoz"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"oneBoz":15}},{"path":"src/main/java/gui/Friday.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oneBoz"},"content":"package gui;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oneBoz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oneBoz"},"content":"import enumeration.CommandType;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oneBoz"},"content":"import exception.InvalidIndexException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oneBoz"},"content":"import exception.InvalidInputFormatException;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oneBoz"},"content":"import parser.Parser;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oneBoz"},"content":"import storage.Storage;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oneBoz"},"content":"import task.Task;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oneBoz"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oneBoz"},"content":" * @author A0272287W","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oneBoz"},"content":" * Chatbot","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oneBoz"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oneBoz"},"content":"public class Friday {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oneBoz"},"content":"    private static void addTask(Task t, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oneBoz"},"content":"        tasks.add(t);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oneBoz"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oneBoz"},"content":"        System.out.println(\" Got it. I\u0027ve added this task: \");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oneBoz"},"content":"        System.out.println(String.format(\"  %s\", t));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"oneBoz"},"content":"        System.out.println(String.format(\" Now you have %d tasks in the list.\", tasks.size()));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"oneBoz"},"content":"    private static void listTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"oneBoz"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"oneBoz"},"content":"        System.out.println(\"Here are the tasks in your list: \");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"oneBoz"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"oneBoz"},"content":"            System.out.println(String.format(\" %d. %s\", i + 1, tasks.get(i)));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"oneBoz"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"oneBoz"},"content":"    private static void findTasks(ArrayList\u003cTask\u003e tasks, String text) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"oneBoz"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"oneBoz"},"content":"        System.out.println(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"oneBoz"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"oneBoz"},"content":"            if (tasks.get(i).contains(text)) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"oneBoz"},"content":"                System.out.println(String.format(\" %d. %s\", i + 1, tasks.get(i)));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"oneBoz"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"oneBoz"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"oneBoz"},"content":"    private static void markTask(ArrayList\u003cTask\u003e tasks, int loc) throws InvalidIndexException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"oneBoz"},"content":"        if (loc \u003c 0 || loc \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"oneBoz"},"content":"            throw new InvalidIndexException(\"Please enter a valid index!\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"oneBoz"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"oneBoz"},"content":"        tasks.get(loc).markAsDone();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"oneBoz"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"oneBoz"},"content":"        System.out.println(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"oneBoz"},"content":"        System.out.println(String.format(\"    %s\", tasks.get(loc)));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"oneBoz"},"content":"    private static void unMarkTask(ArrayList\u003cTask\u003e tasks, int loc) throws InvalidIndexException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"oneBoz"},"content":"        if (loc \u003c 0 || loc \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"oneBoz"},"content":"            throw new InvalidIndexException(\"Please enter a valid index!\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"oneBoz"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"oneBoz"},"content":"        tasks.get(loc).unmark();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"oneBoz"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"oneBoz"},"content":"        System.out.println(\" OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"oneBoz"},"content":"        System.out.println(String.format(\"   %s\", tasks.get(loc)));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"oneBoz"},"content":"    private static void deleteTask(ArrayList\u003cTask\u003e tasks, int loc) throws InvalidIndexException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"oneBoz"},"content":"        if (loc \u003c 0 || loc \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"oneBoz"},"content":"            throw new InvalidIndexException(\"Please enter a valid index!\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"oneBoz"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"oneBoz"},"content":"        Task tmp \u003d tasks.get(loc);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"oneBoz"},"content":"        tasks.remove(loc);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"oneBoz"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"oneBoz"},"content":"        System.out.println(\" Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"oneBoz"},"content":"        System.out.println(String.format(\"   %s\", tmp));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"oneBoz"},"content":"        System.out.println(String.format(\" Now you have %d tasks in the list.\", tasks.size()));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"oneBoz"},"content":"    private static void save(String filepath, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"oneBoz"},"content":"        Storage storage \u003d new Storage(filepath);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"oneBoz"},"content":"        storage.write(tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"oneBoz"},"content":"    private static ArrayList\u003cTask\u003e read(String filepath) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"oneBoz"},"content":"        Storage storage \u003d new Storage(filepath);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"oneBoz"},"content":"        ArrayList\u003cTask\u003e data \u003d storage.read();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"oneBoz"},"content":"        return data;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"oneBoz"},"content":"     * The main method serves as the entry point for the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"oneBoz"},"content":"     * It initiates the program by calling the {@code start} method.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"oneBoz"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"oneBoz"},"content":"     * @param args command-line arguments passed to the program (not used in this implementation).","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"oneBoz"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"oneBoz"},"content":"        start();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"oneBoz"},"content":"    private static void start() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"oneBoz"},"content":"        String intro \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"oneBoz"},"content":"                + \"Hello! I\u0027m gui.Friday\\n\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"oneBoz"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"oneBoz"},"content":"                + \"____________________________________________________________\\n\\n\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"oneBoz"},"content":"                + \"Commands:\\n\" + \"list\\n\" + \"bye\\n\" + \"todo\\n\" + \"deadline\\n\" + \"event\\n\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"oneBoz"},"content":"                + \"____________________________________________________________\\n\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"oneBoz"},"content":"        String byeMsg \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"oneBoz"},"content":"                + \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"oneBoz"},"content":"        boolean exited \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"oneBoz"},"content":"        ArrayList\u003cTask\u003e tasks \u003d read(\"gui.Friday.txt\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"oneBoz"},"content":"        System.out.println(intro);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"oneBoz"},"content":"        while (!exited) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"oneBoz"},"content":"            String input \u003d Parser.scan();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"oneBoz"},"content":"            CommandType command;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"oneBoz"},"content":"            try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"oneBoz"},"content":"                command \u003d Parser.createCommandFromInput(input);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"oneBoz"},"content":"            } catch (InvalidInputFormatException iife) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"oneBoz"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"oneBoz"},"content":"                System.out.println(String.format(\"  %s\", iife.getMessage()));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"oneBoz"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"oneBoz"},"content":"                continue;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"oneBoz"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"oneBoz"},"content":"            System.out.println(command);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"oneBoz"},"content":"            String desc \u003d Parser.getDesc(input);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"oneBoz"},"content":"            if (command \u003d\u003d CommandType.BYE) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"oneBoz"},"content":"                System.out.println(byeMsg);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"oneBoz"},"content":"                save(\"gui.Friday.txt\", tasks);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"oneBoz"},"content":"                exited \u003d true;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"oneBoz"},"content":"            } else if (command \u003d\u003d CommandType.LIST) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"oneBoz"},"content":"                listTasks(tasks);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"oneBoz"},"content":"            } else if (command \u003d\u003d CommandType.MARK) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"oneBoz"},"content":"                try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"oneBoz"},"content":"                    markTask(tasks, Integer.valueOf(desc) - 1);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"oneBoz"},"content":"                } catch (InvalidIndexException iie) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"oneBoz"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"oneBoz"},"content":"                    System.out.println(String.format(\"  %s\", iie.getMessage()));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"oneBoz"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"oneBoz"},"content":"            } else if (command \u003d\u003d CommandType.UNMARK) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"oneBoz"},"content":"                try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"oneBoz"},"content":"                    unMarkTask(tasks, Integer.valueOf(desc) - 1);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"oneBoz"},"content":"                } catch (InvalidIndexException iie) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"oneBoz"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"oneBoz"},"content":"                    System.out.println(String.format(\"  %s\", iie.getMessage()));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"oneBoz"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"oneBoz"},"content":"            } else if (command \u003d\u003d CommandType.DEADLINE","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"oneBoz"},"content":"                    || command \u003d\u003d CommandType.TODO","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"oneBoz"},"content":"                    || command \u003d\u003d CommandType.EVENT) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"oneBoz"},"content":"                try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"oneBoz"},"content":"                    addTask(Parser.createTaskFromInput(input), tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"oneBoz"},"content":"                } catch (InvalidInputFormatException iife) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"oneBoz"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"oneBoz"},"content":"                    System.out.println(String.format(\"  %s\", iife.getMessage()));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"oneBoz"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"oneBoz"},"content":"            } else if (command \u003d\u003d CommandType.DELETE) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"oneBoz"},"content":"                try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"oneBoz"},"content":"                    deleteTask(tasks, Integer.valueOf(desc) - 1);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"oneBoz"},"content":"                } catch (InvalidIndexException iie) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"oneBoz"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"oneBoz"},"content":"                    System.out.println(String.format(\"  %s\", iie.getMessage()));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"oneBoz"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"oneBoz"},"content":"            } else if (command \u003d\u003d CommandType.FIND) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"oneBoz"},"content":"                findTasks(tasks, desc);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"oneBoz"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"oneBoz"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"oneBoz"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"oneBoz"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"oneBoz"},"content":"        String response \u003d \"\";","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"oneBoz"},"content":"        String byeMsg \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"oneBoz"},"content":"        ArrayList\u003cTask\u003e tasks \u003d read(\"gui.Friday.txt\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"oneBoz"},"content":"        CommandType command;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"oneBoz"},"content":"        try {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"oneBoz"},"content":"            command \u003d Parser.createCommandFromInput(input);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"oneBoz"},"content":"        } catch (InvalidInputFormatException iife) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"oneBoz"},"content":"            return iife.getMessage();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"oneBoz"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"oneBoz"},"content":"        String desc \u003d Parser.getDesc(input);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"oneBoz"},"content":"        if (command \u003d\u003d CommandType.BYE) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"oneBoz"},"content":"            response \u003d byeMsg;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"oneBoz"},"content":"        } else if (command \u003d\u003d CommandType.LIST) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"oneBoz"},"content":"            response \u003d \"Here are the tasks in your list: \\n\";","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"oneBoz"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"oneBoz"},"content":"                response +\u003d String.format(\" %d. %s\\n\", i + 1, tasks.get(i));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"oneBoz"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"oneBoz"},"content":"        } else if (command \u003d\u003d CommandType.MARK) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"oneBoz"},"content":"            try {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"oneBoz"},"content":"                int loc \u003d Integer.valueOf(desc) - 1;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"oneBoz"},"content":"                if (loc \u003c 0 || loc \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"oneBoz"},"content":"                    throw new InvalidIndexException(\"Please enter a valid index!\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"oneBoz"},"content":"                }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"oneBoz"},"content":"                tasks.get(loc).markAsDone();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"oneBoz"},"content":"                response \u003d \" Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"oneBoz"},"content":"                response +\u003d String.format(\"    %s\\n\", tasks.get(loc));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"oneBoz"},"content":"            } catch (InvalidIndexException iie) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"oneBoz"},"content":"                return iie.getMessage();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"oneBoz"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"oneBoz"},"content":"        } else if (command \u003d\u003d CommandType.UNMARK) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"oneBoz"},"content":"            try {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"oneBoz"},"content":"                int loc \u003d Integer.valueOf(desc) - 1;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"oneBoz"},"content":"                if (loc \u003c 0 || loc \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"oneBoz"},"content":"                    throw new InvalidIndexException(\"Please enter a valid index!\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"oneBoz"},"content":"                }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"oneBoz"},"content":"                tasks.get(loc).unmark();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"oneBoz"},"content":"                response \u003d \" OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"oneBoz"},"content":"                response +\u003d String.format(\"   %s\", tasks.get(loc));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"oneBoz"},"content":"            } catch (InvalidIndexException iie) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"oneBoz"},"content":"                return iie.getMessage();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"oneBoz"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"oneBoz"},"content":"        } else if (command \u003d\u003d CommandType.DEADLINE","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"oneBoz"},"content":"                || command \u003d\u003d CommandType.TODO","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"oneBoz"},"content":"                || command \u003d\u003d CommandType.EVENT) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"oneBoz"},"content":"            try {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"oneBoz"},"content":"                Task t \u003d Parser.createTaskFromInput(input);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"oneBoz"},"content":"                tasks.add(t);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"oneBoz"},"content":"                response \u003d \" Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"oneBoz"},"content":"                        + String.format(\"  %s\\n\", t)","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"oneBoz"},"content":"                        + String.format(\" Now you have %d tasks in the list.\", tasks.size());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"oneBoz"},"content":"            } catch (InvalidInputFormatException iife) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"oneBoz"},"content":"                return iife.getMessage();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"oneBoz"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"oneBoz"},"content":"        } else if (command \u003d\u003d CommandType.DELETE) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"oneBoz"},"content":"            try {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"oneBoz"},"content":"                int loc \u003d Integer.valueOf(desc) - 1;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"oneBoz"},"content":"                if (loc \u003c 0 || loc \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"oneBoz"},"content":"                    throw new InvalidIndexException(\"Please enter a valid index!\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"oneBoz"},"content":"                }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"oneBoz"},"content":"                Task tmp \u003d tasks.get(loc);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"oneBoz"},"content":"                tasks.remove(loc);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"oneBoz"},"content":"                response \u003d \" Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"oneBoz"},"content":"                        + String.format(\"   %s\\n\", tmp)","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"oneBoz"},"content":"                        + String.format(\" Now you have %d tasks in the list.\", tasks.size());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"oneBoz"},"content":"            } catch (InvalidIndexException iie) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"oneBoz"},"content":"                return iie.getMessage();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"oneBoz"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"oneBoz"},"content":"        } else if (command \u003d\u003d CommandType.FIND) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"oneBoz"},"content":"            String text \u003d desc;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"oneBoz"},"content":"            response \u003d \"Here are the matching tasks in your list: \\n\";","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"oneBoz"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"oneBoz"},"content":"                if (tasks.get(i).contains(text)) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"oneBoz"},"content":"                    response +\u003d String.format(\" %d. %s\\n\", i + 1, tasks.get(i));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"oneBoz"},"content":"                }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"oneBoz"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"oneBoz"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"oneBoz"},"content":"        save(\"gui.Friday.txt\", tasks);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"oneBoz"},"content":"        return response;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"oneBoz"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"oneBoz":306}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oneBoz"},"content":"package gui;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oneBoz"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oneBoz"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oneBoz"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oneBoz"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oneBoz"},"content":"public class Launcher {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oneBoz"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oneBoz"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oneBoz"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"oneBoz":12}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oneBoz"},"content":"package gui;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oneBoz"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oneBoz"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oneBoz"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oneBoz"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oneBoz"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oneBoz"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oneBoz"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oneBoz"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oneBoz"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oneBoz"},"content":"public class Main extends Application {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oneBoz"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oneBoz"},"content":"    private Friday friday \u003d new Friday();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oneBoz"},"content":"    @Override","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oneBoz"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oneBoz"},"content":"        try {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oneBoz"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oneBoz"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"oneBoz"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"oneBoz"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"oneBoz"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setFriday(friday);  // inject the Duke instance","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"oneBoz"},"content":"            stage.show();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"oneBoz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"oneBoz"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"oneBoz"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"oneBoz"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"oneBoz":32}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oneBoz"},"content":"package gui;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oneBoz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oneBoz"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oneBoz"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oneBoz"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oneBoz"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oneBoz"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oneBoz"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oneBoz"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oneBoz"},"content":" * Controller for the main GUI.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oneBoz"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oneBoz"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oneBoz"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oneBoz"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oneBoz"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oneBoz"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oneBoz"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oneBoz"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oneBoz"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oneBoz"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oneBoz"},"content":"    private Duke duke;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"oneBoz"},"content":"    private Friday friday;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"oneBoz"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Monkey.png\"));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"oneBoz"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Friday.png\"));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"oneBoz"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"oneBoz"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"oneBoz"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"oneBoz"},"content":"    /** Injects the Duke instance */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"oneBoz"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"oneBoz"},"content":"        duke \u003d d;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"oneBoz"},"content":"    /** Injects the gui.Friday instance */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"oneBoz"},"content":"    public void setFriday(Friday f) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"oneBoz"},"content":"        friday \u003d f;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"oneBoz"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"oneBoz"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"oneBoz"},"content":"    @FXML","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"oneBoz"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"oneBoz"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"oneBoz"},"content":"        String response \u003d friday.getResponse(input);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"oneBoz"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"oneBoz"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"oneBoz"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"oneBoz"},"content":"        );","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"oneBoz"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"oneBoz"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"oneBoz":58}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oneBoz"},"content":"package parser;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oneBoz"},"content":"import java.io.File;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oneBoz"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oneBoz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oneBoz"},"content":"import java.util.Objects;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oneBoz"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oneBoz"},"content":"import enumeration.CommandType;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oneBoz"},"content":"import exception.InvalidInputFormatException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oneBoz"},"content":"import task.Deadline;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oneBoz"},"content":"import task.Event;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oneBoz"},"content":"import task.Task;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oneBoz"},"content":"import task.Todo;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oneBoz"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oneBoz"},"content":" * Parser class that handles user inputs","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oneBoz"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oneBoz"},"content":"public class Parser {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oneBoz"},"content":"    public Parser() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"oneBoz"},"content":"     * Reads lines of text from a file and returns them as an {@code ArrayList} of strings.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"oneBoz"},"content":"     * Each line from the file is added to the list. If the file cannot be found, an error message","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"oneBoz"},"content":"     * is printed, and an empty {@code ArrayList} is returned.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"oneBoz"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"oneBoz"},"content":"     * @param filepath the path to the file to be read","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"oneBoz"},"content":"     * @return an {@code ArrayList} containing the lines of text from the file","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"oneBoz"},"content":"    public static ArrayList\u003cString\u003e scan(String filepath) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"oneBoz"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"oneBoz"},"content":"            Scanner sc \u003d new Scanner(new File(filepath));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"oneBoz"},"content":"            ArrayList\u003cString\u003e out \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"oneBoz"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"oneBoz"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"oneBoz"},"content":"                out.add(line);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"oneBoz"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"oneBoz"},"content":"            return out;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"oneBoz"},"content":"        } catch (FileNotFoundException fnfe) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"oneBoz"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"oneBoz"},"content":"            System.out.println(\"  Error reading from input file!\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"oneBoz"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"oneBoz"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"oneBoz"},"content":"     * Reads a line of input from the standard input (keyboard) and returns it as a string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"oneBoz"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"oneBoz"},"content":"     * @return the input string entered by the user","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"oneBoz"},"content":"    public static String scan() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"oneBoz"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"oneBoz"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"oneBoz"},"content":"        return input;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"oneBoz"},"content":"    private static String getCommand(String input) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"oneBoz"},"content":"        return input.split(\" \")[0];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"oneBoz"},"content":"     * Extracts the description part from the input string by removing the command prefix.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"oneBoz"},"content":"     * The command prefix is identified and removed from the input, leaving only the description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"oneBoz"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"oneBoz"},"content":"     * @param input the input string containing the command and description","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"oneBoz"},"content":"     * @return the description part of the input string, with leading and trailing whitespace removed","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"oneBoz"},"content":"    public static String getDesc(String input) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"oneBoz"},"content":"        return input.replaceFirst(getCommand(input), \"\").trim();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"oneBoz"},"content":"     * Determines the {@code CommandType} from the provided input string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"oneBoz"},"content":"     * The input string is parsed to extract the command, which is then compared to","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"oneBoz"},"content":"     * known command types to determine the appropriate {@code CommandType}. If the command","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"oneBoz"},"content":"     * is not recognized, an {@code InvalidInputFormatException} is thrown.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"oneBoz"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"oneBoz"},"content":"     * @param input the input string containing the command","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"oneBoz"},"content":"     * @return the {@code CommandType} corresponding to the input command","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"oneBoz"},"content":"     * @throws InvalidInputFormatException if the input command does not match any known command types","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"oneBoz"},"content":"    public static CommandType createCommandFromInput(String input) throws InvalidInputFormatException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"oneBoz"},"content":"        String command \u003d getCommand(input);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"oneBoz"},"content":"        if (Objects.equals(command, CommandType.BYE.toString())) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"oneBoz"},"content":"            return CommandType.BYE;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"oneBoz"},"content":"        } else if (Objects.equals(command, CommandType.LIST.toString())) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"oneBoz"},"content":"            return CommandType.LIST;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"oneBoz"},"content":"        } else if (Objects.equals(command, CommandType.MARK.toString())) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"oneBoz"},"content":"            return CommandType.MARK;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"oneBoz"},"content":"        } else if (Objects.equals(command, CommandType.UNMARK.toString())) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"oneBoz"},"content":"            return CommandType.UNMARK;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"oneBoz"},"content":"        } else if (Objects.equals(command, CommandType.DEADLINE.toString())) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"oneBoz"},"content":"            return CommandType.DEADLINE;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"oneBoz"},"content":"        } else if (Objects.equals(command, CommandType.TODO.toString())) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"oneBoz"},"content":"            return CommandType.TODO;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"oneBoz"},"content":"        } else if (Objects.equals(command, CommandType.EVENT.toString())) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"oneBoz"},"content":"            return CommandType.EVENT;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"oneBoz"},"content":"        } else if (Objects.equals(command, CommandType.DELETE.toString())) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"oneBoz"},"content":"            return CommandType.DELETE;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"oneBoz"},"content":"        } else if (Objects.equals(command, CommandType.FIND.toString())) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"oneBoz"},"content":"            return CommandType.FIND;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"oneBoz"},"content":"        } else {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"oneBoz"},"content":"            throw new InvalidInputFormatException(\"Please enter a valid command!\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"oneBoz"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"oneBoz"},"content":"     * Creates a {@code Task} object based on the provided input string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"oneBoz"},"content":"     * The input string is parsed to determine the type of task (TODO, EVENT, or DEADLINE)","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"oneBoz"},"content":"     * and its associated details. If the input is invalid or improperly formatted,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"oneBoz"},"content":"     * an {@code InvalidInputFormatException} is thrown.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"oneBoz"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"oneBoz"},"content":"     * @param input the input string containing task details and command type","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"oneBoz"},"content":"     * @return a {@code Task} object created from the input string","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"oneBoz"},"content":"     * @throws InvalidInputFormatException if the input format is invalid or does not","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"oneBoz"},"content":"     *         match any recognized command types or formats","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"oneBoz"},"content":"    public static Task createTaskFromInput(String input) throws InvalidInputFormatException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"oneBoz"},"content":"        CommandType command \u003d createCommandFromInput(input);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"oneBoz"},"content":"        String desc \u003d getDesc(input);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"oneBoz"},"content":"        if (command \u003d\u003d CommandType.TODO) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"oneBoz"},"content":"            return new Todo(desc);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"oneBoz"},"content":"        } else if (command \u003d\u003d CommandType.EVENT) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"oneBoz"},"content":"            String[] e \u003d desc.split(\"/from\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"oneBoz"},"content":"            if (e.length \u003c 2) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"oneBoz"},"content":"                throw new InvalidInputFormatException(\"Please enter a valid command!\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"oneBoz"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"oneBoz"},"content":"            String[] timing \u003d e[1].split(\"/to\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"oneBoz"},"content":"            if (timing.length \u003c 2) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"oneBoz"},"content":"                throw new InvalidInputFormatException(\"Please enter a valid command!\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"oneBoz"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"oneBoz"},"content":"            return new Event(e[0].trim(), timing[0].trim(), timing[1].trim());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"oneBoz"},"content":"        } else if (command \u003d\u003d CommandType.DEADLINE) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"oneBoz"},"content":"            String[] dl \u003d desc.split(\"/by\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"oneBoz"},"content":"            if (dl.length \u003c 2) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"oneBoz"},"content":"                throw new InvalidInputFormatException(\"Please enter a valid command!\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"oneBoz"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"oneBoz"},"content":"            return new Deadline(dl[0].trim(), dl[1].trim());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"oneBoz"},"content":"        } else {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"oneBoz"},"content":"            throw new InvalidInputFormatException(\"Error creating Task!\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"oneBoz"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"oneBoz"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"oneBoz":158}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oneBoz"},"content":"package storage;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oneBoz"},"content":"import java.io.File;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oneBoz"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oneBoz"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oneBoz"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oneBoz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oneBoz"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oneBoz"},"content":"import task.Deadline;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oneBoz"},"content":"import task.Event;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oneBoz"},"content":"import task.Task;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oneBoz"},"content":"import task.Todo;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oneBoz"},"content":"public class Storage {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oneBoz"},"content":"    private File file;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oneBoz"},"content":"     * Constructs a new {@code Storage} object with the specified file path.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oneBoz"},"content":"     * The file path is used to initialize the {@code File} object where tasks will be read from","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oneBoz"},"content":"     * or written to.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oneBoz"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"oneBoz"},"content":"     * @param filepath the path to the file used for storing tasks","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"oneBoz"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"oneBoz"},"content":"        file \u003d new File(filepath);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"oneBoz"},"content":"     * Reads tasks from a file and returns them as an {@code ArrayList} of {@code Task} objects.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"oneBoz"},"content":"     * The file is read line by line, and each line is parsed to create the appropriate task","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"oneBoz"},"content":"     * based on its type (TODO, DEADLINE, or EVENT). If a line indicates that a task is marked as done,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"oneBoz"},"content":"     * the corresponding task is marked as completed. If the file does not exist, it is created.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"oneBoz"},"content":"     * In case of any errors during file operations, an error message is printed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"oneBoz"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"oneBoz"},"content":"     * @return an {@code ArrayList} containing the tasks read from the file","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"oneBoz"},"content":"    public ArrayList\u003cTask\u003e read() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"oneBoz"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"oneBoz"},"content":"            System.out.println(\"____________________________________________________________\\nRetrieving inputs ...\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"oneBoz"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"oneBoz"},"content":"            ArrayList\u003cTask\u003e out \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"oneBoz"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"oneBoz"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"oneBoz"},"content":"                switch (line.charAt(1)) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"oneBoz"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"oneBoz"},"content":"                    Todo t \u003d new Todo(line.substring(7));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"oneBoz"},"content":"                    if (line.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"oneBoz"},"content":"                        t.markAsDone();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"oneBoz"},"content":"                    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"oneBoz"},"content":"                    out.add(t);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"oneBoz"},"content":"                    break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"oneBoz"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"oneBoz"},"content":"                    String[] dtmp \u003d line.split(\" \\\\(by: \");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"oneBoz"},"content":"                    String by \u003d dtmp[1].split(\"\\\\)\")[0];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"oneBoz"},"content":"                    Deadline d \u003d new Deadline(dtmp[0].substring(7), by);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"oneBoz"},"content":"                    if (line.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"oneBoz"},"content":"                        d.markAsDone();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"oneBoz"},"content":"                    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"oneBoz"},"content":"                    out.add(d);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"oneBoz"},"content":"                    break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"oneBoz"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"oneBoz"},"content":"                    String[] etmp \u003d line.split(\" \\\\(from: \");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"oneBoz"},"content":"                    String[] tmp2 \u003d etmp[1].split(\" to: \");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"oneBoz"},"content":"                    String from \u003d tmp2[0];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"oneBoz"},"content":"                    String to \u003d tmp2[1].split(\"\\\\)\")[0];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"oneBoz"},"content":"                    Event e \u003d new Event(etmp[0].substring(7), from, to);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"oneBoz"},"content":"                    if (line.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"oneBoz"},"content":"                        e.markAsDone();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"oneBoz"},"content":"                    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"oneBoz"},"content":"                    out.add(e);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"oneBoz"},"content":"                    break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"oneBoz"},"content":"                default:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"oneBoz"},"content":"                    break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"oneBoz"},"content":"                }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"oneBoz"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"oneBoz"},"content":"            sc.close();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"oneBoz"},"content":"            return out;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"oneBoz"},"content":"        } catch (FileNotFoundException fnfe) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"oneBoz"},"content":"            try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"oneBoz"},"content":"                FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"oneBoz"},"content":"                fw.close();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"oneBoz"},"content":"            } catch (IOException ioe) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"oneBoz"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"oneBoz"},"content":"                System.out.println(\"  Error creating storage ...\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"oneBoz"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"oneBoz"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"oneBoz"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"oneBoz"},"content":"     * Writes the provided list of {@code Task} objects to a file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"oneBoz"},"content":"     * Each task is converted to its raw string representation and written to the file,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"oneBoz"},"content":"     * with each task on a new line. If an {@code IOException} occurs during the writing process,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"oneBoz"},"content":"     * an error message is printed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"oneBoz"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"oneBoz"},"content":"     * @param tasks the list of {@code Task} objects to be written to the file","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"oneBoz"},"content":"    public void write(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"oneBoz"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"oneBoz"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"oneBoz"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"oneBoz"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"oneBoz"},"content":"                sb.append(tasks.get(i).toRawString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"oneBoz"},"content":"                sb.append(System.lineSeparator());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"oneBoz"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"oneBoz"},"content":"            fw.write(sb.toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"oneBoz"},"content":"            fw.close();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"oneBoz"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"oneBoz"},"content":"            System.out.println(\"  Data saved!\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"oneBoz"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"oneBoz"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"oneBoz"},"content":"            System.out.println(\"  Error saving ...\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"oneBoz"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"oneBoz"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"oneBoz":125}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oneBoz"},"content":"package task;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oneBoz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oneBoz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oneBoz"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oneBoz"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oneBoz"},"content":"    protected String by;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oneBoz"},"content":"    protected LocalDate byInDateFormat;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oneBoz"},"content":"    protected boolean isInDateFormat \u003d false;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oneBoz"},"content":"     * Constructs a new {@code Deadline} with the specified description and deadline date.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oneBoz"},"content":"     * The deadline date is parsed to determine if it is in a valid date format. If the date is valid,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oneBoz"},"content":"     * it is stored in a {@code LocalDate} format; otherwise, it is treated as a plain string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oneBoz"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oneBoz"},"content":"     * @param description the description of the deadline task","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oneBoz"},"content":"     * @param by the deadline date as a string, which is parsed to determine its format","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oneBoz"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oneBoz"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oneBoz"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"oneBoz"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"oneBoz"},"content":"            byInDateFormat \u003d LocalDate.parse(by);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"oneBoz"},"content":"            isInDateFormat \u003d true;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"oneBoz"},"content":"        } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"oneBoz"},"content":"            isInDateFormat \u003d false;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"oneBoz"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"oneBoz"},"content":"     * Returns a string representation of the task. If the task is in date format, it includes the","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"oneBoz"},"content":"     * date in a formatted manner. Otherwise, it returns the raw string representation.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"oneBoz"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"oneBoz"},"content":"     * @return a formatted string representing the task. The format is:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"oneBoz"},"content":"     *         \u003cul\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"oneBoz"},"content":"     *             \u003cli\u003eIf the task is in date format: \"[D] description (by: MMM d yyyy)\"\u003c/li\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"oneBoz"},"content":"     *             \u003cli\u003eIf not in date format: the raw string representation\u003c/li\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"oneBoz"},"content":"     *         \u003c/ul\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"oneBoz"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"oneBoz"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"oneBoz"},"content":"        if (isInDateFormat) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"oneBoz"},"content":"            return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"oneBoz"},"content":"                    + byInDateFormat.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"oneBoz"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"oneBoz"},"content":"        return this.toRawString();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"oneBoz"},"content":"     * Returns a raw string representation of the task with deadline details.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"oneBoz"},"content":"     * The format includes the deadline type indicator \"[D]\", followed by the task\u0027s description,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"oneBoz"},"content":"     * and the raw \"by\" date value.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"oneBoz"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"oneBoz"},"content":"     * @return a string representing the task in the format:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"oneBoz"},"content":"     *         \"[D] description (by: rawByDate)\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"oneBoz"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"oneBoz"},"content":"    public String toRawString() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"oneBoz"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"oneBoz"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"oneBoz":65}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oneBoz"},"content":"package task;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oneBoz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oneBoz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oneBoz"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oneBoz"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oneBoz"},"content":"    protected String from;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oneBoz"},"content":"    protected String to;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oneBoz"},"content":"    protected LocalDate fromInDateFormat;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oneBoz"},"content":"    protected LocalDate toInDateFormat;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oneBoz"},"content":"    protected boolean isInDateFormat \u003d false;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oneBoz"},"content":"     * Constructs a new {@code Event} with the specified description, start date, and end date.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oneBoz"},"content":"     * Both dates are parsed to determine if they are in a valid date format. If both dates are valid,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oneBoz"},"content":"     * they are stored in {@code LocalDate} format; otherwise, the dates are treated as plain strings.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oneBoz"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oneBoz"},"content":"     * @param description the description of the event","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oneBoz"},"content":"     * @param from the start date of the event as a string, which is parsed to determine its format","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oneBoz"},"content":"     * @param to the end date of the event as a string, which is parsed to determine its format","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"oneBoz"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"oneBoz"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"oneBoz"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"oneBoz"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"oneBoz"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"oneBoz"},"content":"            fromInDateFormat \u003d LocalDate.parse(from);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"oneBoz"},"content":"            toInDateFormat \u003d LocalDate.parse(to);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"oneBoz"},"content":"            isInDateFormat \u003d true;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"oneBoz"},"content":"        } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"oneBoz"},"content":"            isInDateFormat \u003d false;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"oneBoz"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"oneBoz"},"content":"     * Returns a string representation of the task. If the task has a date format, it includes the","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"oneBoz"},"content":"     * start and end dates in a formatted manner. Otherwise, it returns the raw string representation.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"oneBoz"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"oneBoz"},"content":"     * @return a formatted string representing the task. The format is:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"oneBoz"},"content":"     *         \u003cul\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"oneBoz"},"content":"     *             \u003cli\u003eIf the task is in date format: \"[E] description (from: MMM d yyyy to: MMM d yyyy)\"\u003c/li\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"oneBoz"},"content":"     *             \u003cli\u003eIf not in date format: the raw string representation\u003c/li\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"oneBoz"},"content":"     *         \u003c/ul\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"oneBoz"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"oneBoz"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"oneBoz"},"content":"        if (isInDateFormat) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"oneBoz"},"content":"            return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"oneBoz"},"content":"                    + fromInDateFormat.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" to: \"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"oneBoz"},"content":"                    + toInDateFormat.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"oneBoz"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"oneBoz"},"content":"        return this.toRawString();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"oneBoz"},"content":"     * Returns a raw string representation of the task with event details.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"oneBoz"},"content":"     * The format includes the event type indicator \"[E]\", followed by the task\u0027s description,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"oneBoz"},"content":"     * and the raw \"from\" and \"to\" date values.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"oneBoz"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"oneBoz"},"content":"     * @return a string representing the task in the format:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"oneBoz"},"content":"     *         \"[E] description (from: rawFromDate to: rawToDate)\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"oneBoz"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"oneBoz"},"content":"    public String toRawString() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"oneBoz"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"oneBoz"},"content":"    ","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"oneBoz"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"oneBoz":71}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oneBoz"},"content":"package task;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oneBoz"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oneBoz"},"content":"    protected String description;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oneBoz"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oneBoz"},"content":"     * Constructs a new {@code Task} with the specified description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oneBoz"},"content":"     * The task is initialized with the given description and its status is set to not done by default.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oneBoz"},"content":"     * This constructor is intended to be used by concrete subclasses of {@code Task}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oneBoz"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oneBoz"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oneBoz"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oneBoz"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oneBoz"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oneBoz"},"content":"     * Returns a status icon representing the completion status of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oneBoz"},"content":"     * If the task is done, the method returns \"X\". If the task is not done, it returns a space (\" \").","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oneBoz"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oneBoz"},"content":"     * @return a string representing the task\u0027s completion status (\"X\" if done, \" \" if not done)","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"oneBoz"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"oneBoz"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"oneBoz"},"content":"     * Marks the task as done by setting its status to true.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"oneBoz"},"content":"     * After calling this method, the task will be considered completed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"oneBoz"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"oneBoz"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"oneBoz"},"content":"     * Marks the task as not done by setting its status to false.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"oneBoz"},"content":"     * After calling this method, the task will be considered incomplete.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"oneBoz"},"content":"    public void unmark() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"oneBoz"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"oneBoz"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"oneBoz"},"content":"     * The string includes the task\u0027s status icon and description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"oneBoz"},"content":"     * @return a formatted string in the format \"[statusIcon] description\", where","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"oneBoz"},"content":"     * {@code statusIcon} is \"X\" if the task is done or a space (\" \") if not,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"oneBoz"},"content":"     * and {@code description} is the task\u0027s description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"oneBoz"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"oneBoz"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"oneBoz"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), this.description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"oneBoz"},"content":"     * Returns a raw string representation of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"oneBoz"},"content":"     * This method is intended to be implemented by subclasses to provide a specific format","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"oneBoz"},"content":"     * that is used for saving or processing the task data.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"oneBoz"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"oneBoz"},"content":"     * @return a string representing the task in a raw format","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"oneBoz"},"content":"    public abstract String toRawString();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"oneBoz"},"content":"     * Compares this task to the specified object. The result is {@code true} if and only if","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"oneBoz"},"content":"     * the argument is not {@code null} and is a {@code Task} object that represents the same","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"oneBoz"},"content":"     * task as this object. Two tasks are considered equal if their raw string representations","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"oneBoz"},"content":"     * are equal.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"oneBoz"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"oneBoz"},"content":"     * @param task the object to compare this task against","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"oneBoz"},"content":"     * @return {@code true} if the specified object is equal to this task, {@code false} otherwise","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"oneBoz"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"oneBoz"},"content":"    public boolean equals(Object task) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"oneBoz"},"content":"        if (task \u003d\u003d this) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"oneBoz"},"content":"            return true;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"oneBoz"},"content":"        } else if (task instanceof Task) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"oneBoz"},"content":"            return this.toRawString().equals(((Task) task).toRawString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"oneBoz"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"oneBoz"},"content":"        return false;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"oneBoz"},"content":"     * Checks if the task description contains the specified text.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"oneBoz"},"content":"     * This method returns {@code true} if the description includes the given text,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"oneBoz"},"content":"     * and {@code false} otherwise.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"oneBoz"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"oneBoz"},"content":"     * @param text the text to search for within the task description","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"oneBoz"},"content":"     * @return {@code true} if the description contains the specified text; {@code false} otherwise","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"oneBoz"},"content":"    public boolean contains(String text) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"oneBoz"},"content":"        return this.description.contains(text);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"oneBoz"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"oneBoz":99}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oneBoz"},"content":"package task;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oneBoz"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oneBoz"},"content":"     * Constructs a new {@code Todo} with the specified description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oneBoz"},"content":"     * This constructor initializes the {@code Todo} object with the given description","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oneBoz"},"content":"     * and sets its status to not done by default.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oneBoz"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oneBoz"},"content":"     * @param description the description of the to-do item","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oneBoz"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oneBoz"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oneBoz"},"content":"     * Returns a string representation of the to-do item.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oneBoz"},"content":"     * The string includes the to-do type indicator \"[T]\" followed by the string representation","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oneBoz"},"content":"     * of the task obtained from the superclass.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oneBoz"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oneBoz"},"content":"     * @return a formatted string representing the to-do item in the format:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oneBoz"},"content":"     *         \"[T] description\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"oneBoz"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"oneBoz"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"oneBoz"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"oneBoz"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"oneBoz"},"content":"     * Returns a raw string representation of the to-do item.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"oneBoz"},"content":"     * This method returns the same string as {@code toString}, which includes the \"[T]\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"oneBoz"},"content":"     * type indicator followed by the task\u0027s description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"oneBoz"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"oneBoz"},"content":"     * @return a string representing the to-do item in the format:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"oneBoz"},"content":"     *         \"[T] description\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"oneBoz"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"oneBoz"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"oneBoz"},"content":"    public String toRawString() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"oneBoz"},"content":"        return this.toString();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"oneBoz"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"oneBoz":41}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"oneBoz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oneBoz"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oneBoz"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oneBoz"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oneBoz"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oneBoz"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oneBoz"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oneBoz"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oneBoz"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oneBoz"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oneBoz"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oneBoz"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oneBoz"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oneBoz"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oneBoz"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oneBoz"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oneBoz"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oneBoz"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oneBoz"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oneBoz"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"oneBoz":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"oneBoz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oneBoz"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oneBoz"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oneBoz"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oneBoz"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oneBoz"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oneBoz"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oneBoz"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oneBoz"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oneBoz"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oneBoz"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oneBoz"},"content":"            fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oneBoz"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oneBoz"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oneBoz"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oneBoz"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oneBoz"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oneBoz"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oneBoz"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oneBoz"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oneBoz"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"oneBoz"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"oneBoz"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"oneBoz"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"oneBoz"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"oneBoz"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"oneBoz"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"oneBoz"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"oneBoz"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"oneBoz"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"oneBoz"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"oneBoz"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"oneBoz"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"oneBoz"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"oneBoz"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"oneBoz"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"oneBoz"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"oneBoz"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"oneBoz"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"oneBoz"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"oneBoz"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"oneBoz":44}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oneBoz"},"content":"package parser;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oneBoz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oneBoz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oneBoz"},"content":"import enumeration.CommandType;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oneBoz"},"content":"import exception.InvalidInputFormatException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oneBoz"},"content":"import task.Task;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oneBoz"},"content":"public class ParserTest {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oneBoz"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oneBoz"},"content":"    public void testCreateTaskFromInputEvent() throws InvalidInputFormatException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oneBoz"},"content":"        Task e \u003d Parser.createTaskFromInput(\"event natlan exploration /from 1900-01-01 /to 2025-01-01\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oneBoz"},"content":"        Task e1 \u003d Parser.createTaskFromInput(\"event natlan exploration/from1900-01-01/to2025-01-01\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oneBoz"},"content":"        Task e2 \u003d Parser.createTaskFromInput(\"event natlan exploration/fromtues/towed\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oneBoz"},"content":"        e1.markAsDone();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oneBoz"},"content":"        assertEquals(\"[E][ ] natlan exploration (from: 1900-01-01 to: 2025-01-01)\", e.toRawString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oneBoz"},"content":"        assertEquals(\"[E][X] natlan exploration (from: 1900-01-01 to: 2025-01-01)\", e1.toRawString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oneBoz"},"content":"        assertEquals(\"[E][X] natlan exploration (from: Jan 1 1900 to: Jan 1 2025)\", e1.toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oneBoz"},"content":"        assertEquals(\"[E][ ] natlan exploration (from: tues to: wed)\", e2.toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"oneBoz"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"oneBoz"},"content":"    public void testCreateTaskFromInputDeadline() throws InvalidInputFormatException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"oneBoz"},"content":"        Task d \u003d Parser.createTaskFromInput(\"deadline CS2103T iP /by 2024-08-30\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"oneBoz"},"content":"        Task d1 \u003d Parser.createTaskFromInput(\"deadline CS2103T iP/by2024-08-30\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"oneBoz"},"content":"        Task d2 \u003d Parser.createTaskFromInput(\"deadline CS2103T iP/byFriday\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"oneBoz"},"content":"        d1.markAsDone();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"oneBoz"},"content":"        assertEquals(\"[D][ ] CS2103T iP (by: 2024-08-30)\", d.toRawString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"oneBoz"},"content":"        assertEquals(\"[D][X] CS2103T iP (by: 2024-08-30)\", d1.toRawString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"oneBoz"},"content":"        assertEquals(\"[D][X] CS2103T iP (by: Aug 30 2024)\", d1.toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"oneBoz"},"content":"        assertEquals(\"[D][ ] CS2103T iP (by: gui.Friday)\", d2.toString());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"oneBoz"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"oneBoz"},"content":"    public void testCreateTaskFromInputTodo() throws InvalidInputFormatException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"oneBoz"},"content":"        Task t \u003d Parser.createTaskFromInput(\"todo CS2103T iP \");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"oneBoz"},"content":"        Task t1 \u003d Parser.createTaskFromInput(\"todo CS2103T iP\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"oneBoz"},"content":"        t1.markAsDone();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"oneBoz"},"content":"        assertEquals(\"[T][ ] CS2103T iP\", t.toRawString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"oneBoz"},"content":"        assertEquals(\"[T][X] CS2103T iP\", t1.toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"oneBoz"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"oneBoz"},"content":"    public void testCreateCommandFromInput() throws InvalidInputFormatException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"oneBoz"},"content":"        assertEquals(CommandType.BYE, Parser.createCommandFromInput(\"bye  \"));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"oneBoz"},"content":"        assertEquals(CommandType.LIST, Parser.createCommandFromInput(\"list\"));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"oneBoz"},"content":"        assertEquals(CommandType.MARK, Parser.createCommandFromInput(\"mark 1\"));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"oneBoz"},"content":"        assertEquals(CommandType.UNMARK, Parser.createCommandFromInput(\"unmark 2\"));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"oneBoz"},"content":"        assertEquals(CommandType.TODO, Parser.createCommandFromInput(\"todo hi\"));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"oneBoz"},"content":"        assertEquals(CommandType.DEADLINE, Parser.createCommandFromInput(\"deadline\"));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"oneBoz"},"content":"        assertEquals(CommandType.EVENT, Parser.createCommandFromInput(\"event  \"));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"oneBoz"},"content":"        assertEquals(CommandType.DELETE, Parser.createCommandFromInput(\"delete  \"));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"oneBoz"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"oneBoz":63}},{"path":"src/test/java/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oneBoz"},"content":"package storage;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oneBoz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oneBoz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"oneBoz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"oneBoz"},"content":"import task.Deadline;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"oneBoz"},"content":"import task.Event;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"oneBoz"},"content":"import task.Task;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"oneBoz"},"content":"import task.Todo;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"oneBoz"},"content":"public class StorageTest {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"oneBoz"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"oneBoz"},"content":"    public void testReadAndWrite() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oneBoz"},"content":"        Storage s \u003d new Storage(\"FridayTest.txt\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"oneBoz"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"oneBoz"},"content":"        tasks.add(new Event(\"Natlan exploration\", \"2024-08-30\", \"2024-09-30\"));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"oneBoz"},"content":"        tasks.add(new Deadline(\"CS2103T iP\", \"2024-08-30\"));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"oneBoz"},"content":"        tasks.add(new Todo(\"read\"));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oneBoz"},"content":"        s.write(tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"oneBoz"},"content":"        ArrayList\u003cTask\u003e tasks1 \u003d s.read();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"oneBoz"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"oneBoz"},"content":"            assertEquals(tasks.get(i), tasks1.get(i));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"oneBoz"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"oneBoz"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"oneBoz"},"content":"    public void testReadNonExistingFile() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"oneBoz"},"content":"        Storage s \u003d new Storage(\"NonExistingFileTest.txt\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"oneBoz"},"content":"        ArrayList\u003cTask\u003e tasks1 \u003d s.read();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"oneBoz"},"content":"        assertEquals(tasks1.size(), 0);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"oneBoz"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"oneBoz"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"oneBoz"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"oneBoz":39}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"oneBoz"},"content":"todo borrow book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"oneBoz"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"oneBoz"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"oneBoz"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"oneBoz"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"oneBoz"},"content":"bye","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"oneBoz":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"oneBoz"},"content":"java -classpath ..\\bin gui.Friday \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"oneBoz":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"oneBoz"},"content":"java -classpath ../bin gui/Friday \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"oneBoz":1,"-":37}}]
