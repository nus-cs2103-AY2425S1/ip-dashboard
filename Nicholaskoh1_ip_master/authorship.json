[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"checkstyle {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nicholaskoh1"},"content":"    mainClass.set(\"jeff.gui.Launcher\")","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nicholaskoh1"},"content":"    archiveBaseName \u003d \"Jeff\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nicholaskoh1"},"content":"    mainClassName \u003d \u0027jeff.gui.Launcher\u0027","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nicholaskoh1"},"content":"    archiveFileName \u003d \u0027Jeff.jar\u0027","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Nicholaskoh1"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":25,"-":39}},{"path":"src/main/java/jeff/Jeff.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.command.Command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.exception.JeffException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.parser.Parser;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":" * Represents a chatbot.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"public class Jeff {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"    private Storage storage;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor for the Jeff Class.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"     * Uses the given file path input to get the task list from the text file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"     * Also initialises the user interface.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param filePath File path of the task list text file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"    public Jeff(String filePath) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"        assert this.storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"        // Load the task list from the task list text file","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"            Scanner scanner \u003d this.storage.loadTaskListFromDatabase();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"            this.tasks \u003d new TaskList(scanner);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"            assert this.tasks !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"        } catch (JeffException e) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the string representation of the response of the chatbot Jeff based on the user\u0027s input.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param input Given input.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return Jeff\u0027s response.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nicholaskoh1"},"content":"            assert c !\u003d null : \"Command should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nicholaskoh1"},"content":"            return c.execute(this.tasks, this.storage);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nicholaskoh1"},"content":"        } catch (JeffException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nicholaskoh1"},"content":"            return Parser.addSpaceInFrontOfEachLine(e.toString());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":55}},{"path":"src/main/java/jeff/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.exception.JeffException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.parser.Parser;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.Task;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":" * Represents an \"Add task\" command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor for AddCommand Class.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"     * Stores the user\u0027s input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"    public AddCommand(String input) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"        super(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the task description.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return The task description.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"        String[] taskParts \u003d this.getInput().split(\" \", 2);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"        return taskParts[1];","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the response by the chatbot Jeff when a task is added.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param task Task that is added to the task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param tasks Task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return Response when a task is added.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"    public String getResponse(Task task, TaskList tasks) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"        return Parser.addSpaceInFrontOfEachLine(","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"                String.format(","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"                        \"Got it. I\u0027ve added this task:\\n   %s\\nNow you have %s tasks in the list.\",","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"                        task.toString(),","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"                        tasks.size()","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"                )","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"        );","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the string representation of the response by the chatbot Jeff when a task is added.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param tasks Task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param storage Place to get and write the task list to the tasks text file.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return String representation of the response.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Nicholaskoh1"},"content":"     * @throws JeffException if the user\u0027s input is in the wrong format or the description of the task is empty.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nicholaskoh1"},"content":"    @Override","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Nicholaskoh1"},"content":"    public abstract String execute(TaskList tasks, Storage storage) throws JeffException;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":60}},{"path":"src/main/java/jeff/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.command;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.exception.JeffException;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.parser.Parser;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.DeadlineTask;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.Task;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":" * Represents an \"Add Deadline task\" command.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"public class AddDeadlineCommand extends AddCommand {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"    private static final String WRONG_FORMAT_ERROR \u003d","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"            \"The format is wrong! It should be \\\"deadline(or dl) xx /by yyyy-mm-dd HH:mm(or hh:mm AM/PM)\\\"!\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor for AddDeadlineCommand Class.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"     * Stores the user\u0027s input.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"    public AddDeadlineCommand(String input) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"        super(input);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"     * Checks if the format of the user input is wrong or not.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return true if the user input is in the wrong format and false otherwise.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"    private boolean isFormatWrong() {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"        return !this.getInput().matches(\"deadline .+\") \u0026\u0026 !this.getInput().matches(\"dl .+\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns a newly created deadline task based on the user input.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return Deadline task based on user input.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"    private DeadlineTask createTask() throws JeffException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"        assert !this.isFormatWrong() : \"Deadline task should not be in the wrong format when creating the task\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"        // Split the description into content and deadline","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"        String taskDescription \u003d this.getTaskDescription();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nicholaskoh1"},"content":"        String[] deadlineParts \u003d taskDescription.split(\" /by \", 2);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nicholaskoh1"},"content":"        String deadlineContent \u003d deadlineParts[0];","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nicholaskoh1"},"content":"        String deadlinePeriod \u003d deadlineParts.length \u003e 1 ? deadlineParts[1] : \"\";","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nicholaskoh1"},"content":"        // Check if the format is correct","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nicholaskoh1"},"content":"        try {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nicholaskoh1"},"content":"            return new DeadlineTask(deadlineContent, Parser.getLocalDateTime(deadlinePeriod));","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Nicholaskoh1"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nicholaskoh1"},"content":"            throw new JeffException(WRONG_FORMAT_ERROR);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the string representation of the response by the chatbot Jeff","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Nicholaskoh1"},"content":"     * when a deadline task is added to the task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param tasks Task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param storage Place to get and write the task list to the tasks text file.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return String representation of the response.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Nicholaskoh1"},"content":"     * @throws JeffException if the task description is empty or the format is wrong.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Nicholaskoh1"},"content":"    @Override","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Nicholaskoh1"},"content":"    public String execute(TaskList tasks, Storage storage) throws JeffException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Nicholaskoh1"},"content":"        if (this.isFormatWrong()) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Nicholaskoh1"},"content":"            throw new JeffException(WRONG_FORMAT_ERROR);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Nicholaskoh1"},"content":"        Task targetTask \u003d this.createTask();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Nicholaskoh1"},"content":"        assert targetTask !\u003d null : \"Target task should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Nicholaskoh1"},"content":"        tasks.addTask(targetTask);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Nicholaskoh1"},"content":"        assert tasks.contains(targetTask) : \"Task list should contain the newly added task\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Nicholaskoh1"},"content":"        storage.updateTaskListInDatabase(tasks);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Nicholaskoh1"},"content":"        return this.getResponse(targetTask, tasks);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-09-07","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":86}},{"path":"src/main/java/jeff/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.command;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.exception.JeffException;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.parser.Parser;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.EventTask;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.Task;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":" * Represents an \"Add Event task\" command.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"public class AddEventCommand extends AddCommand {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"    private static final String WRONG_FORMAT_ERROR \u003d \"The format is wrong! \"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"            + \"It should be \\\"event(or e) xx /from yyyy-mm-dd HH:mm(or hh:mm am/pm) \"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"            + \"/to yyyy-mm--dd HH:mm(or hh:mm am/pm)\\\"\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor for AddEventCommand Class.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"     * Stores the user\u0027s input.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"    public AddEventCommand(String input) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"        super(input);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"     * Checks if the format of the user input is wrong or not.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return true if the user input is in the wrong format and false otherwise.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"    private boolean isFormatWrong() {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"        return !this.getInput().matches(\"event .+\") \u0026\u0026 !this.getInput().matches(\"e .+\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns a newly created event task based on the user input.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return Event task based on user input.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"    private EventTask createTask() throws JeffException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"        assert !this.isFormatWrong() : \"Event task should not be in the wrong format when creating the task\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"        // Split the description into content, start and end","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nicholaskoh1"},"content":"        String taskDescription \u003d this.getTaskDescription();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nicholaskoh1"},"content":"        String[] eventParts \u003d taskDescription.split(\" /from \", 2);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nicholaskoh1"},"content":"        String eventContent \u003d eventParts[0];","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nicholaskoh1"},"content":"        String eventPeriod \u003d eventParts.length \u003e 1 ? eventParts[1] : \"\";","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nicholaskoh1"},"content":"        String[] eventPeriodParts \u003d eventPeriod.split(\" /to \", 2);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nicholaskoh1"},"content":"        String startPeriod \u003d eventPeriodParts[0];","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Nicholaskoh1"},"content":"        String endPeriod \u003d eventPeriodParts.length \u003e 1 ? eventPeriodParts[1] : \"\";","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nicholaskoh1"},"content":"        // Check if the format is correct","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Nicholaskoh1"},"content":"        try {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Nicholaskoh1"},"content":"            return new EventTask(","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Nicholaskoh1"},"content":"                    eventContent,","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Nicholaskoh1"},"content":"                    Parser.getLocalDateTime(startPeriod),","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Nicholaskoh1"},"content":"                    Parser.getLocalDateTime(endPeriod)","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Nicholaskoh1"},"content":"            );","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Nicholaskoh1"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Nicholaskoh1"},"content":"            throw new JeffException(WRONG_FORMAT_ERROR);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the string representation of the response by the chatbot Jeff","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Nicholaskoh1"},"content":"     * when an event task is added to the task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param tasks Task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param storage Place to get and write the task list to the tasks text file.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return String representation of the response.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Nicholaskoh1"},"content":"     * @throws JeffException if the task description is empty or the format is wrong.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Nicholaskoh1"},"content":"    @Override","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Nicholaskoh1"},"content":"    public String execute(TaskList tasks, Storage storage) throws JeffException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Nicholaskoh1"},"content":"        if (this.isFormatWrong()) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Nicholaskoh1"},"content":"            throw new JeffException(WRONG_FORMAT_ERROR);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Nicholaskoh1"},"content":"        Task targetTask \u003d this.createTask();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Nicholaskoh1"},"content":"        assert targetTask !\u003d null : \"Target task should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Nicholaskoh1"},"content":"        tasks.addTask(targetTask);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Nicholaskoh1"},"content":"        assert tasks.contains(targetTask) : \"Task list should contain the newly added task\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Nicholaskoh1"},"content":"        storage.updateTaskListInDatabase(tasks);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Nicholaskoh1"},"content":"        return this.getResponse(targetTask, tasks);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-09-07","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":95}},{"path":"src/main/java/jeff/command/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.command;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.exception.JeffException;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.Task;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.ToDoTask;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":" * Represents an \"Add to-do task\" command.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"public class AddToDoCommand extends AddCommand {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"    private static final String WRONG_FORMAT_ERROR \u003d \"The format is wrong! It should be \\\"todo(or t) xx\\\"\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor for AddToDoCommand Class.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"     * Stores the user\u0027s input.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"    public AddToDoCommand(String input) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"        super(input);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"     * Checks if the format of the user input is wrong or not.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return true if the user input is in the wrong format and false otherwise.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"    private boolean isFormatWrong() {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"        return !this.getInput().matches(\"todo .+\") \u0026\u0026 !this.getInput().matches(\"t .+\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns a newly created to-do task based on the user input.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return To-do task based on user input.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"    private ToDoTask createTask() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"        assert !this.isFormatWrong() : \"To-Do task should not be in the wrong format when creating the task\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"        String taskDescription \u003d this.getTaskDescription();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"        return new ToDoTask(taskDescription);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the string representation of the response by the chatbot Jeff","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nicholaskoh1"},"content":"     * when a to-do task is added to the task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param tasks Task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param storage Place to get and write the task list to the tasks text file.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return String representation of the response.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nicholaskoh1"},"content":"     * @throws JeffException if the description of the task is empty.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nicholaskoh1"},"content":"    @Override","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Nicholaskoh1"},"content":"    public String execute(TaskList tasks, Storage storage) throws JeffException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nicholaskoh1"},"content":"        if (this.isFormatWrong()) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nicholaskoh1"},"content":"            throw new JeffException(WRONG_FORMAT_ERROR);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Nicholaskoh1"},"content":"        Task targetTask \u003d this.createTask();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Nicholaskoh1"},"content":"        assert targetTask !\u003d null : \"Target task should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Nicholaskoh1"},"content":"        tasks.addTask(targetTask);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Nicholaskoh1"},"content":"        assert tasks.contains(targetTask) : \"Task list should contain the newly added task\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Nicholaskoh1"},"content":"        storage.updateTaskListInDatabase(tasks);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Nicholaskoh1"},"content":"        return this.getResponse(targetTask, tasks);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-09-07","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":71}},{"path":"src/main/java/jeff/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.exception.JeffException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":" * An abstract class to put all command types under one class","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":"public abstract class Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"    private String input;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor for Command Class.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"     * Stores the user\u0027s input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"    public Command(String input) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"        this.input \u003d input;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"     * Getter function to get the user\u0027s input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return the user\u0027s input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"    public String getInput() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"        return this.input;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns whether the program should exit or not.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return whether the program should exit or not.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"        return false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the string representation of the response by the chatbot Jeff based on a certain command.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param tasks Task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param storage Place to get and write the task list to the tasks text file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return String representation of the response.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"     * @throws JeffException if the user\u0027s input is in the wrong format.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nicholaskoh1"},"content":"    public abstract String execute(TaskList tasks, Storage storage) throws JeffException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":50}},{"path":"src/main/java/jeff/command/DateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.exception.JeffException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.parser.Parser;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":" * Represents a \"Check what task is on a certain date\" command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"public class DateCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"    private static final String WRONG_FORMAT_ERROR \u003d \"The format is wrong! It should be \\\"date(or dt) yyyy-mm-dd\\\"!\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor for DateCommand Class.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"     * Stores the user\u0027s input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"    public DateCommand(String input) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"        super(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"     * Checks if the format of the user input is wrong or not.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return true if the user input is in the wrong format and false otherwise.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"    private boolean isFormatWrong() {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"        return !this.getInput().matches(\"date .+\") \u0026\u0026 !this.getInput().matches(\"dt .+\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the LocalDate object representation of the date in the user input.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return LocalDate of the date string.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"     * @throws JeffException if the format of the user input is wrong.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"    private LocalDate getDate() throws JeffException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"        assert !this.isFormatWrong() : \"Command should not be in the wrong format when getting date\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"        String[] taskParts \u003d this.getInput().split(\" \", 2);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"        String taskPeriod \u003d taskParts.length \u003e 1 ? taskParts[1] : \"\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nicholaskoh1"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nicholaskoh1"},"content":"            return LocalDate.parse(taskPeriod);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nicholaskoh1"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nicholaskoh1"},"content":"            throw new JeffException(WRONG_FORMAT_ERROR);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns a TaskList filtered by the given date.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param tasks Task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param taskDate Given date.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return Filtered task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Nicholaskoh1"},"content":"     * @throws JeffException if there is no task on the given date.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Nicholaskoh1"},"content":"    private TaskList filterByDate(TaskList tasks, LocalDate taskDate) throws JeffException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Nicholaskoh1"},"content":"        TaskList filteredTasks \u003d tasks.filterByDate(taskDate);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Nicholaskoh1"},"content":"        assert filteredTasks !\u003d null : \"Filtered tasks list cannot be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Nicholaskoh1"},"content":"        if (filteredTasks.isEmpty()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Nicholaskoh1"},"content":"            throw new JeffException(\"No deadlines/events on \" + Parser.toDateString(taskDate) + \"!\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Nicholaskoh1"},"content":"        return filteredTasks;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the string representation of the response by the chatbot Jeff when the user searches for tasks on a","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Nicholaskoh1"},"content":"     * specific date by filtering the task list based on the date input.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param tasks Task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param storage Place to get and write the task list to the tasks text file.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return String representation of the response.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Nicholaskoh1"},"content":"     * @throws JeffException if the user\u0027s input is in the wrong format.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Nicholaskoh1"},"content":"    @Override","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Nicholaskoh1"},"content":"    public String execute(TaskList tasks, Storage storage) throws JeffException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Nicholaskoh1"},"content":"        assert tasks !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Nicholaskoh1"},"content":"        if (this.isFormatWrong()) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Nicholaskoh1"},"content":"            throw new JeffException(WRONG_FORMAT_ERROR);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Nicholaskoh1"},"content":"        LocalDate taskDate \u003d this.getDate();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Nicholaskoh1"},"content":"        assert taskDate !\u003d null : \"Task date cannot be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Nicholaskoh1"},"content":"        TaskList filteredTasks \u003d this.filterByDate(tasks, taskDate);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Nicholaskoh1"},"content":"        String taskListString \u003d filteredTasks.toString();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Nicholaskoh1"},"content":"        return Parser.addSpaceInFrontOfEachLine(","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Nicholaskoh1"},"content":"                String.format(","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Nicholaskoh1"},"content":"                        \"Here are the tasks for %s:\\n%s\",","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Nicholaskoh1"},"content":"                        Parser.toDateString(taskDate),","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Nicholaskoh1"},"content":"                        taskListString","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Nicholaskoh1"},"content":"                )","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Nicholaskoh1"},"content":"        );","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":106}},{"path":"src/main/java/jeff/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.exception.JeffException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.parser.Parser;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":" * Represents a \"Delete task\" command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor for DeleteCommand Class.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"     * Stores the user\u0027s input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"        super(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the string representation of the response by the chatbot Jeff when a task is deleted.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"     * Gets the task to be deleted from the task list and delete it.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param tasks Task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param storage Place to get and write the task list to the tasks text file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return String representation of the response.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"     * @throws JeffException if the user\u0027s input is in the wrong format or if the task number does not exist.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"    public String execute(TaskList tasks, Storage storage) throws JeffException {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"        assert tasks !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"        Task targetTask \u003d tasks.getTaskByCommand(this.getInput(), \"delete\", \"dd\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"        assert targetTask !\u003d null : \"Target task should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"        assert tasks.contains(targetTask) : \"Task list should contain the target task before removal\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"        tasks.deleteTask(targetTask);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"        assert !tasks.contains(targetTask) : \"Task list should not contain the target task after removal\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"        storage.updateTaskListInDatabase(tasks);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"        return Parser.addSpaceInFrontOfEachLine(","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"                String.format(","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nicholaskoh1"},"content":"                        \"Noted. I\u0027ve removed this task:\\n   %s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nicholaskoh1"},"content":"                        targetTask.toString(),","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nicholaskoh1"},"content":"                        tasks.size()","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nicholaskoh1"},"content":"                )","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nicholaskoh1"},"content":"        );","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":54}},{"path":"src/main/java/jeff/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.exception.JeffException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.parser.Parser;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":" * Represents an \"Exit the program\" command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor for ExitCommand Class.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"     * Stores the user\u0027s input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"    public ExitCommand(String input) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"        super(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the string representation of the response by the chatbot Jeff when the user is exiting the program.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param tasks Task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param storage Place to get and write the task list to the tasks text file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return String representation of the response.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"    public String execute(TaskList tasks, Storage storage) throws JeffException {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"        return Parser.addSpaceInFrontOfEachLine(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns true.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return true.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"        return true;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":43}},{"path":"src/main/java/jeff/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.command;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.exception.JeffException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.parser.Parser;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":" * Represents a \"Find task\" command.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"    private static final String WRONG_FORMAT_ERROR \u003d \"The format is wrong! It should be \\\"find(or f) xx\\\"!\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor for FindCommand Class.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"     * Stores the user\u0027s input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"        super(input);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"     * Checks if the format of the user input is wrong or not.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return true if the user input is in the wrong format and false otherwise.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"    private boolean isFormatWrong() {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"        return !this.getInput().matches(\"find .+\") \u0026\u0026 !this.getInput().matches(\"f .+\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the search text to filter by.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return Search text.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"     * @throws JeffException if there is no search text.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"    private String getSearchText() throws JeffException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"        if (this.isFormatWrong()) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"            throw new JeffException(WRONG_FORMAT_ERROR);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"        String[] taskParts \u003d this.getInput().split(\" \", 2);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"        String searchText \u003d taskParts.length \u003e 1 ? taskParts[1] : \"\";","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"        if (searchText.isEmpty()) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"            throw new JeffException(WRONG_FORMAT_ERROR);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nicholaskoh1"},"content":"        return searchText;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns a TaskList filtered by the given search text.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param tasks Task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param searchText String to filter by.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return Filtered task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Nicholaskoh1"},"content":"     * @throws JeffException if there is no task with the given search text in its name.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Nicholaskoh1"},"content":"    private TaskList filterBySearchText(TaskList tasks, String searchText) throws JeffException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Nicholaskoh1"},"content":"        TaskList filteredTasks \u003d tasks.filterByName(searchText);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Nicholaskoh1"},"content":"        assert filteredTasks !\u003d null : \"Filtered tasks should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Nicholaskoh1"},"content":"        if (filteredTasks.isEmpty()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Nicholaskoh1"},"content":"            throw new JeffException(\"Sorry, no task contains the phrase \" + searchText + \".\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Nicholaskoh1"},"content":"        return filteredTasks;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the string representation of the response by the chatbot Jeff when the user searches for tasks by","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Nicholaskoh1"},"content":"     * search text by filtering the search text in the task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param tasks Task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param storage Place to get and write the task list to the tasks text file.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return String representation of the response.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Nicholaskoh1"},"content":"     * @throws JeffException if the user\u0027s input is in the wrong format or if no task match the user\u0027s input.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Nicholaskoh1"},"content":"    @Override","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Nicholaskoh1"},"content":"    public String execute(TaskList tasks, Storage storage) throws JeffException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Nicholaskoh1"},"content":"        assert tasks !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Nicholaskoh1"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Nicholaskoh1"},"content":"        String searchText \u003d this.getSearchText();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Nicholaskoh1"},"content":"        TaskList filteredTasks \u003d this.filterBySearchText(tasks, searchText);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Nicholaskoh1"},"content":"        String taskListString \u003d filteredTasks.toString();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Nicholaskoh1"},"content":"        return Parser.addSpaceInFrontOfEachLine(","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Nicholaskoh1"},"content":"                \"Here are the matching tasks in your list:\\n\" + taskListString","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Nicholaskoh1"},"content":"        );","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":94}},{"path":"src/main/java/jeff/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.exception.JeffException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.parser.Parser;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":" * Represents a \"Show task list\" command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor for ListCommand Class.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"     * Stores the user\u0027s input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"    public ListCommand(String input) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"        super(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the string representation of the task list by the chatbot Jeff when the user wants to see the task list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param tasks Task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param storage Place to get and write the task list to the tasks text file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return String representation of the task list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"     * @throws JeffException if the task list is empty.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"    public String execute(TaskList tasks, Storage storage) throws JeffException {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"        assert tasks !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"            throw new JeffException(\"List is empty!\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"        String taskListString \u003d tasks.toString();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"        return Parser.addSpaceInFrontOfEachLine(taskListString);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":42}},{"path":"src/main/java/jeff/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.exception.JeffException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.parser.Parser;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":" * Represents a \"Mark task as done\" command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor for MarkCommand Class.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"     * Stores the user\u0027s input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"    public MarkCommand(String input) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"        super(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the string representation of the response by the chatbot Jeff when a task is marked as done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"     * Gets the target task from the task list and mark it as done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param tasks Task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param storage Place to get and write the task list to the tasks text file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return String representation of the response.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"     * @throws JeffException if the user\u0027s input is in the wrong format or if the task has already been marked as done.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"    public String execute(TaskList tasks, Storage storage) throws JeffException {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"        assert tasks !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"        Task targetTask \u003d tasks.getTaskByCommand(this.getInput(), \"mark\", \"m\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"        assert targetTask !\u003d null : \"Target task should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"        if (targetTask.isDone()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"            throw new JeffException(\"This task has already been marked as done!\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"        targetTask.markAsDone();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"        assert targetTask.isDone() : \"Target task should be marked as done\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"        storage.updateTaskListInDatabase(tasks);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nicholaskoh1"},"content":"        return Parser.addSpaceInFrontOfEachLine(","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nicholaskoh1"},"content":"                \"OK, I\u0027ve marked this task as done:\\n   \" + targetTask.toString()","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nicholaskoh1"},"content":"        );","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":53}},{"path":"src/main/java/jeff/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.exception.JeffException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.parser.Parser;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":" * Represents a \"Mark task as not yet done\" command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor for UnmarkCommand Class.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"     * Stores the user\u0027s input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"    public UnmarkCommand(String input) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"        super(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the string representation of the response by the chatbot Jeff when a task is marked as not done yet.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"     * Gets the target task from the task list and mark it as not done yet.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param tasks Task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param storage Place to get and write the task list to the tasks text file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return String representation of the response.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"     * @throws JeffException if the user\u0027s input is in the wrong format or if the task has not been marked as done.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"    public String execute(TaskList tasks, Storage storage) throws JeffException {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"        assert tasks !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"        Task targetTask \u003d tasks.getTaskByCommand(this.getInput(), \"unmark\", \"u\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"        assert targetTask !\u003d null : \"Target task should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"        if (!targetTask.isDone()) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"            throw new JeffException(\"This task has already been marked as not done yet!\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"        targetTask.markAsNotDone();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"        assert !targetTask.isDone() : \"Target task should be marked as not done yet\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"        storage.updateTaskListInDatabase(tasks);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nicholaskoh1"},"content":"        return Parser.addSpaceInFrontOfEachLine(","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nicholaskoh1"},"content":"                \"OK, I\u0027ve marked this task as not done yet:\\n   \" + targetTask.toString()","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nicholaskoh1"},"content":"        );","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":53}},{"path":"src/main/java/jeff/exception/FileCorruptException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":" * Represents an exception for any file corruption.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"public class FileCorruptException extends Exception {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"    private String message;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor that creates a FileCorruptException object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"    public FileCorruptException() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"        super();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"        this.message \u003d \"Data file is corrupted!\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the message of the error.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return the error message","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"    public String toString() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"        return this.message;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":26}},{"path":"src/main/java/jeff/exception/JeffException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":" * Represents an exception for any errors in this package.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"public class JeffException extends Exception {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"    private String message;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor that creates a JeffException object with a specific message.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param message that describes the error","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"    public JeffException(String message) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"        super(message);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"        this.message \u003d message;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor that creates a JeffException object with a general message.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"    public JeffException() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"        super();","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"        this.message \u003d \"Sorry, I don\u0027t know what this means.\";","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the message of the error.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return the error message","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"    @Override","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"    public String toString() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"        return this.message;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":36}},{"path":"src/main/java/jeff/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.gui;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"    @FXML","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"    @FXML","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor for the DialogBox Class.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param text To be placed in the dialog box.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param img To decide whether the text is from the chatbot or user.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"        try {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nicholaskoh1"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nicholaskoh1"},"content":"    private void flip() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nicholaskoh1"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nicholaskoh1"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nicholaskoh1"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nicholaskoh1"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns a DialogBox object for the user based on the given text and image.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param text Given text.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param img Given image.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return DialogBox object for the user.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Nicholaskoh1"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Nicholaskoh1"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns a DialogBox object for the chatbot Jeff based on the given text and iamge.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param text Given text.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param img Given image.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return DialogBox object for the chatbot Jeff.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Nicholaskoh1"},"content":"    public static DialogBox getJeffDialog(String text, Image img) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Nicholaskoh1"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Nicholaskoh1"},"content":"        db.flip();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Nicholaskoh1"},"content":"        return db;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":80}},{"path":"src/main/java/jeff/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.gui;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"public class Launcher {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":12}},{"path":"src/main/java/jeff/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.gui;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.Jeff;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":" * A GUI for Jeff using FXML.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"public class Main extends Application {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"    private Jeff jeff \u003d new Jeff(\"data/tasks.txt\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"    @Override","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"        try {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setJeff(jeff);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"            stage.show();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":32}},{"path":"src/main/java/jeff/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.gui;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.Jeff;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.parser.Parser;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":" * Controller for the main GUI.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"    @FXML","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"    @FXML","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"    @FXML","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"    @FXML","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"    private Jeff jeff;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/person.png\"));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"    private final Image jeffImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/jeff.png\"));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"     * Initialise the program.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"    @FXML","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"        assert userImage !\u003d null : \"User image not loaded\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"        assert jeffImage !\u003d null : \"Jeff Chatbot image not loaded\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"        showWelcomeMessage();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"     * Sets jeff.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param jeff To be set.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nicholaskoh1"},"content":"    public void setJeff(Jeff jeff) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nicholaskoh1"},"content":"        this.jeff \u003d jeff;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Nicholaskoh1"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nicholaskoh1"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Nicholaskoh1"},"content":"    @FXML","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Nicholaskoh1"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Nicholaskoh1"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d jeff.getResponse(input);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Nicholaskoh1"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Nicholaskoh1"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Nicholaskoh1"},"content":"                DialogBox.getJeffDialog(response, jeffImage)","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Nicholaskoh1"},"content":"        );","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Nicholaskoh1"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Nicholaskoh1"},"content":"        // Exit the application if the user inputs \"bye\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Nicholaskoh1"},"content":"        if (input.equalsIgnoreCase(\"bye\") || input.equalsIgnoreCase(\"b\")) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Nicholaskoh1"},"content":"            // Schedule exit after a short delay","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Nicholaskoh1"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Nicholaskoh1"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Nicholaskoh1"},"content":"            delay.play();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Nicholaskoh1"},"content":"     * Shows a welcome message when the application starts.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Nicholaskoh1"},"content":"    private void showWelcomeMessage() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Nicholaskoh1"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Nicholaskoh1"},"content":"                DialogBox.getJeffDialog(","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Nicholaskoh1"},"content":"                        Parser.addSpaceInFrontOfEachLine(\"Hello! I\u0027m Jeff.\\nWhat can I do for you?\"), jeffImage)","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Nicholaskoh1"},"content":"        );","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":88}},{"path":"src/main/java/jeff/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.parser;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.command.AddDeadlineCommand;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.command.AddEventCommand;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.command.AddToDoCommand;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.command.Command;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.command.DateCommand;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.command.DeleteCommand;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.command.ExitCommand;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.command.FindCommand;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.command.ListCommand;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.command.MarkCommand;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.command.UnmarkCommand;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.exception.JeffException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":" * Represents a filter to sort out the user\u0027s input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"public class Parser {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns a Command based on the user\u0027s input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return a Command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"     * @throws JeffException if the user\u0027s input is not a command available.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"    public static Command parse(String input) throws JeffException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"        if (input.equals(\"list\") || input.equals(\"l\")) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"            return new ListCommand(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"        } else if (input.equals(\"bye\") || input.equals(\"b\")) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"            return new ExitCommand(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"        } else if (input.startsWith(\"mark\") || input.startsWith(\"m\")) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"            return new MarkCommand(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"        } else if (input.startsWith(\"unmark\") || input.startsWith(\"u\")) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"            return new UnmarkCommand(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"        } else if (input.startsWith(\"delete\") || input.startsWith(\"dd\")) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"            return new DeleteCommand(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"        } else if (input.startsWith(\"todo\") || input.startsWith(\"t\")) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"            return new AddToDoCommand(input);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"        } else if (input.startsWith(\"deadline\") || input.startsWith(\"dl\")) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"            return new AddDeadlineCommand(input);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"        } else if (input.startsWith(\"event\") || input.startsWith(\"e\")) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nicholaskoh1"},"content":"            return new AddEventCommand(input);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nicholaskoh1"},"content":"        } else if (input.startsWith(\"date\") || input.startsWith(\"dt\")) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nicholaskoh1"},"content":"            return new DateCommand(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nicholaskoh1"},"content":"        } else if (input.startsWith(\"find\") || input.startsWith(\"f\")) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nicholaskoh1"},"content":"            return new FindCommand(input);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nicholaskoh1"},"content":"        } else {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nicholaskoh1"},"content":"            throw new JeffException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns a LocalDateTime object based on the user\u0027s input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return a LocalDateTime object with the date and time specified by the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Nicholaskoh1"},"content":"     * @throws DateTimeParseException if the user\u0027s input is in the wrong format.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Nicholaskoh1"},"content":"    public static LocalDateTime getLocalDateTime(String input) throws DateTimeParseException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Nicholaskoh1"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Nicholaskoh1"},"content":"            return LocalDateTime.parse(input, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Nicholaskoh1"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Nicholaskoh1"},"content":"            return LocalDateTime.parse(input, DateTimeFormatter.ofPattern(\"yyyy-MM-dd hh:mm a\"));","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the string representation of a LocalDate object.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param date LocalDate object.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return String representation of the given date.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Nicholaskoh1"},"content":"    public static String toDateString(LocalDate date) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Nicholaskoh1"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the string representation of a LocalDateTime object.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param dateTime LocalDateTime object.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return String representation of the given date and time.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Nicholaskoh1"},"content":"    public static String toDateTimeString(LocalDateTime dateTime) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Nicholaskoh1"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\"));","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the file string representation of a LocalDateTime object.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param dateTime LocalDateTime object.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return File string representation of the given date and time.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Nicholaskoh1"},"content":"    public static String toDateTimeFileString(LocalDateTime dateTime) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Nicholaskoh1"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Nicholaskoh1"},"content":"     * Adds a space in front of each line in the text.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param text Given text.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return Same text but with a space in front of each line.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Nicholaskoh1"},"content":"    public static String addSpaceInFrontOfEachLine(String text) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Nicholaskoh1"},"content":"        // Split the text into lines","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Nicholaskoh1"},"content":"        String[] lines \u003d text.split(\"\\n\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Nicholaskoh1"},"content":"        // Initialise a StringBuilder","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Nicholaskoh1"},"content":"        StringBuilder resultText \u003d new StringBuilder();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Nicholaskoh1"},"content":"        // Add a space in front each line","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Nicholaskoh1"},"content":"        for (String line : lines) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Nicholaskoh1"},"content":"            resultText.append(\" \").append(line).append(\"\\n\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Nicholaskoh1"},"content":"        // Convert the StringBuilder back to a String","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Nicholaskoh1"},"content":"        return resultText.toString();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":124}},{"path":"src/main/java/jeff/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"import java.util.List;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.exception.JeffException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":" * Represents a connector to take tasks from and write tasks to the task text file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"public class Storage {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"    private Path filePath;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor for the Storage Class.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"     * Stores the file path string as a Path object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param filePath Task file path string.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"        this.filePath \u003d Paths.get(filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"        assert this.filePath !\u003d null : \"File path should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns a scanner that contains the tasks from the task list text file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return scanner that contain the tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"     * @throws JeffException if something went wrong when getting the file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"    public Scanner loadTaskListFromDatabase() throws JeffException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"            Path directoryPath \u003d this.filePath.getParent();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"            assert directoryPath !\u003d null : \"Directory path should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"            if (!Files.exists(directoryPath)) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"                Files.createDirectories(directoryPath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"            if (!Files.exists(this.filePath)) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"                Files.createFile(this.filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nicholaskoh1"},"content":"            return new Scanner(this.filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nicholaskoh1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nicholaskoh1"},"content":"            throw new JeffException(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Nicholaskoh1"},"content":"     * Writes the tasks given to the task list text file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param taskList List that contains the tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Nicholaskoh1"},"content":"     * @throws JeffException if something went wrong when getting the file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Nicholaskoh1"},"content":"    public void updateTaskListInDatabase(TaskList taskList) throws JeffException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Nicholaskoh1"},"content":"        assert taskList !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Nicholaskoh1"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Nicholaskoh1"},"content":"            List\u003cString\u003e fileStringList \u003d taskList.toListOfFileStrings();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Nicholaskoh1"},"content":"            assert fileStringList !\u003d null : \"File string list should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Nicholaskoh1"},"content":"            Files.write(filePath, fileStringList);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Nicholaskoh1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Nicholaskoh1"},"content":"            throw new JeffException(\"Something went wrong when updating the database!\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":73}},{"path":"src/main/java/jeff/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.parser.Parser;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":" * Represents a task with a deadline","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor for the DeadlineTask Class.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"     * Marked as not done from the start.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param deadline Date and time of when the task is due.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"    public DeadlineTask(String description, LocalDateTime deadline) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"        super(description);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"        assert this.deadline !\u003d null : \"Deadline should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor for the DeadlineTask Class.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"     * Whether the task is marked as done or not depends.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param deadline Date and time of when the task is due.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param isDone Whether the task is completed or not.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"    public DeadlineTask(String description, LocalDateTime deadline, boolean isDone) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"        super(description, isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"        assert this.deadline !\u003d null : \"Deadline should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return String representation of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"    @Override","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"    public String toString() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nicholaskoh1"},"content":"        return String.format(","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nicholaskoh1"},"content":"                \"[D]%s (by: %s)\",","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nicholaskoh1"},"content":"                super.toString(),","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nicholaskoh1"},"content":"                Parser.toDateTimeString(this.deadline)","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nicholaskoh1"},"content":"        );","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the string representation of the task to store in the task list file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return File string representation of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Nicholaskoh1"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Nicholaskoh1"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Nicholaskoh1"},"content":"        return String.format(","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Nicholaskoh1"},"content":"                \"D | %s | %s\",","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Nicholaskoh1"},"content":"                super.toFileString(),","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Nicholaskoh1"},"content":"                Parser.toDateTimeFileString(this.deadline)","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Nicholaskoh1"},"content":"        );","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Nicholaskoh1"},"content":"     * Checks if the given date is on the same day as the deadline of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param date Given date.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return true if the given date is on the same day as the task\u0027s deadline and false otherwise.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Nicholaskoh1"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Nicholaskoh1"},"content":"    public boolean isOnThisDate(LocalDate date) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Nicholaskoh1"},"content":"        return date.equals(this.deadline.toLocalDate());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":79}},{"path":"src/main/java/jeff/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.parser.Parser;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":" * Represents an event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"public class EventTask extends Task {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"    private LocalDateTime start;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"    private LocalDateTime end;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor to create a EventTask object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"     * Marked as not done from the start.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param start Start date and time of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param end End date and time of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"    public EventTask(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"        super(description);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"        assert this.start !\u003d null : \"Start period should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"        assert this.end !\u003d null : \"End period should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor to create a EventTask object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"     * Whether the task is marked as done or not depends.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param start Start date and time of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param end End date and time of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param isDone Whether the task is completed or not.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"    public EventTask(String description, LocalDateTime start, LocalDateTime end, boolean isDone) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"        super(description, isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"        assert this.start !\u003d null : \"Start period should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"        assert this.end !\u003d null : \"End period should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return String representation of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nicholaskoh1"},"content":"    @Override","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nicholaskoh1"},"content":"    public String toString() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nicholaskoh1"},"content":"        return String.format(","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Nicholaskoh1"},"content":"                \"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nicholaskoh1"},"content":"                super.toString(),","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nicholaskoh1"},"content":"                Parser.toDateTimeString(this.start),","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Nicholaskoh1"},"content":"                Parser.toDateTimeString(this.end)","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Nicholaskoh1"},"content":"        );","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the string representation of the task to store in the task list file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return File string representation of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Nicholaskoh1"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Nicholaskoh1"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Nicholaskoh1"},"content":"        return String.format(","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Nicholaskoh1"},"content":"                \"E | %s | %s | %s\",","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Nicholaskoh1"},"content":"                super.toFileString(),","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Nicholaskoh1"},"content":"                Parser.toDateTimeFileString(this.start),","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Nicholaskoh1"},"content":"                Parser.toDateTimeFileString(this.end)","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Nicholaskoh1"},"content":"        );","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Nicholaskoh1"},"content":"     * Checks if the given date lies during the event period.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param date Given date.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return true if the given date lies during the event period and false otherwise.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Nicholaskoh1"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Nicholaskoh1"},"content":"    public boolean isOnThisDate(LocalDate date) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Nicholaskoh1"},"content":"        return !date.isBefore(this.start.toLocalDate())","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Nicholaskoh1"},"content":"                \u0026\u0026 !date.isAfter(this.end.toLocalDate());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":89}},{"path":"src/main/java/jeff/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":" * Represents a task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"public abstract class Task {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"    private String description;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":"    private boolean isDone;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor for the Task Class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"     * Marked as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param description Description of the task. Marked as not done.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor for the Task Class.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"     * Could be marked as done or not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param isDone Whether the task is completed or not.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the string representation of whether the task is done or not.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return The string representation of the task status.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"        return this.isDone ? \"[X]\" : \"[  ]\";","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nicholaskoh1"},"content":"    @Override","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nicholaskoh1"},"content":"    public String toString() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nicholaskoh1"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the file string representation of the task to be stored in the task list text file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return the file string representation of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Nicholaskoh1"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Nicholaskoh1"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Nicholaskoh1"},"content":"            return \"1 | \" + this.description;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Nicholaskoh1"},"content":"        } else {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Nicholaskoh1"},"content":"            return \"0 | \" + this.description;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Nicholaskoh1"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Nicholaskoh1"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Nicholaskoh1"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Nicholaskoh1"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Nicholaskoh1"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Nicholaskoh1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the task status.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return true if the task is done and false if the task is not done.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Nicholaskoh1"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Nicholaskoh1"},"content":"        return this.isDone;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns false.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param date Given date.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return false.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Nicholaskoh1"},"content":"    public boolean isOnThisDate(LocalDate date) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Nicholaskoh1"},"content":"        return false;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Nicholaskoh1"},"content":"     * Checks if the task description contains the given name.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param name Given name to check against.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return true if the task description contains the given name and false otherwise.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Nicholaskoh1"},"content":"    public boolean doesDescriptionContain(String name) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Nicholaskoh1"},"content":"        return this.description.toLowerCase().contains(name.toLowerCase().trim());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":109}},{"path":"src/main/java/jeff/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"import java.util.List;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.exception.FileCorruptException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.exception.JeffException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.parser.Parser;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"public class TaskList {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor for the TaskList Class.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"     * Creates an empty task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"    public TaskList() {}","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor for the TaskList Class.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"     * Adds all the tasks from the given list of tasks to the task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param tasks Given list of tasks.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor for the TaskList Class.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"     * Takes in a scanner, categorises the strings into their task types and adds the tasks to the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param scanner Scanner with task strings.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"     * @throws JeffException if the file is corrupt.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"    public TaskList(Scanner scanner) throws JeffException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"        assert scanner !\u003d null : \"Scanner should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"            // Read every line in the scanner","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nicholaskoh1"},"content":"                // Get the task information","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nicholaskoh1"},"content":"                String[] taskParts \u003d scanner.nextLine().split(\" \\\\| \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nicholaskoh1"},"content":"                // Check if the data file is corrupted","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nicholaskoh1"},"content":"                if (taskParts.length \u003c 3) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nicholaskoh1"},"content":"                    throw new FileCorruptException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nicholaskoh1"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Nicholaskoh1"},"content":"                // Split the task parts into their respective parts","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nicholaskoh1"},"content":"                String taskType \u003d taskParts[0];","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nicholaskoh1"},"content":"                boolean isDone \u003d taskParts[1].equals(\"1\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Nicholaskoh1"},"content":"                String taskDescription \u003d taskParts[2];","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Nicholaskoh1"},"content":"                // Initialise the current task","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Nicholaskoh1"},"content":"                Task currentTask \u003d null;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Nicholaskoh1"},"content":"                // Categorise and initialise the task based on its task type","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Nicholaskoh1"},"content":"                try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Nicholaskoh1"},"content":"                    switch (taskType) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Nicholaskoh1"},"content":"                    case \"T\":","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Nicholaskoh1"},"content":"                        // To Do Task","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Nicholaskoh1"},"content":"                        currentTask \u003d new ToDoTask(taskDescription, isDone);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Nicholaskoh1"},"content":"                        break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Nicholaskoh1"},"content":"                    case \"D\":","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Nicholaskoh1"},"content":"                        // Deadline Task","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Nicholaskoh1"},"content":"                        if (taskParts.length \u003e\u003d 4) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Nicholaskoh1"},"content":"                            currentTask \u003d new DeadlineTask(","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Nicholaskoh1"},"content":"                                    taskDescription,","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Nicholaskoh1"},"content":"                                    Parser.getLocalDateTime(taskParts[3]),","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Nicholaskoh1"},"content":"                                    isDone","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Nicholaskoh1"},"content":"                            );","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Nicholaskoh1"},"content":"                        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Nicholaskoh1"},"content":"                        break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Nicholaskoh1"},"content":"                    case \"E\":","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Nicholaskoh1"},"content":"                        // Event Task","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Nicholaskoh1"},"content":"                        if (taskParts.length \u003e\u003d 5) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Nicholaskoh1"},"content":"                            currentTask \u003d new EventTask(","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Nicholaskoh1"},"content":"                                    taskDescription,","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Nicholaskoh1"},"content":"                                    Parser.getLocalDateTime(taskParts[3]),","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Nicholaskoh1"},"content":"                                    Parser.getLocalDateTime(taskParts[4]),","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Nicholaskoh1"},"content":"                                    isDone","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Nicholaskoh1"},"content":"                            );","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Nicholaskoh1"},"content":"                        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Nicholaskoh1"},"content":"                        break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Nicholaskoh1"},"content":"                    default:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Nicholaskoh1"},"content":"                        break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Nicholaskoh1"},"content":"                    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Nicholaskoh1"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Nicholaskoh1"},"content":"                    throw new FileCorruptException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Nicholaskoh1"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Nicholaskoh1"},"content":"                if (currentTask \u003d\u003d null) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Nicholaskoh1"},"content":"                    throw new FileCorruptException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Nicholaskoh1"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Nicholaskoh1"},"content":"                this.addTask(currentTask);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Nicholaskoh1"},"content":"                assert this.tasks.contains(currentTask) : \"Task list should contain the new task after adding it\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Nicholaskoh1"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Nicholaskoh1"},"content":"            assert this.tasks !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Nicholaskoh1"},"content":"        } catch (FileCorruptException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Nicholaskoh1"},"content":"            throw new JeffException(\"Sorry! The task file is corrupted!\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the task at the given index in the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param index Index of the target task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return Task at the given index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Nicholaskoh1"},"content":"    public Task getTaskByIndex(int index) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Nicholaskoh1"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c this.tasks.size() : \"Task index should not be out of bounds\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Nicholaskoh1"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Nicholaskoh1"},"content":"     * Checks if the given task is in the task list.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param task Given task.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return true if the given task is in the task list, and false otherwise.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Nicholaskoh1"},"content":"    public boolean contains(Task task) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Nicholaskoh1"},"content":"        return this.tasks.contains(task);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Nicholaskoh1"},"content":"     * Adds the given task to the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param task Task to be added to the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Nicholaskoh1"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Nicholaskoh1"},"content":"        assert task !\u003d null : \"Input task should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Nicholaskoh1"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Nicholaskoh1"},"content":"     * Removes the given task from the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param task Task to be removed from the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Nicholaskoh1"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Nicholaskoh1"},"content":"        assert task !\u003d null : \"Input task should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Nicholaskoh1"},"content":"        this.tasks.remove(task);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return Size of the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Nicholaskoh1"},"content":"    public int size() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Nicholaskoh1"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Nicholaskoh1"},"content":"     * Checks if the task list is empty or not.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return true if the task list is empty and false otherwise.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Nicholaskoh1"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Nicholaskoh1"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns a filtered task list whose tasks only takes place on the given date.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param date Given date.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return A filtered task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Nicholaskoh1"},"content":"    public TaskList filterByDate(LocalDate date) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Nicholaskoh1"},"content":"        assert date !\u003d null : \"Input date should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Nicholaskoh1"},"content":"        return new TaskList(","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Nicholaskoh1"},"content":"                this.tasks.stream().filter(task -\u003e task.isOnThisDate(date)).toList()","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Nicholaskoh1"},"content":"        );","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns a filtered task list filtered by the given name.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param name Given name to filter.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return A filtered task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Nicholaskoh1"},"content":"    public TaskList filterByName(String name) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Nicholaskoh1"},"content":"        return new TaskList(","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Nicholaskoh1"},"content":"                this.tasks.stream().filter(task -\u003e task.doesDescriptionContain(name)).toList()","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Nicholaskoh1"},"content":"        );","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns a list of the file string representation of the tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return A list of the file string representation of the tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Nicholaskoh1"},"content":"    public List\u003cString\u003e toListOfFileStrings() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Nicholaskoh1"},"content":"        return this.tasks.stream().map(Task::toFileString).toList();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the string representation of the task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return String representation of the given task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Nicholaskoh1"},"content":"    @Override","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Nicholaskoh1"},"content":"    public String toString() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Nicholaskoh1"},"content":"        // Initialise a StringBuilder","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Nicholaskoh1"},"content":"        StringBuilder listString \u003d new StringBuilder();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Nicholaskoh1"},"content":"        // Loop through the inputList and add it to the StringBuilder","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Nicholaskoh1"},"content":"        for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Nicholaskoh1"},"content":"            listString.append(i + 1).append(\".\").append(this.getTaskByIndex(i).toString());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Nicholaskoh1"},"content":"            // Only add a new line when it is not the last task in the taskList","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Nicholaskoh1"},"content":"            if (i !\u003d this.size() - 1) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Nicholaskoh1"},"content":"                listString.append(\"\\n\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Nicholaskoh1"},"content":"            }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Nicholaskoh1"},"content":"        return listString.toString();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the target task from the task list based on the user input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param prefix Action that the user wants to take.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param alias Alias of the prefix.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return The target task from the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Nicholaskoh1"},"content":"     * @throws JeffException if the input is in the wrong format or if the task number specified by the user does not","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Nicholaskoh1"},"content":"     *                       exist.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Nicholaskoh1"},"content":"    public Task getTaskByCommand(String input, String prefix, String alias) throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Nicholaskoh1"},"content":"        assert !prefix.isEmpty() : \"Input prefix should not be empty\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Nicholaskoh1"},"content":"        // Check if input is valid","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Nicholaskoh1"},"content":"        if (!input.matches(prefix + \" \\\\d+\") \u0026\u0026 !input.matches(alias + \" \\\\d+\")) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Nicholaskoh1"},"content":"            throw new JeffException(","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Nicholaskoh1"},"content":"                    String.format(","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Nicholaskoh1"},"content":"                            \"The format is wrong! It should be \\\"%s(or %s) xx\\\", where xx is a number.\",","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Nicholaskoh1"},"content":"                            prefix,","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Nicholaskoh1"},"content":"                            alias","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Nicholaskoh1"},"content":"                    )","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Nicholaskoh1"},"content":"            );","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Nicholaskoh1"},"content":"        String taskNumberString;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Nicholaskoh1"},"content":"        if (input.matches(prefix + \" \\\\d+\")) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Nicholaskoh1"},"content":"            taskNumberString \u003d input.substring(prefix.length() + 1);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Nicholaskoh1"},"content":"        } else {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Nicholaskoh1"},"content":"            taskNumberString \u003d input.substring(alias.length() + 1);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Nicholaskoh1"},"content":"        int taskIndex \u003d Integer.parseInt(taskNumberString) - 1;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Nicholaskoh1"},"content":"        // Check if taskIndex exists in taskList","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Nicholaskoh1"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d this.size()) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Nicholaskoh1"},"content":"            throw new JeffException(\"This task number does not exist!\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Nicholaskoh1"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Nicholaskoh1"},"content":"        return this.getTaskByIndex(taskIndex);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":276}},{"path":"src/main/java/jeff/task/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":" * Represents a to-do task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor for the ToDoTask Class.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"     * Task is marked as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"    public ToDoTask(String description) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"        super(description);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"     * Constructor for the ToDoTask Class.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"     * Task may be marked as done or not done depending on the input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"     * @param isDone Whether the task is marked as done or not.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"    public ToDoTask(String description, boolean isDone) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"        super(description, isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return String representation of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"    @Override","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"    public String toString() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"     * Returns the file string representation of the task to be stored in the task list text file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"     * @return File string representation of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"        return \"T | \" + super.toFileString();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":47}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"            fx:controller\u003d\"jeff.gui.MainWindow\"\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":44}},{"path":"src/test/java/jeff/JeffTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"public class JeffTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":4}},{"path":"src/test/java/jeff/command/AddDeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.command;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"import java.io.File;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.exception.JeffException;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.DeadlineTask;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"public class AddDeadlineCommandTest {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"    private static final String WRONG_FORMAT_ERROR \u003d","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"            \"The format is wrong! It should be \\\"deadline(or dl) xx /by yyyy-mm-dd HH:mm(or hh:mm AM/PM)\\\"!\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"    private Storage storage;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"    @BeforeEach","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"    public void setUp() throws JeffException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"        new File(\"data/tasks.txt\").delete();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"        storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"        tasks \u003d new TaskList(storage.loadTaskListFromDatabase());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_addDeadlineTask24HourClock() throws JeffException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new AddDeadlineCommand(\"deadline return book /by 2024-08-30 18:00\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d c.execute(tasks, storage);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"        assertInstanceOf(DeadlineTask.class, tasks.getTaskByIndex(0));","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\"[D][  ] return book (by: Aug 30 2024 06:00 pm)\", tasks.getTaskByIndex(0).toString());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\" Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \"    [D][  ] return book (by: Aug 30 2024 06:00 pm)\\n\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \" Now you have 1 tasks in the list.\\n\",","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"                response);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_addDeadlineTask24HourClockAlias() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new AddDeadlineCommand(\"dl return book /by 2024-08-30 18:00\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d c.execute(tasks, storage);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nicholaskoh1"},"content":"        assertInstanceOf(DeadlineTask.class, tasks.getTaskByIndex(0));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\"[D][  ] return book (by: Aug 30 2024 06:00 pm)\", tasks.getTaskByIndex(0).toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\" Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \"    [D][  ] return book (by: Aug 30 2024 06:00 pm)\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \" Now you have 1 tasks in the list.\\n\",","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Nicholaskoh1"},"content":"                response);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_addDeadlineTask12HourClock() throws JeffException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new AddDeadlineCommand(\"deadline return book /by 2024-08-30 06:00 pm\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d c.execute(tasks, storage);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Nicholaskoh1"},"content":"        assertInstanceOf(DeadlineTask.class, tasks.getTaskByIndex(0));","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\"[D][  ] return book (by: Aug 30 2024 06:00 pm)\", tasks.getTaskByIndex(0).toString());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\" Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \"    [D][  ] return book (by: Aug 30 2024 06:00 pm)\\n\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \" Now you have 1 tasks in the list.\\n\",","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Nicholaskoh1"},"content":"                response);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_addDeadlineTask12HourClockAlias() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new AddDeadlineCommand(\"dl return book /by 2024-08-30 06:00 pm\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d c.execute(tasks, storage);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Nicholaskoh1"},"content":"        assertInstanceOf(DeadlineTask.class, tasks.getTaskByIndex(0));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\"[D][  ] return book (by: Aug 30 2024 06:00 pm)\", tasks.getTaskByIndex(0).toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\" Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \"    [D][  ] return book (by: Aug 30 2024 06:00 pm)\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \" Now you have 1 tasks in the list.\\n\",","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Nicholaskoh1"},"content":"                response);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_noDescriptionDeadlineTask_throwsException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new AddDeadlineCommand(\"deadline\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_noDescriptionDeadlineTaskAlias_throwsException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new AddDeadlineCommand(\"dl\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_wrongFormatDeadlineTask_throwsException() throws JeffException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Nicholaskoh1"},"content":"        // Needs to be HH:mm and not H:mm","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new AddDeadlineCommand(\"deadline return book /by 2024-08-30 8:00\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_wrongFormatDeadlineTaskAlias_throwsException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Nicholaskoh1"},"content":"        // Needs to be HH:mm and not H:mm","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new AddDeadlineCommand(\"dl return book /by 2024-08-30 8:00\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_noSpacingDeadlineTask_throwsException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Nicholaskoh1"},"content":"        // Needs to be HH:mm and not H:mm","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new AddDeadlineCommand(\"deadlinereturn book /by 2024-08-30 08:00\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_noSpacingDeadlineTaskAlias_throwsException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Nicholaskoh1"},"content":"        // Needs to be HH:mm and not H:mm","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new AddDeadlineCommand(\"dlreturn book /by 2024-08-30 08:00\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-09-07","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":138}},{"path":"src/test/java/jeff/command/AddEventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.command;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"import java.io.File;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.exception.JeffException;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.EventTask;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"public class AddEventCommandTest {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"    private static final String WRONG_FORMAT_ERROR \u003d \"The format is wrong! \"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"            + \"It should be \\\"event(or e) xx /from yyyy-mm-dd HH:mm(or hh:mm am/pm) \"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"            + \"/to yyyy-mm--dd HH:mm(or hh:mm am/pm)\\\"\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"    private Storage storage;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"    @BeforeEach","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"    public void setUp() throws JeffException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"        new File(\"data/tasks.txt\").delete();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"        storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"        tasks \u003d new TaskList(storage.loadTaskListFromDatabase());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_addEventTask24HourClock() throws JeffException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new AddEventCommand(","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"                \"event project meeting /from 2024-08-27 08:00 /to 2024-08-27 20:00\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"        );","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d c.execute(tasks, storage);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"        assertInstanceOf(EventTask.class, tasks.getTaskByIndex(0));","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\"[E][  ] project meeting (from: Aug 27 2024 08:00 am to: Aug 27 2024 08:00 pm)\",","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"                tasks.getTaskByIndex(0).toString());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\" Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \"    [E][  ] project meeting (from: Aug 27 2024 08:00 am to: Aug 27 2024 08:00 pm)\\n\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \" Now you have 1 tasks in the list.\\n\",","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"                response);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_addEventTask24HourClockAlias() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new AddEventCommand(","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nicholaskoh1"},"content":"                \"e project meeting /from 2024-08-27 08:00 /to 2024-08-27 20:00\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nicholaskoh1"},"content":"        );","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d c.execute(tasks, storage);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nicholaskoh1"},"content":"        assertInstanceOf(EventTask.class, tasks.getTaskByIndex(0));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\"[E][  ] project meeting (from: Aug 27 2024 08:00 am to: Aug 27 2024 08:00 pm)\",","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Nicholaskoh1"},"content":"                tasks.getTaskByIndex(0).toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\" Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \"    [E][  ] project meeting (from: Aug 27 2024 08:00 am to: Aug 27 2024 08:00 pm)\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \" Now you have 1 tasks in the list.\\n\",","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Nicholaskoh1"},"content":"                response);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_addEventTask12HourClock() throws JeffException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new AddEventCommand(","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Nicholaskoh1"},"content":"                \"event project meeting /from 2024-08-27 08:00 am /to 2024-08-27 08:00 pm\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Nicholaskoh1"},"content":"        );","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d c.execute(tasks, storage);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Nicholaskoh1"},"content":"        assertInstanceOf(EventTask.class, tasks.getTaskByIndex(0));","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\"[E][  ] project meeting (from: Aug 27 2024 08:00 am to: Aug 27 2024 08:00 pm)\",","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Nicholaskoh1"},"content":"                tasks.getTaskByIndex(0).toString());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\" Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \"    [E][  ] project meeting (from: Aug 27 2024 08:00 am to: Aug 27 2024 08:00 pm)\\n\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \" Now you have 1 tasks in the list.\\n\",","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Nicholaskoh1"},"content":"                response);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_addEventTask12HourClockAlias() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new AddEventCommand(","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Nicholaskoh1"},"content":"                \"e project meeting /from 2024-08-27 08:00 am /to 2024-08-27 08:00 pm\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Nicholaskoh1"},"content":"        );","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d c.execute(tasks, storage);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Nicholaskoh1"},"content":"        assertInstanceOf(EventTask.class, tasks.getTaskByIndex(0));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\"[E][  ] project meeting (from: Aug 27 2024 08:00 am to: Aug 27 2024 08:00 pm)\",","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Nicholaskoh1"},"content":"                tasks.getTaskByIndex(0).toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\" Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \"    [E][  ] project meeting (from: Aug 27 2024 08:00 am to: Aug 27 2024 08:00 pm)\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \" Now you have 1 tasks in the list.\\n\",","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Nicholaskoh1"},"content":"                response);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_noDescriptionEventTask_throwsException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new AddEventCommand(\"event\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_noDescriptionEventTaskAlias_throwsException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new AddEventCommand(\"e\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_wrongFormatEventTask_throwsException() throws JeffException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Nicholaskoh1"},"content":"        // Needs to be am/pm and not AM/PM","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new AddEventCommand(","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Nicholaskoh1"},"content":"                \"event project meeting /from 2024-08-27 08:00 AM /to 2024-08-27 08:00 PM\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Nicholaskoh1"},"content":"        );","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_wrongFormatEventTaskAlias_throwsException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Nicholaskoh1"},"content":"        // Needs to be am/pm and not AM/PM","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new AddEventCommand(","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Nicholaskoh1"},"content":"                \"e project meeting /from 2024-08-27 08:00 AM /to 2024-08-27 08:00 PM\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Nicholaskoh1"},"content":"        );","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_noSpacingEventTask_throwsException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new AddEventCommand(","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Nicholaskoh1"},"content":"                \"eventproject meeting /from 2024-08-27 08:00 am /to 2024-08-27 08:00 pm\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Nicholaskoh1"},"content":"        );","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_noSpacingEventTaskAlias_throwsException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new AddEventCommand(","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Nicholaskoh1"},"content":"                \"eproject meeting /from 2024-08-27 08:00 am /to 2024-08-27 08:00 pm\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Nicholaskoh1"},"content":"        );","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-09-07","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":157}},{"path":"src/test/java/jeff/command/AddToDoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.command;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"import java.io.File;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.exception.JeffException;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.ToDoTask;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"public class AddToDoCommandTest {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"    private static final String WRONG_FORMAT_ERROR \u003d \"The format is wrong! It should be \\\"todo(or t) xx\\\"\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"    private Storage storage;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"    @BeforeEach","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"    public void setUp() throws JeffException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"        new File(\"data/tasks.txt\").delete();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"        storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"        tasks \u003d new TaskList(storage.loadTaskListFromDatabase());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_addToDoTask() throws JeffException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new AddToDoCommand(\"todo read book\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d c.execute(tasks, storage);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"        assertInstanceOf(ToDoTask.class, tasks.getTaskByIndex(0));","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\"[T][  ] read book\", tasks.getTaskByIndex(0).toString());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\" Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \"    [T][  ] read book\\n\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \" Now you have 1 tasks in the list.\\n\",","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"                response);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_addToDoTaskAlias() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new AddToDoCommand(\"t read book\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d c.execute(tasks, storage);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nicholaskoh1"},"content":"        assertInstanceOf(ToDoTask.class, tasks.getTaskByIndex(0));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\"[T][  ] read book\", tasks.getTaskByIndex(0).toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\" Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \"    [T][  ] read book\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \" Now you have 1 tasks in the list.\\n\",","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nicholaskoh1"},"content":"                response);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_noDescriptionToDoTask_throwsException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new AddToDoCommand(\"todo\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_noDescriptionToDoTaskAlias_throwsException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new AddToDoCommand(\"t\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_noSpacingToDoTask_throwsException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new AddToDoCommand(\"todoborrow book\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_noSpacingToDoTaskAlias_throwsException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new AddToDoCommand(\"tborrow book\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-09-07","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":89}},{"path":"src/test/java/jeff/command/DateCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.command;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"import java.io.File;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.exception.JeffException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"public class DateCommandTest {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"    private static final String WRONG_FORMAT_ERROR \u003d \"The format is wrong! It should be \\\"date(or dt) yyyy-mm-dd\\\"!\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"    public void setUp() throws JeffException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"        new File(\"data/tasks.txt\").delete();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"        storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"        tasks \u003d new TaskList(storage.loadTaskListFromDatabase());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"        new AddToDoCommand(\"todo borrow book\").execute(tasks, storage);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"        new AddDeadlineCommand(\"deadline return book /by 2024-08-30 18:00\").execute(tasks, storage);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"        new AddEventCommand(\"event project meeting /from 2024-08-27 08:00 /to 2024-08-27 20:00\")","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"                .execute(tasks, storage);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_deadlineDate() throws JeffException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d new DateCommand(\"date 2024-08-30\").execute(tasks, storage);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\" Here are the tasks for 30 Aug 2024:\\n\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \" 1.[D][  ] return book (by: Aug 30 2024 06:00 pm)\\n\",","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"                response);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_deadlineDateAlias() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d new DateCommand(\"dt 2024-08-30\").execute(tasks, storage);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\" Here are the tasks for 30 Aug 2024:\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \" 1.[D][  ] return book (by: Aug 30 2024 06:00 pm)\\n\",","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"                response);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_eventDate() throws JeffException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d new DateCommand(\"date 2024-08-27\").execute(tasks, storage);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\" Here are the tasks for 27 Aug 2024:\\n\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \" 1.[E][  ] project meeting (from: Aug 27 2024 08:00 am to: Aug 27 2024 08:00 pm)\\n\",","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Nicholaskoh1"},"content":"                response);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_eventDateAlias() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d new DateCommand(\"dt 2024-08-27\").execute(tasks, storage);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\" Here are the tasks for 27 Aug 2024:\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \" 1.[E][  ] project meeting (from: Aug 27 2024 08:00 am to: Aug 27 2024 08:00 pm)\\n\",","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Nicholaskoh1"},"content":"                response);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_randomDate_throwException() throws JeffException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new DateCommand(\"date 2024-08-28\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\"No deadlines/events on 28 Aug 2024!\", exception.toString());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_randomDateAlias_throwException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new DateCommand(\"dt 2024-08-28\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\"No deadlines/events on 28 Aug 2024!\", exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_empty_throwException() throws JeffException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new DateCommand(\"date\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_emptyAlias_throwException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new DateCommand(\"dt\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_wrongFormat_throwException() throws JeffException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new DateCommand(\"date 28 Aug\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_wrongFormatAlias_throwException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new DateCommand(\"dt 28 Aug\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_noSpace_throwsException() throws JeffException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new DateCommand(\"date28Aug\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_noSpaceAlias_throwsException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new DateCommand(\"dt28Aug\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":131}},{"path":"src/test/java/jeff/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"import java.io.File;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.exception.JeffException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"    private static final String WRONG_FORMAT_ERROR \u003d","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"            \"The format is wrong! It should be \\\"delete(or dd) xx\\\", where xx is a number.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"    private static final String TASK_NUM_DONT_EXIST_ERROR \u003d \"This task number does not exist!\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"    public void setUp() throws JeffException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"        new File(\"data/tasks.txt\").delete();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"        storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"        tasks \u003d new TaskList(storage.loadTaskListFromDatabase());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new AddToDoCommand(\"todo read book\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"        c.execute(tasks, storage);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_deleteExistingTask() throws JeffException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new DeleteCommand(\"delete 1\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d c.execute(tasks, storage);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(0, tasks.size());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\" Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \"    [T][  ] read book\\n\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \" Now you have 0 tasks in the list.\\n\",","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"                response);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_deleteExistingTaskAlias() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new DeleteCommand(\"dd 1\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d c.execute(tasks, storage);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(0, tasks.size());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\" Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \"    [T][  ] read book\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \" Now you have 0 tasks in the list.\\n\",","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nicholaskoh1"},"content":"                response);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_nonExistentTaskDelete_throwException() throws JeffException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new DeleteCommand(\"delete 2\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(TASK_NUM_DONT_EXIST_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_nonExistentTaskDeleteAlias_throwException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new DeleteCommand(\"dd 2\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(TASK_NUM_DONT_EXIST_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_noInputDelete_throwException() throws JeffException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new DeleteCommand(\"delete\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_noInputDeleteAlias_throwException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new DeleteCommand(\"dd\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_nonNumberInputDelete_throwException() throws JeffException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new DeleteCommand(\"delete hi\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_nonNumberInputDeleteAlias_throwException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new DeleteCommand(\"dd hi\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_negativeNumberDelete_throwException() throws JeffException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new DeleteCommand(\"delete -1\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_negativeNumberDeleteAlias_throwException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new DeleteCommand(\"dd -1\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_zeroNumberDelete_throwException() throws JeffException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new DeleteCommand(\"delete 0\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(TASK_NUM_DONT_EXIST_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_zeroNumberDeleteAlias_throwException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new DeleteCommand(\"dd 0\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(TASK_NUM_DONT_EXIST_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_noSpacingDelete_throwException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new DeleteCommand(\"delete1\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_noSpacingDeleteAlias_throwException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new DeleteCommand(\"dd1\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":163}},{"path":"src/test/java/jeff/command/FindCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.command;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"import java.io.File;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.exception.JeffException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"public class FindCommandTest {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"    private static final String WRONG_FORMAT_ERROR \u003d \"The format is wrong! It should be \\\"find(or f) xx\\\"!\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"    public void setUp() throws JeffException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"        new File(\"data/tasks.txt\").delete();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"        storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"        tasks \u003d new TaskList(storage.loadTaskListFromDatabase());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"        new AddToDoCommand(\"todo borrow book\").execute(tasks, storage);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"        new AddDeadlineCommand(\"deadline return book /by 2024-08-30 18:00\").execute(tasks, storage);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"        new AddEventCommand(\"event project meeting /from 2024-08-27 08:00 /to 2024-08-27 20:00\")","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"                .execute(tasks, storage);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_findWord_success() throws JeffException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d new FindCommand(\"find book\").execute(tasks, storage);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\" Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \" 1.[T][  ] borrow book\\n\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \" 2.[D][  ] return book (by: Aug 30 2024 06:00 pm)\\n\",","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"                response);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_findWordAlias_success() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d new FindCommand(\"f book\").execute(tasks, storage);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\" Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \" 1.[T][  ] borrow book\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \" 2.[D][  ] return book (by: Aug 30 2024 06:00 pm)\\n\",","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nicholaskoh1"},"content":"                response);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_findPhrase() throws JeffException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d new FindCommand(\"find borrow book\").execute(tasks, storage);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\" Here are the matching tasks in your list:\\n\" + \" 1.[T][  ] borrow book\\n\",","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nicholaskoh1"},"content":"                response);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_findPhraseAlias() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d new FindCommand(\"f borrow book\").execute(tasks, storage);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\" Here are the matching tasks in your list:\\n\" + \" 1.[T][  ] borrow book\\n\",","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Nicholaskoh1"},"content":"                response);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_findIncompleteWord() throws JeffException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d new FindCommand(\"find boo\").execute(tasks, storage);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\" Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \" 1.[T][  ] borrow book\\n\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \" 2.[D][  ] return book (by: Aug 30 2024 06:00 pm)\\n\",","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Nicholaskoh1"},"content":"                response);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_findIncompleteWordAlias() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d new FindCommand(\"f boo\").execute(tasks, storage);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\" Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \" 1.[T][  ] borrow book\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \" 2.[D][  ] return book (by: Aug 30 2024 06:00 pm)\\n\",","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Nicholaskoh1"},"content":"                response);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_findByWord_throwsException() throws JeffException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new FindCommand(\"find by\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\"Sorry, no task contains the phrase by.\", exception.toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_findByWordAlias_throwsException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new FindCommand(\"f by\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\"Sorry, no task contains the phrase by.\", exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_findWord_failure() throws JeffException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new FindCommand(\"find food\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\"Sorry, no task contains the phrase food.\", exception.toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_findWordAlias_failure() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new FindCommand(\"f food\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\"Sorry, no task contains the phrase food.\", exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_noSpacing_throwsException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new FindCommand(\"findfood\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_noSpacingAlias_throwsException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new FindCommand(\"ffood\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_emptyDescription_throwsException() throws JeffException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new FindCommand(\"find\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_emptyDescriptionAlias_throwsException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new FindCommand(\"f\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":151}},{"path":"src/test/java/jeff/command/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.command;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"import java.io.File;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.exception.JeffException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"public class ListCommandTest {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"    private static final String EMPTY_LIST_ERROR \u003d \"List is empty!\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"    public void setUp() throws JeffException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"        new File(\"data/tasks.txt\").delete();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"        storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"        tasks \u003d new TaskList(storage.loadTaskListFromDatabase());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_nonEmptyList() throws JeffException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"        new AddToDoCommand(\"todo borrow book\").execute(tasks, storage);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"        new AddDeadlineCommand(\"deadline return book /by 2024-08-30 18:00\").execute(tasks, storage);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"        new AddEventCommand(\"event project meeting /from 2024-08-27 08:00 /to 2024-08-27 20:00\")","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"                .execute(tasks, storage);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d new ListCommand(\"list\").execute(tasks, storage);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\" 1.[T][  ] borrow book\\n\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \" 2.[D][  ] return book (by: Aug 30 2024 06:00 pm)\\n\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \" 3.[E][  ] project meeting (from: Aug 27 2024 08:00 am to: Aug 27 2024 08:00 pm)\\n\",","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"                response);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_nonEmptyListAlias() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"        new AddToDoCommand(\"todo borrow book\").execute(tasks, storage);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"        new AddDeadlineCommand(\"deadline return book /by 2024-08-30 18:00\").execute(tasks, storage);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"        new AddEventCommand(\"event project meeting /from 2024-08-27 08:00 /to 2024-08-27 20:00\")","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nicholaskoh1"},"content":"                .execute(tasks, storage);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d new ListCommand(\"l\").execute(tasks, storage);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\" 1.[T][  ] borrow book\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \" 2.[D][  ] return book (by: Aug 30 2024 06:00 pm)\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nicholaskoh1"},"content":"                        + \" 3.[E][  ] project meeting (from: Aug 27 2024 08:00 am to: Aug 27 2024 08:00 pm)\\n\",","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nicholaskoh1"},"content":"                response);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_emptyList_throwException() throws JeffException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new ListCommand(\"list\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(EMPTY_LIST_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_emptyListAlias_throwException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new ListCommand(\"l\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(EMPTY_LIST_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":73}},{"path":"src/test/java/jeff/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.command;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"import java.io.File;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.exception.JeffException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"public class MarkCommandTest {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"    private static final String TASK_DONE_ERROR \u003d \"This task has already been marked as done!\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"    private static final String TASK_NUM_DONT_EXIST_ERROR \u003d \"This task number does not exist!\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"    private static final String WRONG_FORMAT_ERROR \u003d","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"            \"The format is wrong! It should be \\\"mark(or m) xx\\\", where xx is a number.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"    public void setUp() throws JeffException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"        new File(\"data/tasks.txt\").delete();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"        storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"        tasks \u003d new TaskList(storage.loadTaskListFromDatabase());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"        new AddToDoCommand(\"todo read book\").execute(tasks, storage);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_markTask() throws JeffException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d new MarkCommand(\"mark 1\").execute(tasks, storage);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\" OK, I\u0027ve marked this task as done:\\n\" + \"    [T][X] read book\\n\",","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"                response);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_markTaskAlias() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d new MarkCommand(\"m 1\").execute(tasks, storage);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\" OK, I\u0027ve marked this task as done:\\n\" + \"    [T][X] read book\\n\",","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"                response);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_markAlreadyMarkedTask_throwException() throws JeffException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nicholaskoh1"},"content":"        new MarkCommand(\"mark 1\").execute(tasks, storage);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new MarkCommand(\"mark 1\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(TASK_DONE_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_markAlreadyMarkedTaskAlias_throwException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Nicholaskoh1"},"content":"        new MarkCommand(\"mark 1\").execute(tasks, storage);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new MarkCommand(\"m 1\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(TASK_DONE_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_markNonExistentTask_throwException() throws JeffException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new MarkCommand(\"mark 2\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(TASK_NUM_DONT_EXIST_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_markNonExistentTaskAlias_throwException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new MarkCommand(\"m 2\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(TASK_NUM_DONT_EXIST_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_emptyMarkTask_throwException() throws JeffException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new MarkCommand(\"mark\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_emptyMarkTaskAlias_throwException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new MarkCommand(\"m\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_noSpacingMarkTask_throwException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new MarkCommand(\"mark1\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_noSpacingMarkTaskAlias_throwException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new MarkCommand(\"m1\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":113}},{"path":"src/test/java/jeff/command/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicholaskoh1"},"content":"package jeff.command;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Nicholaskoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Nicholaskoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Nicholaskoh1"},"content":"import java.io.File;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Nicholaskoh1"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Nicholaskoh1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.exception.JeffException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.storage.Storage;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Nicholaskoh1"},"content":"import jeff.task.TaskList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Nicholaskoh1"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Nicholaskoh1"},"content":"    private static final String TASK_NOT_DONE_ERROR \u003d \"This task has already been marked as not done yet!\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Nicholaskoh1"},"content":"    private static final String TASK_NUM_DONT_EXIST_ERROR \u003d \"This task number does not exist!\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Nicholaskoh1"},"content":"    private static final String WRONG_FORMAT_ERROR \u003d","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Nicholaskoh1"},"content":"            \"The format is wrong! It should be \\\"unmark(or u) xx\\\", where xx is a number.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Nicholaskoh1"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Nicholaskoh1"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Nicholaskoh1"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Nicholaskoh1"},"content":"    public void setUp() throws JeffException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Nicholaskoh1"},"content":"        new File(\"data/tasks.txt\").delete();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Nicholaskoh1"},"content":"        storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Nicholaskoh1"},"content":"        tasks \u003d new TaskList(storage.loadTaskListFromDatabase());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Nicholaskoh1"},"content":"        new AddToDoCommand(\"todo borrow book\").execute(tasks, storage);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Nicholaskoh1"},"content":"        new MarkCommand(\"mark 1\").execute(tasks, storage);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_unmarkTask() throws JeffException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d new UnmarkCommand(\"unmark 1\").execute(tasks, storage);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\" OK, I\u0027ve marked this task as not done yet:\\n\" + \"    [T][  ] borrow book\\n\",","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Nicholaskoh1"},"content":"                response);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_unmarkTaskAlias() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Nicholaskoh1"},"content":"        String response \u003d new UnmarkCommand(\"u 1\").execute(tasks, storage);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(\" OK, I\u0027ve marked this task as not done yet:\\n\" + \"    [T][  ] borrow book\\n\",","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Nicholaskoh1"},"content":"                response);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_unmarkAlreadyUnmarkedTask_throwException() throws JeffException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Nicholaskoh1"},"content":"        new UnmarkCommand(\"unmark 1\").execute(tasks, storage);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new UnmarkCommand(\"unmark 1\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(TASK_NOT_DONE_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_unmarkAlreadyUnmarkedTaskAlias_throwException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Nicholaskoh1"},"content":"        new UnmarkCommand(\"unmark 1\").execute(tasks, storage);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new UnmarkCommand(\"u 1\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(TASK_NOT_DONE_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_unmarkNonExistentTask_throwException() throws JeffException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new UnmarkCommand(\"unmark 2\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(TASK_NUM_DONT_EXIST_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_unmarkNonExistentTaskAlias_throwException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new UnmarkCommand(\"u 2\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(TASK_NUM_DONT_EXIST_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_emptyUnmarkTask_throwException() throws JeffException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new UnmarkCommand(\"unmark\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_emptyUnmarkTaskAlias_throwException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new UnmarkCommand(\"u\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_wrongFormatUnmarkTask_throwException() throws JeffException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new UnmarkCommand(\"unmark1\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Nicholaskoh1"},"content":"    @Test","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Nicholaskoh1"},"content":"    public void execute_wrongFormatUnmarkTaskAlias_throwException() throws JeffException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Nicholaskoh1"},"content":"        Command c \u003d new UnmarkCommand(\"u1\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Nicholaskoh1"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Nicholaskoh1"},"content":"        JeffException exception \u003d assertThrows(JeffException.class, () -\u003e c.execute(tasks, storage));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Nicholaskoh1"},"content":"        assertEquals(WRONG_FORMAT_ERROR, exception.toString());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Nicholaskoh1"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Nicholaskoh1"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"Nicholaskoh1":114}}]
