[{"path":"ai.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"What I have used AI for","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"1. I write down my implementation of the question, and then ask the AI model design questions about the code","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"2. For example, the first time I wrote my Orion class it was long winding and not very modular","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":"3. So, I asked Claude Sonnet for suggestions on how to improve it, and it told me I should follow the \"Single Responsibility principle\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":"4. I then searched about it on Google (and then read https://en.wikipedia.org/wiki/Single-responsibility_principle), and decided to refactor my code to fix it.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":"5. Used AI to understand file I/O in Java and use for my function (after giving it pseudocode)","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":"### Other Minor Things I used it for","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":"1. Understanding various Java features I had forgotten / not known (Overriding rules learnt in CS2030s, packages)","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":"2. ","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":10}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027  // Shadow plugin for FAT JAR","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":"    id \u0027checkstyle\u0027  // Add the Checkstyle plugin","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":"group \u0027orion\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":"version \u00270.2.0\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":"    mavenCentral()  // Where to find dependencies","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"sourceSets {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":"    main {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":"        resources {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":"            srcDirs \u003d [\u0027src/main/resources\u0027]","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pradyuprasad"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pradyuprasad"},"content":"application {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pradyuprasad"},"content":"    mainClassName \u003d \u0027orion.Launcher\u0027  // Your main class","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pradyuprasad"},"content":"javafx {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pradyuprasad"},"content":"    version \u003d \"17\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pradyuprasad"},"content":"    modules \u003d [\u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pradyuprasad"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.8.1\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pradyuprasad"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.8.1\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pradyuprasad"},"content":"    manifest {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pradyuprasad"},"content":"        attributes \u0027Main-Class\u0027: \u0027orion.Launcher\u0027  ","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in  ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pradyuprasad"},"content":"// Add Checkstyle configuration","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pradyuprasad"},"content":"checkstyle {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pradyuprasad"},"content":"    toolVersion \u003d \u00278.45\u0027","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pradyuprasad"},"content":"    configFile \u003d file(\"${project.rootDir}/checkstyle.xml\")","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pradyuprasad"},"content":"    configDirectory \u003d file(\"${project.rootDir}\")","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pradyuprasad"},"content":"tasks.withType(Checkstyle) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pradyuprasad"},"content":"    reports {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pradyuprasad"},"content":"        xml.required \u003d false  // Disable XML report","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pradyuprasad"},"content":"        html.required \u003d true  // Enable HTML report","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":34,"-":29}},{"path":"src/main/java/orion/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"package orion;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":"/**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":" * This is the main class for the Orion application.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":" * This class is responsible for setting up the UI and the TaskList.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":" * @author Pradyumna","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":" */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":"public class Launcher {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"        Application.launch(Orion.class, args);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":18}},{"path":"src/main/java/orion/Orion.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"package orion;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":"import orion.commands.Command;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":"import orion.orionexceptions.FileInitializationException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":"import orion.orionexceptions.OrionException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":"import orion.parser.Parser;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":"import orion.storage.Storage;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":"import orion.task.DeadlineDetails;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":"import orion.task.EventDetails;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"import orion.task.Task;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":"import orion.tasklist.TaskList;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":"import orion.ui.MainWindow;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pradyuprasad"},"content":"/**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pradyuprasad"},"content":" * The main class for the Orion application.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pradyuprasad"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pradyuprasad"},"content":" * This class is responsible for setting up the UI and the TaskList.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pradyuprasad"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pradyuprasad"},"content":" */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pradyuprasad"},"content":"public class Orion extends Application {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pradyuprasad"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pradyuprasad"},"content":"    private Parser parser;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pradyuprasad"},"content":"     * Creates a new Orion application instance.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pradyuprasad"},"content":"     * Initializes the TaskList and Parser.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pradyuprasad"},"content":"    public Orion() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pradyuprasad"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pradyuprasad"},"content":"            Storage storage \u003d new Storage();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pradyuprasad"},"content":"            taskList \u003d new TaskList(storage);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pradyuprasad"},"content":"            parser \u003d new Parser();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pradyuprasad"},"content":"        } catch (FileInitializationException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pradyuprasad"},"content":"            System.out.println(\"Failed to initialize TaskList: \" + e.getMessage());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pradyuprasad"},"content":"            System.exit(1);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pradyuprasad"},"content":"     * Starts the Orion application.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pradyuprasad"},"content":"     * Loads the main window from an FXML file and sets up the UI.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pradyuprasad"},"content":"     * @param stage the primary stage for the application.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pradyuprasad"},"content":"    @Override","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pradyuprasad"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pradyuprasad"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pradyuprasad"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Orion.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pradyuprasad"},"content":"            Scene scene \u003d new Scene(fxmlLoader.load());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pradyuprasad"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pradyuprasad"},"content":"            MainWindow mainWindow \u003d fxmlLoader.getController();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pradyuprasad"},"content":"            mainWindow.setOrion(this);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pradyuprasad"},"content":"            stage.setTitle(\"Orion Task Manager\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pradyuprasad"},"content":"            stage.show();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"pradyuprasad"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"pradyuprasad"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"pradyuprasad"},"content":"     * Starts the Orion application.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"pradyuprasad"},"content":"     * This is the entry point for the application. It simply calls the","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"pradyuprasad"},"content":"     * {@link Application#launch(String[])} method to start the application.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"pradyuprasad"},"content":"     * @param args the command line arguments passed to the application.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"pradyuprasad"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"pradyuprasad"},"content":"        launch(args);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"pradyuprasad"},"content":"     * Handles user input and returns a response string.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"pradyuprasad"},"content":"     * This method takes a string input from the user and processes it as a","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"pradyuprasad"},"content":"     * command. It returns a response string based on the command and its","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"pradyuprasad"},"content":"     * arguments. If the command is invalid, it returns an error message.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"pradyuprasad"},"content":"     * @param input the user input string.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"pradyuprasad"},"content":"     * @return a response string based on the command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"pradyuprasad"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"pradyuprasad"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"pradyuprasad"},"content":"            String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"pradyuprasad"},"content":"            Command command \u003d Command.fromString(parts[0]);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"pradyuprasad"},"content":"            // prettier-ignore","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"pradyuprasad"},"content":"            return switch (command) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"pradyuprasad"},"content":"            case LIST -\u003e handleList(parts);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"pradyuprasad"},"content":"            case MARK -\u003e handleMark(parts);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"pradyuprasad"},"content":"            case UNMARK -\u003e handleUnmark(parts);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"pradyuprasad"},"content":"            case TODO -\u003e handleTodo(parts);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"pradyuprasad"},"content":"            case EVENT -\u003e handleEvent(parts);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"pradyuprasad"},"content":"            case DEADLINE -\u003e handleDeadline(parts);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"pradyuprasad"},"content":"            case DELETE -\u003e handleDelete(parts);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"pradyuprasad"},"content":"            case FIND -\u003e handleFind(parts);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"pradyuprasad"},"content":"            case BYE -\u003e \"Goodbye!\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"pradyuprasad"},"content":"            default -\u003e \"Unknown command: \" + parts[0];","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"pradyuprasad"},"content":"            };","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"pradyuprasad"},"content":"        } catch (OrionException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"pradyuprasad"},"content":"            return \"Error: \" + e.getMessage();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"pradyuprasad"},"content":"     * Handles the LIST command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"pradyuprasad"},"content":"     * This method takes the user input for the LIST command and returns a string","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"pradyuprasad"},"content":"     * containing all the tasks in the task list. The tasks are numbered from 1","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"pradyuprasad"},"content":"     * to the size of the list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"pradyuprasad"},"content":"     * @param parts the user input string split into parts.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"pradyuprasad"},"content":"     * @return a string containing all the tasks in the task list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"pradyuprasad"},"content":"     * @throws OrionException if the command format is invalid.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"pradyuprasad"},"content":"    private String handleList(String... parts) throws OrionException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"pradyuprasad"},"content":"        parser.validateListCommand(parts);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"pradyuprasad"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"pradyuprasad"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"pradyuprasad"},"content":"            response.append(i + 1).append(\". \").append(taskList.loadTasksFromFile().get(i)).append(\"\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"pradyuprasad"},"content":"        return response.toString();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"pradyuprasad"},"content":"     * Handles the MARK command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"pradyuprasad"},"content":"     * This method takes the parts of the MARK command and marks the task at the","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"pradyuprasad"},"content":"     * given index as done.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"pradyuprasad"},"content":"     * @param parts the parts of the MARK command","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"pradyuprasad"},"content":"     * @return a string indicating that the task was marked as done","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"pradyuprasad"},"content":"     * @throws OrionException if there is an error with the command or its","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"pradyuprasad"},"content":"     *                        arguments","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"pradyuprasad"},"content":"    private String handleMark(String... parts) throws OrionException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"pradyuprasad"},"content":"        int index \u003d parser.validateMarkAndUnMarkCommand(taskList, parts);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"pradyuprasad"},"content":"        Task task \u003d taskList.markAsDone(index);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"pradyuprasad"},"content":"        return \"Marked task as done: \" + task;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"pradyuprasad"},"content":"     * Handles the UNMARK command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"pradyuprasad"},"content":"     * This method takes the parts of the UNMARK command and unmarks the task at","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"pradyuprasad"},"content":"     * the given index as done.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"pradyuprasad"},"content":"     * @param parts the parts of the UNMARK command","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"pradyuprasad"},"content":"     * @return a string indicating that the task was unmarked as done","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"pradyuprasad"},"content":"     * @throws OrionException if there is an error with the command or its","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"pradyuprasad"},"content":"     *                        arguments","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"pradyuprasad"},"content":"    private String handleUnmark(String... parts) throws OrionException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"pradyuprasad"},"content":"        int index \u003d parser.validateMarkAndUnMarkCommand(taskList, parts);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"pradyuprasad"},"content":"        Task task \u003d taskList.unmarkAsDone(index);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"pradyuprasad"},"content":"        return \"Unmarked task: \" + task;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"pradyuprasad"},"content":"     * Handles the TODO command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"pradyuprasad"},"content":"     * This method takes the parts of the TODO command and adds a new TODO task","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"pradyuprasad"},"content":"     * with the given description.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"pradyuprasad"},"content":"     * @param parts the parts of the TODO command","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"pradyuprasad"},"content":"     * @return a string indicating that the task was added","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"pradyuprasad"},"content":"     * @throws OrionException if there is an error with the command or its","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"pradyuprasad"},"content":"     *                        arguments","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"pradyuprasad"},"content":"    private String handleTodo(String... parts) throws OrionException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"pradyuprasad"},"content":"        String description \u003d parser.validateTodoCommand(parts);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"pradyuprasad"},"content":"        Task task \u003d taskList.addTodo(description);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"pradyuprasad"},"content":"        return \"Added: \" + task;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"pradyuprasad"},"content":"     * Handles the EVENT command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"pradyuprasad"},"content":"     * This method takes the parts of the EVENT command and adds a new EVENT task","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"pradyuprasad"},"content":"     * with the given description, start date and time, and end date and time.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"pradyuprasad"},"content":"     * @param parts the parts of the EVENT command","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"pradyuprasad"},"content":"     * @return a string indicating that the task was added","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"pradyuprasad"},"content":"     * @throws OrionException if there is an error with the command or its","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"pradyuprasad"},"content":"     *                        arguments","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"pradyuprasad"},"content":"    private String handleEvent(String... parts) throws OrionException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"pradyuprasad"},"content":"        EventDetails details \u003d parser.validateEventCommand(parts);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"pradyuprasad"},"content":"        Task task \u003d taskList.addEvent(details);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"pradyuprasad"},"content":"        return \"Added: \" + task;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"pradyuprasad"},"content":"     * Handles the DEADLINE command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"pradyuprasad"},"content":"     * This method takes the parts of the DEADLINE command and adds a new DEADLINE","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"pradyuprasad"},"content":"     * task with the given description and due date and time.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"pradyuprasad"},"content":"     * @param parts the parts of the DEADLINE command","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"pradyuprasad"},"content":"     * @return a string indicating that the task was added","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"pradyuprasad"},"content":"     * @throws OrionException if there is an error with the command or its","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"pradyuprasad"},"content":"     *                        arguments","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"pradyuprasad"},"content":"    private String handleDeadline(String... parts) throws OrionException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"pradyuprasad"},"content":"        DeadlineDetails details \u003d parser.validateDeadlineCommand(parts);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"pradyuprasad"},"content":"        Task task \u003d taskList.addDeadline(details);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"pradyuprasad"},"content":"        return \"Added: \" + task;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"pradyuprasad"},"content":"     * Handles the DELETE command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"pradyuprasad"},"content":"     * This method takes the parts of the DELETE command and deletes the task","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"pradyuprasad"},"content":"     * at the given index.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"pradyuprasad"},"content":"     * @param parts the parts of the DELETE command","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"pradyuprasad"},"content":"     * @return a string indicating that the task was deleted","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"pradyuprasad"},"content":"     * @throws OrionException if there is an error with the command or its","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"pradyuprasad"},"content":"     *                        arguments","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"pradyuprasad"},"content":"    private String handleDelete(String... parts) throws OrionException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"pradyuprasad"},"content":"        int index \u003d parser.validateDeleteCommand(taskList, parts);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"pradyuprasad"},"content":"        Task task \u003d taskList.deleteTask(index);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"pradyuprasad"},"content":"        return \"Deleted: \" + task;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"pradyuprasad"},"content":"     * Handles the FIND command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"pradyuprasad"},"content":"     * This method takes the parts of the FIND command and searches for all","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"pradyuprasad"},"content":"     * tasks in the task list that match the given keyword.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"pradyuprasad"},"content":"     * @param parts the parts of the FIND command","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"pradyuprasad"},"content":"     * @return a string listing all matching tasks","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"pradyuprasad"},"content":"     * @throws OrionException if there is an error with the command or its","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"pradyuprasad"},"content":"     *                        arguments","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"pradyuprasad"},"content":"    private String handleFind(String... parts) throws OrionException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"pradyuprasad"},"content":"        String keyword \u003d parser.validateFindCommand(parts);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"pradyuprasad"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"pradyuprasad"},"content":"        for (Task task : taskList.findTasks(keyword)) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"pradyuprasad"},"content":"            response.append(task).append(\"\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"pradyuprasad"},"content":"        return response.toString();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"pradyuprasad"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":281,"-":1}},{"path":"src/main/java/orion/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"package orion.commands;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":" * The Command enum represents the various commands that the application can","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":" * recognize and execute.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":" * Each enum constant corresponds to a specific command that the user can input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":"public enum Command {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":"    LIST,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":"    MARK,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":"    UNMARK,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":"    TODO,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":"    DEADLINE,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":"    EVENT,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":"    DELETE,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"    BYE,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":"    FIND,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":"    UNKNOWN;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pradyuprasad"},"content":"     * Converts a string input into a corresponding Command enum value.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pradyuprasad"},"content":"     * If the input does not match any of the defined commands, the method returns","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pradyuprasad"},"content":"     * UNKNOWN.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pradyuprasad"},"content":"     * @param command The string input representing the command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pradyuprasad"},"content":"     * @return The corresponding Command enum value, or UNKNOWN if the input is","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pradyuprasad"},"content":"     *         invalid.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pradyuprasad"},"content":"    public static Command fromString(String command) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pradyuprasad"},"content":"        try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pradyuprasad"},"content":"            return Command.valueOf(command.toUpperCase());","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pradyuprasad"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pradyuprasad"},"content":"            return UNKNOWN;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pradyuprasad"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":36}},{"path":"src/main/java/orion/orionExceptions/FileInitializationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"package orion.orionexceptions;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":" * Custom exception class representing an error that occurs during file","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":" * initialization.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":" * @author Pradyumna","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":"public class FileInitializationException extends OrionException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":"     * Constructs a new FileInitializationException with the specified error","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":"     * message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":"     * @param message the detail message. The detail message is saved for later","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"     *                retrieval by the {@link #getMessage()} method.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":"    public FileInitializationException(String message) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":"        super(\"File Initialization Error: \" + message);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pradyuprasad"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":21}},{"path":"src/main/java/orion/orionExceptions/InvalidDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"package orion.orionexceptions;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":" * Custom exception class representing an error that occurs when an invalid date","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":" * format is encountered.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":" * @author Pradyumna","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":"public class InvalidDateFormatException extends OrionException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":"     * Constructs a new InvalidDateFormatException with the specified error message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":"     * The error message is appended with the required date format and a message","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":"     * indicating that the date format should be in the format \u0027dd/MM/yyyy HHmm\u0027.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":"     * @param message the detail message. The detail message is saved for later","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":"     *                retrieval by the {@link #getMessage()} method.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pradyuprasad"},"content":"    public InvalidDateFormatException(String message) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pradyuprasad"},"content":"        super(\"Invalid date format: \" + message + \". Please use \u0027dd/MM/yyyy HHmm\u0027.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pradyuprasad"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":23}},{"path":"src/main/java/orion/orionExceptions/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"package orion.orionexceptions;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":" * Custom exception class representing an error that occurs when an invalid","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":" * Deadline format is encountered.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":" * This exception is thrown when a deadline input does not conform to","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":" * the expected format.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":" * The expected format for a deadline is:","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":" * \u003ccode\u003edeadline \u0026lt;description\u0026gt; /by \u0026lt;due date\u0026gt;\u003c/code\u003e.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":" * @author Pradyumna","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":"public class InvalidDeadlineException extends OrionException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pradyuprasad"},"content":"     * Constructs a new InvalidDeadlineException with the specified detail message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pradyuprasad"},"content":"     * The detail message includes the incorrect input provided and specifies","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pradyuprasad"},"content":"     * the correct format for a deadline.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pradyuprasad"},"content":"     * @param input the invalid input that caused the exception. This is included","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pradyuprasad"},"content":"     *              in the detail message to help identify what was incorrect.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pradyuprasad"},"content":"    public InvalidDeadlineException(String input) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pradyuprasad"},"content":"        super(\"Your input was \u0027\" + input","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pradyuprasad"},"content":"                + \"\u0027. However, the correct format for a deadline is: deadline \u003cdescription\u003e /by \u003cdue date\u003e\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pradyuprasad"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":33}},{"path":"src/main/java/orion/orionExceptions/InvalidDeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"package orion.orionexceptions;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":" * Exception thrown when the delete command format is incorrect.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":" * The expected format for a delete command is:","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":" * \u003ccode\u003edelete \u0026lt;task number\u0026gt;\u003c/code\u003e.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":" * @author Pradyumna","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":"public class InvalidDeleteException extends OrionException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"     * Creates a new InvalidDeleteException with a message showing the invalid input","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":"     * and the correct format for the delete command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":"     * @param input the invalid input that triggered the exception.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pradyuprasad"},"content":"    public InvalidDeleteException(String input) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pradyuprasad"},"content":"        super(\"Your input was \u0027\" + input","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pradyuprasad"},"content":"                + \"\u0027. However, the correct way to use delete is: delete \u003ctask number\u003e. For example: delete 1\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pradyuprasad"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":25}},{"path":"src/main/java/orion/orionExceptions/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"package orion.orionexceptions;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":" * Exception thrown when the event command format is incorrect.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":" * The expected format for an event command is:","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":" * \u003ccode\u003eevent \u0026lt;description\u0026gt; /from \u0026lt;start time\u0026gt; /to \u0026lt;end time\u0026gt;\u003c/code\u003e.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":" * @author Pradyumna","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":"public class InvalidEventException extends OrionException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"     * Creates a new InvalidEventException with a message showing the invalid input","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":"     * and the correct format for the event command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":"     * @param message the invalid input that triggered the exception.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pradyuprasad"},"content":"    public InvalidEventException(String message) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pradyuprasad"},"content":"        super(\"You wrote\" + message + \" . The correct usage is event [description] /from [start time] /to [end time]\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pradyuprasad"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":24}},{"path":"src/main/java/orion/orionExceptions/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"package orion.orionexceptions;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":" * Exception thrown when an invalid index is accessed in a task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":" * This exception is thrown when the index accessed is out of range of the","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":" * available tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":" * @author Pradyumna","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":"public class InvalidIndexException extends OrionException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"     * Creates a new InvalidIndexException with a message showing the invalid index","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":"     * and the valid range of indices.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":"     * @param indexAccessed the index that was attempted to be accessed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pradyuprasad"},"content":"     * @param maxIndex      the maximum valid index in the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pradyuprasad"},"content":"    public InvalidIndexException(int indexAccessed, int maxIndex) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pradyuprasad"},"content":"        super(maxIndex \u003d\u003d 0 ? \"You tried to access \" + indexAccessed + \". But the task list is empty.\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pradyuprasad"},"content":"                : \"You tried to access \" + indexAccessed + \". But we have only \" + maxIndex","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pradyuprasad"},"content":"                        + \" tasks, and you should access between 1 and that instead.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pradyuprasad"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":27}},{"path":"src/main/java/orion/orionExceptions/InvalidListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"package orion.orionexceptions;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":" * Exception thrown when an invalid list command is provided.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":" * This exception is thrown when the input does not match the expected format","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":" * for listing tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":" * @author Pradyumna","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":"public class InvalidListException extends OrionException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"     * Creates a new InvalidListException with a message showing the invalid input","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":"     * and the correct way to use the list command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":"     * @param input the invalid input that triggered the exception.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pradyuprasad"},"content":"    public InvalidListException(String input) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pradyuprasad"},"content":"        super(\"Your input was \" + input","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pradyuprasad"},"content":"                + \". However, the correct way to use list is to type \u0027list\u0027 to list out all the tasks.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pradyuprasad"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":25}},{"path":"src/main/java/orion/orionExceptions/InvalidMarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"package orion.orionexceptions;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":" * Exception thrown when an invalid mark or unmark command is provided.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":" * This exception is thrown when the input does not match the expected format","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":" * for marking or unmarking tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":" * @author Pradyumna","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":"public class InvalidMarkException extends OrionException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"     * Creates a new InvalidMarkException with a message showing the invalid input","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":"     * and the correct format for using the mark or unmark commands.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":"     * @param input the invalid input that triggered the exception.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pradyuprasad"},"content":"    public InvalidMarkException(String input) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pradyuprasad"},"content":"        super(\"Your input was \" + input","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pradyuprasad"},"content":"                + \". However, the correct way to use mark or unmark is to type \u0027mark 1\u0027 \"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pradyuprasad"},"content":"                + \"(or \u0027unmark 1\u0027) to mark (or unmark) the task listed by 1.\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pradyuprasad"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":26}},{"path":"src/main/java/orion/orionExceptions/InvalidTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"package orion.orionexceptions;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":" * Exception thrown when an invalid todo command is provided.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":" * This exception is thrown when the input does not match the expected format","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":" * for creating a todo task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":" * @author Pradyumna","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":"public class InvalidTodoException extends OrionException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"     * Creates a new InvalidTodoException with a message showing the invalid input","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":"     * and the correct format for using the todo command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":"     * @param message the invalid input that triggered the exception.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pradyuprasad"},"content":"    public InvalidTodoException(String message) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pradyuprasad"},"content":"        super(\"You put: \" + message + \". Please use \u0027todo [task]\u0027 to create a todo task.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pradyuprasad"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":24}},{"path":"src/main/java/orion/orionExceptions/OrionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"package orion.orionexceptions;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":" * Base class for all exceptions in the Orion application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":" * This exception is used as a parent class for more specific exceptions.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":" * @author Pradyumna","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":"public class OrionException extends Exception {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":"     * Constructs a new OrionException with the specified detail message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":"     * @param message the detail message explaining the reason for the exception.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":"    public OrionException(String message) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pradyuprasad"},"content":"        super(\"The program threw an exception. It is: \" + message);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pradyuprasad"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":22}},{"path":"src/main/java/orion/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"package orion.parser;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":"import orion.orionexceptions.FileInitializationException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":"import orion.orionexceptions.InvalidDateFormatException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":"import orion.orionexceptions.InvalidDeadlineException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":"import orion.orionexceptions.InvalidDeleteException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":"import orion.orionexceptions.InvalidEventException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":"import orion.orionexceptions.InvalidIndexException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"import orion.orionexceptions.InvalidListException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":"import orion.orionexceptions.InvalidMarkException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":"import orion.orionexceptions.InvalidTodoException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":"import orion.storage.Storage;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pradyuprasad"},"content":"import orion.task.DeadlineDetails;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pradyuprasad"},"content":"import orion.task.EventDetails;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pradyuprasad"},"content":"import orion.tasklist.TaskList;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pradyuprasad"},"content":"/**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pradyuprasad"},"content":" * Parses and validates user commands.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pradyuprasad"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pradyuprasad"},"content":" * This class is responsible for validating the format of user commands and","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pradyuprasad"},"content":" * extracting relevant information from the commands.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pradyuprasad"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pradyuprasad"},"content":" */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pradyuprasad"},"content":"public class Parser {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pradyuprasad"},"content":"     * Validates that the command is a valid list command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pradyuprasad"},"content":"     * @param parts the parts of the command to be validated","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pradyuprasad"},"content":"     * @return true if the command is valid, false otherwise","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pradyuprasad"},"content":"     * @throws InvalidListException if the command is invalid","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pradyuprasad"},"content":"    public boolean validateListCommand(String... parts) throws InvalidListException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pradyuprasad"},"content":"        if (parts \u003d\u003d null || parts.length \u003e 1 || !parts[0].equals(\"list\")) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pradyuprasad"},"content":"            throw new InvalidListException(parts \u003d\u003d null ? \"null\" : String.join(\" \", parts));","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pradyuprasad"},"content":"        return true;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pradyuprasad"},"content":"     * Validates that the command starts with one of the valid commands and has the","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pradyuprasad"},"content":"     * correct format.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pradyuprasad"},"content":"     * @param parts         The command parts.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pradyuprasad"},"content":"     * @param validCommands The list of valid commands (e.g., \"mark\", \"unmark\",","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pradyuprasad"},"content":"     *                      \"delete\").","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pradyuprasad"},"content":"     * @throws InvalidMarkException if the command format is invalid.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pradyuprasad"},"content":"    private void validateCommandParts(String[] parts, String... validCommands) throws InvalidMarkException {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pradyuprasad"},"content":"        if (parts \u003d\u003d null || parts.length \u003c 2 || !Arrays.asList(validCommands).contains(parts[0])) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pradyuprasad"},"content":"            throw new InvalidMarkException(\"Invalid command: \" + (parts \u003d\u003d null ? \"null\" : String.join(\" \", parts)));","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pradyuprasad"},"content":"     * Checks if the given string can be parsed as an integer.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pradyuprasad"},"content":"     * @param str the string to check","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pradyuprasad"},"content":"     * @return true if the string can be parsed as an integer, false otherwise","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pradyuprasad"},"content":"    public boolean isInteger(String str) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"pradyuprasad"},"content":"        if (str \u003d\u003d null) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"pradyuprasad"},"content":"            return false;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"pradyuprasad"},"content":"        try {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"pradyuprasad"},"content":"            Integer.parseInt(str);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"pradyuprasad"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"pradyuprasad"},"content":"            return false;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"pradyuprasad"},"content":"        return true;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"pradyuprasad"},"content":"     * Extracts the task index from the given command parts.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"pradyuprasad"},"content":"     * @param parts the command parts","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"pradyuprasad"},"content":"     * @return the task index","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"pradyuprasad"},"content":"     * @throws InvalidMarkException if the command format is invalid","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"pradyuprasad"},"content":"    private int extractTaskIndex(String[] parts) throws InvalidMarkException {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"pradyuprasad"},"content":"        // Join the parts starting from the second element onwards (i.e., excluding the","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"pradyuprasad"},"content":"        // command)","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"pradyuprasad"},"content":"        String joinedString \u003d String.join(\" \", Arrays.copyOfRange(parts, 1, parts.length));","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"pradyuprasad"},"content":"        // Split the joined string into individual parts, expecting a single index","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"pradyuprasad"},"content":"        String[] splitParts \u003d joinedString.split(\" \");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"pradyuprasad"},"content":"        // Validate that there is exactly one part and it\u0027s a valid integer","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"pradyuprasad"},"content":"        if (splitParts.length !\u003d 1 || !isInteger(splitParts[0])) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"pradyuprasad"},"content":"            throw new InvalidMarkException(\"Invalid index: \" + joinedString);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"pradyuprasad"},"content":"        // Parse and return the index as an integer","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"pradyuprasad"},"content":"        return Integer.parseInt(splitParts[0]);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"pradyuprasad"},"content":"     * Validates that the given index is valid in the task list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"pradyuprasad"},"content":"     * This method creates a new TaskList instance and checks if the given index is","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"pradyuprasad"},"content":"     * valid. If the index is invalid, it throws an InvalidIndexException.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"pradyuprasad"},"content":"     * @param index the index to validate","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"pradyuprasad"},"content":"     * @throws InvalidIndexException       if the index is invalid","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"pradyuprasad"},"content":"     * @throws FileInitializationException if there is an issue with file reading","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"pradyuprasad"},"content":"    private void validateTaskIndex(int index) throws InvalidIndexException, FileInitializationException {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"pradyuprasad"},"content":"        TaskList manager \u003d new TaskList(new Storage());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"pradyuprasad"},"content":"        if (!manager.isValidIndex(index)) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"pradyuprasad"},"content":"            throw new InvalidIndexException(index, manager.getSize());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"pradyuprasad"},"content":"     * Validates that the given command parts form a valid mark or unmark command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"pradyuprasad"},"content":"     * A valid mark or unmark command consists of the command name followed by a","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"pradyuprasad"},"content":"     * single","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"pradyuprasad"},"content":"     * integer index. The index is validated to ensure it is a valid task index.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"pradyuprasad"},"content":"     * @param parts the command parts","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"pradyuprasad"},"content":"     * @return the task index","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"pradyuprasad"},"content":"     * @throws InvalidMarkException        if the command format is invalid","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"pradyuprasad"},"content":"     * @throws InvalidIndexException       if the index is invalid","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"pradyuprasad"},"content":"     * @throws FileInitializationException if there is an issue with file reading","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"pradyuprasad"},"content":"    public int validateMarkAndUnMarkCommand(String... parts)","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"pradyuprasad"},"content":"            throws InvalidMarkException, InvalidIndexException, FileInitializationException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"pradyuprasad"},"content":"        this.validateCommandParts(parts, \"mark\", \"unmark\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"pradyuprasad"},"content":"        if (parts \u003d\u003d null || parts.length \u003c 2 || !(parts[0].equals(\"mark\") || parts[0].equals(\"unmark\"))) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"pradyuprasad"},"content":"            throw new InvalidMarkException(parts \u003d\u003d null ? \"null\" : String.join(\" \", parts));","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"pradyuprasad"},"content":"        String joinedString \u003d String.join(\" \", Arrays.copyOfRange(parts, 1, parts.length));","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"pradyuprasad"},"content":"        String[] splitParts \u003d joinedString.split(\" \");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"pradyuprasad"},"content":"        if (splitParts.length !\u003d 1 || !isInteger(splitParts[0])) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"pradyuprasad"},"content":"            throw new InvalidMarkException(joinedString);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"pradyuprasad"},"content":"        int index \u003d extractTaskIndex(parts);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"pradyuprasad"},"content":"        return index;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"pradyuprasad"},"content":"     * Validates that the given command parts form a valid mark or unmark command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"pradyuprasad"},"content":"     * A valid mark or unmark command consists of the command name followed by a","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"pradyuprasad"},"content":"     * single integer index. The index is validated to ensure it is a valid task","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"pradyuprasad"},"content":"     * index.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"pradyuprasad"},"content":"     * @param manager the task list manager","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"pradyuprasad"},"content":"     * @param parts   the command parts","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"pradyuprasad"},"content":"     * @return the task index","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"pradyuprasad"},"content":"     * @throws InvalidMarkException        if the command format is invalid","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"pradyuprasad"},"content":"     * @throws InvalidIndexException       if the index is invalid","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"pradyuprasad"},"content":"     * @throws FileInitializationException if there is an issue with file reading","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"pradyuprasad"},"content":"    public int validateMarkAndUnMarkCommand(TaskList manager, String... parts)","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"pradyuprasad"},"content":"            throws InvalidMarkException, InvalidIndexException, FileInitializationException {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"pradyuprasad"},"content":"        // Validate that the command is either \"mark\" or \"unmark\"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"pradyuprasad"},"content":"        validateCommandParts(parts, \"mark\", \"unmark\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"pradyuprasad"},"content":"        // Extract the task index from the command","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"pradyuprasad"},"content":"        int index \u003d extractTaskIndex(parts);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"pradyuprasad"},"content":"        // Validate the task index using the task manager","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"pradyuprasad"},"content":"        validateTaskIndex(index);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"pradyuprasad"},"content":"        return index;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"pradyuprasad"},"content":"     * Validates that the given command parts form a valid todo command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"pradyuprasad"},"content":"     * A valid todo command consists of the command name followed by a single","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"pradyuprasad"},"content":"     * string describing the task. The command name is validated to ensure it","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"pradyuprasad"},"content":"     * matches the expected value.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"pradyuprasad"},"content":"     * @param parts the command parts","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"pradyuprasad"},"content":"     * @return the task description","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"pradyuprasad"},"content":"     * @throws InvalidTodoException if the command format is invalid","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"pradyuprasad"},"content":"    public String validateTodoCommand(String... parts) throws InvalidTodoException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"pradyuprasad"},"content":"        if (parts \u003d\u003d null || parts.length \u003c 2 || !parts[0].equals(\"todo\")) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"pradyuprasad"},"content":"            throw new InvalidTodoException(parts \u003d\u003d null ? \"null\" : String.join(\" \", parts));","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"pradyuprasad"},"content":"        return parts[1];","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"pradyuprasad"},"content":"     * Validates that the given command parts form a valid event command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"pradyuprasad"},"content":"     * A valid event command consists of the command name followed by a","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"pradyuprasad"},"content":"     * description, a start date and time, and an end date and time. The dates","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"pradyuprasad"},"content":"     * and times are validated to ensure they are in the correct format and","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"pradyuprasad"},"content":"     * correctly represent a valid date and time.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"pradyuprasad"},"content":"     * @param parts the command parts","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"pradyuprasad"},"content":"     * @return EventDetails object containing the details of the event","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"pradyuprasad"},"content":"     * @throws InvalidEventException      if the command format is invalid","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"pradyuprasad"},"content":"     * @throws InvalidDateFormatException if the date and time format is invalid","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"pradyuprasad"},"content":"    public EventDetails validateEventCommand(String... parts) throws InvalidEventException, InvalidDateFormatException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"pradyuprasad"},"content":"        if (parts \u003d\u003d null || parts.length \u003c 2 || !parts[0].equals(\"event\")) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"pradyuprasad"},"content":"            throw new InvalidEventException(parts \u003d\u003d null ? \"null\" : String.join(\" \", parts));","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"pradyuprasad"},"content":"        String[] eventDetails \u003d parts[1].split(\"/from|/to\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"pradyuprasad"},"content":"        if (eventDetails.length !\u003d 3) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"pradyuprasad"},"content":"            throw new InvalidEventException(String.join(\" \", parts));","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"pradyuprasad"},"content":"        String description \u003d eventDetails[0].trim();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"pradyuprasad"},"content":"        String fromStr \u003d eventDetails[1].trim();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"pradyuprasad"},"content":"        String toStr \u003d eventDetails[2].trim();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"pradyuprasad"},"content":"        if (description.isEmpty() || fromStr.isEmpty() || toStr.isEmpty()) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"pradyuprasad"},"content":"            throw new InvalidEventException(String.join(\" \", parts));","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"pradyuprasad"},"content":"        LocalDateTime from \u003d parseDateTime(fromStr);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"pradyuprasad"},"content":"        LocalDateTime to \u003d parseDateTime(toStr);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"pradyuprasad"},"content":"        return new EventDetails(description, from, to);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"pradyuprasad"},"content":"     * Validates that the given command parts form a valid deadline command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"pradyuprasad"},"content":"     * A valid deadline command consists of the command name followed by a","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"pradyuprasad"},"content":"     * description and a due date specified by \u0027/by\u0027. The description and due","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"pradyuprasad"},"content":"     * date are validated to ensure they are not empty.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"pradyuprasad"},"content":"     * @param parts the command parts","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"pradyuprasad"},"content":"     * @return DeadlineDetails object containing the details of the deadline","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"pradyuprasad"},"content":"     * @throws InvalidDeadlineException   if the command format is invalid","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"pradyuprasad"},"content":"     * @throws InvalidDateFormatException if the date and time format is invalid","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"pradyuprasad"},"content":"    public DeadlineDetails validateDeadlineCommand(String... parts)","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"pradyuprasad"},"content":"            throws InvalidDeadlineException, InvalidDateFormatException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"pradyuprasad"},"content":"        if (parts \u003d\u003d null || parts.length \u003c 2 || !parts[0].equals(\"deadline\")) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"pradyuprasad"},"content":"            throw new InvalidDeadlineException(","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"pradyuprasad"},"content":"                    \"Invalid deadline command format. Use: deadline \u003cdescription\u003e /by \u003cdue date\u003e\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"pradyuprasad"},"content":"        String fullCommand \u003d String.join(\" \", parts);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"pradyuprasad"},"content":"        int byIndex \u003d fullCommand.indexOf(\"/by\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"pradyuprasad"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"pradyuprasad"},"content":"            throw new InvalidDeadlineException(\"Deadline must include a due date specified by \u0027/by\u0027\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"pradyuprasad"},"content":"        String description \u003d fullCommand.substring(\"deadline\".length(), byIndex).trim();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"pradyuprasad"},"content":"        String byStr \u003d fullCommand.substring(byIndex + \"/by\".length()).trim();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"pradyuprasad"},"content":"        if (description.isEmpty() || byStr.isEmpty()) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"pradyuprasad"},"content":"            throw new InvalidDeadlineException(\"Description and due date cannot be empty\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"pradyuprasad"},"content":"        LocalDateTime by \u003d parseDateTime(byStr);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"pradyuprasad"},"content":"        return new DeadlineDetails(description, by);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"pradyuprasad"},"content":"     * Validates that the given command parts form a valid delete command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"pradyuprasad"},"content":"     * A valid delete command consists of the command name followed by a","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"pradyuprasad"},"content":"     * single number representing the task list index of the task to delete.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"pradyuprasad"},"content":"     * The index is validated to ensure it is a valid index in the task list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"pradyuprasad"},"content":"     * @param parts the command parts","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"pradyuprasad"},"content":"     * @return the task list index of the task to delete","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"pradyuprasad"},"content":"     * @throws InvalidDeleteException      if the command format is invalid","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"pradyuprasad"},"content":"     * @throws InvalidIndexException       if the index is invalid","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"pradyuprasad"},"content":"     * @throws FileInitializationException if there is an issue with file reading or","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"pradyuprasad"},"content":"     *                                     writing.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"pradyuprasad"},"content":"    public int validateDeleteCommand(String... parts)","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"pradyuprasad"},"content":"            throws InvalidDeleteException, InvalidIndexException, FileInitializationException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"pradyuprasad"},"content":"        if (parts \u003d\u003d null || parts.length \u003c 2 || !parts[0].equals(\"delete\")) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"pradyuprasad"},"content":"            throw new InvalidDeleteException(parts \u003d\u003d null ? \"null\" : String.join(\" \", parts));","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"pradyuprasad"},"content":"        String joinedString \u003d String.join(\" \", Arrays.copyOfRange(parts, 1, parts.length));","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"pradyuprasad"},"content":"        String[] splitParts \u003d joinedString.split(\" \");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"pradyuprasad"},"content":"        if (splitParts.length !\u003d 1 || !isInteger(splitParts[0])) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"pradyuprasad"},"content":"            throw new InvalidDeleteException(joinedString);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"pradyuprasad"},"content":"        int index \u003d Integer.parseInt(splitParts[0]);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"pradyuprasad"},"content":"        TaskList manager \u003d new TaskList(new Storage());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"pradyuprasad"},"content":"        if (!manager.isValidIndex(index)) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"pradyuprasad"},"content":"            throw new InvalidIndexException(index, manager.getSize());","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"pradyuprasad"},"content":"        return index;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"pradyuprasad"},"content":"     * Validates that the given command parts form a valid delete command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"pradyuprasad"},"content":"     * A valid delete command consists of the command name followed by a","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"pradyuprasad"},"content":"     * single integer index. The index is validated to ensure it is a valid","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"pradyuprasad"},"content":"     * task index.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"pradyuprasad"},"content":"     * @param manager the task list manager","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"pradyuprasad"},"content":"     * @param parts   the command parts","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"pradyuprasad"},"content":"     * @return the task index","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"pradyuprasad"},"content":"     * @throws InvalidDeleteException      if the command format is invalid","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"pradyuprasad"},"content":"     * @throws InvalidIndexException       if the index is invalid","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"pradyuprasad"},"content":"     * @throws FileInitializationException if there is an issue with file reading","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"pradyuprasad"},"content":"    public int validateDeleteCommand(TaskList manager, String... parts)","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"pradyuprasad"},"content":"            throws InvalidDeleteException, InvalidIndexException, FileInitializationException {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"pradyuprasad"},"content":"        if (parts \u003d\u003d null || parts.length \u003c 2 || !parts[0].equals(\"delete\")) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"pradyuprasad"},"content":"            throw new InvalidDeleteException(parts \u003d\u003d null ? \"null\" : String.join(\" \", parts));","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"pradyuprasad"},"content":"        String joinedString \u003d String.join(\" \", Arrays.copyOfRange(parts, 1, parts.length));","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"pradyuprasad"},"content":"        String[] splitParts \u003d joinedString.split(\" \");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"pradyuprasad"},"content":"        if (splitParts.length !\u003d 1 || !isInteger(splitParts[0])) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"pradyuprasad"},"content":"            throw new InvalidDeleteException(joinedString);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"pradyuprasad"},"content":"        int index \u003d Integer.parseInt(splitParts[0]);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"pradyuprasad"},"content":"        if (!manager.isValidIndex(index)) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"pradyuprasad"},"content":"            throw new InvalidIndexException(index, manager.getSize());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"pradyuprasad"},"content":"        return index;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"pradyuprasad"},"content":"     * Parses a string representation of a date and time into a","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"pradyuprasad"},"content":"     * \u003ccode\u003eLocalDateTime\u003c/code\u003e object.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"pradyuprasad"},"content":"     * The string representation should be in the format","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"pradyuprasad"},"content":"     * \u003ccode\u003edd/MM/yyyy HHmm\u003c/code\u003e or \u003ccode\u003edd/MM/yyyy\u003c/code\u003e. If the","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"pradyuprasad"},"content":"     * string representation is invalid, an \u003ccode\u003eInvalidDateFormatException\u003c/code\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"pradyuprasad"},"content":"     * is thrown.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"pradyuprasad"},"content":"     * @param dateTimeStr the string representation of the date and time","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"pradyuprasad"},"content":"     * @return a \u003ccode\u003eLocalDateTime\u003c/code\u003e object representing the parsed date","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"pradyuprasad"},"content":"     *         and time","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"pradyuprasad"},"content":"     * @throws InvalidDateFormatException if the date and time format is invalid","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"pradyuprasad"},"content":"    private LocalDateTime parseDateTime(String dateTimeStr) throws InvalidDateFormatException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"pradyuprasad"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"pradyuprasad"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"pradyuprasad"},"content":"        try {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"pradyuprasad"},"content":"            return LocalDateTime.parse(dateTimeStr, dateTimeFormatter);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"pradyuprasad"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"pradyuprasad"},"content":"            try {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"pradyuprasad"},"content":"                LocalDate date \u003d LocalDate.parse(dateTimeStr, dateFormatter);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"pradyuprasad"},"content":"                return LocalDateTime.of(date, LocalTime.MIDNIGHT);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"pradyuprasad"},"content":"            } catch (DateTimeParseException ex) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"pradyuprasad"},"content":"                throw new InvalidDateFormatException(dateTimeStr);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"pradyuprasad"},"content":"            }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"pradyuprasad"},"content":"     * Validates that the given command parts form a valid find command.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"pradyuprasad"},"content":"     * A valid find command consists of the command name followed by a","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"pradyuprasad"},"content":"     * keyword.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"pradyuprasad"},"content":"     * @param parts the command parts","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"pradyuprasad"},"content":"     * @return the keyword","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"pradyuprasad"},"content":"     * @throws InvalidListException if the command format is invalid","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"pradyuprasad"},"content":"    public String validateFindCommand(String... parts) throws InvalidListException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"pradyuprasad"},"content":"        if (parts \u003d\u003d null || parts.length \u003c 2 || !parts[0].equals(\"find\")) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"pradyuprasad"},"content":"            throw new InvalidListException(parts \u003d\u003d null ? \"null\" : String.join(\" \", parts));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"pradyuprasad"},"content":"        return parts[1].trim();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"pradyuprasad"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":413}},{"path":"src/main/java/orion/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"package orion.storage;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":"import java.io.File;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":"import java.util.List;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":"import orion.orionexceptions.FileInitializationException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":"import orion.task.Deadline;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"import orion.task.Event;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":"import orion.task.Task;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":"import orion.task.Todo;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pradyuprasad"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pradyuprasad"},"content":" * Handles the storage of tasks by reading from and writing to a CSV file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pradyuprasad"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pradyuprasad"},"content":" * This class is responsible for initializing the storage file, reading tasks","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pradyuprasad"},"content":" * from","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pradyuprasad"},"content":" * the file into memory, and writing tasks from memory to the file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pradyuprasad"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pradyuprasad"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pradyuprasad"},"content":"public class Storage {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pradyuprasad"},"content":"    private static final String DATA_FILE_PATH \u003d \"./data/tasks.csv\";","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pradyuprasad"},"content":"     * Constructs a Storage object and initializes the storage file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pradyuprasad"},"content":"     * @throws FileInitializationException if there is an issue with file","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pradyuprasad"},"content":"     *                                     initialization.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pradyuprasad"},"content":"    public Storage() throws FileInitializationException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pradyuprasad"},"content":"        initializeFile();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pradyuprasad"},"content":"     * Initializes the storage file by creating it if it does not exist.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pradyuprasad"},"content":"     * This method also ensures that the necessary directories are created if they","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pradyuprasad"},"content":"     * do not exist.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pradyuprasad"},"content":"     * @throws FileInitializationException if there is an issue creating directories","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pradyuprasad"},"content":"     *                                     or the file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pradyuprasad"},"content":"    private void initializeFile() throws FileInitializationException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pradyuprasad"},"content":"        File dataFile \u003d new File(DATA_FILE_PATH);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pradyuprasad"},"content":"        try {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pradyuprasad"},"content":"            if (!dataFile.exists()) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pradyuprasad"},"content":"                if (dataFile.getParentFile() !\u003d null \u0026\u0026 !dataFile.getParentFile().exists()) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pradyuprasad"},"content":"                    boolean dirsCreated \u003d dataFile.getParentFile().mkdirs();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pradyuprasad"},"content":"                    if (!dirsCreated) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pradyuprasad"},"content":"                        throw new FileInitializationException(","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pradyuprasad"},"content":"                                \"Failed to create directories: \" + dataFile.getParentFile());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pradyuprasad"},"content":"                    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pradyuprasad"},"content":"                }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pradyuprasad"},"content":"                boolean fileCreated \u003d dataFile.createNewFile();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pradyuprasad"},"content":"                if (!fileCreated) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pradyuprasad"},"content":"                    throw new FileInitializationException(\"Failed to create file: \" + dataFile.getPath());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pradyuprasad"},"content":"                }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pradyuprasad"},"content":"            }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"pradyuprasad"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"pradyuprasad"},"content":"            throw new FileInitializationException(\"IOException occurred: \" + e.getMessage());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"pradyuprasad"},"content":"     * Reads tasks from the storage file and loads them into a list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"pradyuprasad"},"content":"     * Each line in the file represents a task with details like ID, type,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"pradyuprasad"},"content":"     * description,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"pradyuprasad"},"content":"     * completion status, and potentially dates. Tasks are parsed and added to the","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"pradyuprasad"},"content":"     * list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"pradyuprasad"},"content":"     * @return a list of tasks read from the file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"pradyuprasad"},"content":"     * @throws FileInitializationException if there is an issue reading the file or","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"pradyuprasad"},"content":"     *                                     parsing its contents.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"pradyuprasad"},"content":"    public List\u003cTask\u003e read() throws FileInitializationException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"pradyuprasad"},"content":"        List\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"pradyuprasad"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(DATA_FILE_PATH))) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"pradyuprasad"},"content":"            String line;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"pradyuprasad"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"pradyuprasad"},"content":"                assert line !\u003d null : \"Line read from file should not be null\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"pradyuprasad"},"content":"                String[] parts \u003d line.split(\",\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"pradyuprasad"},"content":"                int taskId \u003d Integer.parseInt(parts[0]);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"pradyuprasad"},"content":"                String type \u003d parts[1];","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"pradyuprasad"},"content":"                String description \u003d parts[2];","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"pradyuprasad"},"content":"                boolean completed \u003d Boolean.parseBoolean(parts[3]);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"pradyuprasad"},"content":"                Task task \u003d null;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"pradyuprasad"},"content":"                switch (type) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"pradyuprasad"},"content":"                case \"TODO\":","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"pradyuprasad"},"content":"                    task \u003d new Todo(taskId, description);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"pradyuprasad"},"content":"                    break;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"pradyuprasad"},"content":"                case \"DEADLINE\":","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"pradyuprasad"},"content":"                    LocalDateTime by \u003d LocalDateTime.parse(parts[4]);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"pradyuprasad"},"content":"                    task \u003d new Deadline(taskId, description, by);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"pradyuprasad"},"content":"                    break;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"pradyuprasad"},"content":"                case \"EVENT\":","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"pradyuprasad"},"content":"                    String[] eventTimes \u003d parts[4].split(\"\\\\|\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"pradyuprasad"},"content":"                    LocalDateTime from \u003d LocalDateTime.parse(eventTimes[0]);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"pradyuprasad"},"content":"                    LocalDateTime to \u003d LocalDateTime.parse(eventTimes[1]);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"pradyuprasad"},"content":"                    task \u003d new Event(taskId, description, from, to);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"pradyuprasad"},"content":"                    break;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"pradyuprasad"},"content":"                default:","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"pradyuprasad"},"content":"                    throw new IllegalArgumentException(\"Unknown task type: \" + type);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"pradyuprasad"},"content":"                }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"pradyuprasad"},"content":"                task.setCompleted(completed);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"pradyuprasad"},"content":"                loadedTasks.add(task);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"pradyuprasad"},"content":"            }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"pradyuprasad"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"pradyuprasad"},"content":"            throw new FileInitializationException(\"Error reading from file: \" + e.getMessage());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"pradyuprasad"},"content":"        } catch (DateTimeParseException | NumberFormatException e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"pradyuprasad"},"content":"            throw new FileInitializationException(\"Error parsing task data: \" + e.getMessage());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"pradyuprasad"},"content":"        assert loadedTasks !\u003d null : \"Loaded tasks should not be null\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"pradyuprasad"},"content":"        return loadedTasks;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"pradyuprasad"},"content":"     * Writes a list of tasks to the storage file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"pradyuprasad"},"content":"     * Each task is written as a line in the file with details like ID, type,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"pradyuprasad"},"content":"     * description,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"pradyuprasad"},"content":"     * completion status, and dates if applicable.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"pradyuprasad"},"content":"     * @param tasks the list of tasks to write to the file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"pradyuprasad"},"content":"     * @throws FileInitializationException if there is an issue writing to the file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"pradyuprasad"},"content":"    public void write(List\u003cTask\u003e tasks) throws FileInitializationException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"pradyuprasad"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(DATA_FILE_PATH))) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"pradyuprasad"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"pradyuprasad"},"content":"                assert task !\u003d null : \"Task should not be null when writing to file\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"pradyuprasad"},"content":"                StringBuilder taskLine \u003d new StringBuilder();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"pradyuprasad"},"content":"                taskLine.append(task.getTaskID()).append(\",\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"pradyuprasad"},"content":"                taskLine.append(getTaskType(task)).append(\",\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"pradyuprasad"},"content":"                taskLine.append(task.getDescription()).append(\",\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"pradyuprasad"},"content":"                taskLine.append(task.isCompleted());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"pradyuprasad"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"pradyuprasad"},"content":"                    taskLine.append(\",\").append(((Deadline) task).getBy());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"pradyuprasad"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"pradyuprasad"},"content":"                    taskLine.append(\",\").append(((Event) task).getFrom())","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"pradyuprasad"},"content":"                            .append(\"|\").append(((Event) task).getTo());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"pradyuprasad"},"content":"                }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"pradyuprasad"},"content":"                bw.write(taskLine.toString());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"pradyuprasad"},"content":"                bw.newLine();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"pradyuprasad"},"content":"            }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"pradyuprasad"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"pradyuprasad"},"content":"            throw new FileInitializationException(\"Error writing to file: \" + e.getMessage());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"pradyuprasad"},"content":"     * Gets the type of a task as a string.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"pradyuprasad"},"content":"     * @param task the task for which the type is to be determined.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"pradyuprasad"},"content":"     * @return a string representing the type of the task (e.g., \"TODO\", \"DEADLINE\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"pradyuprasad"},"content":"     *         \"EVENT\").","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"pradyuprasad"},"content":"     * @throws IllegalArgumentException if the task type is unknown.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"pradyuprasad"},"content":"    private String getTaskType(Task task) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"pradyuprasad"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"pradyuprasad"},"content":"            return \"TODO\";","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"pradyuprasad"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"pradyuprasad"},"content":"            return \"DEADLINE\";","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"pradyuprasad"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"pradyuprasad"},"content":"            return \"EVENT\";","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"pradyuprasad"},"content":"        } else {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"pradyuprasad"},"content":"            throw new IllegalArgumentException(\"Unknown task type: \" + task.getClass().getName());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"pradyuprasad"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":189}},{"path":"src/main/java/orion/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"package orion.task;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":" * A Deadline task has a description and a deadline by which the task needs to","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":" * be completed. It extends the base Task class and provides additional","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":" * functionality specific to deadlines.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":"     * Constructs a Deadline task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pradyuprasad"},"content":"     * @param taskId      the unique identifier for the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pradyuprasad"},"content":"     * @param description the description of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pradyuprasad"},"content":"     * @param by          the date and time by which the task must be completed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pradyuprasad"},"content":"    public Deadline(int taskId, String description, LocalDateTime by) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pradyuprasad"},"content":"        super(taskId, description);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pradyuprasad"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pradyuprasad"},"content":"     * Gets the deadline date and time for this task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pradyuprasad"},"content":"     * @return the deadline date and time.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pradyuprasad"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pradyuprasad"},"content":"        return by;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pradyuprasad"},"content":"     * Returns the type icon for this task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pradyuprasad"},"content":"     * @return a string representing the task type icon.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pradyuprasad"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pradyuprasad"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pradyuprasad"},"content":"        return \"[D]\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pradyuprasad"},"content":"     * Returns a string representation of this task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pradyuprasad"},"content":"     * The string representation includes the task\u0027s description and the","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pradyuprasad"},"content":"     * formatted deadline.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pradyuprasad"},"content":"     * @return a string representing the task, including the description and","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pradyuprasad"},"content":"     *         formatted deadline.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pradyuprasad"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pradyuprasad"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pradyuprasad"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pradyuprasad"},"content":"        return super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pradyuprasad"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":65}},{"path":"src/main/java/orion/task/DeadlineDetails.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"package orion.task;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":"/**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":" * A simple data carrier class that holds the details of a deadline.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":" * \u003cp\u003eThis class is used to transfer deadline information, including","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":" * the task\u0027s description and due date, between different parts of the","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":" * program. The fields are private and final, ensuring that the data","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":" * is immutable once an instance of the class is created.\u003c/p\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":" * \u003cp\u003eThe class provides getter methods for accessing the deadline details.\u003c/p\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":" */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":"public class DeadlineDetails {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"    private final String description;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pradyuprasad"},"content":"     * Constructs a DeadlineDetails object with the specified description","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pradyuprasad"},"content":"     * and due date.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pradyuprasad"},"content":"     * @param description a brief description of the task with a deadline","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pradyuprasad"},"content":"     * @param by the due date and time of the deadline","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pradyuprasad"},"content":"    public DeadlineDetails(String description, LocalDateTime by) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pradyuprasad"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pradyuprasad"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pradyuprasad"},"content":"     * Returns the description of the deadline task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pradyuprasad"},"content":"     * @return the description of the deadline task","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pradyuprasad"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pradyuprasad"},"content":"        return description;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pradyuprasad"},"content":"     * Returns the due date and time of the deadline.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pradyuprasad"},"content":"     * @return the due date and time of the deadline","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pradyuprasad"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pradyuprasad"},"content":"        return by;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pradyuprasad"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":48}},{"path":"src/main/java/orion/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"package orion.task;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":" * Represents a task with a start and end time.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":" * An Event task has a description and a time range during which the event","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":" * occurs. It extends the base Task class and provides additional","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":" * functionality specific to events.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pradyuprasad"},"content":"     * Constructs an Event task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pradyuprasad"},"content":"     * @param taskId      the unique identifier for the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pradyuprasad"},"content":"     * @param description the description of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pradyuprasad"},"content":"     * @param from        the start date and time of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pradyuprasad"},"content":"     * @param to          the end date and time of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pradyuprasad"},"content":"    public Event(int taskId, String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pradyuprasad"},"content":"        super(taskId, description);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pradyuprasad"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pradyuprasad"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pradyuprasad"},"content":"     * Gets the start date and time of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pradyuprasad"},"content":"     * @return the start date and time.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pradyuprasad"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pradyuprasad"},"content":"        return from;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pradyuprasad"},"content":"     * Gets the end date and time of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pradyuprasad"},"content":"     * @return the end date and time.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pradyuprasad"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pradyuprasad"},"content":"        return to;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pradyuprasad"},"content":"     * Returns the type icon for this task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pradyuprasad"},"content":"     * @return a string representing the task type icon.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pradyuprasad"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pradyuprasad"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pradyuprasad"},"content":"        return \"[E]\";","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pradyuprasad"},"content":"     * Returns a string representation of this task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pradyuprasad"},"content":"     * The string representation includes the task\u0027s description and the","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pradyuprasad"},"content":"     * formatted start and end times.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pradyuprasad"},"content":"     * @return a string representing the task, including the description and","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"pradyuprasad"},"content":"     *         formatted start and end times.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"pradyuprasad"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"pradyuprasad"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"pradyuprasad"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"pradyuprasad"},"content":"        return super.toString() + \" (from: \" + from.format(formatter) + \" to: \" + to.format(formatter) + \")\";","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"pradyuprasad"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":77}},{"path":"src/main/java/orion/task/EventDetails.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"package orion.task;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":"/**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":" * A simple data carrier class that holds the details of an event.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":" * \u003cp\u003eThis class is used to transfer event information, including","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":" * the event\u0027s description, start time, and end time, between different","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":" * parts of the program. The fields are private and final, ensuring","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":" * that the data is immutable once an instance of the class is created.\u003c/p\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":" * \u003cp\u003eThe class provides getter methods for accessing the event details.\u003c/p\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":" */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":"public class EventDetails {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":"    private final String description;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pradyuprasad"},"content":"     * Constructs an EventDetails object with the specified description,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pradyuprasad"},"content":"     * start time, and end time.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pradyuprasad"},"content":"     * @param description a brief description of the event","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pradyuprasad"},"content":"     * @param from the start time of the event","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pradyuprasad"},"content":"     * @param to the end time of the event","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pradyuprasad"},"content":"    public EventDetails(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pradyuprasad"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pradyuprasad"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pradyuprasad"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pradyuprasad"},"content":"     * Returns the description of the event.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pradyuprasad"},"content":"     * @return the description of the event","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pradyuprasad"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pradyuprasad"},"content":"        return description;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pradyuprasad"},"content":"     * Returns the start time of the event.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pradyuprasad"},"content":"     * @return the start time of the event","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pradyuprasad"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pradyuprasad"},"content":"        return from;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pradyuprasad"},"content":"     * Returns the end time of the event.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pradyuprasad"},"content":"     * @return the end time of the event","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pradyuprasad"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pradyuprasad"},"content":"        return to;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pradyuprasad"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":59}},{"path":"src/main/java/orion/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"package orion.task;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":" * Represents a task with a unique ID, description, and completion status.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":" * This is an abstract class that provides the common properties and methods","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":" * for all types of tasks, such as TODOs, DEADLINEs, and EVENTs. Specific task","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":" * types will extend this class and implement the {@code getTypeIcon} method","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":" * to return their respective type icons.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":"    private final int taskID;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":"    private final String description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"    private boolean completed;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":"     * Constructs a Task with the specified ID and description.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pradyuprasad"},"content":"     * @param taskID      the unique identifier for the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pradyuprasad"},"content":"     * @param description the description of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pradyuprasad"},"content":"    public Task(int taskID, String description) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pradyuprasad"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pradyuprasad"},"content":"        this.completed \u003d false;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pradyuprasad"},"content":"        this.taskID \u003d taskID;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pradyuprasad"},"content":"     * Gets the unique identifier of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pradyuprasad"},"content":"     * @return the task ID.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pradyuprasad"},"content":"    public int getTaskID() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pradyuprasad"},"content":"        return taskID;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pradyuprasad"},"content":"     * Gets the description of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pradyuprasad"},"content":"     * @return the task description.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pradyuprasad"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pradyuprasad"},"content":"        return description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pradyuprasad"},"content":"     * Checks if the task is completed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pradyuprasad"},"content":"     * @return {@code true} if the task is completed, {@code false} otherwise.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pradyuprasad"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pradyuprasad"},"content":"        return completed;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pradyuprasad"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pradyuprasad"},"content":"     * @param newValue the new completion status of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pradyuprasad"},"content":"    public void setCompleted(boolean newValue) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pradyuprasad"},"content":"        this.completed \u003d newValue;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pradyuprasad"},"content":"     * Returns the type icon for this task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"pradyuprasad"},"content":"     * This is an abstract method that must be implemented by subclasses to","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"pradyuprasad"},"content":"     * provide their specific type icons (e.g., \"[T]\" for TODOs, \"[D]\" for","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"pradyuprasad"},"content":"     * DEADLINEs, \"[E]\" for EVENTs).","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"pradyuprasad"},"content":"     * @return the type icon of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"pradyuprasad"},"content":"    public abstract String getTypeIcon();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"pradyuprasad"},"content":"    // this function was suggested to me by Claude Sonnet as a way of making my code","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"pradyuprasad"},"content":"    // more modular","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"pradyuprasad"},"content":"     * Returns a string representation of this task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"pradyuprasad"},"content":"     * The string representation includes the task\u0027s type icon, completion status,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"pradyuprasad"},"content":"     * and description.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"pradyuprasad"},"content":"     * @return a string representing the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"pradyuprasad"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"pradyuprasad"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"pradyuprasad"},"content":"        String tickBox \u003d completed ? \"[x]\" : \"[ ]\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"pradyuprasad"},"content":"        return getTypeIcon() + tickBox + \" \" + description;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"pradyuprasad"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":96}},{"path":"src/main/java/orion/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"package orion.task;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":" * Represents a Todo task with a unique ID and description.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":" * This class extends the {@link Task} class and provides the specific","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":" * type icon for Todo tasks.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":"     * Constructs a Todo task with the specified ID and description.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"     * @param taskID      the unique identifier for the Todo task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":"     * @param description the description of the Todo task.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":"    public Todo(int taskID, String description) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pradyuprasad"},"content":"        super(taskID, description);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pradyuprasad"},"content":"     * Returns the type icon for a Todo task.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pradyuprasad"},"content":"     * @return the type icon \"[T]\" for Todo tasks.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pradyuprasad"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pradyuprasad"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pradyuprasad"},"content":"        return \"[T]\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pradyuprasad"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":32}},{"path":"src/main/java/orion/taskList/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"package orion.tasklist;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":"import java.util.List;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":"import orion.orionexceptions.FileInitializationException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":"import orion.storage.Storage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":"import orion.task.Deadline;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":"import orion.task.DeadlineDetails;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":"import orion.task.Event;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":"import orion.task.EventDetails;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":"import orion.task.Task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"import orion.task.Todo;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":" * Manages a list of tasks, including loading, saving, adding, and modifying","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pradyuprasad"},"content":" * tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pradyuprasad"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pradyuprasad"},"content":" * This class interacts with the {@link Storage} class to persist tasks in a","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pradyuprasad"},"content":" * file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pradyuprasad"},"content":" * It provides methods to manage tasks such as adding, deleting, and marking","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pradyuprasad"},"content":" * tasks","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pradyuprasad"},"content":" * as done or undone.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pradyuprasad"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pradyuprasad"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pradyuprasad"},"content":"public class TaskList {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pradyuprasad"},"content":"    private static final int FUZZY_SEARCH_THRESHOLD \u003d 3;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pradyuprasad"},"content":"    private static final String DATA_FILE_PATH \u003d \"./data/tasks.csv\";","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pradyuprasad"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pradyuprasad"},"content":"     * Constructs a TaskList instance with the specified storage.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pradyuprasad"},"content":"     * @param storage the storage used to read and write tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pradyuprasad"},"content":"     * @throws FileInitializationException if there is an issue with file","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pradyuprasad"},"content":"     *                                     initialization.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pradyuprasad"},"content":"    public TaskList(Storage storage) throws FileInitializationException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pradyuprasad"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pradyuprasad"},"content":"        loadTasksFromFile();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pradyuprasad"},"content":"     * Retrieves the next task ID by finding the maximum existing ID and adding one.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pradyuprasad"},"content":"     * @param tasks the list of existing tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pradyuprasad"},"content":"     * @return the next available task ID.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pradyuprasad"},"content":"    private int getNextTaskId(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pradyuprasad"},"content":"        return tasks.stream()","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pradyuprasad"},"content":"                .mapToInt(Task::getTaskID)","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pradyuprasad"},"content":"                .max()","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pradyuprasad"},"content":"                .orElse(0) + 1;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pradyuprasad"},"content":"     * Checks if the given list position is valid.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pradyuprasad"},"content":"     * @param listPosition the position to check.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pradyuprasad"},"content":"     * @return true if the position is valid, false otherwise.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pradyuprasad"},"content":"     * @throws FileInitializationException if there is an issue with file reading.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pradyuprasad"},"content":"    public boolean isValidIndex(int listPosition) throws FileInitializationException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pradyuprasad"},"content":"        List\u003cTask\u003e tasks \u003d loadTasksFromFile();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pradyuprasad"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"pradyuprasad"},"content":"            return false;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"pradyuprasad"},"content":"        return listPosition \u003e 0 \u0026\u0026 listPosition \u003c\u003d tasks.size();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"pradyuprasad"},"content":"     * Loads tasks from the storage file into a list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"pradyuprasad"},"content":"     * @return a list of tasks read from the file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"pradyuprasad"},"content":"     * @throws FileInitializationException if there is an issue reading from the","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"pradyuprasad"},"content":"     *                                     file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"pradyuprasad"},"content":"    public List\u003cTask\u003e loadTasksFromFile() throws FileInitializationException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"pradyuprasad"},"content":"        List\u003cTask\u003e tasks \u003d storage.read();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"pradyuprasad"},"content":"        assert tasks.size() \u003e\u003d 0 : \"Task list should never have a negative size\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"pradyuprasad"},"content":"        return tasks;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"pradyuprasad"},"content":"     * Prints all tasks to the console.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"pradyuprasad"},"content":"     * If there are no tasks, a message indicating this is printed. Otherwise, each","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"pradyuprasad"},"content":"     * task is printed with its position in the list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"pradyuprasad"},"content":"     * @throws FileInitializationException if there is an issue reading the tasks","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"pradyuprasad"},"content":"     *                                     from the file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"pradyuprasad"},"content":"    public void printTasks() throws FileInitializationException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"pradyuprasad"},"content":"        List\u003cTask\u003e tasks \u003d loadTasksFromFile();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"pradyuprasad"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"pradyuprasad"},"content":"            System.out.println(\"There are no tasks.\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"pradyuprasad"},"content":"        } else {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"pradyuprasad"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"pradyuprasad"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"pradyuprasad"},"content":"                System.out.println((i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"pradyuprasad"},"content":"            }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"pradyuprasad"},"content":"     * Saves a list of tasks to the storage file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"pradyuprasad"},"content":"     * @param tasks the list of tasks to be saved.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"pradyuprasad"},"content":"    public void saveTasksToFile(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"pradyuprasad"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(DATA_FILE_PATH))) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"pradyuprasad"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"pradyuprasad"},"content":"                StringBuilder taskLine \u003d new StringBuilder();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"pradyuprasad"},"content":"                taskLine.append(task.getTaskID()).append(\",\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"pradyuprasad"},"content":"                taskLine.append(getTaskType(task)).append(\",\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"pradyuprasad"},"content":"                taskLine.append(task.getDescription()).append(\",\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"pradyuprasad"},"content":"                taskLine.append(task.isCompleted());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"pradyuprasad"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"pradyuprasad"},"content":"                    taskLine.append(\",\").append(((Deadline) task).getBy()); // ISO-8601 format","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"pradyuprasad"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"pradyuprasad"},"content":"                    taskLine.append(\",\").append(((Event) task).getFrom())","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"pradyuprasad"},"content":"                            .append(\"|\").append(((Event) task).getTo()); // ISO-8601 format","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"pradyuprasad"},"content":"                }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"pradyuprasad"},"content":"                bw.write(taskLine.toString());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"pradyuprasad"},"content":"                bw.newLine();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"pradyuprasad"},"content":"            }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"pradyuprasad"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"pradyuprasad"},"content":"            System.err.println(\"Error writing to file: \" + e.getMessage());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"pradyuprasad"},"content":"     * Gets the type of a task as a string.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"pradyuprasad"},"content":"     * @param task the task for which the type is to be determined.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"pradyuprasad"},"content":"     * @return a string representing the type of the task (e.g., \"TODO\", \"DEADLINE\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"pradyuprasad"},"content":"     *         \"EVENT\").","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"pradyuprasad"},"content":"     * @throws IllegalArgumentException if the task type is unknown.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"pradyuprasad"},"content":"    private String getTaskType(Task task) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"pradyuprasad"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"pradyuprasad"},"content":"            return \"TODO\";","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"pradyuprasad"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"pradyuprasad"},"content":"            return \"DEADLINE\";","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"pradyuprasad"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"pradyuprasad"},"content":"            return \"EVENT\";","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"pradyuprasad"},"content":"        } else {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"pradyuprasad"},"content":"            throw new IllegalArgumentException(\"Unknown task type: \" + task.getClass().getName());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"pradyuprasad"},"content":"     * Adds a TODO task to the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"pradyuprasad"},"content":"     * @param description the description of the new TODO task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"pradyuprasad"},"content":"     * @return the newly created TODO task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"pradyuprasad"},"content":"     * @throws FileInitializationException if there is an issue with file reading or","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"pradyuprasad"},"content":"     *                                     writing.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"pradyuprasad"},"content":"    public Task addTodo(String description) throws FileInitializationException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"pradyuprasad"},"content":"        List\u003cTask\u003e tasks \u003d loadTasksFromFile();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"pradyuprasad"},"content":"        int newTaskId \u003d getNextTaskId(tasks);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"pradyuprasad"},"content":"        Task task \u003d new Todo(newTaskId, description);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"pradyuprasad"},"content":"        tasks.add(task);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"pradyuprasad"},"content":"        saveTasksToFile(tasks);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"pradyuprasad"},"content":"        assert tasks.size() \u003e\u003d 0 : \"Task list size should never be negative after adding a task\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"pradyuprasad"},"content":"        return task;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"pradyuprasad"},"content":"     * Adds a DEADLINE task to the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"pradyuprasad"},"content":"     * @param temp an object containing details of the new DEADLINE task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"pradyuprasad"},"content":"     * @return the newly created DEADLINE task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"pradyuprasad"},"content":"     * @throws FileInitializationException if there is an issue with file reading or","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"pradyuprasad"},"content":"     *                                     writing.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"pradyuprasad"},"content":"    public Task addDeadline(DeadlineDetails temp) throws FileInitializationException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"pradyuprasad"},"content":"        List\u003cTask\u003e tasks \u003d loadTasksFromFile();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"pradyuprasad"},"content":"        int newTaskId \u003d getNextTaskId(tasks);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"pradyuprasad"},"content":"        Task task \u003d new Deadline(newTaskId, temp.getDescription(), temp.getBy());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"pradyuprasad"},"content":"        tasks.add(task);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"pradyuprasad"},"content":"        saveTasksToFile(tasks);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"pradyuprasad"},"content":"        assert tasks.size() \u003e\u003d 0 : \"Task list size should never be negative after adding a task\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"pradyuprasad"},"content":"        return task;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"pradyuprasad"},"content":"     * Adds an EVENT task to the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"pradyuprasad"},"content":"     * @param temp an object containing details of the new EVENT task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"pradyuprasad"},"content":"     * @return the newly created EVENT task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"pradyuprasad"},"content":"     * @throws FileInitializationException if there is an issue with file reading or","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"pradyuprasad"},"content":"     *                                     writing.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"pradyuprasad"},"content":"    public Task addEvent(EventDetails temp) throws FileInitializationException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"pradyuprasad"},"content":"        List\u003cTask\u003e tasks \u003d loadTasksFromFile();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"pradyuprasad"},"content":"        int newTaskId \u003d getNextTaskId(tasks);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"pradyuprasad"},"content":"        Task task \u003d new Event(newTaskId, temp.getDescription(), temp.getFrom(), temp.getTo());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"pradyuprasad"},"content":"        tasks.add(task);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"pradyuprasad"},"content":"        saveTasksToFile(tasks);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"pradyuprasad"},"content":"        assert tasks.size() \u003e\u003d 0 : \"Task list size should never be negative after adding an event\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"pradyuprasad"},"content":"        return task;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"pradyuprasad"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"pradyuprasad"},"content":"     * @return the number of tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"pradyuprasad"},"content":"     * @throws FileInitializationException if there is an issue with file reading.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"pradyuprasad"},"content":"    public int getSize() throws FileInitializationException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"pradyuprasad"},"content":"        List\u003cTask\u003e tasks \u003d loadTasksFromFile();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"pradyuprasad"},"content":"        return tasks.size();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"pradyuprasad"},"content":"     * Marks a task as done based on its list position.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"pradyuprasad"},"content":"     * @param listPosition the position of the task to mark as done.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"pradyuprasad"},"content":"     * @return the task that was marked as done, or null if the position is invalid.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"pradyuprasad"},"content":"     * @throws FileInitializationException if there is an issue with file reading or","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"pradyuprasad"},"content":"     *                                     writing.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"pradyuprasad"},"content":"    public Task markAsDone(int listPosition) throws FileInitializationException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"pradyuprasad"},"content":"        List\u003cTask\u003e tasks \u003d loadTasksFromFile();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"pradyuprasad"},"content":"        int index \u003d listPosition - 1;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"pradyuprasad"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"pradyuprasad"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"pradyuprasad"},"content":"            task.setCompleted(true);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"pradyuprasad"},"content":"            assert task.isCompleted() : \"Task should be marked as completed\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"pradyuprasad"},"content":"            saveTasksToFile(tasks);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"pradyuprasad"},"content":"            return task;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"pradyuprasad"},"content":"        return null;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"pradyuprasad"},"content":"     * Unmarks a task as done based on its list position.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"pradyuprasad"},"content":"     * @param listPosition the position of the task to unmark as done.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"pradyuprasad"},"content":"     * @return the task that was unmarked as done, or null if the position is","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"pradyuprasad"},"content":"     *         invalid.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"pradyuprasad"},"content":"     * @throws FileInitializationException if there is an issue with file reading or","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"pradyuprasad"},"content":"     *                                     writing.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"pradyuprasad"},"content":"    public Task unmarkAsDone(int listPosition) throws FileInitializationException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"pradyuprasad"},"content":"        List\u003cTask\u003e tasks \u003d loadTasksFromFile();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"pradyuprasad"},"content":"        int index \u003d listPosition - 1;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"pradyuprasad"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"pradyuprasad"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"pradyuprasad"},"content":"            task.setCompleted(false);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"pradyuprasad"},"content":"            saveTasksToFile(tasks);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"pradyuprasad"},"content":"            return task;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"pradyuprasad"},"content":"        return null;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"pradyuprasad"},"content":"     * Deletes a task based on its list position.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"pradyuprasad"},"content":"     * @param listPosition the position of the task to delete.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"pradyuprasad"},"content":"     * @return the task that was deleted, or null if the position is invalid.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"pradyuprasad"},"content":"     * @throws FileInitializationException if there is an issue with file reading or","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"pradyuprasad"},"content":"     *                                     writing.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"pradyuprasad"},"content":"    public Task deleteTask(int listPosition) throws FileInitializationException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"pradyuprasad"},"content":"        List\u003cTask\u003e tasks \u003d loadTasksFromFile();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"pradyuprasad"},"content":"        int index \u003d listPosition - 1;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"pradyuprasad"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"pradyuprasad"},"content":"            Task removedTask \u003d tasks.remove(index);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"pradyuprasad"},"content":"            assert removedTask !\u003d null : \"Task being deleted should not be null\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"pradyuprasad"},"content":"            saveTasksToFile(tasks);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"pradyuprasad"},"content":"            return removedTask;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"pradyuprasad"},"content":"        return null;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"pradyuprasad"},"content":"     * Finds all tasks in the list that contain the given keyword or are within a","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"pradyuprasad"},"content":"     * certain Levenshtein distance threshold (fuzzy search).","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"pradyuprasad"},"content":"     * @param keyword the keyword to search for.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"pradyuprasad"},"content":"     * @return a list of tasks that match the keyword based on fuzzy search.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"pradyuprasad"},"content":"     * @throws FileInitializationException if there is an issue with file reading.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"pradyuprasad"},"content":"    public List\u003cTask\u003e findTasks(String keyword) throws FileInitializationException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"pradyuprasad"},"content":"        List\u003cTask\u003e tasks \u003d loadTasksFromFile();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"pradyuprasad"},"content":"        // Use stream to filter tasks with fuzzy matching","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"pradyuprasad"},"content":"        return tasks.stream()","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"pradyuprasad"},"content":"                .filter(task -\u003e {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"pradyuprasad"},"content":"                    String description \u003d task.getDescription().toLowerCase();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"pradyuprasad"},"content":"                    String lowerKeyword \u003d keyword.toLowerCase();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"pradyuprasad"},"content":"                    int distance \u003d levenshteinDistance(description, lowerKeyword);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"pradyuprasad"},"content":"                    return distance \u003c\u003d FUZZY_SEARCH_THRESHOLD; // Fuzzy match with a threshold","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"pradyuprasad"},"content":"                })","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"pradyuprasad"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"pradyuprasad"},"content":"     * Computes the Levenshtein distance between two strings.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"pradyuprasad"},"content":"     * @param str1 the first string.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"pradyuprasad"},"content":"     * @param str2 the second string.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"pradyuprasad"},"content":"     * @return the Levenshtein distance between the two strings.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"pradyuprasad"},"content":"    private int levenshteinDistance(String str1, String str2) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"pradyuprasad"},"content":"        int[][] dp \u003d new int[str1.length() + 1][str2.length() + 1];","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"pradyuprasad"},"content":"        for (int i \u003d 0; i \u003c\u003d str1.length(); i++) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"pradyuprasad"},"content":"            for (int j \u003d 0; j \u003c\u003d str2.length(); j++) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"pradyuprasad"},"content":"                if (i \u003d\u003d 0) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"pradyuprasad"},"content":"                    dp[i][j] \u003d j;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"pradyuprasad"},"content":"                } else if (j \u003d\u003d 0) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"pradyuprasad"},"content":"                    dp[i][j] \u003d i;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"pradyuprasad"},"content":"                } else {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"pradyuprasad"},"content":"                    dp[i][j] \u003d Math.min(dp[i - 1][j - 1] + (str1.charAt(i - 1) \u003d\u003d str2.charAt(j - 1) ? 0 : 1),","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"pradyuprasad"},"content":"                            Math.min(dp[i - 1][j] + 1, dp[i][j - 1] + 1));","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"pradyuprasad"},"content":"                }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"pradyuprasad"},"content":"            }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"pradyuprasad"},"content":"        return dp[str1.length()][str2.length()];","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"pradyuprasad"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":335}},{"path":"src/main/java/orion/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"package orion.ui;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":"/**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":" * A {@code DialogBox} is a horizontal box that contains a dialog bubble and","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":" * an optional image. The dialog bubble is a label that displays some text.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pradyuprasad"},"content":" * The image is an image view that displays the image. The dialog bubble and","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pradyuprasad"},"content":" * the image are positioned horizontally next to each other. The dialog bubble","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pradyuprasad"},"content":" * can be either on the left or right side of the box, depending on the value","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pradyuprasad"},"content":" * of the {@code flip} property.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pradyuprasad"},"content":" * @author Pradyumna","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pradyuprasad"},"content":" */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pradyuprasad"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pradyuprasad"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pradyuprasad"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pradyuprasad"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pradyuprasad"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pradyuprasad"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pradyuprasad"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pradyuprasad"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pradyuprasad"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pradyuprasad"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pradyuprasad"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pradyuprasad"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pradyuprasad"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pradyuprasad"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pradyuprasad"},"content":"        if (img !\u003d null) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pradyuprasad"},"content":"            displayPicture.setImage(img);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pradyuprasad"},"content":"            displayPicture.setVisible(true);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pradyuprasad"},"content":"        } else {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pradyuprasad"},"content":"            displayPicture.setVisible(false);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pradyuprasad"},"content":"    private void flip() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pradyuprasad"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pradyuprasad"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pradyuprasad"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pradyuprasad"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pradyuprasad"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pradyuprasad"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pradyuprasad"},"content":"    public static DialogBox getOrionDialog(String text, Image img) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pradyuprasad"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pradyuprasad"},"content":"        db.flip();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pradyuprasad"},"content":"        return db;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pradyuprasad"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":68}},{"path":"src/main/java/orion/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"package orion.ui;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"import java.net.URL;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":"import orion.Orion;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":"/**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":" * The main window of the application.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":" * This class represents the main window of the application, which contains","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":" * the UI components for the user to interact with the application.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pradyuprasad"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pradyuprasad"},"content":" *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pradyuprasad"},"content":" * @author Pradyumna","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pradyuprasad"},"content":" */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pradyuprasad"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pradyuprasad"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pradyuprasad"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pradyuprasad"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pradyuprasad"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pradyuprasad"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pradyuprasad"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pradyuprasad"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pradyuprasad"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pradyuprasad"},"content":"    private Orion orion;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pradyuprasad"},"content":"    private Image userImage;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pradyuprasad"},"content":"    private Image orionImage;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pradyuprasad"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pradyuprasad"},"content":"     * Creates a new instance of the main window.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pradyuprasad"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pradyuprasad"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pradyuprasad"},"content":"     * This constructor creates a new instance of the main window with the","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pradyuprasad"},"content":"     * default settings.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pradyuprasad"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pradyuprasad"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pradyuprasad"},"content":"    public MainWindow() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pradyuprasad"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pradyuprasad"},"content":"            System.out.println(\"Loading user image...\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pradyuprasad"},"content":"            userImage \u003d new Image(getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pradyuprasad"},"content":"            System.out.println(\"User image loaded: \" + (userImage !\u003d null) + \", width: \" + userImage.getWidth()","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pradyuprasad"},"content":"                    + \", height: \" + userImage.getHeight());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pradyuprasad"},"content":"            System.out.println(\"Loading orion image...\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pradyuprasad"},"content":"            URL orionUrl \u003d getClass().getResource(\"/images/orion.png\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pradyuprasad"},"content":"            if (orionUrl !\u003d null) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pradyuprasad"},"content":"                orionImage \u003d new Image(orionUrl.toExternalForm());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pradyuprasad"},"content":"                System.out.println(\"Orion image loaded: \" + (orionImage !\u003d null) + \", width: \" + orionImage.getWidth()","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pradyuprasad"},"content":"                        + \", height: \" + orionImage.getHeight());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pradyuprasad"},"content":"            } else {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pradyuprasad"},"content":"                System.out.println(\"Orion image URL is null\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pradyuprasad"},"content":"            }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pradyuprasad"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pradyuprasad"},"content":"            System.out.println(\"Couldn\u0027t load images: \" + e.getMessage());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pradyuprasad"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pradyuprasad"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pradyuprasad"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"pradyuprasad"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"pradyuprasad"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"pradyuprasad"},"content":"    public void setOrion(Orion o) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"pradyuprasad"},"content":"        orion \u003d o;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"pradyuprasad"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"pradyuprasad"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"pradyuprasad"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"pradyuprasad"},"content":"        String response \u003d orion.getResponse(input);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"pradyuprasad"},"content":"        System.out.println(\"User input: \" + input);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"pradyuprasad"},"content":"        System.out.println(\"Orion response: \" + response);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"pradyuprasad"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"pradyuprasad"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"pradyuprasad"},"content":"                DialogBox.getOrionDialog(response, orionImage));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"pradyuprasad"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"pradyuprasad"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":89}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"orion.ui.MainWindow\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":19}},{"path":"src/test/java/orion/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"package orion.parser;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"import orion.task.DeadlineDetails;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":"import orion.task.EventDetails;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":"import orion.tasklist.TaskList;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":"import orion.orionexceptions.FileInitializationException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":"import orion.orionexceptions.InvalidDeadlineException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":"import orion.orionexceptions.InvalidDeleteException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":"import orion.orionexceptions.InvalidEventException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":"import orion.orionexceptions.InvalidListException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":"import orion.orionexceptions.InvalidMarkException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":"import orion.orionexceptions.InvalidTodoException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":"import orion.storage.Storage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pradyuprasad"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pradyuprasad"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pradyuprasad"},"content":"class ParserTest {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pradyuprasad"},"content":"    private final Parser parser \u003d new Parser();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pradyuprasad"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pradyuprasad"},"content":"    void testValidateListCommand_Valid() throws InvalidListException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pradyuprasad"},"content":"        String[] parts \u003d { \"list\" };","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pradyuprasad"},"content":"        assertTrue(parser.validateListCommand(parts));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pradyuprasad"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pradyuprasad"},"content":"    void testValidateListCommand_Invalid() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pradyuprasad"},"content":"        String[] parts \u003d { \"list\", \"extra\" };","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pradyuprasad"},"content":"        assertThrows(InvalidListException.class, () -\u003e parser.validateListCommand(parts));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pradyuprasad"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pradyuprasad"},"content":"    void testIsInteger_Valid() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pradyuprasad"},"content":"        assertTrue(parser.isInteger(\"123\"));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pradyuprasad"},"content":"        assertFalse(parser.isInteger(\"abc\"));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pradyuprasad"},"content":"        assertFalse(parser.isInteger(null));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pradyuprasad"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pradyuprasad"},"content":"    void testValidateMarkAndUnMarkCommand_Valid() throws Exception, FileInitializationException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pradyuprasad"},"content":"        TaskList taskList \u003d new TaskList(new Storage()); // Assuming Storage is properly set up for testing","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pradyuprasad"},"content":"        taskList.addTodo(\"Sample Task\"); // Assuming addTodo adds a task to the list","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pradyuprasad"},"content":"        String[] parts \u003d { \"mark\", \"1\" };","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pradyuprasad"},"content":"        int index \u003d parser.validateMarkAndUnMarkCommand(taskList, parts);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pradyuprasad"},"content":"        assertEquals(1, index);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pradyuprasad"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pradyuprasad"},"content":"    void testValidateMarkAndUnMarkCommand_Invalid() throws FileInitializationException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pradyuprasad"},"content":"        TaskList taskList \u003d new TaskList(new Storage());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pradyuprasad"},"content":"        String[] parts \u003d { \"mark\", \"abc\" };","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pradyuprasad"},"content":"        assertThrows(InvalidMarkException.class, () -\u003e parser.validateMarkAndUnMarkCommand(taskList, parts));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pradyuprasad"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pradyuprasad"},"content":"    void testValidateTodoCommand_Valid() throws InvalidTodoException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pradyuprasad"},"content":"        String[] parts \u003d { \"todo\", \"Sample Task\" };","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pradyuprasad"},"content":"        assertEquals(\"Sample Task\", parser.validateTodoCommand(parts));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"pradyuprasad"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"pradyuprasad"},"content":"    void testValidateTodoCommand_Invalid() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"pradyuprasad"},"content":"        String[] parts \u003d { \"todo\" };","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"pradyuprasad"},"content":"        assertThrows(InvalidTodoException.class, () -\u003e parser.validateTodoCommand(parts));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"pradyuprasad"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"pradyuprasad"},"content":"    void testValidateEventCommand_Valid() throws Exception {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"pradyuprasad"},"content":"        String[] parts \u003d { \"event\", \"Meeting /from 01/01/2024 1000 /to 01/01/2024 1200\" };","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"pradyuprasad"},"content":"        EventDetails details \u003d parser.validateEventCommand(parts);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"pradyuprasad"},"content":"        assertEquals(\"Meeting\", details.getDescription());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"pradyuprasad"},"content":"        assertEquals(LocalDateTime.of(2024, 1, 1, 10, 0), details.getFrom());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"pradyuprasad"},"content":"        assertEquals(LocalDateTime.of(2024, 1, 1, 12, 0), details.getTo());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"pradyuprasad"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"pradyuprasad"},"content":"    void testValidateEventCommand_Invalid() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"pradyuprasad"},"content":"        String[] parts \u003d { \"event\", \"Meeting\" };","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"pradyuprasad"},"content":"        assertThrows(InvalidEventException.class, () -\u003e parser.validateEventCommand(parts));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"pradyuprasad"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"pradyuprasad"},"content":"    void testValidateDeadlineCommand_Valid() throws Exception {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"pradyuprasad"},"content":"        String[] parts \u003d { \"deadline\", \"Submit report /by 02/02/2024 2359\" };","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"pradyuprasad"},"content":"        DeadlineDetails details \u003d parser.validateDeadlineCommand(parts);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"pradyuprasad"},"content":"        assertEquals(\"Submit report\", details.getDescription());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"pradyuprasad"},"content":"        assertEquals(LocalDateTime.of(2024, 2, 2, 23, 59), details.getBy());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"pradyuprasad"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"pradyuprasad"},"content":"    void testValidateDeadlineCommand_Invalid() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"pradyuprasad"},"content":"        String[] parts \u003d { \"deadline\", \"Submit report\" };","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"pradyuprasad"},"content":"        assertThrows(InvalidDeadlineException.class, () -\u003e parser.validateDeadlineCommand(parts));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"pradyuprasad"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"pradyuprasad"},"content":"    void testValidateDeleteCommand_Valid() throws Exception, FileInitializationException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"pradyuprasad"},"content":"        TaskList taskList \u003d new TaskList(new Storage()); // Assuming Storage is properly set up for testing","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"pradyuprasad"},"content":"        taskList.addTodo(\"Sample Task\"); // Assuming addTodo adds a task to the list","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"pradyuprasad"},"content":"        String[] parts \u003d { \"delete\", \"1\" };","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"pradyuprasad"},"content":"        int index \u003d parser.validateDeleteCommand(taskList, parts);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"pradyuprasad"},"content":"        assertEquals(1, index);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"pradyuprasad"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"pradyuprasad"},"content":"    void testValidateDeleteCommand_Invalid() throws FileInitializationException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"pradyuprasad"},"content":"        TaskList taskList \u003d new TaskList(new Storage());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"pradyuprasad"},"content":"        String[] parts \u003d { \"delete\", \"abc\" };","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"pradyuprasad"},"content":"        assertThrows(InvalidDeleteException.class, () -\u003e parser.validateDeleteCommand(taskList, parts));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"pradyuprasad"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":123}},{"path":"src/test/java/orion/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"package orion.task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":"class DeadlineTest {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":"    void testConstructorAndGetters() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":"        LocalDateTime by \u003d LocalDateTime.of(2024, 12, 25, 18, 0);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":"        Deadline deadline \u003d new Deadline(1, \"Submit report\", by);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"        // Using getTaskID() instead of getTaskId()","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":"        assertEquals(1, deadline.getTaskID());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":"        assertEquals(\"Submit report\", deadline.getDescription());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":"        assertEquals(by, deadline.getBy());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pradyuprasad"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pradyuprasad"},"content":"    void testGetTypeIcon() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pradyuprasad"},"content":"        Deadline deadline \u003d new Deadline(1, \"Submit report\", LocalDateTime.of(2024, 12, 25, 18, 0));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pradyuprasad"},"content":"        assertEquals(\"[D]\", deadline.getTypeIcon());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pradyuprasad"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pradyuprasad"},"content":"    void testToString() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pradyuprasad"},"content":"        LocalDateTime by \u003d LocalDateTime.of(2024, 12, 25, 18, 0);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pradyuprasad"},"content":"        Deadline deadline \u003d new Deadline(1, \"Submit report\", by);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pradyuprasad"},"content":"        String expected \u003d \"[D][ ] Submit report (by: 25 Dec 2024 18:00)\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pradyuprasad"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pradyuprasad"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pradyuprasad"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pradyuprasad"},"content":"todo Finish homework","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pradyuprasad"},"content":"deadline Submit report /by 10/09/2024 1800","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"event Company retreat /from 15/09/2024 0900 /to 17/09/2024 1700","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":"todo Buy groceries","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":"deadline Pay utility bills /by 05/09/2024 1200","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pradyuprasad"},"content":"event Friend\u0027s wedding /from 12/09/2024 1500 /to 12/09/2024 2100","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pradyuprasad"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pradyuprasad"},"content":"mark 2","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":"mark 5","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":"delete 4","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pradyuprasad"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pradyuprasad"},"content":"unmark 2","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":"todo Prepare presentation","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":"event Conference /from 20/09/2024 0900 /to 22/09/2024 1700","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":"find report","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"find wedding","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":"find non-existent","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":"delete 3","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pradyuprasad"},"content":"find retreat","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pradyuprasad"},"content":"bye","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":21}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pradyuprasad"},"content":"# create out/production/ip directory if it doesn\u0027t exist","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pradyuprasad"},"content":"if [ ! -d \"./out/production/ip\" ]; then","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pradyuprasad"},"content":"    mkdir -p ./out/production/ip","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pradyuprasad"},"content":"if [ -e \"./text-ui-test/ACTUAL.TXT\" ]; then","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pradyuprasad"},"content":"    rm ./text-ui-test/ACTUAL.TXT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pradyuprasad"},"content":"# delete the data/tasks.csv file if it exists","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pradyuprasad"},"content":"if [ -e \"./data/tasks.csv\" ]; then","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pradyuprasad"},"content":"    rm ./data/tasks.csv","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pradyuprasad"},"content":"fi","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pradyuprasad"},"content":"# compile the code into the out/production/ip folder, terminates if error occurred","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pradyuprasad"},"content":"if ! javac -cp ./src/main/java -Xlint:none -d ./out/production/ip $(find ./src/main/java/orion -name \"*.java\"); then","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pradyuprasad"},"content":"java -classpath ./out/production/ip orion.Orion \u003c ./text-ui-test/input.txt \u003e ./text-ui-test/ACTUAL.TXT","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pradyuprasad"},"content":"cp ./text-ui-test/EXPECTED.TXT ./text-ui-test/EXPECTED-UNIX.TXT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pradyuprasad"},"content":"dos2unix ./text-ui-test/ACTUAL.TXT ./text-ui-test/EXPECTED-UNIX.TXT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pradyuprasad"},"content":"diff ./text-ui-test/ACTUAL.TXT ./text-ui-test/EXPECTED-UNIX.TXT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pradyuprasad"},"content":"if [ $? -eq 0 ]; then","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pradyuprasad"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"pradyuprasad":18,"-":22}}]
