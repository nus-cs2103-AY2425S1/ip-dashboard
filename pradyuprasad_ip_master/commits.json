{"authorDailyContributionsMap":{"pradyuprasad":[{"date":"2024-08-22","commitResults":[{"hash":"49ee60e191e19a660afb1cacd01c402d219d8bf4","isMergeCommit":false,"messageTitle":"rename main file","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"beb5999ce07043ad0179537c43cd604d2bbdbaa5","isMergeCommit":false,"messageTitle":"Completed Level 0. Rename, Greet, Exit","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":6}}},{"hash":"778e63d07af9e4be2b0032384cd64c414fa9274c","isMergeCommit":false,"messageTitle":"Completed Level 1. Echo","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":1}}},{"hash":"d3b2e0bf8e31533f45083dee8380a712a3ddd69c","isMergeCommit":false,"messageTitle":"Completed Level 2. Add, List","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":4}}},{"hash":"5a8dc3afd471293768428152a296789bebf3d435","isMergeCommit":false,"messageTitle":"Completed Level 3. Mark as Done","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":5}}},{"hash":"44c53905f2efe6a118ae13764602389412c33863","isMergeCommit":false,"messageTitle":"Completed Level 4. ToDos, Events, Deadlines","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":66,"deletions":4}}},{"hash":"b8095aee2c020d5d3a04b4aaf39f9ec863b86fad","isMergeCommit":false,"messageTitle":"Fixed bugs in Level 4. ToDos, Events, Deadlines","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":98,"deletions":53}}},{"hash":"78df2f79d6df22914f7d4b21c90336677f8ebe86","isMergeCommit":false,"messageTitle":"Wrote test","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":12,"deletions":0},"sh":{"insertions":12,"deletions":12}}},{"hash":"ee77f4f4eb559aaa7335109de6658f7c90d782ad","isMergeCommit":false,"messageTitle":"Level 5. Handle Errors","messageBody":"","tags":["Level-6","Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":177,"deletions":95}}},{"hash":"a23f013d20710452b48f0499ecf2cb1e7390c433","isMergeCommit":false,"messageTitle":"A-Enums","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":75,"deletions":34}}}]},{"date":"2024-08-23","commitResults":[{"hash":"1231ccf91175be71dc235bbe910630cf034a4613","isMergeCommit":false,"messageTitle":"major refactor","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":17,"deletions":7},"java":{"insertions":514,"deletions":260},"md":{"insertions":9,"deletions":0}}}]},{"date":"2024-08-25","commitResults":[{"hash":"dc50ab62b01174e44d547a8e7be37eaa78ffa228","isMergeCommit":false,"messageTitle":"Refactor TaskManager for file-based persistence and error handling","messageBody":"- Added file-based persistence to TaskManager using tasks.csv\n- Implemented methods to load and save tasks from/to CSV file\n- Removed taskIdCounter and dynamically generated task IDs based on existing tasks\n- Enhanced error handling with FileInitializationException for file operations\n- Updated Orion class to initialize TaskManager with exception handling\n- Refactored add, delete, markAsDone, and unmarkAsDone methods to ensure persistence\n- Improved consistency by loading tasks from file before every operation\n","fileTypesAndContributionMap":{"java":{"insertions":186,"deletions":45},"md":{"insertions":2,"deletions":1}}},{"hash":"516afcb8663d50880dbcfc3c1e1a3a52ebac8d92","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027 into master","messageBody":"- Implemented file-based persistence for tasks using CSV in TaskManager\n- Added methods to load and save tasks from/to the CSV file\n- Introduced FileInitializationException for robust error handling during file operations\n- Refactored task management methods (add, delete, markAsDone, unmarkAsDone) to ensure persistence\n- Updated Orion class to handle TaskManager initialization with file-based persistence\n","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"8792d57f39b591a7031d60b32a90d4650a6b534c","isMergeCommit":false,"messageTitle":"Fix method name and add missing isValidIndex implementation","messageBody":"- Implemented isValidIndex method in TaskManager to correctly check task index validity\n- Updated Validator class to use isValidIndex instead of the incorrect method name\n","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":2}}},{"hash":"245726b4cfdf1f2ca299cc11a47d7d1b1dc8fb90","isMergeCommit":false,"messageTitle":"Add InvalidDateFormatException to handle invalid date format errors","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"e05889a0f5201e159bb5bcdabd9e004f4eda5cfc","isMergeCommit":false,"messageTitle":"Add parseDateTime helper function to handle date and time parsing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":1}}},{"hash":"d2d405943a7720abf39a4443942a3017e07490b8","isMergeCommit":false,"messageTitle":"Update validateEventCommand to use parseDateTime for date and time parsing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":5}}},{"hash":"30aef411abd3aeb84282dfe6a810a9c6da10f108","isMergeCommit":false,"messageTitle":"Update validateDeadlineCommand to support date and time parsing with optional time","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":4}}},{"hash":"3a259479420ac8788c5332e85121761c52f06718","isMergeCommit":false,"messageTitle":"Refactor to use LocalDateTime for Deadlines and Events","messageBody":"- Removed `data/tasks.csv` to start fresh with correct date formats.\n- Updated `Deadline` and `Event` classes to use `LocalDateTime` for date and time fields.\n- Created `DeadlineDetails` and `EventDetails` classes to encapsulate and transfer task details.\n- Refactored `Validator` to return `DeadlineDetails` and `EventDetails` objects.\n- Adjusted `TaskManager` methods to work with the new details classes.\n- Updated input.txt to use correct date formats for testing.\n","fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":7},"java":{"insertions":162,"deletions":42}}},{"hash":"53fce3097d2e04e60f48b4f13c9304067b07b541","isMergeCommit":false,"messageTitle":"Refactor TaskManager to use ISO-8601 date format and improve error handling for mark/unmark commands","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":6},"java":{"insertions":8,"deletions":22}}},{"hash":"17b77481d46abb2e5eff92e4f02619062418e512","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"This merge incorporates the `branch-Level-8` enhancements into the `master` branch, bringing significant improvements and bug fixes to the codebase.\n\nKey Enhancements:\n1. **Date and Time Handling:**\n   - Implemented support for ISO-8601 date and time format (`YYYY-MM-DDTHH:MM`) in the `TaskManager` class.\n   - Ensured that all deadlines and event dates are stored and parsed using this standardized format, improving consistency and reducing potential parsing errors.\n   - Updated the `Validator` class to validate user inputs correctly according to the new date format.\n\n2. **Improved Error Handling:**\n   - Enhanced the `InvalidMarkException` to provide clearer error messages, guiding users on the correct usage of the `mark` and `unmark` commands.\n   - Refined the logic in the `Validator` class for handling `mark` and `unmark` commands, ensuring that invalid commands are caught and reported accurately.\n\n3. **User Interface Updates:**\n   - Adjusted the output formatting for task lists to display dates and times in a user-friendly manner while maintaining internal consistency with the ISO-8601 standard.\n   - Ensured that tasks are correctly marked, unmarked, and deleted, with corresponding updates in the task list.\n\nAdditional Notes:\n- This merge is crucial for aligning the `master` branch with the latest improvements in date and time handling, as well as providing a more robust and user-friendly interface.\n- All relevant tests have been updated and verified to ensure that the new functionality works as expected across different scenarios.\n","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"780b88ff366d51977b27f6035bc2d51000735e04","isMergeCommit":false,"messageTitle":"Rename TaskManager to TaskList","messageBody":"This commit refactors the task management system to align with\nthe A-MoreOOP requirements. Specifically:\n\n- Renamed TaskManager class to TaskList\n- Updated all references to TaskManager across the project\n- Adjusted package structure from taskManager to taskList\n\nThis change is part of the broader refactoring effort to make\nthe code more object-oriented and modular. It\u0027s a step towards\nimplementing the required class structure for the A-MoreOOP task.\n\nFuture commits will address the creation of Ui and Storage classes,\nas well as further refactoring of the main Orion (soon to be Duke) class.\n","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":11}}},{"hash":"8e2d056a76ccb07f601d16c60ecac03f3ebe2559","isMergeCommit":false,"messageTitle":"Rename Validator to Parser","messageBody":"- Changed Validator class to Parser\n- Updated all references in Orion.java\n- Moved Parser.java to correct package\n\nPart of ongoing refactoring for A-MoreOOP task.\n","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":11}}},{"hash":"021045186b2bc0fcde9ba5d31ffa9eac4f3e5c3b","isMergeCommit":false,"messageTitle":"Add UI class for user interaction handling","messageBody":"- Create new UI class in src/main/java/ui/UI.java\n- Implement methods for displaying messages and reading user input\n- Prepare for refactoring user interaction logic from Orion class\n\nThis change is part of the A-MoreOOP refactoring to improve\nseparation of concerns in the application.\n","fileTypesAndContributionMap":{"java":{"insertions":72,"deletions":0}}},{"hash":"9ed93dee977ee75e9bd7a2b78bfff23b792b93f5","isMergeCommit":false,"messageTitle":"Implement Storage class and refactor TaskList","messageBody":"- Add new Storage class for file I/O operations\n- Modify TaskList to use Storage for reading and writing tasks\n- Update Orion to initialize both Storage and TaskList\n- Propagate FileInitializationException in TaskList methods\n\nThis refactoring improves separation of concerns and modularity\nin the task management system, aligning with A-MoreOOP principles.\n","fileTypesAndContributionMap":{"java":{"insertions":140,"deletions":77}}},{"hash":"c8dce2ca3c577a7818d7fc9c04146c4d788772fc","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-MoreOOP\u0027 into master","messageBody":"This merge implements the A-MoreOOP refactoring, significantly\nimproving the project\u0027s structure and adherence to OOP principles:\n\n1. User Interface (UI):\n   - Add new UI class to handle all user interactions\n   - Implement methods for displaying messages and reading user input\n   - Move UI-related code from Orion to the new UI class\n\n2. Storage:\n   - Implement new Storage class for file I/O operations\n   - Add methods for reading from and writing to the data file\n   - Encapsulate file initialization logic\n\n3. Task Management:\n   - Rename TaskManager to TaskList for clarity\n   - Refactor TaskList to use the new Storage class\n   - Update task manipulation methods to work with Storage\n\n4. Input Parsing:\n   - Rename Validator to Parser for more accurate representation\n   - Adjust Parser methods to work with the refactored TaskList\n\n5. Main Application (Orion):\n   - Update to use new UI, Storage, TaskList, and Parser classes\n   - Improve error handling with FileInitializationException\n\n6. Exception Handling:\n   - Propagate FileInitializationException in TaskList methods\n   - Update exception handling in Orion to use new UI methods\n\nThese changes significantly improve the separation of concerns,\nmaking the codebase more modular, maintainable, and extensible.\nThe refactored structure aligns with SOLID principles and sets\na foundation for future enhancements.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"f3174a39703039f3fd8e054552f3c62d7509429a","isMergeCommit":false,"messageTitle":"Refactor project to organize all classes under the `orion` package","messageBody":"- Renamed the main package to `orion` and adjusted all subpackages accordingly.\n- Updated all import statements to reflect the new package structure.\n- Removed `data/tasks.csv` to clean up the data directory.\n- Modified the `runtest.sh` script to accommodate the new package structure and ensure proper file compilation.\n- Improved the organization and maintainability of the codebase by following a consistent package naming convention.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":47,"deletions":42},"sh":{"insertions":11,"deletions":9}}},{"hash":"83829383985c9d7251ae10c71041065eae0b36df","isMergeCommit":true,"messageTitle":"Merge \u0027branch-A-Packages\u0027 into \u0027main\u0027","messageBody":"Duke A-Packages: Organize classes into appropriate packages\n\nThis merge completes the A-Packages level task by organizing all Java\nclasses under the `orion` package, following the guidelines provided\nin the SWE class.\n\n- Organized all classes into the `orion` package for better structure.\n- Created subpackages: `orion.commands`, `orion.parser`, `orion.task`,\n  `orion.ui`, etc., to logically group related classes.\n- Updated all import statements to match the new package structure.\n- Removed `data/tasks.csv` to keep the data directory clean.\n- Modified `runtest.sh` to accommodate the new structure, ensuring\n  proper compilation and testing.\n\nThis refactor enhances code maintainability, aligning with the stretch\ngoal of dividing classes into multiple packages as the codebase grows.\n","fileTypesAndContributionMap":{}}]},{"date":"2024-08-28","commitResults":[{"hash":"22a6409d20e4b34a27377924cdf011bdc04cd50a","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{}}]},{"date":"2024-08-29","commitResults":[{"hash":"f7e18e9a1462b7a7ddadf2bfc625c0000b3edcdb","isMergeCommit":false,"messageTitle":"Update main class and shadowJar configuration","messageBody":"- Set mainClass to `orion.Orion` in build.gradle to align with the correct entry point.\n- Change shadowJar archive base name from `duke` to `orion`.\n- Add `data/` directory to .gitignore to exclude runtime data from version control.\n- Add the correct package declaration `package orion;` in Orion.java.\n","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2},"java":{"insertions":2,"deletions":0}}},{"hash":"b44021123220baa70fca590f32e03fa9dc602a45","isMergeCommit":true,"messageTitle":"Merge branch \u0027fix-issues\u0027 into master","messageBody":"This merge addresses various project configuration and structural issues:\n- Corrected the main class reference in build.gradle to `orion.Orion`.\n- Updated shadowJar configuration to use `orion` as the archive base name.\n- Added the `data/` directory to .gitignore to prevent unnecessary files from being tracked.\n- Ensured `Orion.java` has the appropriate package declaration.\n\nThese changes resolve the issues in the \u0027fix-issues\u0027 branch and align the project with its intended structure.\n","fileTypesAndContributionMap":{}},{"hash":"a0776f3f1f2e69ef57bee54279f9c3d4f725f0a8","isMergeCommit":false,"messageTitle":"Add JUnit tests for Parser and Deadline classes","messageBody":"- Added unit tests for the Parser class, covering validation of commands such as list, mark, unmark, todo, event, deadline, and delete.\n- Added unit tests for the Deadline class, verifying correct construction, type icon retrieval, and string representation.\n- Ensured that all tests handle relevant exceptions appropriately and validate expected outcomes.\n\nThese tests improve code coverage and ensure that core functionality behaves as expected.\n","fileTypesAndContributionMap":{"java":{"insertions":150,"deletions":0}}},{"hash":"db7f68938c35d601344617163b72dd90e2d2cfa8","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JUnit\u0027 into master","messageBody":"This merge adds comprehensive JUnit tests for the Parser and Deadline classes:\n- ParserTest: Includes tests for command validation methods, such as list, mark, unmark, todo, event, deadline, and delete commands. These tests ensure that the parser correctly handles both valid and invalid input scenarios and raises appropriate exceptions.\n- DeadlineTest: Verifies the proper construction of Deadline objects, checks the correctness of the type icon, and validates the string representation format.\n\nThese additions improve test coverage, ensuring robustness and reliability of core functionalities.\n","tags":["A-JUnit"],"fileTypesAndContributionMap":{}},{"hash":"1fb203af37e8335b6a0bb33dc6f9bc44d6ded344","isMergeCommit":false,"messageTitle":"Change build.gradle to allow JAR file generation","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"e36b01b6dce3b61930017b84b9b7f528c270df89","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Jar\u0027","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{}},{"hash":"c318596523d9a89bf2ea31bbaef2e5b407af857a","isMergeCommit":false,"messageTitle":"Refactor Orion and UI for streamlined formatting","messageBody":"- Removed `executeWithFormatting` calls from the Orion class and moved them into the respective methods in the UI class.\n- Simplified the Orion class by delegating all output formatting responsibilities to the UI class.\n- Updated UI methods (e.g., `showTaskAdded`, `showTaskList`, `showTaskMarked`) to include consistent formatting with `executeWithFormatting`.\n- This refactoring enhances code readability and maintains a clear separation of concerns between the Orion class (logic) and the UI class (presentation).\n","fileTypesAndContributionMap":{"java":{"insertions":99,"deletions":126}}},{"hash":"8d54fd73ec6e3fd0ec34cd0b34c95a6c26bb4717","isMergeCommit":true,"messageTitle":"Merge branch \u0027fix-UI-errors\u0027 into master","messageBody":"- Refactored the UI class to centralize formatting and output handling.\n- Removed redundant `executeWithFormatting` calls in the Orion class, simplifying the codebase.\n- Ensured consistent task formatting across all command outputs.\n- Improved code readability and maintainability by delegating UI responsibilities to the UI class.\n","fileTypesAndContributionMap":{}},{"hash":"b797a5e1599c0f73cc90b326e3288ef43715ac93","isMergeCommit":false,"messageTitle":"Add JavaDoc comments to Orion class methods","messageBody":"- Added detailed JavaDoc comments to the Orion class and its methods to improve code documentation.\n- Provided descriptions for the main class, its entry point, and all command-handling methods.\n- Documented the purpose, behavior, and parameters for each method to enhance code readability and maintainability.\n","fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":0}}},{"hash":"4631639525903afd9b3d5fe6b5e1b5c147b64033","isMergeCommit":false,"messageTitle":"fix coding style violations by removing unecessary imports","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":17}}},{"hash":"41a2e6b547f3dab743dcf6af78db57878f2326cf","isMergeCommit":false,"messageTitle":"Add JavaDoc comments to Command enum and fromString method","messageBody":"The Command enum lacked documentation, which could lead to confusion\nfor future developers.\n\nJavaDoc comments are added to describe the purpose of the Command enum\nand its values. The fromString method now includes comments explaining\nits functionality and how it handles invalid input.\n","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":1}}},{"hash":"39a1436fe23f907905028635f0ea7089e7cdaf39","isMergeCommit":false,"messageTitle":"Refactor imports and format code in  classes and","messageBody":"- Organized imports across multiple classes to improve readability and maintain consistency.\n- Applied consistent code formatting, including spacing and line breaks, in Parser, Storage, TaskList classes, and related test files.\n- Ensured proper indentation and alignment of method signatures and blocks for better code structure.\n- No functional changes were made; these updates focus on enhancing code clarity and maintainability.\n","fileTypesAndContributionMap":{"java":{"insertions":65,"deletions":40}}},{"hash":"c2453035223b50509f83d2f2ff92eec99c9be6f5","isMergeCommit":false,"messageTitle":"Add comments and improve exception messages","messageBody":"- Enhanced documentation for custom exceptions to provide clear explanations and usage instructions.\n- Updated exception messages to include specific formatting details and usage examples.\n- Ensured consistency in error messaging across different exception classes.\n- Fixed formatting issues in exception messages for better readability.\n","fileTypesAndContributionMap":{"java":{"insertions":191,"deletions":16}}},{"hash":"f2b88f077f90ec12fb338b133e35d76e5ae4f7e0","isMergeCommit":false,"messageTitle":"Add detailed documentation and enhance command validation in Parser","messageBody":"- Added detailed Javadoc comments for all command validation methods.\n- Improved exception messages to provide clearer feedback on command errors.\n- Added validation for todo, event, deadline, delete, mark, and unmark commands.\n- Enhanced date and time parsing with improved error handling and validation.\n- Updated method documentation to describe parameters, return values, and exceptions.\n","fileTypesAndContributionMap":{"java":{"insertions":78,"deletions":7}}},{"hash":"7038e13f7c7c2cf145bad9bd631cc6950f40b3f2","isMergeCommit":false,"messageTitle":"Add Javadoc comments to Storage class","messageBody":"- Added Javadoc comments to the Storage class to provide detailed descriptions\n  for methods and class-level documentation.\n- Documented the purpose of the class, including its responsibilities for\n  initializing, reading, and writing tasks to the storage file.\n","fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":0}}},{"hash":"5088cf92a8a5346abb3ec7b5a10d03b8ddef8606","isMergeCommit":false,"messageTitle":"Create JavaDoc for all classes in Task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":163,"deletions":12}}},{"hash":"28f3db2bfe80c92ef76af4744a27f49aa8f325ca","isMergeCommit":false,"messageTitle":"Add javadoc to TaskList","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":120,"deletions":2}}}]},{"date":"2024-08-30","commitResults":[{"hash":"401eebf0a9473fcb6df4edb2905e5cc6536a5fa2","isMergeCommit":false,"messageTitle":"make build and formatting changes","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":17,"deletions":3},"java":{"insertions":3,"deletions":2}}},{"hash":"5d3bfc958b35ace5cb344908e2bef48b3ba297ef","isMergeCommit":false,"messageTitle":"Add FIND command to enable task searching","messageBody":"Add a FIND command to the Command enum to allow Orion to parse\nand handle user requests for finding tasks based on keywords in\ntheir descriptions.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"98523c747c169ce080c3133a7be3f635f4ae0551","isMergeCommit":false,"messageTitle":"Implement `FIND` command to search tasks","messageBody":"- Added `FIND` command to the `Command` enum to allow searching for tasks by keyword in the description.\n- Updated `Orion` class with `handleFind` method to process the `FIND` command.\n- Added `validateFindCommand` method in `Parser` to validate `FIND` command input.\n- Extended `TaskList` class with `findTasks` method that filters tasks by a keyword using streams.\n- Enhanced `UI` class to display matching tasks when the `find` parameter is set to true.\n- Updated text UI tests to include test cases for the `FIND` command with various scenarios.\n","fileTypesAndContributionMap":{"txt":{"insertions":15,"deletions":16},"java":{"insertions":64,"deletions":11}}},{"hash":"3b9c986dff6f5b28105975b0b0ea87f630324583","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JavaDoc\u0027","messageBody":"Add JavaDocs across various classes and methods to improve code documentation and maintainability.\n\n- Detailed JavaDocs added to classes like `Orion`, `Command`, and `Storage`.\n- Enhanced documentation for custom exceptions in the `orionExceptions` package.\n- Updated `.gitignore` to exclude `.txt` files, preventing unnecessary files from being tracked.\n\nThese changes enhance code readability and help future developers understand the codebase more effectively.\n","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{}},{"hash":"fefa2b3e061e0787a7986213fffe1b7be143e679","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027","messageBody":"Improve code quality and documentation across Orion application:\n\n- Add comprehensive Javadoc comments to all classes and methods\n- Enhance code organization and readability\n- Improve exception handling and error messages\n- Refactor TaskList and Storage classes for better separation of concerns\n- Update Parser class with more robust input validation\n- Modify .gitignore to exclude .txt files\n- Standardize import statements and code formatting\n","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{}},{"hash":"8c36c53b5af44e3114ad12d8f2b8f76579c7a311","isMergeCommit":true,"messageTitle":"Implement `FIND` command to search tasks","messageBody":"    - Added `FIND` command to the `Command` enum to allow searching for tasks by keyword in the description.\n    - Updated `Orion` class with `handleFind` method to process the `FIND` command.\n    - Added `validateFindCommand` method in `Parser` to validate `FIND` command input.\n    - Extended `TaskList` class with `findTasks` method that filters tasks by a keyword using streams.\n    - Enhanced `UI` class to display matching tasks when the `find` parameter is set to true.\n    - Updated text UI tests to include test cases for the `FIND` command with various scenarios.\n","tags":["Level-9","A-CheckStyle"],"fileTypesAndContributionMap":{}}]},{"date":"2024-09-05","commitResults":[{"hash":"b8acb19f6e1f757ffa8bffa37c77f6f96e89bb6d","isMergeCommit":false,"messageTitle":"Add JavaFX setup and initial GUI components","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":18,"deletions":32},"fxml":{"insertions":35,"deletions":0}}},{"hash":"8295b7322f09736d695f2bfb315bd380adb9c2fc","isMergeCommit":false,"messageTitle":"Fix errors in GUI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":210,"deletions":154}}},{"hash":"17aeae88e0e14db1af42533ed54b57f9ceb15795","isMergeCommit":false,"messageTitle":"fix image loading issues","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":9,"deletions":0},"fxml":{"insertions":1,"deletions":1},"java":{"insertions":42,"deletions":26}}},{"hash":"003d284c7618b0a94308a9135408bf606686f1ba","isMergeCommit":true,"messageTitle":"Implement GUI for Orion Task Manager","messageBody":"- Add JavaFX setup and initial GUI components\n- Create MainWindow and DialogBox classes\n- Implement basic task management functionality in GUI\n- Fix image loading issues, convert WebP to PNG\n- Update build.gradle for JavaFX support\n\nThis merge transforms Orion from a CLI to a GUI application,\nproviding a more user-friendly interface for task management.\"\n","tags":["Level-10"],"fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"pradyuprasad":{"java":1919,"md":10,"fxml":35,"sh":18,"bat":0,"gradle":23,"txt":21}},"authorContributionVariance":{"pradyuprasad":147653.62},"authorDisplayNameMap":{"pradyuprasad":"CS2103T-T13-4 PRAD..ASAD"}}
