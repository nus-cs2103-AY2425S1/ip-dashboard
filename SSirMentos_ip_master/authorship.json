[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SSirMentos"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SSirMentos"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SSirMentos"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SSirMentos"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SSirMentos"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SSirMentos"},"content":"        super(description);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SSirMentos"},"content":"        this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SSirMentos"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SSirMentos"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SSirMentos"},"content":"    public String toString(){","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SSirMentos"},"content":"        return String.format(\"[D] %s (by: %s)\",super.toString(),this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\")));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SSirMentos"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SSirMentos"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"SSirMentos":17}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SSirMentos"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SSirMentos"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SSirMentos"},"content":"public class Event extends Task{","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SSirMentos"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SSirMentos"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SSirMentos"},"content":"    public Event(String description,String from, String to) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SSirMentos"},"content":"        super(description);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SSirMentos"},"content":"        this.from \u003dLocalDateTime.parse(from, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SSirMentos"},"content":"        this.to\u003dLocalDateTime.parse(to, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SSirMentos"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SSirMentos"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SSirMentos"},"content":"    public String toString(){","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SSirMentos"},"content":"        return String.format(\"[E] %s (from: %s to: %s)\",super.toString(),this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\")),this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\")));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SSirMentos"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SSirMentos"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"SSirMentos":19}},{"path":"src/main/java/Mentos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SSirMentos"},"content":"import javax.swing.plaf.basic.BasicInternalFrameTitlePane;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SSirMentos"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SSirMentos"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SSirMentos"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SSirMentos"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SSirMentos"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SSirMentos"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SSirMentos"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SSirMentos"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SSirMentos"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SSirMentos"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SSirMentos"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SSirMentos"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SSirMentos"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SSirMentos"},"content":"public class Mentos","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SSirMentos"},"content":"{","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SSirMentos"},"content":"    private static final String FILE_PATH \u003d System.getProperty(\"user.dir\")+\"/data/Mentos.txt\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SSirMentos"},"content":"    private final String MARKED \u003d \"mark\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SSirMentos"},"content":"    private final String UNMARKED \u003d \"unmark\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SSirMentos"},"content":"    private final String TODO \u003d \"todo\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SSirMentos"},"content":"    private final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SSirMentos"},"content":"    private final String EVENT \u003d \"event\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SSirMentos"},"content":"    private final String DELETE \u003d \"delete\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SSirMentos"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SSirMentos"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SSirMentos"},"content":"        Mentos mentos \u003d new Mentos();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SSirMentos"},"content":"        mentos.startConversation();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SSirMentos"},"content":"        mentos.loadTasksFromFile();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SSirMentos"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SSirMentos"},"content":"        while (scanner.hasNext()){","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SSirMentos"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SSirMentos"},"content":"            if (input.equals(\"bye\")){","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SSirMentos"},"content":"                break;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SSirMentos"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SSirMentos"},"content":"            mentos.taskHandler(input);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SSirMentos"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SSirMentos"},"content":"        mentos.endConversation();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SSirMentos"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SSirMentos"},"content":"    public void startConversation(){","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SSirMentos"},"content":"        /*","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SSirMentos"},"content":"         * Starts the conversation with the user by displaying a greeting message.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SSirMentos"},"content":"         * This method prints a formatted message to the console, including a","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SSirMentos"},"content":"         * border and a welcome message indicating that the chatbot, Mentos, is","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SSirMentos"},"content":"         * ready to assist.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SSirMentos"},"content":"         */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SSirMentos"},"content":"        System.out.println(\"____________________________\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SSirMentos"},"content":"        System.out.println(\"Hello! I\u0027m Mentos\\nWhat can I do to help you?\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SSirMentos"},"content":"        System.out.println(\"____________________________\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SSirMentos"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SSirMentos"},"content":"    public void endConversation(){","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SSirMentos"},"content":"        /*","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SSirMentos"},"content":"         * Ends the conversation with the user by displaying a farewell message.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SSirMentos"},"content":"         * This method prints a formatted message to the console, including a","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SSirMentos"},"content":"         * border and a closing statement with a fun reference to Mentos,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SSirMentos"},"content":"         * encouraging the user to \"Pop a Mentos\" and stay fresh.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SSirMentos"},"content":"         */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SSirMentos"},"content":"        System.out.println(\"____________________________\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SSirMentos"},"content":"        System.out.println(\"Pop a Mentos, stay fresh! See you next time!\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SSirMentos"},"content":"        System.out.println(\"____________________________\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SSirMentos"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SSirMentos"},"content":"    public Matcher regexHandler(String input,String regex){","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SSirMentos"},"content":"        /*","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SSirMentos"},"content":"         * Handles regular expression matching on a given input string.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SSirMentos"},"content":"         * This method compiles the provided regular expression (regex) and","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SSirMentos"},"content":"         * attempts to find a match within the input string. If a match is found,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SSirMentos"},"content":"         * it returns the `Matcher` object, allowing further operations like","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SSirMentos"},"content":"         * extracting matched groups. If no match is found, it returns `null`.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SSirMentos"},"content":"         *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SSirMentos"},"content":"         * @param input the string to be matched against the regular expression.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SSirMentos"},"content":"         * @param regex the regular expression used for matching.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SSirMentos"},"content":"         * @return `Matcher` object if a match is found; `null` otherwise.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SSirMentos"},"content":"         */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SSirMentos"},"content":"        Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"SSirMentos"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"SSirMentos"},"content":"        if (matcher.find()){","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"SSirMentos"},"content":"            return matcher;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"SSirMentos"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"SSirMentos"},"content":"        return null;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"SSirMentos"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"SSirMentos"},"content":"    public void taskHandler(String input) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"SSirMentos"},"content":"        /*","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"SSirMentos"},"content":"         * Handles user input commands related to task management.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"SSirMentos"},"content":"         *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"SSirMentos"},"content":"         * This method processes various task-related commands such as listing tasks,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"SSirMentos"},"content":"         * marking tasks as done, unmarking tasks, deleting tasks, and adding new tasks","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"SSirMentos"},"content":"         * (todo, deadline, event). It uses regular expressions to parse and validate","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"SSirMentos"},"content":"         * the input commands, and throws custom exceptions (`MentosException`)","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"SSirMentos"},"content":"         * when inputs are invalid.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"SSirMentos"},"content":"         *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"SSirMentos"},"content":"         * The following commands are supported:","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"SSirMentos"},"content":"         *   list - Lists all the current tasks.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"SSirMentos"},"content":"         *   mark X- Marks the task at index X as done.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"SSirMentos"},"content":"         *   unmark X - Unmarks the task at index X (marks it as not done).","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"SSirMentos"},"content":"         *   delete X\u003c - Deletes the task at index X.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"SSirMentos"},"content":"         *   todo DESCRIPTION - Adds a new ToDo task with the given description.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"SSirMentos"},"content":"         *   deadline DESCRIPTION /by DATETIME - Adds a new Deadline task with the given description and due date.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"SSirMentos"},"content":"         *   event DESCRIPTION /from DATETIME /to DATETIME - Adds a new Event task with the given description and time range.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"SSirMentos"},"content":"         *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"SSirMentos"},"content":"         * If an unrecognized command is given, the method responds with a message indicating","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"SSirMentos"},"content":"         * that the command is not understood.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"SSirMentos"},"content":"         *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"SSirMentos"},"content":"         * @param input the user\u0027s input command as a string.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"SSirMentos"},"content":"         * @throws MentosException if the input is invalid or if the specified task index does not exist.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"SSirMentos"},"content":"         */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"SSirMentos"},"content":"        try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"SSirMentos"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"SSirMentos"},"content":"                displayTasks();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"SSirMentos"},"content":"            }  else if (input.startsWith(MARKED)) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"SSirMentos"},"content":"                Matcher match \u003d regexHandler(input, \"mark (\\\\d+)\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"SSirMentos"},"content":"                if (match \u003d\u003d null) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"SSirMentos"},"content":"                    throw new MentosException(\"Invalid input!\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"SSirMentos"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"SSirMentos"},"content":"                String extracted \u003d match.group(1);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"SSirMentos"},"content":"                int index \u003d Integer.parseInt(extracted);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"SSirMentos"},"content":"                if (index \u003e tasks.size() || index \u003d\u003d 0) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"SSirMentos"},"content":"                    throw new MentosException(\"No Such Tasks!\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"SSirMentos"},"content":"                }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"SSirMentos"},"content":"                tasks.get(index-1).markAsDone();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"SSirMentos"},"content":"                System.out.println(\"Nicely done! This task is marked as done!\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"SSirMentos"},"content":"                System.out.println(tasks.get(index-1).toString());","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"SSirMentos"},"content":"                System.out.println(\"____________________________\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"SSirMentos"},"content":"            } else if (input.startsWith(UNMARKED)) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"SSirMentos"},"content":"                Matcher match \u003d regexHandler(input, \"unmark (\\\\d+)\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"SSirMentos"},"content":"                if (match \u003d\u003d null) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"SSirMentos"},"content":"                    throw new MentosException(\"Invalid input!\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"SSirMentos"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"SSirMentos"},"content":"                String extracted \u003d match.group(1);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"SSirMentos"},"content":"                int index \u003d Integer.parseInt(extracted);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"SSirMentos"},"content":"                if (index \u003e tasks.size() || index \u003d\u003d 0) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"SSirMentos"},"content":"                    throw new MentosException(\"No Such Tasks!\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"SSirMentos"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"SSirMentos"},"content":"                tasks.get(index-1).markAsNotDone();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"SSirMentos"},"content":"                System.out.println(\"Holdup this task is not done!\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"SSirMentos"},"content":"                System.out.println(tasks.get(index-1).toString());","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"SSirMentos"},"content":"                System.out.println(\"____________________________\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"SSirMentos"},"content":"            } else if (input.startsWith(DELETE)){","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"SSirMentos"},"content":"                Matcher match \u003d regexHandler(input,\"delete (\\\\d+)$\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"SSirMentos"},"content":"                if (match \u003d\u003d null){","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"SSirMentos"},"content":"                    throw new MentosException(\"Invalid Delete input!\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"SSirMentos"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"SSirMentos"},"content":"                String extracted \u003d match.group(1);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"SSirMentos"},"content":"                int index \u003d Integer.parseInt(extracted);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"SSirMentos"},"content":"                if (index \u003e tasks.size() || index \u003d\u003d0){","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"SSirMentos"},"content":"                    throw new MentosException(\"No Such Tasks!\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"SSirMentos"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"SSirMentos"},"content":"                System.out.println(\"____________________________\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"SSirMentos"},"content":"                System.out.printf(\"Alrights I have removed the following task!\\n%s%n\",tasks.get(index-1).toString());","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"SSirMentos"},"content":"                tasks.remove(index-1);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"SSirMentos"},"content":"                System.out.printf(\"%d remaining tasks%n\",tasks.size());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"SSirMentos"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"SSirMentos"},"content":"            else if (input.startsWith(TODO)) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"SSirMentos"},"content":"                Matcher match \u003d regexHandler(input, \"todo (.+)\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"SSirMentos"},"content":"                if (match \u003d\u003d null) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"SSirMentos"},"content":"                    throw new MentosException(\"Todo cannot be empty!\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"SSirMentos"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"SSirMentos"},"content":"                String extracted \u003d match.group(1);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"SSirMentos"},"content":"                Task newTodo \u003d new ToDo(extracted);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"SSirMentos"},"content":"                tasks.add(newTodo);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"SSirMentos"},"content":"                print_event(TODO,newTodo);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"SSirMentos"},"content":"            } else if (input.startsWith(DEADLINE)){","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"SSirMentos"},"content":"                Matcher match \u003d regexHandler(input,\"deadline (.+) \\\\/by (\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{4})$\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"SSirMentos"},"content":"                if (match \u003d\u003d null){","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"SSirMentos"},"content":"                    throw new MentosException(\"Invalid deadline input! usage:deadline \u003cdesc\u003e /by \u003cdatetime\u003e in yyyy-mm-dd hhmm\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"SSirMentos"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"SSirMentos"},"content":"                String deadline_desc \u003d match.group(1);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"SSirMentos"},"content":"                String by \u003d match.group(2);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"SSirMentos"},"content":"                Task newDeadline \u003d new Deadline(deadline_desc,by);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"SSirMentos"},"content":"                tasks.add(newDeadline);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"SSirMentos"},"content":"                print_event(DEADLINE,newDeadline);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"SSirMentos"},"content":"            } else if (input.startsWith(EVENT)){","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"SSirMentos"},"content":"                Matcher match \u003d regexHandler(input,\"event (.+) \\\\/from (\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{4}) \\\\/to (\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{4})$\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"SSirMentos"},"content":"                if (match \u003d\u003d null){","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"SSirMentos"},"content":"                    throw new MentosException(\"Invalid Event input! usage:event \u003cdesc\u003e /from \u003cdatetime\u003e yyyy-mm-dd hhmm /to \u003cdatetime\u003e yyyy-mm-dd hhmm\" );","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"SSirMentos"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"SSirMentos"},"content":"                String eventDesc \u003d match.group(1);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"SSirMentos"},"content":"                String from \u003d match.group(2);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"SSirMentos"},"content":"                String to \u003d match.group(3);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"SSirMentos"},"content":"                System.out.println(String.format(\"from: %s, to: %s\",from,to));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"SSirMentos"},"content":"                Task newEvent \u003d new Event(eventDesc,from,to);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"SSirMentos"},"content":"                tasks.add(newEvent);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"SSirMentos"},"content":"                print_event(EVENT,newEvent);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"SSirMentos"},"content":"            }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"SSirMentos"},"content":"            else {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"SSirMentos"},"content":"                System.out.println(\"____________________________\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"SSirMentos"},"content":"                System.out.println(\"Sorry me no understand\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"SSirMentos"},"content":"                System.out.println(\"____________________________\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"SSirMentos"},"content":"            }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"SSirMentos"},"content":"            saveTasksToFile();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"SSirMentos"},"content":"        } catch (MentosException err){","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"SSirMentos"},"content":"            System.out.println(err);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"SSirMentos"},"content":"        } catch (DateTimeException e){","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"SSirMentos"},"content":"            System.out.println(\"Invalid Datetime inputted\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"SSirMentos"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"SSirMentos"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"SSirMentos"},"content":"    public void displayTasks(){","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"SSirMentos"},"content":"        /*","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"SSirMentos"},"content":"         * Displays the list of tasks currently stored.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"SSirMentos"},"content":"         *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"SSirMentos"},"content":"         * This method iterates through the list of tasks and prints each one,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"SSirMentos"},"content":"         * preceded by its corresponding index in the list. The tasks are formatted","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"SSirMentos"},"content":"         * as a numbered list, and each task\u0027s string representation is output.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"SSirMentos"},"content":"         * After displaying all tasks, a separator line is printed.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"SSirMentos"},"content":"         */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"SSirMentos"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"SSirMentos"},"content":"            String task_out \u003d String.format(\"%d. %s\",i+1,tasks.get(i).toString());","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"SSirMentos"},"content":"            System.out.println(task_out);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"SSirMentos"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"SSirMentos"},"content":"        System.out.println(\"____________________________\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"SSirMentos"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"SSirMentos"},"content":"    public void print_event(String event, Task task){","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"SSirMentos"},"content":"        /*","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"SSirMentos"},"content":"         * Prints a formatted message indicating that a task event has occurred.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"SSirMentos"},"content":"         *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"SSirMentos"},"content":"         * This method outputs a message to the console that includes the type of event","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"SSirMentos"},"content":"         * (such as \"todo\", \"deadline\", or \"event\"), the details of the task that was","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"SSirMentos"},"content":"         * added, and the number of remaining tasks. The message is enclosed within","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"SSirMentos"},"content":"         * a border for visual clarity.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"SSirMentos"},"content":"         *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"SSirMentos"},"content":"         * @param event the type of event that occurred (e.g., \"todo\", \"deadline\", \"event\").","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"SSirMentos"},"content":"         * @param task the task object that was added or modified, whose details will be printed.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"SSirMentos"},"content":"         */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"SSirMentos"},"content":"        System.out.println(\"____________________________\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"SSirMentos"},"content":"        System.out.printf(event+\" Added\\n%s\\n%d remaining tasks%n\",task.toString(),tasks.size());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"SSirMentos"},"content":"        System.out.println(\"____________________________\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"SSirMentos"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"SSirMentos"},"content":"    public void saveTasksToFile() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"SSirMentos"},"content":"        /*","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"SSirMentos"},"content":"         * Saves the list of tasks to a file specified by {@code FILE_PATH}.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"SSirMentos"},"content":"         * This method writes each task in the {@code tasks} list to the file, with each task on a new line.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"SSirMentos"},"content":"         * If the file specified by {@code FILE_PATH} does not exist, an error message will be printed to the console.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"SSirMentos"},"content":"         * Note: The method uses a hard-coded file path. Ensure that the directory structure exists before calling this method.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"SSirMentos"},"content":"         *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"SSirMentos"},"content":"         * @throws IOException if an I/O error occurs while writing to the file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"SSirMentos"},"content":"         */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"SSirMentos"},"content":"        try{","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"SSirMentos"},"content":"            FileWriter file \u003d new FileWriter(FILE_PATH,false);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"SSirMentos"},"content":"            for (Task task: tasks){","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"SSirMentos"},"content":"                file.write(task.toString()+\"\\n\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"SSirMentos"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"SSirMentos"},"content":"            file.close();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"SSirMentos"},"content":"        } catch (IOException exception){","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"SSirMentos"},"content":"            System.out.println(\"Please create a /data/Mentos.txt file in \"+ System.getProperty(\"user.dir\"));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"SSirMentos"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"SSirMentos"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"SSirMentos"},"content":"    public void loadTasksFromFile(){","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"SSirMentos"},"content":"        /*","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"SSirMentos"},"content":"         * Loads the list of tasks from a file specified by {@code FILE_PATH}.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"SSirMentos"},"content":"         * This method reads each line from the file and attempts to parse it into a {@code Task} object,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"SSirMentos"},"content":"         * depending on the task type identified in the line. The supported task types are:","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"SSirMentos"},"content":"         * To-Do (T)","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"SSirMentos"},"content":"         * Event (E)","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"SSirMentos"},"content":"         * Deadline (D)","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"SSirMentos"},"content":"         * If a line is not in the expected format, it will be skipped, and a warning message will be printed to the console.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"SSirMentos"},"content":"         * If the file does not exist or an I/O error occurs, an error message will be printed instead.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"SSirMentos"},"content":"         * Note: The method expects the file content to be in a specific format for parsing.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"SSirMentos"},"content":"         *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"SSirMentos"},"content":"         * @throws IOException if an I/O error occurs while reading the file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"SSirMentos"},"content":"         */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"SSirMentos"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH))) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"SSirMentos"},"content":"            String line;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"SSirMentos"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"SSirMentos"},"content":"                Matcher matcher \u003d regexHandler(line,\"^\\\\[([T|E|D])\\\\] \\\\[(.)\\\\] (?:.*)$\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"SSirMentos"},"content":"                if (matcher \u003d\u003d null){","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"SSirMentos"},"content":"                    System.out.println(\"Content not in the right format! Skipping....\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"SSirMentos"},"content":"                    continue;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"SSirMentos"},"content":"                }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"SSirMentos"},"content":"                String eventType \u003d matcher.group(1);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"SSirMentos"},"content":"                String isDone \u003d matcher.group(2);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"SSirMentos"},"content":"                if (eventType.equals(\"T\")){","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"SSirMentos"},"content":"                    //todo","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"SSirMentos"},"content":"                    Matcher toDoMatcher \u003d regexHandler(line,\"^\\\\[(?:[T])\\\\] \\\\[(?:.)\\\\] (.*)$\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"SSirMentos"},"content":"                    if (toDoMatcher \u003d\u003d null){","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"SSirMentos"},"content":"                        System.out.println(\"Content not in the right format! Skipping....\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"SSirMentos"},"content":"                        continue;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"SSirMentos"},"content":"                    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"SSirMentos"},"content":"                    String desc \u003d toDoMatcher.group(1);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"SSirMentos"},"content":"                    Task toDoEvent \u003d new ToDo(desc);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"SSirMentos"},"content":"                    if (isDone.equals(\"X\")){","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"SSirMentos"},"content":"                        toDoEvent.markAsDone();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"SSirMentos"},"content":"                    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"SSirMentos"},"content":"                    tasks.add(toDoEvent);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"SSirMentos"},"content":"                } else if (eventType.equals(\"E\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"SSirMentos"},"content":"                    //event","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"SSirMentos"},"content":"                    Matcher eventMatcher \u003d regexHandler(line,\"^\\\\[(?:[E])\\\\] \\\\[(?:.)\\\\] (.*) \\\\(from: (.*) to: (.*)\\\\)$\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"SSirMentos"},"content":"                    if (eventMatcher \u003d\u003d null){","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"SSirMentos"},"content":"                        System.out.println(\"Content not in the right format! Skipping....\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"SSirMentos"},"content":"                        continue;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"SSirMentos"},"content":"                    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"SSirMentos"},"content":"                    String desc \u003d eventMatcher.group(1);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"SSirMentos"},"content":"                    String fromDate \u003d eventMatcher.group(2);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"SSirMentos"},"content":"                    String toDate \u003d eventMatcher.group(3);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"SSirMentos"},"content":"                    Task eventEvent \u003d new Event(desc,changeFormat(fromDate),changeFormat(toDate));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"SSirMentos"},"content":"                    if (isDone.equals(\"X\")){","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"SSirMentos"},"content":"                        eventEvent.markAsDone();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"SSirMentos"},"content":"                    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"SSirMentos"},"content":"                    tasks.add(eventEvent);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"SSirMentos"},"content":"                } else if (eventType.equals(\"D\")){","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"SSirMentos"},"content":"                    //deadline","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"SSirMentos"},"content":"                    Matcher deadlineMatcher \u003d regexHandler(line,\"^\\\\[(?:[D])\\\\] \\\\[(?:.)\\\\] (.*) \\\\(by: (.*)\\\\)$\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"SSirMentos"},"content":"                    if (deadlineMatcher \u003d\u003d null){","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"SSirMentos"},"content":"                        System.out.println(\"Content not in the right format! Skipping....\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"SSirMentos"},"content":"                        continue;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"SSirMentos"},"content":"                    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"SSirMentos"},"content":"                    String desc \u003d deadlineMatcher.group(1);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"SSirMentos"},"content":"                    String byDate \u003d deadlineMatcher.group(2);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"SSirMentos"},"content":"                    Task deadlineEvent \u003d new Deadline(desc,changeFormat(byDate));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"SSirMentos"},"content":"                    if (isDone.equals(\"X\")){","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"SSirMentos"},"content":"                        deadlineEvent.markAsDone();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"SSirMentos"},"content":"                    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"SSirMentos"},"content":"                    tasks.add(deadlineEvent);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"SSirMentos"},"content":"                }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"SSirMentos"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"SSirMentos"},"content":"        } catch (IOException exception){","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"SSirMentos"},"content":"            System.out.println(\"No Configuration found in \"+ FILE_PATH);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"SSirMentos"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"SSirMentos"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"SSirMentos"},"content":"    public String changeFormat(String dateTimeStr){","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"SSirMentos"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"SSirMentos"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeStr, inputFormatter);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"SSirMentos"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"SSirMentos"},"content":"        return dateTime.format(outputFormatter);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"SSirMentos"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"SSirMentos"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"SSirMentos":350}},{"path":"src/main/java/MentosException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SSirMentos"},"content":"public class MentosException extends Exception{","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SSirMentos"},"content":"    protected String err;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SSirMentos"},"content":"    public MentosException(String err){","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SSirMentos"},"content":"        this.err \u003d err;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SSirMentos"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SSirMentos"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SSirMentos"},"content":"    public String toString(){","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SSirMentos"},"content":"        return this.err;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SSirMentos"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SSirMentos"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"SSirMentos":12}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SSirMentos"},"content":"public class Task {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SSirMentos"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SSirMentos"},"content":"    protected String description;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SSirMentos"},"content":"    public Task(String description){","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SSirMentos"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SSirMentos"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SSirMentos"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SSirMentos"},"content":"    public String getStatusIcon(){","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SSirMentos"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SSirMentos"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SSirMentos"},"content":"    public void markAsDone(){","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SSirMentos"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SSirMentos"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SSirMentos"},"content":"    public void markAsNotDone(){","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SSirMentos"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SSirMentos"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SSirMentos"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SSirMentos"},"content":"    public String toString(){","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SSirMentos"},"content":"        return String.format(\"[%s] %s\",this.getStatusIcon(),this.description);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SSirMentos"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SSirMentos"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"SSirMentos":25}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SSirMentos"},"content":"public class ToDo extends Task{","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SSirMentos"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SSirMentos"},"content":"        super(description);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SSirMentos"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SSirMentos"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SSirMentos"},"content":"    public String toString(){","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SSirMentos"},"content":"        return String.format(\"[T] %s\",super.toString());","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SSirMentos"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SSirMentos"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"SSirMentos":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SSirMentos"},"content":"todo CS2103T Individual Project","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SSirMentos"},"content":"deadline CS2103T Quiz /by Sunday","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SSirMentos"},"content":"event Put a mentos in coke /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SSirMentos"},"content":"mark 1","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SSirMentos"},"content":"list","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SSirMentos"},"content":"mark 2","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SSirMentos"},"content":"list","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SSirMentos"},"content":"unmark 1","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SSirMentos"},"content":"list","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SSirMentos"},"content":"bye","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"SSirMentos":10}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"SSirMentos"},"content":"##!/usr/bin/env bash","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SSirMentos"},"content":"#","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SSirMentos"},"content":"## create bin directory if it doesn\u0027t exist","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SSirMentos"},"content":"#if [ ! -d \"../bin\" ]","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SSirMentos"},"content":"#then","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SSirMentos"},"content":"#    mkdir ../bin","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SSirMentos"},"content":"#fi","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SSirMentos"},"content":"#","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SSirMentos"},"content":"## delete output from previous run","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SSirMentos"},"content":"#if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SSirMentos"},"content":"#then","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SSirMentos"},"content":"#    rm ACTUAL.TXT","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SSirMentos"},"content":"#fi","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SSirMentos"},"content":"#","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SSirMentos"},"content":"## compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SSirMentos"},"content":"#if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SSirMentos"},"content":"#then","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SSirMentos"},"content":"#    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SSirMentos"},"content":"#    exit 1","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SSirMentos"},"content":"#fi","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SSirMentos"},"content":"#","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SSirMentos"},"content":"## run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SSirMentos"},"content":"#java -classpath ../bin Mentos \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SSirMentos"},"content":"#","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SSirMentos"},"content":"## convert to UNIX format","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SSirMentos"},"content":"#cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SSirMentos"},"content":"#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SSirMentos"},"content":"#","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SSirMentos"},"content":"## compare the output to the expected output","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SSirMentos"},"content":"#diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SSirMentos"},"content":"#if [ $? -eq 0 ]","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SSirMentos"},"content":"#then","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SSirMentos"},"content":"#    echo \"Test result: PASSED\"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SSirMentos"},"content":"#    exit 0","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SSirMentos"},"content":"#else","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SSirMentos"},"content":"#    echo \"Test result: FAILED\"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SSirMentos"},"content":"#    exit 1","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SSirMentos"},"content":"#fi","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SSirMentos"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SSirMentos"},"content":"java -classpath ../bin Mentos \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SSirMentos"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"SSirMentos":46,"-":32}}]
