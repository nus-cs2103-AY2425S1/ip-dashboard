[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eru111"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eru111"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eru111"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eru111"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eru111"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eru111"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eru111"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eru111"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eru111"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eru111"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eru111"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eru111"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eru111"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eru111"},"content":"    mainClass.set(\"bruno.Launcher\")","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eru111"},"content":"    archiveFileName \u003d \"bruno.jar\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eru111"},"content":"    archiveBaseName \u003d \"bruno\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eru111"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Eru111":20,"-":39}},{"path":"src/main/java/bruno/Bruno.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"package bruno;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"import bruno.command.Command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":"import bruno.exceptions.BrunoException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":"import bruno.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":" * Represents a chatbot called Bruno. A Bruno object is a chatbot that manges different","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":" * types of tasks.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eru111"},"content":"public class Bruno {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eru111"},"content":"     * Enum to represent different types of tasks Bruno can handle.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eru111"},"content":"    public enum TaskType {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eru111"},"content":"        TODO, DEADLINE, EVENT","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eru111"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eru111"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eru111"},"content":"    private String commandType;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eru111"},"content":"     * Constructs a Bruno object. This constructor initializes Bruno\u0027s","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eru111"},"content":"     * storage system and task list. It ensures that the necessary directory","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eru111"},"content":"     * and file for storing tasks exist.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eru111"},"content":"     * @param directoryPath The directory where the task data file is stored.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eru111"},"content":"     * @param filePath The path to the file that stores task data.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eru111"},"content":"    public Bruno(String directoryPath, String filePath) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eru111"},"content":"        assert directoryPath !\u003d null : \"Directory path is null\";","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eru111"},"content":"        assert filePath !\u003d null : \"File path is null\";","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eru111"},"content":"        this.storage \u003d new Storage(directoryPath, filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eru111"},"content":"        this.storage.ensureDirectoryExists();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eru111"},"content":"        this.storage.ensureFileExists();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eru111"},"content":"        this.taskList \u003d new TaskList(this.storage);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eru111"},"content":"     * Default constructor to be used by JavaFX.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eru111"},"content":"    public Bruno() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eru111"},"content":"        this(\"src/main/data/\", \"src/main/data/bruno.txt\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eru111"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eru111"},"content":"        try {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eru111"},"content":"            assert input !\u003d null : \"Input string is null\";","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eru111"},"content":"            Command c \u003d Parser.parse(input, taskList);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eru111"},"content":"            c.execute();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eru111"},"content":"            commandType \u003d c.getClass().getSimpleName();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eru111"},"content":"            return c.toString();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eru111"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eru111"},"content":"            commandType \u003d \"Error\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eru111"},"content":"            return e.getMessage();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eru111"},"content":"    public String getCommandType() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eru111"},"content":"        return commandType;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eru111"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"Eru111":65}},{"path":"src/main/java/bruno/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"package bruno;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eru111"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eru111"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eru111"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eru111"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eru111"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eru111"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eru111"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eru111"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eru111"},"content":"    public DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eru111"},"content":"        try {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eru111"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eru111"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eru111"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eru111"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eru111"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eru111"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eru111"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eru111"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eru111"},"content":"    private void flip() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eru111"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eru111"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eru111"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eru111"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eru111"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eru111"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eru111"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eru111"},"content":"    public static DialogBox getBrunoDialog(String text, Image img, String commandType) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eru111"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eru111"},"content":"        db.flip();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eru111"},"content":"        db.changeDialogStyle(commandType);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eru111"},"content":"        return db;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eru111"},"content":"    private void changeDialogStyle(String commandType) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eru111"},"content":"        switch (commandType) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eru111"},"content":"        case \"AddCommand\":","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eru111"},"content":"            dialog.getStyleClass().add(\"add-label\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eru111"},"content":"            break;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eru111"},"content":"        case \"MarkCommand\":","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eru111"},"content":"            dialog.getStyleClass().add(\"mark-label\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eru111"},"content":"            break;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eru111"},"content":"        case \"UnmarkCommand\":","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eru111"},"content":"            dialog.getStyleClass().add(\"unmark-label\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eru111"},"content":"            break;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eru111"},"content":"        case \"DeleteCommand\":","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Eru111"},"content":"            dialog.getStyleClass().add(\"delete-label\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Eru111"},"content":"            break;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Eru111"},"content":"        case \"UnknownCommand\":","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Eru111"},"content":"            dialog.getStyleClass().add(\"unknown-label\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Eru111"},"content":"            break;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Eru111"},"content":"        case \"Error\":","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Eru111"},"content":"            dialog.getStyleClass().add(\"error-label\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Eru111"},"content":"            break;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Eru111"},"content":"        default:","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Eru111"},"content":"            // Do nothing","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Eru111"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"Eru111":79}},{"path":"src/main/java/bruno/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"package bruno;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":"public class Launcher {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"Eru111":9}},{"path":"src/main/java/bruno/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"package bruno;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eru111"},"content":"public class Main extends Application {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eru111"},"content":"    private Bruno bruno \u003d new Bruno();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eru111"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eru111"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eru111"},"content":"        try {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eru111"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eru111"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eru111"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eru111"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eru111"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eru111"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eru111"},"content":"            // Get the controller and set bruno","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eru111"},"content":"            MainWindow controller \u003d fxmlLoader.getController();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eru111"},"content":"            controller.setBruno(bruno);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eru111"},"content":"            // Display Greeting message","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eru111"},"content":"            controller.showGreeting();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eru111"},"content":"            stage.show();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eru111"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eru111"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eru111"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"Eru111":37}},{"path":"src/main/java/bruno/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"package bruno;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eru111"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eru111"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eru111"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eru111"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eru111"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eru111"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eru111"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eru111"},"content":"    private Bruno bruno;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eru111"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/mista.png\"));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eru111"},"content":"    private Image brunoImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bruno.png\"));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eru111"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eru111"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eru111"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eru111"},"content":"    public void setBruno(Bruno b) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eru111"},"content":"        bruno \u003d b;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eru111"},"content":"    public void showGreeting() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eru111"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getBrunoDialog(\"Hello, I\u0027m Bruno Bucciarati. \"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eru111"},"content":"                        + \"What can I do for you?\", brunoImage, \"AddCommand\")","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eru111"},"content":"        );","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eru111"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eru111"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eru111"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eru111"},"content":"        String response \u003d bruno.getResponse(userInput.getText());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eru111"},"content":"        String commandType \u003d bruno.getCommandType();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eru111"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eru111"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eru111"},"content":"                DialogBox.getBrunoDialog(response, brunoImage, commandType)","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eru111"},"content":"        );","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eru111"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eru111"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"Eru111":48}},{"path":"src/main/java/bruno/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"package bruno;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"import bruno.command.*;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":"import bruno.exceptions.BrunoException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":"import bruno.exceptions.UnknownCommandException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"import bruno.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":" * The Parser class is responsible for interpreting user input and","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":" * converting it into commands for execution.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eru111"},"content":" * It takes in raw input from the user, identifies the type of command,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eru111"},"content":" * and generates a Command object based on that input.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eru111"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eru111"},"content":"public class Parser {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eru111"},"content":"     * Parses the given user command string and returns the corresponding Command object.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eru111"},"content":"     * @param command The raw input string from the user.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eru111"},"content":"     * @param tasks The TaskList containing the user\u0027s tasks, used to apply the command.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eru111"},"content":"     * @return A Command object corresponding to the parsed command, or null if an exception occurs.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eru111"},"content":"    public static Command parse(String command, TaskList tasks) throws BrunoException {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eru111"},"content":"        assert command !\u003d null : \"Command is null\";","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eru111"},"content":"        command \u003d command.trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eru111"},"content":"        String[] parts \u003d command.split(\" \", 2);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eru111"},"content":"        String firstWord \u003d parts[0];","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eru111"},"content":"        String restOfString \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eru111"},"content":"        if (command.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eru111"},"content":"            return new ExitCommand(tasks);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eru111"},"content":"        } else if (command.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eru111"},"content":"            return new ListCommand(tasks);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eru111"},"content":"        } else if (firstWord.equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eru111"},"content":"            String[] taskNums \u003d restOfString.split(\" \");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eru111"},"content":"            return new MarkCommand(tasks, taskNums);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eru111"},"content":"        } else if (firstWord.equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eru111"},"content":"            String[] taskNums \u003d restOfString.split(\" \");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eru111"},"content":"            return new UnmarkCommand(tasks, taskNums);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eru111"},"content":"        } else if (firstWord.equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eru111"},"content":"            String[] taskNums \u003d restOfString.split(\" \");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eru111"},"content":"            return new DeleteCommand(tasks, taskNums);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eru111"},"content":"        } else if (firstWord.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eru111"},"content":"            return new AddCommand(tasks, restOfString, Bruno.TaskType.TODO);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eru111"},"content":"        } else if (firstWord.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eru111"},"content":"            return new AddCommand(tasks, restOfString, Bruno.TaskType.DEADLINE);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eru111"},"content":"        } else if (firstWord.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eru111"},"content":"            return new AddCommand(tasks, restOfString, Bruno.TaskType.EVENT);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eru111"},"content":"        } else if (firstWord.equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eru111"},"content":"            return new FindCommand(tasks, restOfString);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eru111"},"content":"        } else {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eru111"},"content":"            return new UnknownCommand(tasks);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eru111"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Eru111":56}},{"path":"src/main/java/bruno/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"package bruno;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"import java.io.File;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eru111"},"content":"import bruno.exceptions.BrunoException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eru111"},"content":"import bruno.exceptions.FileLoadingException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eru111"},"content":"import bruno.task.Deadline;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eru111"},"content":"import bruno.task.Event;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eru111"},"content":"import bruno.task.Task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eru111"},"content":"import bruno.task.ToDo;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eru111"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eru111"},"content":" * The Storage class handles the reading and writing of task data","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eru111"},"content":" * to and from a file. It ensures the directory and file for task","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eru111"},"content":" * data storage exist and provides methods to load tasks from a file","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eru111"},"content":" * and update the file with the current task list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eru111"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eru111"},"content":"public class Storage {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eru111"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\");","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eru111"},"content":"    private String directoryPath;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eru111"},"content":"    private String filePath;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eru111"},"content":"     * Constructor for the Storage class.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eru111"},"content":"     * @param directoryPath The directory where the data file is stored.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eru111"},"content":"     * @param filePath The file path for storing task data.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eru111"},"content":"    public Storage(String directoryPath, String filePath) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eru111"},"content":"        this.directoryPath \u003d directoryPath;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eru111"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eru111"},"content":"     * Loads the list of tasks from the file specified by filePath.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eru111"},"content":"     * This method reads the file line by line, parses each line to create","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eru111"},"content":"     * the appropriate task, and returns an ArrayList of tasks.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eru111"},"content":"     * If there is an issue with the file reading process, it throws","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eru111"},"content":"     * a BrunoException.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eru111"},"content":"     * @return An ArrayList containing the tasks loaded from the file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eru111"},"content":"     * @throws BrunoException If an error occurs while loading the file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eru111"},"content":"    public ArrayList\u003cTask\u003e loadFromFile() throws BrunoException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eru111"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eru111"},"content":"            File f \u003d new File(this.filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eru111"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eru111"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eru111"},"content":"            readLinesForTasks(tasks, s);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eru111"},"content":"            return tasks;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eru111"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eru111"},"content":"            throw new FileLoadingException();","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eru111"},"content":"    private void readLinesForTasks(ArrayList\u003cTask\u003e tasks, Scanner s) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eru111"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eru111"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eru111"},"content":"            if (line.trim().isEmpty()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eru111"},"content":"                continue;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Eru111"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Eru111"},"content":"            readTask(line, tasks);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Eru111"},"content":"    private void readTask(String line, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Eru111"},"content":"        String[] lineParts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Eru111"},"content":"        String type \u003d lineParts[0].trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Eru111"},"content":"        boolean isDone \u003d lineParts[1].trim().charAt(1) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Eru111"},"content":"        String description \u003d lineParts[2].trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Eru111"},"content":"        if (type.equals(\"T\")) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Eru111"},"content":"            tasks.add(new ToDo(description, isDone));","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Eru111"},"content":"        } else if (type.equals(\"D\")) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Eru111"},"content":"            String byString \u003d lineParts[3].substring(lineParts[3].indexOf(\"by:\") + 3).trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Eru111"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(byString, formatter);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Eru111"},"content":"            tasks.add(new Deadline(description, by, isDone));","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Eru111"},"content":"        } else if (type.equals(\"E\")) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Eru111"},"content":"            String fromString \u003d lineParts[3].substring(6, lineParts[3].indexOf(\"to\")).trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Eru111"},"content":"            String toString \u003d lineParts[3].substring(lineParts[3].indexOf(\"to\") + 3).trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Eru111"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(fromString, formatter);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Eru111"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(toString, formatter);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Eru111"},"content":"            tasks.add(new Event(description, from, to, isDone));","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Eru111"},"content":"        } else {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Eru111"},"content":"            System.out.println(\"There was a problem when loading some task\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Eru111"},"content":"     * Updates the task data file with the current list of tasks.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Eru111"},"content":"     * This method writes each task in the provided task list to the file,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Eru111"},"content":"     * replacing the previous file contents.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Eru111"},"content":"     * @param tasks The ArrayList of tasks to be written to the file.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Eru111"},"content":"    public void updateFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Eru111"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Eru111"},"content":"            rewriteFile(tasks);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Eru111"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Eru111"},"content":"            Ui.printErrorMessage(e);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Eru111"},"content":"    private void rewriteFile(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Eru111"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Eru111"},"content":"        String listAsString \u003d \"\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Eru111"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Eru111"},"content":"            listAsString +\u003d task.toString() + \"\\n\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Eru111"},"content":"        fw.write(listAsString);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Eru111"},"content":"        fw.close();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Eru111"},"content":"     * Ensures that the directory for storing the data file exists.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Eru111"},"content":"     * If the directory does not exist, this method will create it.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Eru111"},"content":"    public void ensureDirectoryExists() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Eru111"},"content":"        File directory \u003d new File(directoryPath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Eru111"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Eru111"},"content":"            directory.mkdirs();","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Eru111"},"content":"     * Ensures that the task data file exists.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Eru111"},"content":"     * If the file does not exist, this method will create a new empty file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Eru111"},"content":"    public void ensureFileExists() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Eru111"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Eru111"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Eru111"},"content":"            try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Eru111"},"content":"                file.createNewFile();","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Eru111"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Eru111"},"content":"                Ui.printErrorMessage(e);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Eru111"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Eru111"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Eru111":145}},{"path":"src/main/java/bruno/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"package bruno;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":" * The Ui class handles all user interaction in the Bruno application.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":" * It prints messages to the console and reads user input.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":"public class Ui {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":"     * Prints a horizontal line to the console for visual separation.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eru111"},"content":"    public static void printLine() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eru111"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eru111"},"content":"     * Prints an error message based on the provided exception.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eru111"},"content":"     * @param e The exception whose message is to be printed.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eru111"},"content":"    public static void printErrorMessage(Exception e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eru111"},"content":"        printLine();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eru111"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eru111"},"content":"        printLine();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eru111"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Eru111":25}},{"path":"src/main/java/bruno/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"package bruno.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"import bruno.Bruno;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":"import bruno.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":"import bruno.exceptions.BrunoException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"import bruno.task.Task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":"import bruno.task.TaskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":" * Represents a command to add a new task to the task list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eru111"},"content":" * This command encapsulates the information needed to add a task of a specified type","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eru111"},"content":" * to the task list and handles the execution of the task addition.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eru111"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eru111"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eru111"},"content":"    private String description;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eru111"},"content":"    private Bruno.TaskType type;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eru111"},"content":"    private Task task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eru111"},"content":"     * Constructs an AddCommand with the specified task list, description, and task type.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eru111"},"content":"     * @param taskList        The task list to which the new task will be added.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eru111"},"content":"     * @param description  The description of the task to be added.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eru111"},"content":"     * @param type         The type of the task to be added.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eru111"},"content":"    public AddCommand(TaskList taskList, String description, Bruno.TaskType type) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eru111"},"content":"        super(taskList);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eru111"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eru111"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eru111"},"content":"     * Executes the command by adding the new task with the specified description and type","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eru111"},"content":"     * to the task list. If an error occurs during task addition, an error message is printed.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eru111"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eru111"},"content":"    public void execute() throws BrunoException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eru111"},"content":"        task \u003d getTaskList().addTask(description, type);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eru111"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eru111"},"content":"    public String toString() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eru111"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eru111"},"content":"                + \"\\nNow you have \" + getTaskList().getTasks().size() + \" tasks in the list.\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eru111"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Eru111":46}},{"path":"src/main/java/bruno/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"package bruno.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"import bruno.exceptions.BrunoException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":"import bruno.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":" * Represents an abstract command in the Bruno application.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":" * This class serves as a base for all command types, providing common functionality","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":" * for executing commands and managing the exit status of the application.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eru111"},"content":"public abstract class Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eru111"},"content":"    private boolean isExit;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eru111"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eru111"},"content":"     * Constructs a Command with the specified task list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eru111"},"content":"     * @param taskList The task list associated with this command.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eru111"},"content":"    public Command(TaskList taskList) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eru111"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eru111"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eru111"},"content":"     * Returns the task list associated with this command.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eru111"},"content":"     * @return The task list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eru111"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eru111"},"content":"        return this.taskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eru111"},"content":"     * Sets the exit status of this command to true. This indicates that the application","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eru111"},"content":"     * should terminate after the command is executed.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eru111"},"content":"    public void exit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eru111"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eru111"},"content":"     * Checks if this command is marked to exit the application.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eru111"},"content":"     * @return true if the command should exit the application, false otherwise.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eru111"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eru111"},"content":"        return this.isExit;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eru111"},"content":"     * Executes the command. This method must be implemented by subclasses to define","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eru111"},"content":"     * the specific behavior of each command.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eru111"},"content":"    public abstract void execute() throws BrunoException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eru111"},"content":"    ","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eru111"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eru111"},"content":"    public abstract String toString();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eru111"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Eru111":59}},{"path":"src/main/java/bruno/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"package bruno.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"import bruno.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":"import bruno.exceptions.BrunoException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":"import bruno.task.Task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"import bruno.task.TaskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eru111"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eru111"},"content":" * This command encapsulates the information needed to remove a specific task from","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eru111"},"content":" * the task list based on its index and handles the execution of the task deletion.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eru111"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eru111"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eru111"},"content":"    private String[] taskNums;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eru111"},"content":"    private ArrayList\u003cTask\u003e deletedTasks;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eru111"},"content":"     * Constructs a DeleteCommand with the specified task list and task number.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eru111"},"content":"     * @param taskList   The task list from which the task will be deleted.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eru111"},"content":"     * @param taskNums The indices of the tasks to be deleted (1-based index).","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eru111"},"content":"    public DeleteCommand(TaskList taskList, String ... taskNums) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eru111"},"content":"        super(taskList);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eru111"},"content":"        this.taskNums \u003d taskNums;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eru111"},"content":"     * Executes the command by deleting the task with the specified index from the task list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eru111"},"content":"     * If an error occurs during task deletion, an error message is printed.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eru111"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eru111"},"content":"    public void execute() throws BrunoException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eru111"},"content":"        deletedTasks \u003d getTaskList().deleteTask(taskNums);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eru111"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eru111"},"content":"    public String toString() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eru111"},"content":"        String tasksAsString \u003d \"\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eru111"},"content":"        for (Task task : deletedTasks) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eru111"},"content":"            tasksAsString +\u003d task + \"\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eru111"},"content":"        return \"Noted! I\u0027ve removed these tasks:\\n\" + tasksAsString","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eru111"},"content":"                + \"Now you have \" + getTaskList().getTasks().size() + \" tasks in the list\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eru111"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Eru111":48}},{"path":"src/main/java/bruno/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"package bruno.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"import bruno.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":"import bruno.task.TaskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":" * This command sets the application’s exit status to true and displays a farewell message.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eru111"},"content":"     * Constructs an ExitCommand with the specified task list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eru111"},"content":"     * This constructor also sets the command to exit the application.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eru111"},"content":"     * @param taskList The task list associated with this command (though it is not used in this command).","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eru111"},"content":"    public ExitCommand(TaskList taskList) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eru111"},"content":"        super(taskList);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eru111"},"content":"        super.exit();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eru111"},"content":"     * Executes the command by printing a farewell message and setting the exit status.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eru111"},"content":"     * This method will terminate the application loop when executed.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eru111"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eru111"},"content":"    public void execute() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eru111"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eru111"},"content":"    public String toString() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eru111"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eru111"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Eru111":36}},{"path":"src/main/java/bruno/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"package bruno.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"import bruno.task.Task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":"import bruno.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":" * Represents a command to find tasks containing a specific keyword in their description.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eru111"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eru111"},"content":"    private String keyword;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eru111"},"content":"    private ArrayList\u003cTask\u003e foundTasks;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eru111"},"content":"     * Constructs a FindCommand object with the specified TaskList and keyword.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eru111"},"content":"     * @param taskList The TaskList that contains the tasks to be searched.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eru111"},"content":"     * @param keyword The keyword to search for in the task descriptions.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eru111"},"content":"    public FindCommand(TaskList taskList, String keyword) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eru111"},"content":"        super(taskList);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eru111"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eru111"},"content":"     * Executes the find command by searching for tasks that contain the specified keyword.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eru111"},"content":"     * Prints the tasks that match the keyword to the user.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eru111"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eru111"},"content":"    public void execute() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eru111"},"content":"        foundTasks \u003d getTaskList().findTask(keyword);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eru111"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eru111"},"content":"    public String toString() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eru111"},"content":"        String tasksAsString \u003d \"\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eru111"},"content":"        for (Task task : foundTasks) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eru111"},"content":"            tasksAsString +\u003d task + \"\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eru111"},"content":"        if (foundTasks.isEmpty()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eru111"},"content":"            return \"No tasks found with the given keyword\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eru111"},"content":"        return \"Here are the matching tasks in your list:\\n\" + tasksAsString;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eru111"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Eru111":47}},{"path":"src/main/java/bruno/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"package bruno.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"import bruno.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":"import bruno.task.Task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":"import bruno.task.TaskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":" * This command retrieves and displays all tasks currently stored in the task list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eru111"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eru111"},"content":"     * Constructs a ListCommand with the specified task list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eru111"},"content":"     * @param taskList The task list to be displayed.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eru111"},"content":"    public ListCommand(TaskList taskList) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eru111"},"content":"        super(taskList);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eru111"},"content":"     * Executes the command by printing the list of tasks.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eru111"},"content":"     * This method retrieves the tasks from the task list and uses the UI to display them.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eru111"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eru111"},"content":"    public void execute() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eru111"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eru111"},"content":"    public String toString() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eru111"},"content":"        String tasksAsString \u003d \"\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eru111"},"content":"        for (Task task : getTaskList().getTasks()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eru111"},"content":"            tasksAsString +\u003d task + \"\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eru111"},"content":"        return \"Here are the tasks in your list:\\n\" + tasksAsString;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eru111"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Eru111":39}},{"path":"src/main/java/bruno/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"package bruno.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"import bruno.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":"import bruno.exceptions.BrunoException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":"import bruno.task.Task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"import bruno.task.TaskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eru111"},"content":" * Represents a command to mark a specific task as completed.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eru111"},"content":" * This command updates the status of a task in the task list to indicate that it is done.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eru111"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eru111"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eru111"},"content":"    private String[] taskNums;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eru111"},"content":"    private ArrayList\u003cTask\u003e markedTasks;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eru111"},"content":"     * Constructs a MarkCommand with the specified task list and task number.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eru111"},"content":"     * @param taskList The task list in which the task status will be updated.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eru111"},"content":"     * @param taskNums The indices of the tasks to be marked as completed (1-based index).","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eru111"},"content":"    public MarkCommand(TaskList taskList, String ... taskNums) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eru111"},"content":"        super(taskList);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eru111"},"content":"        this.taskNums \u003d taskNums;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eru111"},"content":"     * Executes the command by marking the specified task as completed.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eru111"},"content":"     * If an error occurs during the process, an error message is printed.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eru111"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eru111"},"content":"    public void execute() throws BrunoException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eru111"},"content":"        markedTasks \u003d getTaskList().markTask(taskNums);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eru111"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eru111"},"content":"    public String toString() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eru111"},"content":"        String tasksAsString \u003d \"\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eru111"},"content":"        for (Task task : markedTasks) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eru111"},"content":"            tasksAsString +\u003d task + \"\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eru111"},"content":"        return \"Nice! I\u0027ve marked these tasks as done:\\n\" + tasksAsString;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eru111"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Eru111":46}},{"path":"src/main/java/bruno/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"package bruno.command;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"import bruno.task.TaskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"    public UnknownCommand(TaskList taskList) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":"        super(taskList);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eru111"},"content":"    public void execute() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eru111"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eru111"},"content":"    public String toString() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eru111"},"content":"        return \"I did not understand, please tell me something I can comprehend\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eru111"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"Eru111":19}},{"path":"src/main/java/bruno/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"package bruno.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"import bruno.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":"import bruno.exceptions.BrunoException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":"import bruno.task.Task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"import bruno.task.TaskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eru111"},"content":" * Represents a command to unmark a specific task as incomplete.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eru111"},"content":" * This command updates the status of a task in the task list to indicate that it is not done.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eru111"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eru111"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eru111"},"content":"    private String[] taskNums;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eru111"},"content":"    private ArrayList\u003cTask\u003e unmarkedTasks;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eru111"},"content":"     * Constructs a UnmarkCommand with the specified task list and task number.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eru111"},"content":"     * @param taskList   The task list in which the task status will be updated.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eru111"},"content":"     * @param taskNums The indices of the tasks to be unmarked as incomplete (1-based index).","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eru111"},"content":"    public UnmarkCommand(TaskList taskList, String ... taskNums) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eru111"},"content":"        super(taskList);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eru111"},"content":"        this.taskNums \u003d taskNums;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eru111"},"content":"     * Executes the command by unmarking the specified task as incomplete.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eru111"},"content":"     * If an error occurs during the process, an error message is printed.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eru111"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eru111"},"content":"    public void execute() throws BrunoException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eru111"},"content":"        unmarkedTasks \u003d getTaskList().unmarkTask(taskNums);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eru111"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eru111"},"content":"    public String toString() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eru111"},"content":"        String tasksAsString \u003d \"\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eru111"},"content":"        for (Task task : unmarkedTasks) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eru111"},"content":"            tasksAsString +\u003d task + \"\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eru111"},"content":"        return \"I\u0027ve unmarked these tasks as done:\\n\" + tasksAsString;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eru111"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Eru111":46}},{"path":"src/main/java/bruno/exceptions/BrunoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"package bruno.exceptions;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":" * Most general exception, used to be inherited from by other exception classes.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"public class BrunoException extends Exception {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":"    public BrunoException(String message) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":"        super(message);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"Eru111":10}},{"path":"src/main/java/bruno/exceptions/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"package bruno.exceptions;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":" * Exception that should be thrown when task description is empty.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"public class EmptyTaskException extends BrunoException {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":"    public EmptyTaskException() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":"        super(\"You entered an empty task! NOT COOL!\");","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"Eru111":10}},{"path":"src/main/java/bruno/exceptions/FileLoadingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"package bruno.exceptions;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":" * Exception should be thrown when the data file can not be loaded properly.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"public class FileLoadingException extends BrunoException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":"    public FileLoadingException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":"        super(\"There was an error loading the data file.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Eru111":10}},{"path":"src/main/java/bruno/exceptions/InvalidTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"package bruno.exceptions;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":" * Exception should be thrown when a command is run on an invalid task index.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"public class InvalidTaskIndexException extends BrunoException {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":"    public InvalidTaskIndexException() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":"        super(\"The task number is invalid, try the command \u0027list\u0027 first\");","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"Eru111":10}},{"path":"src/main/java/bruno/exceptions/MissingFieldException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"package bruno.exceptions;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":" * Exception should be thrown when a command is missing some fields.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"public class MissingFieldException extends BrunoException {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":"    public MissingFieldException() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":"        super(\"Some information needed is missing in your command.\");","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"Eru111":10}},{"path":"src/main/java/bruno/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"package bruno.exceptions;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":" * Exception should be thrown when an unknown command is entered.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"public class UnknownCommandException extends BrunoException {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":"        super(\"I did not understand, please tell me something I can comprehend\");","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"Eru111":10}},{"path":"src/main/java/bruno/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"package bruno.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":" * The Deadline class represents a task with a specific deadline.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":" * It extends the Task class and includes a date and time by which the task is due.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eru111"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eru111"},"content":"    private LocalDateTime by;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eru111"},"content":"     * Constructs a new Deadline task with the given description and due date.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eru111"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eru111"},"content":"     * @param by The date and time by which the task is due.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eru111"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eru111"},"content":"        super(description);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eru111"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eru111"},"content":"     * Constructs a new Deadline task with the given description, due date,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eru111"},"content":"     * and completion status.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eru111"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eru111"},"content":"     * @param by The date and time by which the task is due.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eru111"},"content":"     * @param done The completion status of the task (true if done, false otherwise).","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eru111"},"content":"    public Deadline(String description, LocalDateTime by, boolean done) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eru111"},"content":"        super(description, done);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eru111"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eru111"},"content":"    @Override","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eru111"},"content":"    public String toString() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eru111"},"content":"        return \"D | \" + super.toString() + \" | by: \" + this.by.format(formatter);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eru111"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"Eru111":42}},{"path":"src/main/java/bruno/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"package bruno.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":" * The Event class represents a task that occurs during a specific time period.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":" * It extends the Task class and includes start and end times for the event.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eru111"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eru111"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eru111"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eru111"},"content":"     * Constructs a new Event task with the given description, start time, and end time.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eru111"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eru111"},"content":"     * @param from The starting time of the event.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eru111"},"content":"     * @param to The ending time of the event.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eru111"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eru111"},"content":"        super(description);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eru111"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eru111"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eru111"},"content":"     * Constructs a new Event task with the given description, start time, end time,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eru111"},"content":"     * and completion status.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eru111"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eru111"},"content":"     * @param from The starting time of the event.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eru111"},"content":"     * @param to The ending time of the event.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eru111"},"content":"     * @param done The completion status of the task (true if done, false otherwise).","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eru111"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to, boolean done) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eru111"},"content":"        super(description, done);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eru111"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eru111"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eru111"},"content":"    @Override","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eru111"},"content":"    public String toString() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eru111"},"content":"        return \"E | \" + super.toString() + \" | from: \" + this.from.format(formatter)","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eru111"},"content":"                + \" to: \" + this.to.format(formatter);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eru111"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"Eru111":48}},{"path":"src/main/java/bruno/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"package bruno.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":" * The Task class represents a task with a description and a completion status.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":" * It serves as a base class for specific types of tasks.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":"public class Task {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":"    private String description;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":"    private boolean done;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eru111"},"content":"     * Constructs a Task with the given description.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eru111"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eru111"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eru111"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eru111"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eru111"},"content":"        this.done \u003d false;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eru111"},"content":"     * Constructs a Task with the given description and completion status.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eru111"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eru111"},"content":"     * @param done The completion status of the task (true if done, false otherwise).","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eru111"},"content":"    public Task(String description, boolean done) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eru111"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eru111"},"content":"        this.done \u003d done;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eru111"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eru111"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eru111"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eru111"},"content":"        return this.description;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eru111"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eru111"},"content":"     * @return true if the task is done, false otherwise.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eru111"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eru111"},"content":"        return this.done;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eru111"},"content":"     * Marks the task as complete.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eru111"},"content":"    public void complete() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eru111"},"content":"        this.done \u003d true;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eru111"},"content":"     * Marks the task as not complete.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eru111"},"content":"    public void uncomplete() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eru111"},"content":"        this.done \u003d false;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eru111"},"content":"    @Override","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eru111"},"content":"    public String toString() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Eru111"},"content":"        String complete \u003d \" \";","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Eru111"},"content":"        if (this.done) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Eru111"},"content":"            complete \u003d \"X\";","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Eru111"},"content":"        return \"[\" + complete + \"] | \" + this.description;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Eru111"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"Eru111":73}},{"path":"src/main/java/bruno/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"package bruno.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":"import java.util.List;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eru111"},"content":"import bruno.Bruno;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eru111"},"content":"import bruno.Storage;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eru111"},"content":"import bruno.exceptions.BrunoException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eru111"},"content":"import bruno.exceptions.EmptyTaskException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eru111"},"content":"import bruno.exceptions.InvalidTaskIndexException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eru111"},"content":"import bruno.exceptions.MissingFieldException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eru111"},"content":"import bruno.exceptions.UnknownCommandException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eru111"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eru111"},"content":" * Manages the list of tasks, including adding, marking, unmarking, and deleting tasks.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eru111"},"content":" * Interacts with the Storage class to load and save tasks from and to a file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eru111"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eru111"},"content":"public class TaskList {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eru111"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eru111"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eru111"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eru111"},"content":"     * Initializes a TaskList object and loads tasks from the storage file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eru111"},"content":"     * If there is an error loading the file, it initializes an empty task list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eru111"},"content":"     * @param storage The storage instance used to load and save tasks.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eru111"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eru111"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eru111"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eru111"},"content":"            this.tasks \u003d storage.loadFromFile();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eru111"},"content":"        } catch (BrunoException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eru111"},"content":"            tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eru111"},"content":"     * Retrieves the list of tasks.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eru111"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eru111"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eru111"},"content":"        return tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eru111"},"content":"     * Adds a task based on the input string and the task type.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eru111"},"content":"     * Validates the input and ensures the required fields are present.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eru111"},"content":"     * @param str  The input string describing the task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eru111"},"content":"     * @param type The type of the task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eru111"},"content":"     * @throws BrunoException If the input is invalid or a required field is missing.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eru111"},"content":"    public Task addTask(String str, Bruno.TaskType type) throws BrunoException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eru111"},"content":"        if (str.trim().isEmpty()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eru111"},"content":"            throw new EmptyTaskException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eru111"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eru111"},"content":"        if (type.equals(Bruno.TaskType.TODO)) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Eru111"},"content":"            task \u003d makeToDo(str);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Eru111"},"content":"        } else if (type.equals(Bruno.TaskType.DEADLINE)) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Eru111"},"content":"            task \u003d makeDeadline(str);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Eru111"},"content":"        } else if (type.equals(Bruno.TaskType.EVENT)) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Eru111"},"content":"            task \u003d makeEvent(str);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Eru111"},"content":"        return add(task);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Eru111"},"content":"    private Task add(Task task) throws UnknownCommandException {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Eru111"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Eru111"},"content":"            tasks.add(task);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Eru111"},"content":"            storage.updateFile(this.tasks);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Eru111"},"content":"            return task;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Eru111"},"content":"        } else {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Eru111"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Eru111"},"content":"    private Event makeEvent(String str) throws BrunoException {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Eru111"},"content":"        if (!str.contains(\"/from\") || !str.contains(\"/to\")) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Eru111"},"content":"            throw new MissingFieldException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Eru111"},"content":"        String description \u003d str.substring(0, str.indexOf(\"/from\")).trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Eru111"},"content":"        String fromString \u003d str.substring(str.indexOf(\"/from\") + 6, str.indexOf(\"/to\")).trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Eru111"},"content":"        String toString \u003d str.substring(str.indexOf(\"/to\") + 4).trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Eru111"},"content":"        LocalDateTime from;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Eru111"},"content":"        LocalDateTime to;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Eru111"},"content":"        try {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Eru111"},"content":"            from \u003d LocalDateTime.parse(fromString, formatter);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Eru111"},"content":"            to \u003d LocalDateTime.parse(toString, formatter);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Eru111"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Eru111"},"content":"            throw new BrunoException(\"Invalid date format. Please use \u0027yyyy-MM-dd HH:mm\u0027\");","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Eru111"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Eru111"},"content":"            throw new EmptyTaskException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Eru111"},"content":"        return new Event(description, from, to);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Eru111"},"content":"    private Deadline makeDeadline(String str) throws BrunoException {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Eru111"},"content":"        if (!str.contains(\"/by\")) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Eru111"},"content":"            throw new MissingFieldException();","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Eru111"},"content":"        String description \u003d str.substring(0, str.indexOf(\"/by\")).trim();","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Eru111"},"content":"        String byString \u003d str.substring(str.indexOf(\"/by\") + 3).trim();","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Eru111"},"content":"        LocalDateTime by;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Eru111"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Eru111"},"content":"            by \u003d LocalDateTime.parse(byString, formatter);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Eru111"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Eru111"},"content":"            throw new BrunoException(\"Invalid date format. Please use \u0027yyyy-MM-dd HH:mm\u0027\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Eru111"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Eru111"},"content":"            throw new EmptyTaskException();","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Eru111"},"content":"        return new Deadline(description, by);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Eru111"},"content":"    private static ToDo makeToDo(String str) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Eru111"},"content":"        return new ToDo(str);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Eru111"},"content":"     * Marks a task as completed based on its index.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Eru111"},"content":"     * @param nums The index of the task to mark as completed.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Eru111"},"content":"     * @throws BrunoException If the index is invalid.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Eru111"},"content":"    public ArrayList\u003cTask\u003e markTask(String ... nums) throws BrunoException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Eru111"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Eru111"},"content":"            ArrayList\u003cTask\u003e markedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Eru111"},"content":"            mark(markedTasks, nums);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Eru111"},"content":"            return markedTasks;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Eru111"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Eru111"},"content":"            throw new InvalidTaskIndexException();","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Eru111"},"content":"    private void mark(ArrayList\u003cTask\u003e markedTasks, String ... nums) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Eru111"},"content":"        for (String i : nums) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Eru111"},"content":"            Task task \u003d tasks.get(Integer.parseInt(i) - 1);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Eru111"},"content":"            task.complete();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Eru111"},"content":"            markedTasks.add(task);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Eru111"},"content":"            storage.updateFile(this.tasks);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Eru111"},"content":"     * Unmarks a task (sets it as incomplete) based on its index.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Eru111"},"content":"     * @param nums The index of the task to unmark.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Eru111"},"content":"     * @throws BrunoException If the index is invalid.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Eru111"},"content":"    public ArrayList\u003cTask\u003e unmarkTask(String ... nums) throws BrunoException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Eru111"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Eru111"},"content":"            ArrayList\u003cTask\u003e unmarkedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Eru111"},"content":"            unmark(unmarkedTasks, nums);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Eru111"},"content":"            return unmarkedTasks;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Eru111"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Eru111"},"content":"            throw new InvalidTaskIndexException();","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Eru111"},"content":"    private void unmark(ArrayList\u003cTask\u003e unmarkedTasks, String ... nums) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Eru111"},"content":"        for (String i : nums) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Eru111"},"content":"            Task task \u003d tasks.get(Integer.parseInt(i) - 1);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Eru111"},"content":"            task.uncomplete();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Eru111"},"content":"            unmarkedTasks.add(task);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Eru111"},"content":"            storage.updateFile(this.tasks);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Eru111"},"content":"     * Deletes a task based on its index.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Eru111"},"content":"     * @param nums The indices of the tasks to delete.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Eru111"},"content":"     * @throws BrunoException If the index is invalid.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Eru111"},"content":"    public ArrayList\u003cTask\u003e deleteTask(String ... nums) throws BrunoException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Eru111"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Eru111"},"content":"            ArrayList\u003cTask\u003e deletedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Eru111"},"content":"            List\u003cInteger\u003e taskIndices \u003d Arrays.stream(nums)","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Eru111"},"content":"                    .map(i -\u003e Integer.parseInt(i.trim()) - 1)","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Eru111"},"content":"                    .sorted(Comparator.reverseOrder())","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Eru111"},"content":"                    .toList();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Eru111"},"content":"            ","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Eru111"},"content":"            delete(deletedTasks, taskIndices);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Eru111"},"content":"            return deletedTasks;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Eru111"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Eru111"},"content":"            throw new InvalidTaskIndexException();","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Eru111"},"content":"    private void delete(ArrayList\u003cTask\u003e deletedTasks, List\u003cInteger\u003e indices) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Eru111"},"content":"        for (int i : indices) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Eru111"},"content":"            Task task \u003d tasks.remove(i);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Eru111"},"content":"            deletedTasks.add(task);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Eru111"},"content":"            storage.updateFile(this.tasks);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Eru111"},"content":"     * Finds a task based on the entered keyword.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Eru111"},"content":"     * @param keyword The keyword used to find results.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Eru111"},"content":"    public ArrayList\u003cTask\u003e findTask(String keyword) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Eru111"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Eru111"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Eru111"},"content":"            checkForKeyword(keyword, task, foundTasks);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Eru111"},"content":"        return foundTasks;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Eru111"},"content":"    private static void checkForKeyword(String keyword, Task task, ArrayList\u003cTask\u003e foundTasks) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Eru111"},"content":"        if (task.toString().contains(keyword)) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Eru111"},"content":"            foundTasks.add(task);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Eru111"},"content":"        }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Eru111"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"Eru111":236}},{"path":"src/main/java/bruno/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"package bruno.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":" * Represents a ToDo task. A ToDo task is a task with only a description and no date or time constraints.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":"     * Constructs a new ToDo task with the specified description.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eru111"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eru111"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eru111"},"content":"        super(description);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eru111"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eru111"},"content":"     * Constructs a new ToDo task with the specified description and completion status.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eru111"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eru111"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eru111"},"content":"     * @param done The completion status of the task (true if completed, false otherwise).","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eru111"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eru111"},"content":"    public ToDo(String description, boolean done) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eru111"},"content":"        super(description, done);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eru111"},"content":"    @Override","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eru111"},"content":"    public String toString() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eru111"},"content":"        return \"T | \" + super.toString();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eru111"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eru111"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"Eru111":31}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eru111"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eru111"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eru111"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eru111"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eru111"},"content":"            \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eru111"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eru111"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eru111"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eru111"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eru111"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eru111"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eru111"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"Eru111":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"bruno.MainWindow\"\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eru111"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eru111"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eru111"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eru111"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eru111"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eru111"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eru111"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eru111"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eru111"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"Eru111":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Eru111"},"content":"todo read book","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eru111"},"content":"mark 1","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eru111"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eru111"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eru111"},"content":"todo join sports club","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eru111"},"content":"list","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eru111"},"content":"mark 4","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eru111"},"content":"todo borrow book","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eru111"},"content":"list","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eru111"},"content":"todo","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eru111"},"content":"mark 7","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eru111"},"content":"deadline submit assignment","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eru111"},"content":"what is your name?","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eru111"},"content":"list","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eru111"},"content":"bye","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"Eru111":15}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eru111"},"content":"java -classpath ../bin Bruno \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Eru111":1,"-":37}}]
