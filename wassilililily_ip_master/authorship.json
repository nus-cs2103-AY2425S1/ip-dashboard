[{"path":"src/main/java/BottleOpener.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wassilililily"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wassilililily"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wassilililily"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wassilililily"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wassilililily"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wassilililily"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wassilililily"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wassilililily"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wassilililily"},"content":" * BottleOpener is a command-line chatbot that helps users manage tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wassilililily"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wassilililily"},"content":" * It supports ToDos, Deadlines, and Events, and allows users to","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wassilililily"},"content":" * add, list, mark, unmark, and delete tasks. The tasks are saved in a file and can be","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wassilililily"},"content":" * loaded back into chatbot.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wassilililily"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wassilililily"},"content":" *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wassilililily"},"content":" * \u003cp\u003eCommand Syntax:\u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wassilililily"},"content":" * \u003cul\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wassilililily"},"content":" *     \u003cli\u003ebye - Exits the application\u003c/li\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wassilililily"},"content":" *     \u003cli\u003elist - Lists all tasks\u003c/li\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wassilililily"},"content":" *     \u003cli\u003emark [index] - Marks a task as done\u003c/li\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wassilililily"},"content":" *     \u003cli\u003eunmark [index] - Unmarks a task\u003c/li\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wassilililily"},"content":" *     \u003cli\u003edelete [index] - Deletes a task\u003c/li\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wassilililily"},"content":" *     \u003cli\u003etodo [description] - Adds a ToDo task\u003c/li\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wassilililily"},"content":" *     \u003cli\u003edeadline [description] /by [time] - Adds a Deadline task\u003c/li\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wassilililily"},"content":" *     \u003cli\u003eevent [description] /from [start] /to [end] - Adds an Event task\u003c/li\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wassilililily"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wassilililily"},"content":" *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wassilililily"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wassilililily"},"content":"public class BottleOpener {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wassilililily"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wassilililily"},"content":"        String spacer \u003d \"-----------------------------------\\n\";","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wassilililily"},"content":"        String botName \u003d \"BottleOpener\";","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wassilililily"},"content":"        String greeting \u003d \"Hello! I\u0027m \" + botName + \".\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wassilililily"},"content":"        String goodbye \u003d \"Bye! See you next time!\\n\";","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wassilililily"},"content":"        System.out.println(spacer + greeting + spacer);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wassilililily"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wassilililily"},"content":"        String filepath \u003d \"data/BottleOpener.txt\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wassilililily"},"content":"        Path path \u003d Paths.get(filepath);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wassilililily"},"content":"        int index \u003d 0;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wassilililily"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wassilililily"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wassilililily"},"content":"            if (Files.exists(path)) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wassilililily"},"content":"                String content \u003d Files.readString(path).trim();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wassilililily"},"content":"                if (!content.isEmpty()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wassilililily"},"content":"                    String[] lines \u003d content.split(\"\\n\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wassilililily"},"content":"                    for (String line : lines) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wassilililily"},"content":"                        String[] word \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wassilililily"},"content":"                        String type \u003d word[0];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wassilililily"},"content":"                        boolean status \u003d word[1].contains(\"X\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wassilililily"},"content":"                        if (type.equals(\"T\")) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wassilililily"},"content":"                            Task newTask \u003d new ToDo(word[2], status);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wassilililily"},"content":"                            tasks.add(newTask);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wassilililily"},"content":"                        } else if (type.equals(\"D\")) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wassilililily"},"content":"                            Task newTask \u003d new Deadline(word[2], status, word[3]);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wassilililily"},"content":"                            tasks.add(newTask);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wassilililily"},"content":"                        } else if (type.equals(\"E\")) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wassilililily"},"content":"                            Task newTask \u003d new Event(word[2], status, word[3], word[4]);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wassilililily"},"content":"                            tasks.add(newTask);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wassilililily"},"content":"                        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wassilililily"},"content":"                        index++;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wassilililily"},"content":"                    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wassilililily"},"content":"                }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wassilililily"},"content":"            } else {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wassilililily"},"content":"                Files.createDirectories(path.getParent());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wassilililily"},"content":"                Files.createFile(path);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wassilililily"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wassilililily"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wassilililily"},"content":"            System.out.println(\"Invalid\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wassilililily"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wassilililily"},"content":"        boolean flag \u003d true;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"wassilililily"},"content":"        while (flag) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"wassilililily"},"content":"            String outputFile \u003d \"\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"wassilililily"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"wassilililily"},"content":"                Task curr \u003d tasks.get(i);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"wassilililily"},"content":"                outputFile \u003d outputFile + String.format(\"%s|%s|%s|%s%n\", curr.getType(), curr.getStatusIcon(),","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"wassilililily"},"content":"                        curr.getDescription(), curr.getTime());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"wassilililily"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"wassilililily"},"content":"            try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"wassilililily"},"content":"                Files.writeString(path, outputFile);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"wassilililily"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"wassilililily"},"content":"                System.out.println(\"Invalid\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"wassilililily"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"wassilililily"},"content":"            String inp \u003d \"\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"wassilililily"},"content":"            try {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"wassilililily"},"content":"                inp \u003d br.readLine();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"wassilililily"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"wassilililily"},"content":"                System.out.println(spacer + \"Invalid entry!\\n\" + spacer);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"wassilililily"},"content":"            }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"wassilililily"},"content":"            String[] userInput \u003d inp.split(\" \", 2);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"wassilililily"},"content":"            String instruction \u003d userInput[0].toLowerCase();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"wassilililily"},"content":"            switch (instruction) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"wassilililily"},"content":"                case \"bye\":","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"wassilililily"},"content":"                    flag \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"wassilililily"},"content":"                    System.out.println(spacer + goodbye + spacer);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"wassilililily"},"content":"                    break;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"wassilililily"},"content":"                case \"list\":","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"wassilililily"},"content":"                    StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"wassilililily"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"wassilililily"},"content":"                        output.append(String.format(\"%d. %s%n\", i + 1, tasks.get(i)));","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"wassilililily"},"content":"                    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"wassilililily"},"content":"                    System.out.println(spacer + output + spacer);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"wassilililily"},"content":"                    break;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"wassilililily"},"content":"                case \"mark\":","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"wassilililily"},"content":"                    try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"wassilililily"},"content":"                        int num \u003d Integer.parseInt(userInput[1]);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"wassilililily"},"content":"                        Task mod \u003d tasks.get(num - 1).markAsDone();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"wassilililily"},"content":"                        tasks.set(num - 1, mod);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"wassilililily"},"content":"                        System.out.println(spacer + \"Good job completing it!\\n\" + spacer);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"wassilililily"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"wassilililily"},"content":"                        System.out.println(spacer + \"Please tell me which task to mark!\\n\" + spacer);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"wassilililily"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"wassilililily"},"content":"                        System.out.println(spacer + \"Please provide an appropriate number!\\n\" + spacer);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"wassilililily"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"wassilililily"},"content":"                        System.out.println(spacer + \"Please provide an appropriate index!\\n\" + spacer);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"wassilililily"},"content":"                    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"wassilililily"},"content":"                    break;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"wassilililily"},"content":"                case \"unmark\":","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"wassilililily"},"content":"                    try {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"wassilililily"},"content":"                        int num \u003d Integer.parseInt(userInput[1]);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"wassilililily"},"content":"                        Task mod \u003d tasks.get(num - 1).markAsUndone();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"wassilililily"},"content":"                        tasks.set(num - 1, mod);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"wassilililily"},"content":"                        System.out.println(spacer + \"I have added it back to the list!\\n\" + spacer);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"wassilililily"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"wassilililily"},"content":"                        System.out.println(spacer + \"Please tell me which task to unmark!\\n\" + spacer);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"wassilililily"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"wassilililily"},"content":"                        System.out.println(spacer + \"Please provide an appropriate number!\\n\" + spacer);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"wassilililily"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"wassilililily"},"content":"                        System.out.println(spacer + \"Please provide an appropriate index!\\n\" + spacer);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"wassilililily"},"content":"                    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"wassilililily"},"content":"                    break;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"wassilililily"},"content":"                case \"delete\":","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"wassilililily"},"content":"                    try {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"wassilililily"},"content":"                        int num \u003d Integer.parseInt(userInput[1]);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"wassilililily"},"content":"                        tasks.remove(num - 1);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"wassilililily"},"content":"                        index--;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"wassilililily"},"content":"                        System.out.println(spacer + \"I have removed the item!\\n\" + spacer);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"wassilililily"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"wassilililily"},"content":"                        System.out.println(spacer + \"Please tell me which item to delete!\\n\" + spacer);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"wassilililily"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"wassilililily"},"content":"                        System.out.println(spacer + \"Please provide an appropriate number!\\n\" + spacer);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"wassilililily"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"wassilililily"},"content":"                        System.out.println(spacer + \"Please provide an appropriate index!\\n\" + spacer);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"wassilililily"},"content":"                    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"wassilililily"},"content":"                    break;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"wassilililily"},"content":"                default:","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"wassilililily"},"content":"                    try {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"wassilililily"},"content":"                        String des \u003d userInput[1];","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"wassilililily"},"content":"                        switch (instruction) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"wassilililily"},"content":"                        case \"todo\":","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"wassilililily"},"content":"                            Task newTodo \u003d new ToDo(des);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"wassilililily"},"content":"                            tasks.add(index, newTodo);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"wassilililily"},"content":"                            index++;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"wassilililily"},"content":"                            System.out.println(spacer + String.format(\"added: %s%n\", newTodo) + spacer);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"wassilililily"},"content":"                            break;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"wassilililily"},"content":"                        case \"deadline\":","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"wassilililily"},"content":"                            try {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"wassilililily"},"content":"                                String[] activity \u003d des.split(\" /by \", 2);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"wassilililily"},"content":"                                String action \u003d activity[0].trim();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"wassilililily"},"content":"                                String due \u003d activity[1].trim();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"wassilililily"},"content":"                                Task newDeadline \u003d new Deadline(action, due);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"wassilililily"},"content":"                                tasks.add(index, newDeadline);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"wassilililily"},"content":"                                index++;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"wassilililily"},"content":"                                System.out.println(spacer + String.format(\"added: %s%n\", newDeadline) + spacer);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"wassilililily"},"content":"                            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"wassilililily"},"content":"                                System.out.println(spacer + \"Please use /by to provide a deadline!\\n\" + spacer);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"wassilililily"},"content":"                            }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"wassilililily"},"content":"                            break;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"wassilililily"},"content":"                        case \"event\":","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"wassilililily"},"content":"                            try {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"wassilililily"},"content":"                                String[] activity \u003d des.split(\" /from | /to \", 3);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"wassilililily"},"content":"                                String action \u003d activity[0].trim();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"wassilililily"},"content":"                                String start \u003d activity[1].trim();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"wassilililily"},"content":"                                String end \u003d activity[2].trim();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"wassilililily"},"content":"                                Task newEvent \u003d new Event(action, start, end);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"wassilililily"},"content":"                                tasks.add(index, newEvent);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"wassilililily"},"content":"                                index++;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"wassilililily"},"content":"                                System.out.println(spacer + String.format(\"added: %s%n\", newEvent) + spacer);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"wassilililily"},"content":"                            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"wassilililily"},"content":"                                System.out.println(spacer + \"Please use /from and /to for start and end time!\\n\" + spacer);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"wassilililily"},"content":"                            }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"wassilililily"},"content":"                            break;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"wassilililily"},"content":"                        default:","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"wassilililily"},"content":"                            System.out.println(spacer + \"Invalid command!\\n\" + spacer);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"wassilililily"},"content":"                            break;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"wassilililily"},"content":"                        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"wassilililily"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"wassilililily"},"content":"                        System.out.println(spacer + \"Please add a description!\\n\" + spacer);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"wassilililily"},"content":"                    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"wassilililily"},"content":"            }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"wassilililily"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"wassilililily"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"wassilililily":205}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wassilililily"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wassilililily"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wassilililily"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wassilililily"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wassilililily"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wassilililily"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wassilililily"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wassilililily"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wassilililily"},"content":" * A Deadline task includes a description, a status indicating whether it is completed,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wassilililily"},"content":" * and a deadline represented as a {@link LocalDateTime}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wassilililily"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wassilililily"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wassilililily"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wassilililily"},"content":"    private static final DateTimeFormatter FORMATTER;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wassilililily"},"content":"    static {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wassilililily"},"content":"        FORMATTER \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wassilililily"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\"))","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wassilililily"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"))","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wassilililily"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"))","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wassilililily"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"MM/dd/yyyy HHmm\"))","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wassilililily"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"MM/dd/yyyy HH:mm\"))","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wassilililily"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"MM/dd/yyyy\"))","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wassilililily"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"MM-dd-yyyy HHmm\"))","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wassilililily"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"MM-dd-yyyy HH:mm\"))","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wassilililily"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"MM-dd-yyyy\"))","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wassilililily"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"dd/M/yyyy HHmm\"))","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wassilililily"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"dd/M/yyyy HH:mm\"))","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wassilililily"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"dd/M/yyyy\"))","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wassilililily"},"content":"                .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wassilililily"},"content":"                .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wassilililily"},"content":"                .toFormatter();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wassilililily"},"content":"    private static final DateTimeFormatter OUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wassilililily"},"content":"    public LocalDateTime deadline;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wassilililily"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wassilililily"},"content":"     * Constructs a new Deadline task with the specified description and deadline.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wassilililily"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wassilililily"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wassilililily"},"content":"     * The deadline is parsed from the given string using the defined {@link #FORMATTER}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wassilililily"},"content":"     * If the deadline is not in a valid format, the current date and time will be used.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wassilililily"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wassilililily"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wassilililily"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wassilililily"},"content":"     * @param deadline    The deadline of the task as a string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wassilililily"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wassilililily"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wassilililily"},"content":"        super(description);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wassilililily"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wassilililily"},"content":"            this.deadline \u003d LocalDateTime.parse(deadline, FORMATTER);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wassilililily"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wassilililily"},"content":"            System.out.println(\"Invalid deadline format!\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wassilililily"},"content":"            this.deadline \u003d LocalDateTime.now();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wassilililily"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wassilililily"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wassilililily"},"content":"     * Constructs a new Deadline task with the specified description, status, and deadline.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wassilililily"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wassilililily"},"content":"     * The deadline is parsed from the given string using the defined {@link #FORMATTER}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wassilililily"},"content":"     * If the deadline is not in a valid format, the current date and time will be used.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wassilililily"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wassilililily"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wassilililily"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wassilililily"},"content":"     * @param status      The completion status of the task; {@code true} if the task is done, {@code false} otherwise.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wassilililily"},"content":"     * @param deadline    The deadline of the task as a string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wassilililily"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wassilililily"},"content":"    public Deadline(String description, boolean status, String deadline) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wassilililily"},"content":"        super(description, status);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wassilililily"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wassilililily"},"content":"            this.deadline \u003d LocalDateTime.parse(deadline, FORMATTER);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wassilililily"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wassilililily"},"content":"            System.out.println(\"Invalid deadline format!\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"wassilililily"},"content":"            this.deadline \u003d LocalDateTime.now();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"wassilililily"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"wassilililily"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"wassilililily"},"content":"     * Constructs a new Deadline task with the specified description, status, and deadline.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"wassilililily"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"wassilililily"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"wassilililily"},"content":"     * @param status      The completion status of the task; {@code true} if the task is done, {@code false} otherwise.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"wassilililily"},"content":"     * @param deadline    The deadline of the task as a {@link LocalDateTime} object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"wassilililily"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"wassilililily"},"content":"    public Deadline(String description, boolean status, LocalDateTime deadline) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"wassilililily"},"content":"        super(description, status);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"wassilililily"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"wassilililily"},"content":"    public Deadline markAsDone() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"wassilililily"},"content":"        return new Deadline(this.description, true, this.deadline);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"wassilililily"},"content":"    public Deadline markAsUndone() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"wassilililily"},"content":"        return new Deadline(this.description, false, this.deadline);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"wassilililily"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"wassilililily"},"content":"     * Returns the type of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"wassilililily"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"wassilililily"},"content":"     * @return \"D\", representing that this task is a Deadline.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"wassilililily"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"wassilililily"},"content":"    public String getType() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"wassilililily"},"content":"        return \"D\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"wassilililily"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"wassilililily"},"content":"     * Returns the deadline of the task formatted as a string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"wassilililily"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"wassilililily"},"content":"     * @return The deadline as a formatted string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"wassilililily"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"wassilililily"},"content":"    public String getTime() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"wassilililily"},"content":"        return this.deadline.format(OUT_FORMAT);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"wassilililily"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"wassilililily"},"content":"     * Returns a string representation of the Deadline task, including its type, status icon, description, and deadline.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"wassilililily"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"wassilililily"},"content":"     * @return A string in the format \"[type] [status icon] description (by: deadline)\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"wassilililily"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"wassilililily"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"wassilililily"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"wassilililily"},"content":"        return String.format(\"%s (by: %s)\", super.toString(), this.getTime());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"wassilililily"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"wassilililily":130}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wassilililily"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wassilililily"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wassilililily"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wassilililily"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wassilililily"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wassilililily"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wassilililily"},"content":" * Represents an event with a start and end time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wassilililily"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wassilililily"},"content":" * An Event task includes a description, a status indicating whether it is completed,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wassilililily"},"content":" * and a start and end time represented as {@link LocalDateTime}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wassilililily"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wassilililily"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wassilililily"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wassilililily"},"content":"    private static final DateTimeFormatter FORMATTER;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wassilililily"},"content":"    static {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wassilililily"},"content":"        FORMATTER \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wassilililily"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\"))","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wassilililily"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"))","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wassilililily"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"))","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wassilililily"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"MM/dd/yyyy HHmm\"))","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wassilililily"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"MM/dd/yyyy HH:mm\"))","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wassilililily"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"MM/dd/yyyy\"))","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wassilililily"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"MM-dd-yyyy HHmm\"))","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wassilililily"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"MM-dd-yyyy HH:mm\"))","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wassilililily"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"MM-dd-yyyy\"))","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wassilililily"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"dd/M/yyyy HHmm\"))","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wassilililily"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"dd/M/yyyy HH:mm\"))","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wassilililily"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"dd/M/yyyy\"))","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wassilililily"},"content":"                .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wassilililily"},"content":"                .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wassilililily"},"content":"                .toFormatter();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wassilililily"},"content":"    private static final DateTimeFormatter OUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wassilililily"},"content":"    public LocalDateTime start;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wassilililily"},"content":"    public LocalDateTime end;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wassilililily"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wassilililily"},"content":"     * Constructs a new Event task with the specified description, start, and end times.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wassilililily"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wassilililily"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wassilililily"},"content":"     * The start and end times are parsed from the given strings using the defined {@link #FORMATTER}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wassilililily"},"content":"     * If the times are not in a valid format, the current date and time will be used.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wassilililily"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wassilililily"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wassilililily"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wassilililily"},"content":"     * @param start       The start time of the event as a string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wassilililily"},"content":"     * @param end         The end time of the event as a string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wassilililily"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wassilililily"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wassilililily"},"content":"        super(description);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wassilililily"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wassilililily"},"content":"            this.start \u003d LocalDateTime.parse(start, FORMATTER);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wassilililily"},"content":"            this.end \u003d LocalDateTime.parse(end, FORMATTER);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wassilililily"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wassilililily"},"content":"            System.out.println(\"Invalid event format!\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wassilililily"},"content":"            this.start \u003d LocalDateTime.now();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wassilililily"},"content":"            this.end \u003d LocalDateTime.now();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wassilililily"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wassilililily"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wassilililily"},"content":"     * Constructs a new Event task with the specified description, status, start, and end times.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wassilililily"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wassilililily"},"content":"     * The start and end times are parsed from the given strings using the defined {@link #FORMATTER}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wassilililily"},"content":"     * If the times are not in a valid format, the current date and time will be used.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wassilililily"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wassilililily"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wassilililily"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wassilililily"},"content":"     * @param status      The completion status of the task; {@code true} if the task is done, {@code false} otherwise.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wassilililily"},"content":"     * @param start       The start time of the event as a string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wassilililily"},"content":"     * @param end         The end time of the event as a string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wassilililily"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wassilililily"},"content":"    public Event(String description, boolean status, String start, String end) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"wassilililily"},"content":"        super(description, status);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"wassilililily"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"wassilililily"},"content":"            this.start \u003d LocalDateTime.parse(start, FORMATTER);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"wassilililily"},"content":"            this.end \u003d LocalDateTime.parse(end, FORMATTER);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"wassilililily"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"wassilililily"},"content":"            System.out.println(\"Invalid event format!\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"wassilililily"},"content":"            this.start \u003d LocalDateTime.now();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"wassilililily"},"content":"            this.end \u003d LocalDateTime.now();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"wassilililily"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"wassilililily"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"wassilililily"},"content":"     * Constructs a new Event task with the specified description, status, start, and end times.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"wassilililily"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"wassilililily"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"wassilililily"},"content":"     * @param status      The completion status of the task; {@code true} if the task is done, {@code false} otherwise.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"wassilililily"},"content":"     * @param start       The start time of the event as a {@link LocalDateTime} object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"wassilililily"},"content":"     * @param end         The end time of the event as a {@link LocalDateTime} object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"wassilililily"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"wassilililily"},"content":"    public Event(String description, boolean status, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"wassilililily"},"content":"        super(description, status);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"wassilililily"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"wassilililily"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"wassilililily"},"content":"    public Event markAsDone() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"wassilililily"},"content":"        return new Event(this.description, true, this.start, this.end);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"wassilililily"},"content":"    public Event markAsUndone() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"wassilililily"},"content":"        return new Event(this.description, false, this.start, this.end);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"wassilililily"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"wassilililily"},"content":"     * Returns the type of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"wassilililily"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"wassilililily"},"content":"     * @return \"E\", representing that this task is an Event.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"wassilililily"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"wassilililily"},"content":"    public String getType() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"wassilililily"},"content":"        return \"E\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"wassilililily"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"wassilililily"},"content":"     * Returns the start and end times of the event formatted as a string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"wassilililily"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"wassilililily"},"content":"     * @return A string in the format \"start|end\", where both times are formatted according to {@link #OUT_FORMAT}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"wassilililily"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"wassilililily"},"content":"    public String getTime() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"wassilililily"},"content":"        return this.start.format(OUT_FORMAT) + \"|\" + this.end.format(OUT_FORMAT);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"wassilililily"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"wassilililily"},"content":"     * Returns the start of the event formatted as a string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"wassilililily"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"wassilililily"},"content":"     * @return The start as a formatted string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"wassilililily"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"wassilililily"},"content":"    private String getStart() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"wassilililily"},"content":"        return this.start.format(OUT_FORMAT);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"wassilililily"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"wassilililily"},"content":"     * Returns the end of the event formatted as a string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"wassilililily"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"wassilililily"},"content":"     * @return The end as a formatted string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"wassilililily"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"wassilililily"},"content":"    private String getEnd() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"wassilililily"},"content":"        return this.end.format(OUT_FORMAT);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"wassilililily"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"wassilililily"},"content":"     * Returns a string representation of the Event task, including its type, status icon, description, start, and end times.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"wassilililily"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"wassilililily"},"content":"     * @return A string in the format \"[type] [status icon] description (from: start to: end)\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"wassilililily"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"wassilililily"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"wassilililily"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"wassilililily"},"content":"        return String.format(\"%s (from: %s to: %s)\", super.toString(), this.getStart(), this.getEnd());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"wassilililily"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"wassilililily":157}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wassilililily"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wassilililily"},"content":" * Represents a task with a description and a status indicating whether it is completed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wassilililily"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wassilililily"},"content":" * This is an abstract class that defines the basic properties and methods for a task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wassilililily"},"content":" * Subclasses must implement the methods to mark the task as done or undone,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wassilililily"},"content":" * retrieve the task type, and get the time associated with the task (if applicable).","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wassilililily"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wassilililily"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wassilililily"},"content":"abstract class Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wassilililily"},"content":"    protected String description;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wassilililily"},"content":"    protected boolean status;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wassilililily"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wassilililily"},"content":"     * Constructs a new Task with the specified description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wassilililily"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wassilililily"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wassilililily"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wassilililily"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wassilililily"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wassilililily"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wassilililily"},"content":"        this.status \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wassilililily"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wassilililily"},"content":"     * Constructs a new Task with the specified description and status.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wassilililily"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wassilililily"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wassilililily"},"content":"     * @param status      The completion status of the task; {@code true} if the task is done, {@code false} otherwise.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wassilililily"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wassilililily"},"content":"    public Task(String description, boolean status) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wassilililily"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wassilililily"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wassilililily"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wassilililily"},"content":"     * Marks the task as done and returns an updated Task object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wassilililily"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wassilililily"},"content":"     * @return A new Task object with status set to {@code true}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wassilililily"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wassilililily"},"content":"    abstract Task markAsDone();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wassilililily"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wassilililily"},"content":"     * Marks the task as undone and returns an updated Task object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wassilililily"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wassilililily"},"content":"     * @return A new Task object with status set to {@code false}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wassilililily"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wassilililily"},"content":"    abstract Task markAsUndone();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wassilililily"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wassilililily"},"content":"     * Returns the type of the task (e.g., T, D, E).","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wassilililily"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wassilililily"},"content":"     * @return The type of the task as a String.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wassilililily"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wassilililily"},"content":"    abstract String getType();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wassilililily"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wassilililily"},"content":"     * Returns the time associated with the task, if applicable.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wassilililily"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wassilililily"},"content":"     * @return The time associated with the task as a String.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wassilililily"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wassilililily"},"content":"    abstract String getTime();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"wassilililily"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"wassilililily"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"wassilililily"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"wassilililily"},"content":"     * @return \"X\" if the task is done, otherwise a space (\" \").","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"wassilililily"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"wassilililily"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"wassilililily"},"content":"        return (status ? \"X\" : \" \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"wassilililily"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"wassilililily"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"wassilililily"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"wassilililily"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"wassilililily"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"wassilililily"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"wassilililily"},"content":"        return this.description;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"wassilililily"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"wassilililily"},"content":"     * Returns a string representation of the task, including its type, status icon, and description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"wassilililily"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"wassilililily"},"content":"     * @return A string in the format \"[type] [status icon] description\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"wassilililily"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"wassilililily"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"wassilililily"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"wassilililily"},"content":"        return String.format(\"[%s] [%s] %s\", this.getType(), this.getStatusIcon(), this.description);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"wassilililily"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"wassilililily":91}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wassilililily"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wassilililily"},"content":" * Represents a ToDo task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wassilililily"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wassilililily"},"content":" * A ToDo task is a basic task with only a description and a status indicating whether it is completed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wassilililily"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wassilililily"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wassilililily"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wassilililily"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wassilililily"},"content":"     * Constructs a new ToDo task with the specified description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wassilililily"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wassilililily"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wassilililily"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wassilililily"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wassilililily"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wassilililily"},"content":"        super(description);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wassilililily"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wassilililily"},"content":"     * Constructs a new ToDo task with the specified description and status.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wassilililily"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wassilililily"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wassilililily"},"content":"     * @param status      The completion status of the ToDo task; {@code true} if the task is done, {@code false} otherwise.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wassilililily"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wassilililily"},"content":"    public ToDo(String description, boolean status) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wassilililily"},"content":"        super(description,status);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wassilililily"},"content":"    public ToDo markAsDone() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wassilililily"},"content":"        return new ToDo(this.description, true);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wassilililily"},"content":"    public ToDo markAsUndone() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wassilililily"},"content":"        return new ToDo(this.description, false);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wassilililily"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wassilililily"},"content":"     * Returns the type of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wassilililily"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wassilililily"},"content":"     * @return \"T\", representing that this task is a ToDo.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wassilililily"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wassilililily"},"content":"    public String getType() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wassilililily"},"content":"        return \"T\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"wassilililily"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"wassilililily"},"content":"     * Returns an empty string since ToDo tasks do not have an associated time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"wassilililily"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"wassilililily"},"content":"     * @return An empty string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"wassilililily"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"wassilililily"},"content":"    public String getTime() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wassilililily"},"content":"        return \"\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wassilililily"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wassilililily"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wassilililily"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"wassilililily":55}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wassilililily"},"content":"todo read book","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wassilililily"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wassilililily"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wassilililily"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wassilililily"},"content":"mark 2","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wassilililily"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wassilililily"},"content":"bye","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"wassilililily":7}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wassilililily"},"content":"java -classpath ../bin BottleOpener \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"wassilililily":1,"-":37}}]
