{"authorDailyContributionsMap":{"jarrellc1":[{"date":"2024-08-16","commitResults":[{"hash":"266630e8416f56d318672afa911b429e2e6753a6","isMergeCommit":false,"messageTitle":"Level-0","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}}]},{"date":"2024-08-17","commitResults":[{"hash":"ad59f2a3ebb0cb0c02b8e8a16ac0068754554b9f","isMergeCommit":false,"messageTitle":"Level-1","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":79,"deletions":11}}},{"hash":"9c2333092a76c208f86d680bb2c37e15eda73fe0","isMergeCommit":false,"messageTitle":"Level-2","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":1}}},{"hash":"406427a8ae54c4079cf061bc4c9b6dbd708f4334","isMergeCommit":false,"messageTitle":"Level-3","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":85,"deletions":5}}},{"hash":"4ea56cc7ae4b484ddf6beb44555cee25643f7404","isMergeCommit":false,"messageTitle":"Level-4","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":106,"deletions":12}}}]},{"date":"2024-08-18","commitResults":[{"hash":"e2e895a3900bad4ed24d8b4798e324523a67c81f","isMergeCommit":false,"messageTitle":"A-TextUiTesting","messageBody":"-added automated testing sh file.\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":0,"deletions":1},"sh":{"insertions":8,"deletions":16}}},{"hash":"feff1e288d2d8194898c54736719241f0925ae92","isMergeCommit":false,"messageTitle":"Level-5","messageBody":"-added exception handling\n","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":87,"deletions":84}}}]},{"date":"2024-08-19","commitResults":[{"hash":"9262c4cc33dfd778c6f1e30be66af12479a6d2c0","isMergeCommit":false,"messageTitle":"Parser class: Add isDelete() method and delete logic in handleCommand method","messageBody":"This is to check if the command contains a delete, which will initiate the logic for delete tasks.\n\nUi class: Add delete Ui\n\nThis is to display to user delete messages when a successful or failed delete is initiated.\n\nTaskList class: Add delete method\n\nSupporting methods using Java Collections for deleting task in TaskList.\n","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":21}}},{"hash":"9029d5e60978e12dc44782c89cc7bad4f76dfdd1","isMergeCommit":false,"messageTitle":"Add folder for enums Add CommandName.java class in folder enums","messageBody":"Using enums for command names, we can implement a cleaner way to store and identify the different\ncommand names. We will implement the logic by refactoring the Parser.java class.\n\nParser class: Refactored code, deleted boolean methods such as isDelete(), and used switch statements\n\nCode simplicity and avoid duplication of code by using switch statements.\nThis allows for easier scalability and maintenance of code logic.\n\nToDo, DeadLine, and Event switch statements have fallthrough to prevent code duplication.\n","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":120,"deletions":90}}}]},{"date":"2024-08-20","commitResults":[{"hash":"de23095fefc0181d747b49d9a88a9de9056e05e2","isMergeCommit":false,"messageTitle":"Add Storage class","messageBody":"Storage class will contain the logic for writing the file into the user device and will\nalso load existing user data.\n\nAdd toFileFormat() to task, event, deadLine and toDo classes to allow code to write\nin a specific format to save into the device.\n\nWe will save the file in the Jar class once user inputs \"bye\".\n","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":113,"deletions":3}}}]},{"date":"2024-08-21","commitResults":[{"hash":"7a3b2f7ea7d405d67907a59ea05d7ab8649fb380","isMergeCommit":false,"messageTitle":"Add dates and times functionality to the chatbot Add java.time.LocalDate to DeadLine Rename Deadline class to DeadLine Refactor Storage class to read new file format for DeadLine command","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":9}}}]},{"date":"2024-08-22","commitResults":[{"hash":"87887e5aa026b11b2634087e69bee8dbc87841af","isMergeCommit":false,"messageTitle":"Refactor code for Parser and Ui","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":2}}},{"hash":"4b7d66b265111fe31e7961fd00ea06703bafa273","isMergeCommit":false,"messageTitle":"Refactor code for parser","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"78aadff4e46237a944c76ea74e7963358ef0e42c","isMergeCommit":false,"messageTitle":"Add packages for tasks, parser, exceptions, storage, and ui Refactor call the affected class code to accommodate packages","messageBody":"This is to allow us to organize the classes into suitable Java packages.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":2}}}]},{"date":"2024-08-23","commitResults":[{"hash":"9d387f2ac9fa9201da51f8482d42a78ea36d3664","isMergeCommit":true,"messageTitle":"Merge commit \u002781a9c537afe8492675eb253968939364d65db091\u0027","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{}},{"hash":"0fd1d2861648839ad709d7ccf8bdb415fe25aef5","isMergeCommit":false,"messageTitle":"Add comments to JarException","messageBody":"Testing commit.\n\nIgnore this commit.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"3910dffe7e569bc2b483a3abb6a26683a7baca00","isMergeCommit":false,"messageTitle":"Add ParserTest.java and StorageTest.java in Test folder Refactor Storage.java, as it was throwing the wrong exception","messageBody":"ParserTest will test the handleCommend method in Parser class and StorageTest will test for\nproper loading of files and corrupted files.\n","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":152,"deletions":1}}}]},{"date":"2024-08-24","commitResults":[{"hash":"82be3a9a5a3fd1dc3049fbfb93f2d571902263ae","isMergeCommit":false,"messageTitle":"Update build.gradle by changing main class set to Jar","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2}}}]},{"date":"2024-08-26","commitResults":[{"hash":"33cc0c90a69b1bdcf60177f118a877c3853ab314","isMergeCommit":false,"messageTitle":"Add javadocs for all classes for Jar bot","messageBody":"Documented class-level, constructor-level, and method-level details.\nImproved code readability and maintainability by providing clear explanations of class purposes, methods, and their usage.\n","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":303,"deletions":4}}},{"hash":"2568a7041d058bcb39952565f20bf653f7f991f5","isMergeCommit":false,"messageTitle":"Refactor code to follow java coding standard Remove unused Ui statements","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":5}}},{"hash":"7fef772da002bb8562f602098dc8535c2171d2a7","isMergeCommit":false,"messageTitle":"Add find enum to CommandName Add find functionality to TaskList Add find logic to handleCommand in Parser Add showTaskList to Ui","messageBody":"This is to allow the user to input find and a keyword to search list for tasks containing\nthe substring of the task wanted. ShowTaskList in Ui is an overloaded method to display\nthe array of found tasks for the user.\n","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":0}}},{"hash":"4c98a9be702ab65698227ecd354b40d26d7478e4","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JavaDoc\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"de1eb04b45bf15c8c0ee98a22a5339fa1048af42","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-9\u0027","messageBody":"# Conflicts:\n#\tsrc/main/java/ui/Ui.java\n","fileTypesAndContributionMap":{}},{"hash":"86b71ecb03a228bc643c67682bc41c0ae2cf6b39","isMergeCommit":false,"messageTitle":"Refactor Ui code","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":7}}}]},{"date":"2024-08-28","commitResults":[{"hash":"b1de17d8c10c46d4e15642b4e09d806fafb5ff8c","isMergeCommit":false,"messageTitle":"Refactor code for Parser, Storage, DeadLine, TaskList, ToDo and Ui","messageBody":"This is to follow the Java coding standard, mainly refactored switch statements\nand ensure that the right margin of 120 chars is not exceeded.\n","fileTypesAndContributionMap":{"java":{"insertions":90,"deletions":93}}}]},{"date":"2024-08-30","commitResults":[{"hash":"363992bb5e549641a7fa635b2f12c96769ee415b","isMergeCommit":false,"messageTitle":"Add JavaFX GUI for Jarbot Add folder gui containing classes DialogBox, Main, MainWindow and Launcher for JavaFX Add resources folder containing sub-packages of images and view, containing DialogBox.fxml and MainWindow.fxml Refactor Jar.java to contain its own package for code neatness Refactor Ui class to return string for all messages methods Refactor CommandName to return string of the messages for each command","messageBody":"These changes are made to facilitate the GUI logic, and CLI logic\nhas been removed.\n","tags":["Level-10"],"fileTypesAndContributionMap":{"gradle":{"insertions":16,"deletions":1},"fxml":{"insertions":66,"deletions":0},"java":{"insertions":283,"deletions":99},"sh":{"insertions":1,"deletions":1}}}]},{"date":"2024-09-07","commitResults":[{"hash":"16914d181565c3b43b4eb2aca29f7be312e47ac8","isMergeCommit":false,"messageTitle":"Add assertions and improve error handling in core Jar Bot classes","messageBody":"Added assertions to key parts of the Storage, Parser, and Jar classes to\nensure important assumptions hold true during runtime.\n\nThere are several places where assertions have been added. For storage, we will\nverify the file path and task list before saving or loading. In Parser, we will ensure non-null\ninput commands and task numbers. In Jar, we will ensure that getResponse(String input),\ninput is not null or empty. These assertions make the code more robust can help\nidentify any bugs, and do not affect the code functionality.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"e7a045ab9b8e874b08310c8f4682a5a5df85c642","isMergeCommit":false,"messageTitle":"Refactor Parser class parseTask(String command) method","messageBody":"We will avoid long methods by extracting the logic of parseTask\nto separate methods such as parseToDoTask, parseDeadlineTask\nand parseEventTask.\n","fileTypesAndContributionMap":{"java":{"insertions":55,"deletions":24}}},{"hash":"79961532e225705e697bf251a17079d2a61d9e0a","isMergeCommit":false,"messageTitle":"Refactor Parser class to maintain readability","messageBody":"Let\u0027s extract the logic of handleCommand method to different sub methods\nso that handleCommand method will not be too long.\n","fileTypesAndContributionMap":{"java":{"insertions":119,"deletions":38}}}]},{"date":"2024-09-08","commitResults":[{"hash":"563fd8d0d9a1287ac663ddd97645a2bf1819ce92","isMergeCommit":true,"messageTitle":"Merge pull request #1 from jarrellc1/branch-A-Assertions","messageBody":"Add assertions and improve error handling in core Jar Bot classes","tags":["A-Assertions"],"fileTypesAndContributionMap":{}},{"hash":"7b59f2624d0eb5cc2f651b2b02989b5f1b5aa287","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-CodeQuality","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"e744e84535c93df1660e2141e697a6c8a81b52cf","isMergeCommit":false,"messageTitle":"Refactor Storage class load() method to adhere to code quality","messageBody":"Let\u0027s extract the logic inside load method to ensure that the method length\ndoes not exceed 30 lines, and to ensure readibility.\n","fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":28}}},{"hash":"47051a7605ae0feaef7d74605c71886c52551d8d","isMergeCommit":true,"messageTitle":"Merge pull request #2 from jarrellc1/branch-A-CodeQuality","messageBody":"Refactor Storage class load() method to adhere to code quality","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{}}]},{"date":"2024-09-09","commitResults":[{"hash":"5f5d4a24cc0a64f9747d6093448694f13809a6b0","isMergeCommit":false,"messageTitle":"Add find duplicate logic to Jar bot","messageBody":"Let\u0027s create a method called findDuplicate in TaskList, which will check if the task entered\nexists in the list of tasks. If so, we will return a message to user indicating that they cannot add\nthe task.\n\nLet\u0027s also add some getter and setter methods in the task classes to extract information from the tasks\nwhile adhering to OOP conventions.\n","fileTypesAndContributionMap":{"java":{"insertions":86,"deletions":1}}},{"hash":"24dcae4eaf6332e9ac4423643419329168c87705","isMergeCommit":true,"messageTitle":"Merge pull request #3 from jarrellc1/branch-C-DetectDuplicates","messageBody":"Add find duplicate logic to Jar bot","tags":["BCD-Extension"],"fileTypesAndContributionMap":{}},{"hash":"5bbf3ba4e45302f5e2aa73e14015f8a7ee116c78","isMergeCommit":false,"messageTitle":"Add JavaDocs for methods in these classes that handle the new functionality of finding duplicate tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":62,"deletions":0}}},{"hash":"f2c48097b1d1c08648660f935e998ed77c2b66a9","isMergeCommit":false,"messageTitle":"Refactor TaskList class for improved readability and maintainability","messageBody":"Remove taskList from findDuplicate method.\n\nLet\u0027s remove taskList from findDuplicate method as it is redundant as findDuplicate\nis already calling from taskList and does not need another copy of the list of tasks\n","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":41}}}]},{"date":"2024-09-10","commitResults":[{"hash":"b14ca56d311f89d511c074c84f94ebcb86ef1ef4","isMergeCommit":false,"messageTitle":"Refactor Parser and TaskList code","messageBody":"Let\u0027s change the code in the classes to adhere to java coding standard\nby including line break to ensure line does not cross 120 char limit.\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":5}}},{"hash":"75aa2d756b47e5e90e6959cd5480c457e0374928","isMergeCommit":false,"messageTitle":"Refactor Storage class variable length to improve readability","messageBody":"Let\u0027s add line break for DATE_TIME_FORMATTER so that it does not exceed\ncharacter limit.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"7d1e2ac362972da99635c3a851a2169a48ce0853","isMergeCommit":false,"messageTitle":"Refactor task classes to maintain readability","messageBody":"Let\u0027s create a constant variable called TASK_TYPE which will return a\nstring describing the task type. The getter method will return TASK_TYPE.\n","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":5}}},{"hash":"a4c99601b27b0890a3dd4f84e119bf93d8beadf8","isMergeCommit":false,"messageTitle":"Add javadocs for gui classes","messageBody":"Let\u0027s add javadocs for these classes to explain the purpose of the DialogBox GUI component.\n","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":0}}},{"hash":"97c4cc82684ae5da50f46e8fc1557adf5afaa7b6","isMergeCommit":false,"messageTitle":"Refactor task parsing logic in Storage class to improve readability","messageBody":"Let\u0027s extract the logic of task parsing out into shorter methods. ParseTaskStatus\nis to check the task status, while createTaskFromType returns a new task according to\nthe type needed.\n","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":12}}}]},{"date":"2024-09-13","commitResults":[{"hash":"cd9f8ce65a255c2cfd76fd1758876d837bef063d","isMergeCommit":false,"messageTitle":"Add User Guide to README.md and Ui.png","messageBody":"Let\u0027s add user guide to readme which covers all the basic functionalities, their command,\nsample input and output. This is to allow user to have a guide on how to run the bot and\nthe different commands that they can use in this bot. Ui.png is to show how the interface\nlooks like for more detail.\n","fileTypesAndContributionMap":{"md":{"insertions":122,"deletions":14}}},{"hash":"aaec1ffbf86a907527e96d18b153f7a4db86e372","isMergeCommit":false,"messageTitle":"Add User Guide to README.md and Ui.png","messageBody":"Let\u0027s add user guide to readme which covers all the basic functionalities, their command,\nsample input and output. This is to allow user to have a guide on how to run the bot and\nthe different commands that they can use in this bot. Ui.png is to show how the interface\nlooks like for more detail.\n","tags":["A-UserGuide"],"fileTypesAndContributionMap":{"md":{"insertions":10,"deletions":4}}},{"hash":"13a47317d5cc528567af64daecb44c6aba3f7f8c","isMergeCommit":false,"messageTitle":"Refactor Parser and Ui class to maintain readability","messageBody":"Let\u0027s refactor these classes to prevent deeply nested functions for\ncode readability.\n","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":22}}}]},{"date":"2024-09-15","commitResults":[{"hash":"7f154bd41381f4ad2e87fa66d5c9f6207b7bb969","isMergeCommit":false,"messageTitle":"Refactor README.md to make it more readable","messageBody":"Let\u0027s change the heading so that it looks more user friendly.\n","fileTypesAndContributionMap":{"md":{"insertions":3,"deletions":2}}},{"hash":"22ffe56e774b11acbf137deac819db93857d93bd","isMergeCommit":false,"messageTitle":"Refactor ReadMe.md to ensure readability","messageBody":"Let\u0027s continue refactoring ReadMe to ensure that it comply with UserGuide.\n","fileTypesAndContributionMap":{"md":{"insertions":4,"deletions":4}}}]}]},"authorFileTypeContributionMap":{"jarrellc1":{"java":1557,"md":125,"fxml":66,"sh":7,"bat":0,"gradle":17,"txt":3}},"authorContributionVariance":{"jarrellc1":17111.602},"authorDisplayNameMap":{"jarrellc1":"CS2103T-F15-1 JARR..HENG"}}
