[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongqqqq"},"content":"    mainClass.set(\"fishman.gui.Launcher\")","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongqqqq"},"content":"    archiveBaseName \u003d \"fishman\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"yongqqqq":17,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"# Fishman User Guide","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"![main.png](main.png)","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"\u003eFrom the seven seas, here comes a fish to remember your tasks for you! (_Does not have goldfish memory_)","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"## To use the application:","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"1. Download the latest release.","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"2. Double-click the `.jar` file or run the following command in the folder:","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"    ```","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"    java -jar fishman.jar","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"    ```","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"    ","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"---","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"## Adding tasks","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"---","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"The application currently supports 3 types of tasks.","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"1. todo (basic task)","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"2. deadline (has option ```by``` to state the deadline of the task)","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"3. event (has options ```from``` and ```to``` to state event dates)","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"### Adding `todo`","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"`todo DESCRIPTION`","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"This command adds a `todo` task with the provided description.","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"**Example:**","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"```","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"todo Read a book","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"```","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"adds a task with the description \"Read a book\"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"### Adding `deadline`","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"`deadline DESCRIPTION /by YYYY-MM-DD HHMM`","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"This command adds a `deadline` task with the provided description and a deadline.","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongqqqq"},"content":"\u003eDates must follow this format:","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongqqqq"},"content":"\u003e* YYYY: 4-digit year","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongqqqq"},"content":"\u003e* MM: 2-digit month (e.g., 01 for January)","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongqqqq"},"content":"\u003e* DD: 2-digit day (e.g., 15 for the 15th)","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongqqqq"},"content":"\u003e* HHMM: 4-digit time in 24-hour format (e.g., 1300 for 1:00 PM).","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongqqqq"},"content":"\u003e* If the argument does not follow the above format, the command will return an error.","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongqqqq"},"content":"**Example:**","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongqqqq"},"content":"```","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongqqqq"},"content":"deadline CS2103T iP /by 2024-09-20 1600","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongqqqq"},"content":"```","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongqqqq"},"content":"adds a deadline task with the description \"CS2103T iP\" with the deadline by 19 Sep 2024, 4pm.","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongqqqq"},"content":"### Adding `event`","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongqqqq"},"content":"`event DESCRIPTION /from YYYY-MM-DD HHMM /to YYYY-MM-DD HHMM`","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongqqqq"},"content":"This command adds a `event` task with the provided description with the start and end dates as marked by ","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongqqqq"},"content":"from and to.","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongqqqq"},"content":"\u003eDates must follow this format:","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongqqqq"},"content":"\u003e* YYYY: 4-digit year","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongqqqq"},"content":"\u003e* MM: 2-digit month (e.g., 01 for January)","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yongqqqq"},"content":"\u003e* DD: 2-digit day (e.g., 15 for the 15th)","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yongqqqq"},"content":"\u003e* HHMM: 4-digit time in 24-hour format (e.g., 1300 for 1:00 PM).","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yongqqqq"},"content":"\u003e* If the argument does not follow the above format, the command will return an error.","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yongqqqq"},"content":"**Example:**","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yongqqqq"},"content":"event CS2103T Finals /from 2024-11-01 1600 /to 2024-11-01 1800","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yongqqqq"},"content":"adds an event task with the description \"CS2103T Finals\" starting from 1 Nov 2024, 4pm to 1 Nov 2024, 6pm.","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yongqqqq"},"content":"---","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yongqqqq"},"content":"## Listing Tasks","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yongqqqq"},"content":"### General listing","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yongqqqq"},"content":"`list`","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yongqqqq"},"content":"This command lists out all tasks that are currently saved in the task list.","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yongqqqq"},"content":"### Find for specific tasks","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yongqqqq"},"content":"`find TEXT`","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yongqqqq"},"content":"This command finds all the tasks that contain the specified `TEXT` in their description.","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yongqqqq"},"content":"**Example:**","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yongqqqq"},"content":"```","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yongqqqq"},"content":"find CS2103T","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yongqqqq"},"content":"```","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yongqqqq"},"content":"finds all the tasks containing \"CS2103T\" in its description.","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yongqqqq"},"content":"---","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yongqqqq"},"content":"## Updating Tasks","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yongqqqq"},"content":"### Mark tasks","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yongqqqq"},"content":"`mark NUMBER`","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yongqqqq"},"content":"where `NUMBER` is the index of the tasks as per `list` command.","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yongqqqq"},"content":"**Example:**","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yongqqqq"},"content":"```","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yongqqqq"},"content":"mark 1","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yongqqqq"},"content":"```","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yongqqqq"},"content":"marks the first task in the list as completed.","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yongqqqq"},"content":"### Unmark tasks","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yongqqqq"},"content":"`unmark NUMBER`","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yongqqqq"},"content":"where `NUMBER` is the index of the tasks as per `list` command.","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"yongqqqq"},"content":"**Example:**","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yongqqqq"},"content":"```","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yongqqqq"},"content":"unmark 1","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"yongqqqq"},"content":"```","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"yongqqqq"},"content":"marks the first task in the list as incomplete.","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"yongqqqq"},"content":"### Delete tasks","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"yongqqqq"},"content":"`delete NUMBER`","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"yongqqqq"},"content":"where `NUMBER` is the index of the tasks as per `list` command.","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"yongqqqq"},"content":"**Example:**","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"yongqqqq"},"content":"```","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"yongqqqq"},"content":"delete 1","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"yongqqqq"},"content":"```","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"yongqqqq"},"content":"deletes the first task in the list.","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"yongqqqq"},"content":"---","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"yongqqqq"},"content":"## General operations","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"yongqqqq"},"content":"### Exit the application","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"yongqqqq"},"content":"```bye```","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"yongqqqq"},"content":"This command will exit the application.","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"yongqqqq"},"content":"### Persistent Storage","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"yongqqqq"},"content":"Fishman automatically saves your tasks, so there is no need to worry about losing them when you exit the application.","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"yongqqqq"},"content":"The next time you launch the application, all previously added tasks will be restored and ready for use!","lastModifiedDate":"2024-09-19","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"yongqqqq"},"content":"---","lastModifiedDate":"2024-09-19","isFullCredit":false}],"authorContributionMap":{"yongqqqq":170,"-":19}},{"path":"src/main/java/fishman/Fishman.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"package fishman;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":"import java.util.List;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"import fishman.command.Command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"import fishman.exception.FishmanException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.TaskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"import fishman.utils.Parser;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"import fishman.utils.Storage;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"import fishman.utils.Ui;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":" * The main class for the Fishman bot.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":" * This class initializes the user interface, task list and parser,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":" * and manages the main program.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"public class Fishman {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"    private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"    private final Storage storage \u003d new Storage(\"./data/fishman.csv\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"     * Processes user inputs and returns the appropriate response.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"     * @param input The user input to be processed.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"     * @return A string containing the response from command execution or error message","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"        assert taskList !\u003d null : \"Task list should not be null before processing\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"            Command command \u003d Parser.parse(input, taskList);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"            String response \u003d command.execute(taskList, ui);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"            if (command.isExit()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"                PauseTransition delay \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongqqqq"},"content":"                delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongqqqq"},"content":"                delay.play();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongqqqq"},"content":"            }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongqqqq"},"content":"            return response;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongqqqq"},"content":"        } catch (FishmanException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongqqqq"},"content":"            return e.getMessage();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongqqqq"},"content":"     * Loads task from the data file and saves them if specified. This method performs its actions based on the","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongqqqq"},"content":"     * specified action parameter. \"load\" to load tasks from the data file and \"save\" to save the current tasks to","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongqqqq"},"content":"     * the data file.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongqqqq"},"content":"     * @param action A string indicating the action to be taken.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongqqqq"},"content":"     * @return A string containing the result of the operation or any error messages.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongqqqq"},"content":"    public String loadAndSaveTasks(String action) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongqqqq"},"content":"        assert action !\u003d null : \"Action should not be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongqqqq"},"content":"        try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongqqqq"},"content":"            Storage.LoadResults output \u003d storage.load();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongqqqq"},"content":"            assert output !\u003d null : \"LoadResults should not be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongqqqq"},"content":"            String errorMessage \u003d output.getErrorMessage();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongqqqq"},"content":"            switch (action) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yongqqqq"},"content":"            case \"load\":","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yongqqqq"},"content":"                taskList \u003d output.getValidTasks();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yongqqqq"},"content":"                assert taskList !\u003d null : \"Valid tasks should not be null after loading\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yongqqqq"},"content":"                return errorMessage;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yongqqqq"},"content":"            case \"save\":","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yongqqqq"},"content":"                return saveTasks(errorMessage, output);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yongqqqq"},"content":"            default:","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yongqqqq"},"content":"                return \"Invalid action specified.\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yongqqqq"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yongqqqq"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yongqqqq"},"content":"            return \"An unexpected error has occurred: \" + e.getMessage();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yongqqqq"},"content":"     * Saves the current task list to data file, handling corrupt lines if any.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yongqqqq"},"content":"     * This method checks if there are any error messages, which indicate that there are corrupted lines.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yongqqqq"},"content":"     * If there are no corrupted lines, the task list is saved as is. However, if there are corrupted lines, they","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yongqqqq"},"content":"     * are appended to the end of the file.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yongqqqq"},"content":"     * @param errorMessage A string containing an error message related to corrupted lines.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yongqqqq"},"content":"     * @param output A storage object containing the results of loading tasks from data file.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yongqqqq"},"content":"     * @return A string containing the result of the operation.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yongqqqq"},"content":"    private String saveTasks(String errorMessage, Storage.LoadResults output) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yongqqqq"},"content":"        List\u003cString\u003e corruptedLines \u003d output.getCorruptedLines();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yongqqqq"},"content":"        if (errorMessage \u003d\u003d null || errorMessage.isEmpty()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yongqqqq"},"content":"            storage.save(taskList, new ArrayList\u003c\u003e());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yongqqqq"},"content":"            return \"Successfully saved file.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yongqqqq"},"content":"        } else {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yongqqqq"},"content":"            assert corruptedLines !\u003d null : \"Corrupted lines should not be null\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yongqqqq"},"content":"            storage.save(taskList, corruptedLines);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yongqqqq"},"content":"            return \"Successfully saved file with corrupt lines.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":107}},{"path":"src/main/java/fishman/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"package fishman.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.Task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.TaskList;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"import fishman.utils.Ui;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":" * Represent the command to add a new task to the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":" * This command implements the Command interface and is for","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":" * adding a single task to the task list and returns the confirmation message","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":" * that the task has been successfully added to the user and the number of","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":" * task in the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"public class AddCommand implements Command {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"    private final Task task;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"     * Constructs a AddCommand with the specified task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"     * @param task The task object to be added to the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"     * @inheritDoc","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"     *      Adds the task to the task list and returns a confirmation message alongside the","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"     *      current number of tasks in the list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"     * @param taskList The TaskList which the new task will be added.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"     * @param ui The Ui instance to generate the confirmation message.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"     * @return The confirmation message indicating the command execution.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"    public String execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"        return ui.getAddedTaskMessage(task, taskList.size());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":41}},{"path":"src/main/java/fishman/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"package fishman.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.TaskList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":"import fishman.utils.Ui;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":" * The Command interface represents an executable command in the task operations.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":" * It defines the methods that all command classes must implement, specifying how","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":" * they should be executed or whether the program should exit.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"public interface Command {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"     * Executes the command, performing actions on the task list and user interface.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"     * @param taskList The tasks to be added.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"     * @param ui The ui instance to generate the confirmation message.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"     * @return A confirmation message indicating the command execution.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"    String execute(TaskList taskList, Ui ui);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"     * Indicator for whether the program should exit.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"     * @return true if the program should exit after executing","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"     *      this command, false otherwise","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"    default boolean isExit() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"        return false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":31}},{"path":"src/main/java/fishman/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"package fishman.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.Task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.TaskList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"import fishman.utils.Ui;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":" * Represents the command to delete a task in the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":" * This command implements the Command interface and is for","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":" * deleting a single task in the task list and returns the confirmation message","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":" * that the task has been successfully deleted to the user.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"    private final int index;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"     * Constructs a DeleteCommand with the specified task to be deleted.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"     * @param index The index of the task object in the task list to be deleted.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"     * @inheritDoc","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"     *      Deletes the task in the task list and returns a confirmation message alongside the","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"     *      current number of tasks in the list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"     * @param taskList The Task List in which the task is deleted from.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"     * @param ui The Ui instance used to generate the confirmation message.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"     * @return The confirmation message indicating the command execution.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"    public String execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"        Task taskToDelete \u003d taskList.getTask(index);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"        taskList.deleteTask(index);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"        return ui.getDeletedTaskMessage(taskToDelete, taskList.size());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":40}},{"path":"src/main/java/fishman/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"package fishman.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.TaskList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":"import fishman.utils.Ui;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":" * Represents a command to exit the program.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":" * This command implements the Command interface and exits the program when","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":" * the specified keyword is entered and returns the termination message to","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":" * the user.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"     * @inheritDoc","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"     *      Constructs a ExitCommand, which executes the exit command by returning","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"     *      the termination message to the user.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"     * @param taskList The TaskList, which is not used in this command but required by","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"     *              the interface.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"     * @param ui The Ui instance used to display the termination message.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"     * @return The termination message.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"    public String execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"        return \"Bloop bloop bloop! Back to the ocean! See you again!\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"     * @inheritDoc","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"     * @return true to indicate that the program should terminate","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"     *      after this command.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"        return true;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":41}},{"path":"src/main/java/fishman/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"package fishman.command;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"import java.util.List;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.Task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.TaskList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"import fishman.utils.Ui;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":" * Represents the command to find a task in the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":" * This command implements the Command interface and is for finding a task by searching for a keyword.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"    private final String keyword;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"     * Constructs a FindCommand with the specified keyword to be matched.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"     * @param keyword The keyword to be matched to the tasks in the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"     * @inheritDoc","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"     *      Filters the task matched based on the keyword and displays matched tasks in the list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"     * @param taskList The Task List in which the task is matched from.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"     * @param ui The Ui instance used to generate the tasks.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"     * @return The confirmation message indicating the command execution.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"    public String execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"        List\u003cTask\u003e matchedTasks \u003d taskList.getAllTasks().stream()","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"                .filter(task -\u003e task.getTaskDescription().toLowerCase()","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"                .contains(keyword.toLowerCase()))","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"                .toList();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongqqqq"},"content":"        return ui.getFindResultsMessage(matchedTasks);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"yongqqqq":44}},{"path":"src/main/java/fishman/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"package fishman.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.TaskList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":"import fishman.utils.Ui;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":" * Represents the command to display the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":" * This command implements the Command interface and is for","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":" * return the message containing the tasks currently in the task list.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"     * @inheritDoc","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"     *      Displays the tasks in the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"     * @param taskList The TaskList which the tasks will be retrieved from.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"     * @param ui The Ui object used to display the tasks in the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"     * @return The confirmation message containing the tasks currently in the task list.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"    public String execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"        return ui.getTaskListMessage(taskList);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":25}},{"path":"src/main/java/fishman/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"package fishman.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.TaskList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":"import fishman.utils.Ui;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":" * Represents the command to mark a task in the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":" * This command implements the Command interface and is for","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":" * marking a single task to the task list and returns the confirmation message","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":" * that the task has been successfully marked or unmarked to the user.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"    private final int index;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"    private final boolean isMark;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"     * Constructs a MarkCommand with the specified task and mark operation to be done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"     * @param index The index of the task object in the task list to be marked.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"     * @param isMark The indicator of the mark operation to be done.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"    public MarkCommand(int index, boolean isMark) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"        this.isMark \u003d isMark;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"     * @inheritDoc","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"     *      Marks or unmarks the specified task in the task list and returns a confirmation message.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"     * @param taskList The TaskList which the specified task will be added.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"     * @param ui The Ui object used to generate the confirmation message.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"     * @return The confirmation message indicating the command execution.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"    public String execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"        if (isMark) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"            taskList.markTaskAsDone(index);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"        } else {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"            taskList.markTaskAsNotDone(index);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongqqqq"},"content":"        return ui.getTaskStatusMessage(taskList.getTask(index));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":45}},{"path":"src/main/java/fishman/command/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"package fishman.command;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.Deadline;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.Event;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.Task;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.TaskList;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"import fishman.utils.Ui;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":" * Represent the command to update a task in the task list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":" * This command implements the Command interface and is for","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":" * updating a task in the task list and returns the confirmation message","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":" * that the task has been successfully updated to the user.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"public class UpdateCommand implements Command {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"    private final int index;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"    private final LocalDateTime newStartDateTime;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"    private final LocalDateTime newEndDateTime;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"     * Constructs a UpdateCommand with the new DateTime.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"     * @param index The index of the task object to update.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"     * @param newStartDateTime The new start date time to update.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"     * @param newEndDateTime The new end date time to update.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"    public UpdateCommand(int index, LocalDateTime newStartDateTime, LocalDateTime newEndDateTime) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"        this.newStartDateTime \u003d newStartDateTime;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"        this.newEndDateTime \u003d newEndDateTime;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"     * @inheritDoc","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"     *      Updates the task in the task list and returns a confirmation message.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"     * @param tasks The tasks to be updated.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongqqqq"},"content":"     * @param ui The ui instance to generate the confirmation message.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongqqqq"},"content":"     * @return The confirmation message indicating the command execution.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongqqqq"},"content":"    public String execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongqqqq"},"content":"        Task task \u003d tasks.getTask(index);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongqqqq"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongqqqq"},"content":"            if (newStartDateTime !\u003d null) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongqqqq"},"content":"                ((Deadline) task).setDeadlineDate(newStartDateTime);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongqqqq"},"content":"            }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongqqqq"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongqqqq"},"content":"            if (newStartDateTime !\u003d null) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongqqqq"},"content":"                ((Event) task).setEventStart(newStartDateTime);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongqqqq"},"content":"            }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongqqqq"},"content":"            if (newEndDateTime !\u003d null) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongqqqq"},"content":"                ((Event) task).setEventEnd(newEndDateTime);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongqqqq"},"content":"            }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongqqqq"},"content":"        return ui.getUpdatedTaskMessage(task);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-09-11","isFullCredit":false}],"authorContributionMap":{"yongqqqq":64}},{"path":"src/main/java/fishman/exception/FishmanException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"package fishman.exception;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":" * Represents the base exception class for Fishman bot custom exception","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"public class FishmanException extends Exception {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"    private static final String PREFIX \u003d \"Glub glub! \";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"     * Constructs a new FishmanException with no message.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"    public FishmanException() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"     * Constructs a new FishmanException with the specified message","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"     * @param message The detail message.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"    public FishmanException(String message) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"        super(PREFIX + message);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"     * The exception thrown when an invalid command is entered.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"    public static class InvalidCommandException extends FishmanException {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"        private static final String MESSAGE \u003d \"please enter a valid command such as \u0027list\u0027 or \u0027bye\u0027 :(\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"        /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"         * Constructs a new InvalidCommandException with the invalid command.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"         */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"        public InvalidCommandException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"            super(MESSAGE);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"     * The exception thrown when a command is missing arguments.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongqqqq"},"content":"    public static class MissingArgumentException extends FishmanException {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongqqqq"},"content":"        private static final String MESSAGE_DEADLINE \u003d \"Deadline command requires a description or a /by date\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongqqqq"},"content":"        private static final String MESSAGE_EVENT \u003d \"Event command requires a description or /from and /to dates\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongqqqq"},"content":"        private static final String MESSAGE_UPDATE_DEADLINE \u003d \"Update command for Deadline tasks must \"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongqqqq"},"content":"                + \"have the format: update index /by date.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongqqqq"},"content":"        private static final String MESSAGE_UPDATE_EVENT \u003d \"Update command for Event Tasks\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongqqqq"},"content":"                + \"must have the format: update index /from date /to date.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongqqqq"},"content":"        /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongqqqq"},"content":"         * Constructs a new InvalidCommandException with a message specific to the command type.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongqqqq"},"content":"         *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongqqqq"},"content":"         * @param commandType The type of command that is missing arguments.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongqqqq"},"content":"         */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongqqqq"},"content":"        public MissingArgumentException(String commandType) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongqqqq"},"content":"            super(getMessageForCommandType(commandType));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongqqqq"},"content":"        /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongqqqq"},"content":"         * The method to return the corresponding message for the command type.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongqqqq"},"content":"         *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongqqqq"},"content":"         * @param commandType The type of command that is missing arguments.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongqqqq"},"content":"         * @return The error message of the command type.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongqqqq"},"content":"         */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongqqqq"},"content":"        private static String getMessageForCommandType(String commandType) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yongqqqq"},"content":"            return switch (commandType) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yongqqqq"},"content":"                case \"deadline\" -\u003e MESSAGE_DEADLINE;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yongqqqq"},"content":"                case \"event\" -\u003e MESSAGE_EVENT;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yongqqqq"},"content":"                case \"updateDeadline\" -\u003e MESSAGE_UPDATE_DEADLINE;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yongqqqq"},"content":"                case \"updateEvent\" -\u003e MESSAGE_UPDATE_EVENT;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yongqqqq"},"content":"                default -\u003e \"Missing argument for \" + commandType + \" command.\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yongqqqq"},"content":"            };","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yongqqqq"},"content":"     * The exception thrown when a string cannot be parsed as number.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yongqqqq"},"content":"    public static class NumberFormatException extends FishmanException {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yongqqqq"},"content":"        private static final String MESSAGE \u003d \"Invalid number format: \";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yongqqqq"},"content":"        /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yongqqqq"},"content":"         * Constructs a new NumberFormatException with the invalid input.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yongqqqq"},"content":"         *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yongqqqq"},"content":"         * @param message The invalid input that could not be parsed.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yongqqqq"},"content":"         */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yongqqqq"},"content":"        public NumberFormatException(String message) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yongqqqq"},"content":"            super(MESSAGE + message);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yongqqqq"},"content":"            assert message !\u003d null \u0026\u0026 !message.isEmpty() : \"Number format exception message should \"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yongqqqq"},"content":"                    + \"not be null or empty\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yongqqqq"},"content":"     * The exception thrown when trying to perform command on an empty Task List.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yongqqqq"},"content":"    public static class EmptyListException extends FishmanException {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yongqqqq"},"content":"        private static final String MESSAGE \u003d \"The list is empty. Unable to perform operation.\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yongqqqq"},"content":"        /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yongqqqq"},"content":"         * Constructs a new EmptyListException with message.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yongqqqq"},"content":"         */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yongqqqq"},"content":"        public EmptyListException() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yongqqqq"},"content":"            super(MESSAGE);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yongqqqq"},"content":"     * The exception thrown when an index is out of bounds for a given Task List.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yongqqqq"},"content":"    public static class IndexOutOfBoundsException extends FishmanException {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yongqqqq"},"content":"        private static final String MESSAGE \u003d \"The index provided is out of bounds for the task list.\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yongqqqq"},"content":"        /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yongqqqq"},"content":"         * Constructs a new IndexOutOfBoundsException with message.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yongqqqq"},"content":"         *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yongqqqq"},"content":"         * @param index The index provided by the user that is out of bounds.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yongqqqq"},"content":"         */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yongqqqq"},"content":"        public IndexOutOfBoundsException(int index) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yongqqqq"},"content":"            super(MESSAGE + \" Index provided: \" + index);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yongqqqq"},"content":"            assert index \u003e\u003d 0 : \"Index provided should be non negative\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yongqqqq"},"content":"     *  The exception thrown when a line in the data file contains invalid information.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yongqqqq"},"content":"    public static class InvalidArgumentsException extends FishmanException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yongqqqq"},"content":"        private static final String MESSAGE_PREFIX \u003d \"Error: \";","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yongqqqq"},"content":"        private static final String MESSAGE_SUFFIX \u003d \" Skipping.....\\n\";","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yongqqqq"},"content":"        /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yongqqqq"},"content":"         * Constructs a new InvalidArgumentsException with a message based on the type of error.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yongqqqq"},"content":"         *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yongqqqq"},"content":"         * @param errorType The type of error (e.g., \"INVALID_EVENT\", \"INVALID_DEADLINE\").","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yongqqqq"},"content":"         * @param line      The line containing the invalid information.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yongqqqq"},"content":"         */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yongqqqq"},"content":"        public InvalidArgumentsException(ErrorType errorType, String line) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yongqqqq"},"content":"            super(MESSAGE_PREFIX + getErrorMessage(errorType, line) + MESSAGE_SUFFIX);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"yongqqqq"},"content":"            assert line !\u003d null \u0026\u0026 !line.isEmpty() : \"Line should not be null or empty\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yongqqqq"},"content":"        private static String getErrorMessage(ErrorType errorType, String line) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yongqqqq"},"content":"            switch (errorType) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yongqqqq"},"content":"            case INVALID_TODO:","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"yongqqqq"},"content":"                return \"Invalid ToDo arguments in line: \" + line;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yongqqqq"},"content":"            case INVALID_DEADLINE:","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"yongqqqq"},"content":"                return \"Invalid Deadline arguments in line: \" + line;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yongqqqq"},"content":"            case INVALID_EVENT:","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yongqqqq"},"content":"                return \"Invalid Event arguments in line: \" + line;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"yongqqqq"},"content":"            case INVALID_TASK_TYPE:","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"yongqqqq"},"content":"                return \"Unknown task type in line: \" + line;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"yongqqqq"},"content":"            case INVALID_IS_DONE:","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"yongqqqq"},"content":"                return \"Invalid isDone value (must be \u0027true\u0027 or \u0027false\u0027) in line: \" + line;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"yongqqqq"},"content":"            case INVALID_ARGUMENTS:","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"yongqqqq"},"content":"                return \"Missing arguments in line: \" + line;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"yongqqqq"},"content":"            case INVALID_DATE_FORMAT:","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"yongqqqq"},"content":"                return \"Invalid date format in line: \" + line;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"yongqqqq"},"content":"            default:","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"yongqqqq"},"content":"                return \"Unknown error in line: \" + line;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"yongqqqq"},"content":"            }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"yongqqqq"},"content":"        /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"yongqqqq"},"content":"         * The possible error types when loading the data file.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"yongqqqq"},"content":"         */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"yongqqqq"},"content":"        public enum ErrorType {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"yongqqqq"},"content":"            INVALID_TODO,","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"yongqqqq"},"content":"            INVALID_DEADLINE,","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"yongqqqq"},"content":"            INVALID_EVENT,","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"yongqqqq"},"content":"            INVALID_TASK_TYPE,","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"yongqqqq"},"content":"            INVALID_IS_DONE,","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"yongqqqq"},"content":"            INVALID_ARGUMENTS,","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"yongqqqq"},"content":"            INVALID_DATE_FORMAT","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"yongqqqq"},"content":"     * The exception thrown when the DateTime format provided is wrong.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"yongqqqq"},"content":"    public static class InvalidDateFormatException extends FishmanException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"yongqqqq"},"content":"        private static final String MESSAGE \u003d \"Invalid Date format here: \";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"yongqqqq"},"content":"        /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"yongqqqq"},"content":"         * Constructs a new InvalidDateFormatException with message.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"yongqqqq"},"content":"         *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"yongqqqq"},"content":"         * @param dateTimeStr The datetime argument that is in the wrong format.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"yongqqqq"},"content":"         */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"yongqqqq"},"content":"        public InvalidDateFormatException(String dateTimeStr) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"yongqqqq"},"content":"            super(MESSAGE + dateTimeStr);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"yongqqqq"},"content":"            assert dateTimeStr !\u003d null \u0026\u0026 !dateTimeStr.isEmpty() : \"DateTime string should not be null or empty\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"yongqqqq"},"content":"     * The exception thrown when the task to be updated is of the wrong type.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"yongqqqq"},"content":"    public static class InvalidUpdateTypeException extends FishmanException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"yongqqqq"},"content":"        private static final String MESSAGE \u003d \"Invalid task type to be updated.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"yongqqqq"},"content":"        /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"yongqqqq"},"content":"         * Constructs a new InvalidUpdateTypeException with message.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"yongqqqq"},"content":"         */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"yongqqqq"},"content":"        public InvalidUpdateTypeException() {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"yongqqqq"},"content":"            super(MESSAGE);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":212}},{"path":"src/main/java/fishman/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"package fishman.gui;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":" * Represents a chat message in the user interface.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"     * Constructs a DialogBox instance.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"     * @param message The text to be displayed.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"     * @param img The image to be displayed which determines the user.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"    private DialogBox(String message, Image img) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"        try {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongqqqq"},"content":"        dialog.setText(message);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongqqqq"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongqqqq"},"content":"        double radius \u003d Math.min(displayPicture.getFitWidth(), displayPicture.getFitHeight()) / 2;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongqqqq"},"content":"        Circle clip \u003d new Circle(radius, radius, radius);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongqqqq"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongqqqq"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongqqqq"},"content":"    private void flip() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongqqqq"},"content":"        ObservableList\u003cNode\u003e childNodes \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongqqqq"},"content":"        Collections.reverse(childNodes);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongqqqq"},"content":"        getChildren().setAll(childNodes);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongqqqq"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongqqqq"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongqqqq"},"content":"     * Represents a user\u0027s chat message.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongqqqq"},"content":"     * @param message The message sent by the user.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongqqqq"},"content":"     * @param userImage The image which represents the user.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongqqqq"},"content":"     * @return A DialogBox instance with the user\u0027s image.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yongqqqq"},"content":"    public static DialogBox getUserDialog(String message, Image userImage) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yongqqqq"},"content":"        return new DialogBox(message, userImage);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yongqqqq"},"content":"     * Represents the chatbots chat message.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yongqqqq"},"content":"     * @param message The message sent by the chatbot.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yongqqqq"},"content":"     * @param fishmanImage The image which represents the chatbot.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yongqqqq"},"content":"     * @return A DialogBox instance with the chatbot image.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yongqqqq"},"content":"    public static DialogBox getFishmanDialog(String message, Image fishmanImage) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yongqqqq"},"content":"        var db \u003d new DialogBox(message, fishmanImage);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yongqqqq"},"content":"        db.flip();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yongqqqq"},"content":"        return db;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"yongqqqq":84}},{"path":"src/main/java/fishman/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"package fishman.gui;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":" * The launcher class serves as the entry point for JavaFx. It contains the method which launches the JavaFx application","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":" * by invoking the launch method.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"public class Launcher {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"     * The main method which serves as the entry point for the JavaFx application.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"     * @param args Command-line arguments passed to the application.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"yongqqqq":17}},{"path":"src/main/java/fishman/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"package fishman.gui;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"import fishman.Fishman;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":" * Represents the graphical user interface that is used for user interactions.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"public class Main extends Application {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"    private final Fishman fishman \u003d new Fishman();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"     * The main entry point for the application. This method is called when the application is launched.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"     * @param stage The primary stage of the application.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"        try {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"            stage.setTitle(\"Fishman\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setFishman(fishman);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"            stage.show();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"     * Stops the application when the command is given. It also saves data before the application exits.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongqqqq"},"content":"    public void stop() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongqqqq"},"content":"        fishman.loadAndSaveTasks(\"save\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"yongqqqq":47}},{"path":"src/main/java/fishman/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"package fishman.gui;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"import fishman.Fishman;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":" * Represents the MainWindow to be displayed to the user.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"public class MainWindow {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/koi.jpg\"));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"    private final Image fishmanImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/fish.jpg\"));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"    private Fishman fishman;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"     * Initializes the window.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"        displayWelcomeMessage();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"     * Sets the Fishman instance and loads tasks from the save file. Any errors that occur during load are displayed","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"     * in the DialogBox.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"     * @param fishman The Fishman instance to be used.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongqqqq"},"content":"    public void setFishman(Fishman fishman) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongqqqq"},"content":"        this.fishman \u003d fishman;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongqqqq"},"content":"        String loadingErrorMessage \u003d fishman.loadAndSaveTasks(\"load\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongqqqq"},"content":"        if (loadingErrorMessage !\u003d null) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongqqqq"},"content":"            displayLoadErrors(loadingErrorMessage);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongqqqq"},"content":"     * Handles the user input by getting the response from Fishman and displaying the messages in the DialogBox. The","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongqqqq"},"content":"     * user input is cleared afterward.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongqqqq"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongqqqq"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongqqqq"},"content":"        String userInputText \u003d userInput.getText();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongqqqq"},"content":"        String fishmanResponse \u003d fishman.getResponse(userInputText);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongqqqq"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongqqqq"},"content":"                DialogBox.getUserDialog(userInputText, userImage),","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongqqqq"},"content":"                DialogBox.getFishmanDialog(fishmanResponse, fishmanImage)","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongqqqq"},"content":"        );","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongqqqq"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongqqqq"},"content":"     * Displays the welcome message in the DialogBox on launch.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yongqqqq"},"content":"    private void displayWelcomeMessage() {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yongqqqq"},"content":"        String welcomeMessage \u003d \"Hello! I\u0027m Fishman\\nWhat can I do for you?\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yongqqqq"},"content":"        dialogContainer.getChildren().add(DialogBox.getFishmanDialog(welcomeMessage, fishmanImage));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yongqqqq"},"content":"     * Displays any error message from loading file data in the DialogBox on launch.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yongqqqq"},"content":"    private void displayLoadErrors(String errorMessage) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yongqqqq"},"content":"        dialogContainer.getChildren().add(DialogBox.getFishmanDialog(errorMessage, fishmanImage));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"yongqqqq":82}},{"path":"src/main/java/fishman/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"package fishman.task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":" * Represents a Deadline task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":" * This class extends the Task class, adding a deadline attribute to it.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"    protected LocalDateTime deadlineDate;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"     * Constructs a new Deadline task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"     * @param deadlineDate The deadline in which the task should be completed by.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"    public Deadline(String taskDescription, boolean isTaskDone, LocalDateTime deadlineDate) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"        super(taskDescription, isTaskDone);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"        assert taskDescription !\u003d null : \"Description should not be null\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"        assert deadlineDate !\u003d null : \"Deadline \u0027by\u0027 date should not be null\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"    public LocalDateTime getDeadlineDate() {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"        return deadlineDate;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"        return \"D\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"    public void setDeadlineDate(LocalDateTime newDeadline) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"        this.deadlineDate \u003d newDeadline;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, HH:mm\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongqqqq"},"content":"        return super.toString() + \" (by: \" + deadlineDate.format(formatter) + \")\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":44}},{"path":"src/main/java/fishman/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"package fishman.task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":" * Represents an event task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":" * This class extends the Task class, adding the from and to attributes to it.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"    protected LocalDateTime eventStart;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"    protected LocalDateTime eventEnd;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"     * Constructs a new Event task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"     * @param eventStart The start time of the event.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"     * @param eventEnd The end time of the event.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"    public Event(String taskDescription, boolean isTaskDone, LocalDateTime eventStart, LocalDateTime eventEnd) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"        super(taskDescription, isTaskDone);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"        assert taskDescription !\u003d null : \"Description should not be null\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"        assert eventStart !\u003d null : \"Event \u0027From\u0027 date should not be null\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"        assert eventEnd !\u003d null : \"Event \u0027To\u0027 date should not be null\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"        assert eventStart.isBefore(eventEnd) : \"Event \u0027From\u0027 date should be before \u0027To\u0027 date\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"        this.eventStart \u003d eventStart;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"        this.eventEnd \u003d eventEnd;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"    public LocalDateTime getEventStart() {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"        return eventStart;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"    public LocalDateTime getEventEnd() {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"        return eventEnd;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"        return \"E\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongqqqq"},"content":"    public void setEventStart(LocalDateTime startTime) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongqqqq"},"content":"        this.eventStart \u003d startTime;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongqqqq"},"content":"    public void setEventEnd(LocalDateTime endTime) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongqqqq"},"content":"        this.eventEnd \u003d endTime;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongqqqq"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongqqqq"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, HH:mm\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongqqqq"},"content":"        return super.toString() + \" (from: \" + eventStart.format(formatter) + \" to: \"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongqqqq"},"content":"                + eventEnd.format(formatter) + \")\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":55}},{"path":"src/main/java/fishman/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"package fishman.task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":" * Represents a task for the fishman bot.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":" * This class contains the details of a task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"    protected String taskDescription;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"    protected boolean isTaskDone;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"     * Constructs a new Task object with the given detail and completion indicator.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"     * @param taskDescription The details of the task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"    public Task(String taskDescription, boolean isTaskDone) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"        this.isTaskDone \u003d isTaskDone;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"     * Determines the completion status of the task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"     * @return true or false depending on the task completion .","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"    public boolean getTaskStatus() {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"        return isTaskDone;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"        return taskDescription;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"     * This method sets the \u0027isDone\u0027 status of the task to true.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongqqqq"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongqqqq"},"content":"        this.isTaskDone \u003d true;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongqqqq"},"content":"     * Marks the task as not done","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongqqqq"},"content":"     * This method sets the \u0027isDone\u0027 status of the task to false.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongqqqq"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongqqqq"},"content":"        this.isTaskDone \u003d false;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongqqqq"},"content":"    public abstract String getTaskType();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongqqqq"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongqqqq"},"content":"        return \"[\" + getTaskType() + \"][\" + (isTaskDone ? \"X\" : \" \") + \"] \" + taskDescription;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":62}},{"path":"src/main/java/fishman/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"package fishman.task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":" * The list of tasks for fishman bot.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":" * This class provides the methods to add, retrieve, and get the","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":" * size of the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"    /** Constructs a new TaskList with an empty list of tasks. */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"    public TaskList() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"     * @param newTask The task.Task object to be added to the list.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"        assert newTask !\u003d null : \"Task to be added should not be null\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"        tasks.add(newTask);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"     * Retrieves a task object from the task list at the specified index.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"     * @param taskIndex The index of the task to retrieve.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"     * @return The Task object found at the specified index.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"        assert taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size() : \"Task index to be retrieved should be of valid range\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"        return tasks.get(taskIndex);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"     * Marks a task at the specified index in the task list as done.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongqqqq"},"content":"     * @param taskIndex The index of the task to retrieve.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongqqqq"},"content":"    public void markTaskAsDone(int taskIndex) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongqqqq"},"content":"        assert taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size() : \"Task index to be marked should be of valid range\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongqqqq"},"content":"        tasks.get(taskIndex).markAsDone();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongqqqq"},"content":"     * Marks a task at the specified index in the task list as not done.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongqqqq"},"content":"     * @param taskIndex The index of the task to retrieve.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongqqqq"},"content":"    public void markTaskAsNotDone(int taskIndex) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongqqqq"},"content":"        assert taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size() : \"Task index to be unmarked should be of valid range\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongqqqq"},"content":"        tasks.get(taskIndex).markAsNotDone();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongqqqq"},"content":"     * Deletes a task at the specified index in the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongqqqq"},"content":"     * @param taskIndex The index of the task to delete.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongqqqq"},"content":"    public void deleteTask(int taskIndex) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongqqqq"},"content":"        assert taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size() : \"Task index to be deleted should be of valid range\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongqqqq"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yongqqqq"},"content":"     * Returns the number of tasks currently in the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yongqqqq"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yongqqqq"},"content":"    public int size() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yongqqqq"},"content":"        return tasks.size();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yongqqqq"},"content":"    public boolean isTaskListEmpty() {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yongqqqq"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yongqqqq"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yongqqqq"},"content":"        return tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yongqqqq"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yongqqqq"},"content":"        return tasks.iterator();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":88}},{"path":"src/main/java/fishman/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"package fishman.task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":" * Represents the to-do task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":" * This class extends the Task class, without adding any additional attributes.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"     * Constructs a new to-do task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"    public ToDo(String taskDescription, boolean isTaskDone) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"        super(taskDescription, isTaskDone);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"        assert taskDescription !\u003d null : \"Description should not be null\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"        return \"T\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":22}},{"path":"src/main/java/fishman/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"package fishman.utils;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"import fishman.command.AddCommand;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"import fishman.command.Command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"import fishman.command.DeleteCommand;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"import fishman.command.ExitCommand;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"import fishman.command.FindCommand;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"import fishman.command.ListCommand;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"import fishman.command.MarkCommand;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"import fishman.command.UpdateCommand;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"import fishman.exception.FishmanException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.Deadline;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.Event;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.Task;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.TaskList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.ToDo;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":" * The Parser class is used to interpret user input and create the appropriate","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":" * Command objects.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"public class Parser {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"     * Parses the user input and returns the appropriate Command object.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"     * This method interprets the user input, splitting the input to determine the command","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"     * and respective index and creates the appropriate","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"     * Command object.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"     * @param userInput The string input by the user.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"     * @return A Command object with respect to the user\u0027s input.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"     * @throws FishmanException.InvalidCommandException if input does not match any command.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"     * @throws FishmanException.MissingArgumentException if command is missing arguments.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"    public static Command parse(String userInput, TaskList taskList) throws FishmanException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongqqqq"},"content":"        assert taskList !\u003d null : \"TaskList should not be null\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongqqqq"},"content":"        if (userInput \u003d\u003d null || userInput.trim().isEmpty()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongqqqq"},"content":"            throw new FishmanException.InvalidCommandException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongqqqq"},"content":"        String[] inputs \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongqqqq"},"content":"        String commandPhrase \u003d inputs[0].toLowerCase();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongqqqq"},"content":"        if (inputs.length \u003d\u003d 1 \u0026\u0026 commandPhrase.matches(\"mark|unmark|todo|deadline|event|delete|find\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongqqqq"},"content":"            throw new FishmanException.MissingArgumentException(commandPhrase);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongqqqq"},"content":"        switch (commandPhrase) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongqqqq"},"content":"        case \"bye\":","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongqqqq"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongqqqq"},"content":"        case \"list\":","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongqqqq"},"content":"            checkIfTaskListEmpty(taskList);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongqqqq"},"content":"            return new ListCommand();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongqqqq"},"content":"        case \"mark\":","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongqqqq"},"content":"            return getMarkCommand(taskList, inputs, true);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongqqqq"},"content":"        case \"unmark\":","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongqqqq"},"content":"            return getMarkCommand(taskList, inputs, false);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongqqqq"},"content":"        case \"todo\":","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongqqqq"},"content":"            return new AddCommand(new ToDo(inputs[1], false));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongqqqq"},"content":"        case \"deadline\":","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yongqqqq"},"content":"            return getDeadlineCommand(inputs);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yongqqqq"},"content":"        case \"event\":","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yongqqqq"},"content":"            return getEventCommand(inputs);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yongqqqq"},"content":"        case \"delete\":","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yongqqqq"},"content":"            return getDeleteCommand(taskList, inputs);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yongqqqq"},"content":"        case \"find\":","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yongqqqq"},"content":"            return new FindCommand(inputs[1]);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yongqqqq"},"content":"        case \"update\":","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yongqqqq"},"content":"            return getUpdateCommand(inputs, taskList);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yongqqqq"},"content":"        default:","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yongqqqq"},"content":"            throw new FishmanException.InvalidCommandException();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yongqqqq"},"content":"     * Creates a MarkCommand based on user\u0027s input to mark or unmark a task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yongqqqq"},"content":"     * @param taskList The TaskList containing the tasks.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yongqqqq"},"content":"     * @param inputs The user input containing the command and task index.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yongqqqq"},"content":"     * @param isMark A boolean indicating whether to mark or unmark the task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yongqqqq"},"content":"     * @return A MarkCommand object for the specified task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yongqqqq"},"content":"     * @throws FishmanException if the task list is empty or the task index is invalid.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yongqqqq"},"content":"    private static MarkCommand getMarkCommand(TaskList taskList, String[] inputs, boolean isMark)","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yongqqqq"},"content":"            throws FishmanException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yongqqqq"},"content":"        checkIfTaskListEmpty(taskList);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yongqqqq"},"content":"        int taskIndex \u003d parseTaskIndex(inputs[1], taskList.size());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yongqqqq"},"content":"        return new MarkCommand(taskIndex, isMark);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yongqqqq"},"content":"     * Creates an AddCommand for a Deadline task based on user\u0027s input.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yongqqqq"},"content":"     * @param inputs The user input containing the command and task details.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yongqqqq"},"content":"     * @return An AddCommand object for the Deadline task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yongqqqq"},"content":"     * @throws FishmanException if the command is missing arguments.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yongqqqq"},"content":"    private static AddCommand getDeadlineCommand(String[] inputs) throws FishmanException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yongqqqq"},"content":"        if (!inputs[1].contains(\"/by\")) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yongqqqq"},"content":"            throw new FishmanException.MissingArgumentException(\"deadline\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yongqqqq"},"content":"        String[] deadlineString \u003d inputs[1].split(\"/by\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yongqqqq"},"content":"        LocalDateTime deadlineDate \u003d parseDateTime(deadlineString[1].trim());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yongqqqq"},"content":"        return new AddCommand(new Deadline(deadlineString[0].trim(), false, deadlineDate));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yongqqqq"},"content":"     * Creates an AddCommand for an Event task based on user\u0027s input.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yongqqqq"},"content":"     * @param inputs The user input containing the command and task details.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yongqqqq"},"content":"     * @return An AddCommand object for the Event task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yongqqqq"},"content":"     * @throws FishmanException if the command is missing arguments.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yongqqqq"},"content":"    private static AddCommand getEventCommand(String[] inputs) throws FishmanException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yongqqqq"},"content":"        if (!inputs[1].contains(\"/from\") || !inputs[1].contains(\"/to\")) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yongqqqq"},"content":"            throw new FishmanException.MissingArgumentException(\"event\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yongqqqq"},"content":"        String[] eventString \u003d inputs[1].split(\"/from|/to\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yongqqqq"},"content":"        LocalDateTime eventStart \u003d parseDateTime(eventString[1].trim());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yongqqqq"},"content":"        LocalDateTime eventEnd \u003d parseDateTime(eventString[2].trim());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yongqqqq"},"content":"        return new AddCommand(new Event(eventString[0].trim(), false, eventStart, eventEnd));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yongqqqq"},"content":"     * Creates a DeleteCommand based on user\u0027s input to delete a task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yongqqqq"},"content":"     * @param taskList The Task List containing the current tasks.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yongqqqq"},"content":"     * @param inputs The user input containing the command and task index.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yongqqqq"},"content":"     * @return A DeleteCommand object for the specified task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yongqqqq"},"content":"     * @throws FishmanException if the task index is invalid.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yongqqqq"},"content":"    private static DeleteCommand getDeleteCommand(TaskList taskList, String[] inputs) throws FishmanException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yongqqqq"},"content":"        int deleteIndex \u003d parseTaskIndex(inputs[1], taskList.size());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yongqqqq"},"content":"        return new DeleteCommand(deleteIndex);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yongqqqq"},"content":"     * Checks if the task list is empty and throws an exception if it is empty.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yongqqqq"},"content":"     * @param taskList The TaskList to check.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"yongqqqq"},"content":"     * @throws FishmanException.EmptyListException if the task list is empty.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"yongqqqq"},"content":"    private static void checkIfTaskListEmpty(TaskList taskList) throws FishmanException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yongqqqq"},"content":"        if (taskList.isTaskListEmpty()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yongqqqq"},"content":"            throw new FishmanException.EmptyListException();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"yongqqqq"},"content":"     * Parses the task index from user\u0027s input and validates it.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"yongqqqq"},"content":"     * @param indexStr The string representation of the task index.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"yongqqqq"},"content":"     * @param size The size of the task list.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"yongqqqq"},"content":"     * @return The index of the task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"yongqqqq"},"content":"     * @throws FishmanException.NumberFormatException if the index is not a valid number.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"yongqqqq"},"content":"     * @throws FishmanException.IndexOutOfBoundsException if the index is out of bounds.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"yongqqqq"},"content":"    private static int parseTaskIndex(String indexStr, int size) throws FishmanException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"yongqqqq"},"content":"        try {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"yongqqqq"},"content":"            int index \u003d Integer.parseInt(indexStr) - 1;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"yongqqqq"},"content":"            if (index \u003c 0 || index \u003e\u003d size) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"yongqqqq"},"content":"                throw new FishmanException.IndexOutOfBoundsException(index + 1);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"yongqqqq"},"content":"            }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"yongqqqq"},"content":"            return index;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"yongqqqq"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"yongqqqq"},"content":"            throw new FishmanException.NumberFormatException(e.getMessage());","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"yongqqqq"},"content":"     * Creates a UpdateCommand based on the user\u0027s input to update a task.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"yongqqqq"},"content":"     * @param inputs An array of strings containing the user input.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"yongqqqq"},"content":"     * @param tasks The Task list containing all tasks.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"yongqqqq"},"content":"     * @return A UpdateCommand object for the specified task.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"yongqqqq"},"content":"     * @throws FishmanException.InvalidUpdateTypeException If the task type cannot be updated.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"yongqqqq"},"content":"    private static UpdateCommand getUpdateCommand(String[] inputs, TaskList tasks) throws FishmanException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"yongqqqq"},"content":"        validateUpdateInput(inputs);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"yongqqqq"},"content":"        int updateIndex \u003d parseUpdateIndex(inputs[1]);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"yongqqqq"},"content":"        Task taskToUpdate \u003d tasks.getTask(updateIndex);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"yongqqqq"},"content":"        String inputArgs \u003d inputs[1].substring(inputs[1].indexOf(\u0027 \u0027) + 1).trim();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"yongqqqq"},"content":"        LocalDateTime newDateTimeStart;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"yongqqqq"},"content":"        LocalDateTime newDateTimeEnd \u003d null;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"yongqqqq"},"content":"        if (taskToUpdate instanceof Deadline) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"yongqqqq"},"content":"            newDateTimeStart \u003d parseDeadlineInput(inputArgs);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"yongqqqq"},"content":"        } else if (taskToUpdate instanceof Event) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"yongqqqq"},"content":"            LocalDateTime[] eventDates \u003d parseEventInput(inputArgs);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"yongqqqq"},"content":"            newDateTimeStart \u003d eventDates[0];","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"yongqqqq"},"content":"            newDateTimeEnd \u003d eventDates[1];","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"yongqqqq"},"content":"        } else {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"yongqqqq"},"content":"            throw new FishmanException.InvalidUpdateTypeException();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"yongqqqq"},"content":"        return new UpdateCommand(updateIndex, newDateTimeStart, newDateTimeEnd);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"yongqqqq"},"content":"     * Parses the input arguments for a deadline task and returns the corresponding LocalDateTime","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"yongqqqq"},"content":"     * @param inputArgs The input containing the deadline information to be updated.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"yongqqqq"},"content":"     * @return A LocalDateTime object representing deadline date.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"yongqqqq"},"content":"     * @throws FishmanException.MissingArgumentException If the input is not of the correct format.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"yongqqqq"},"content":"    private static LocalDateTime parseDeadlineInput(String inputArgs) throws FishmanException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"yongqqqq"},"content":"        if (!inputArgs.matches(\"^/by\\\\s+.+$\")) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"yongqqqq"},"content":"            throw new FishmanException.MissingArgumentException(\"updateDeadline\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"yongqqqq"},"content":"        String[] updateDetails \u003d inputArgs.split(\"/by\", 2);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"yongqqqq"},"content":"        return parseDateTime(updateDetails[1].trim());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"yongqqqq"},"content":"     * Parses the input arguments for an event task and returns the corresponding start and end LocalDateTime.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"yongqqqq"},"content":"     * @param inputArgs The input containing the event information.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"yongqqqq"},"content":"     * @return An array of LocalDateTime object, containing the start and end time.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"yongqqqq"},"content":"     * @throws FishmanException.MissingArgumentException If the input is not of the correct format.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"yongqqqq"},"content":"    private static LocalDateTime[] parseEventInput(String inputArgs) throws FishmanException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"yongqqqq"},"content":"        if (!inputArgs.matches(\"^/from\\\\s+.+\\\\s+/to\\\\s+.+$\")) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"yongqqqq"},"content":"            throw new FishmanException.MissingArgumentException(\"updateEvent\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"yongqqqq"},"content":"        String[] updateDetails \u003d inputArgs.split(\"\\\\s*/from\\\\s*|\\\\s*/to\\\\s*\", 3);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"yongqqqq"},"content":"        LocalDateTime newDateTimeStart \u003d parseDateTime(updateDetails[1].trim());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"yongqqqq"},"content":"        LocalDateTime newDateTimeEnd \u003d parseDateTime(updateDetails[2].trim());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"yongqqqq"},"content":"        return new LocalDateTime[]{newDateTimeStart, newDateTimeEnd};","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"yongqqqq"},"content":"     * Validates the update command\u0027s input to check if the necessary arguments are present.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"yongqqqq"},"content":"     * @param inputs The input argument to validate.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"yongqqqq"},"content":"     * @throws FishmanException.MissingArgumentException If the input does not contain enough arguments.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"yongqqqq"},"content":"    private static void validateUpdateInput(String[] inputs) throws FishmanException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"yongqqqq"},"content":"        if (inputs.length \u003c 2) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"yongqqqq"},"content":"            throw new FishmanException.MissingArgumentException(\"update\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"yongqqqq"},"content":"     * Parses the update index from the input and returns as zero indexed.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"yongqqqq"},"content":"     * @param input The input containing a number representing the task index.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"yongqqqq"},"content":"     * @return The zero-based index of the task to update.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"yongqqqq"},"content":"     * @throws FishmanException.NumberFormatException If the input is not integer.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"yongqqqq"},"content":"    private static int parseUpdateIndex(String input) throws FishmanException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"yongqqqq"},"content":"        try {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"yongqqqq"},"content":"            return Integer.parseInt(input.split(\" \")[0].trim()) - 1;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"yongqqqq"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"yongqqqq"},"content":"            throw new FishmanException.NumberFormatException(e.getMessage());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"yongqqqq"},"content":"     * Parses a date-time string into a LocalDateTime object using the predefined format.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"yongqqqq"},"content":"     * @param dateTimeStr The date time string to parse.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"yongqqqq"},"content":"     * @return The parsed LocalDateTime object.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"yongqqqq"},"content":"     * @throws FishmanException.InvalidDateFormatException if the date-time string is not in the expected format.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"yongqqqq"},"content":"    private static LocalDateTime parseDateTime(String dateTimeStr) throws FishmanException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"yongqqqq"},"content":"        assert dateTimeStr !\u003d null : \"DateTime string should not be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"yongqqqq"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"yongqqqq"},"content":"            return LocalDateTime.parse(dateTimeStr, INPUT_FORMATTER);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"yongqqqq"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"yongqqqq"},"content":"            throw new FishmanException.InvalidDateFormatException(dateTimeStr);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":286}},{"path":"src/main/java/fishman/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"package fishman.utils;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"import java.util.List;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"import fishman.exception.FishmanException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"import fishman.exception.FishmanException.InvalidArgumentsException.ErrorType;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.Deadline;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.Event;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.Task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.TaskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.ToDo;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":" * The storage class is used to handle the storage of tasks to and from a save file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"public class Storage {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"    private final Path filePath;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"    private List\u003cString\u003e errorMessages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"     * Constructs a new Storage object with the provided file path and creates the file if it does not exist.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"     * @param filePath The path of the save file used to store tasks.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"        assert filePath !\u003d null : \"File path should not be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"        this.filePath \u003d Paths.get(filePath);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"        createFileIfDoesNotExist();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongqqqq"},"content":"     * Creates the ave file and its parent directories if they do not exist.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongqqqq"},"content":"     * It handles any IOException that occurs during the file creation process.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongqqqq"},"content":"    private void createFileIfDoesNotExist() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongqqqq"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongqqqq"},"content":"            Files.createDirectories(filePath.getParent());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongqqqq"},"content":"            if (Files.notExists(filePath)) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongqqqq"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongqqqq"},"content":"                assert Files.exists(filePath) : \"File should exist after attempts to create it\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongqqqq"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongqqqq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongqqqq"},"content":"            System.out.println(\"Bloop bloop, Error creating file: \" + e.getMessage());","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongqqqq"},"content":"     * Saves the list of tasks to the data file as specified by the filepath. The tasks are converted to","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongqqqq"},"content":"     * CSV string format before being written to the file. If there are error lines, they","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongqqqq"},"content":"     * are preserved, and the valid tasks are written to the file.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongqqqq"},"content":"     * @param validTasks The list of valid tasks to be written to the save file.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongqqqq"},"content":"     * @param errorLines A list of error lines to be preserved in the file.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongqqqq"},"content":"     * @throws RuntimeException If an error occurs while writing to the file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yongqqqq"},"content":"    public void save(TaskList validTasks, List\u003cString\u003e errorLines) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yongqqqq"},"content":"        assert validTasks !\u003d null : \"Valid tasks should not be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yongqqqq"},"content":"        assert filePath !\u003d null : \"File path should not be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yongqqqq"},"content":"        try (BufferedWriter writer \u003d Files.newBufferedWriter(filePath)) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yongqqqq"},"content":"            if (errorLines \u003d\u003d null || errorLines.isEmpty()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yongqqqq"},"content":"                saveValidTasks(validTasks, writer);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yongqqqq"},"content":"            } else {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yongqqqq"},"content":"                saveAllLinesWithErrors(validTasks, errorLines, writer);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yongqqqq"},"content":"            }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yongqqqq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yongqqqq"},"content":"            throw new RuntimeException(\"Bloop bloop Error saving tasks to file: \" + e.getMessage(), e);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yongqqqq"},"content":"    private void saveValidTasks(TaskList validTasks, BufferedWriter writer) throws IOException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yongqqqq"},"content":"        for (Task task : validTasks) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yongqqqq"},"content":"            writer.write(toCsv(task));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yongqqqq"},"content":"            writer.newLine();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yongqqqq"},"content":"    private void saveAllLinesWithErrors(TaskList validTasks,","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yongqqqq"},"content":"                                        List\u003cString\u003e errorLines, BufferedWriter writer) throws IOException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yongqqqq"},"content":"        saveValidTasks(validTasks, writer);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yongqqqq"},"content":"        for (String errorLine : errorLines) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yongqqqq"},"content":"            writer.write(errorLine);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yongqqqq"},"content":"            writer.newLine();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yongqqqq"},"content":"     * Converts a Task object to a CSV string representation, with \"|\" as the delimiter.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yongqqqq"},"content":"     * @param task The task to be converted to CSV format.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yongqqqq"},"content":"     * @return A string representing the task in CSV format.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yongqqqq"},"content":"    private String toCsv(Task task) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yongqqqq"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yongqqqq"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yongqqqq"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yongqqqq"},"content":"            sb.append(\"T\").append(task.getTaskStatus() ? \"|true\" : \"|false\").append(\"|\")","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yongqqqq"},"content":"                    .append(task.getTaskDescription());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yongqqqq"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yongqqqq"},"content":"            sb.append(\"D\").append(task.getTaskStatus() ? \"|true\" : \"|false\").append(\"|\")","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yongqqqq"},"content":"                    .append(task.getTaskDescription())","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yongqqqq"},"content":"                            .append(\"|\")","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yongqqqq"},"content":"                            .append(((Deadline) task).getDeadlineDate().format(DATE_TIME_FORMATTER));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yongqqqq"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yongqqqq"},"content":"            sb.append(\"E\").append(task.getTaskStatus() ? \"|true\" : \"|false\").append(\"|\")","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yongqqqq"},"content":"                            .append(task.getTaskDescription())","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yongqqqq"},"content":"                            .append(\"|\")","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yongqqqq"},"content":"                            .append(((Event) task).getEventStart().format(DATE_TIME_FORMATTER)).append(\"|\")","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yongqqqq"},"content":"                            .append(((Event) task).getEventEnd().format(DATE_TIME_FORMATTER));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yongqqqq"},"content":"        return sb.toString();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yongqqqq"},"content":"     * Loads the tasks from the file specified by the filepath. Each line is read and parsed into the","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yongqqqq"},"content":"     * corresponding Task object. If any corrupted lines are detected during parsing, the invalid lines are skipped,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yongqqqq"},"content":"     * and the error messages are collected. Returns a LoadResult Object with valid tasks, corrupted lines","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yongqqqq"},"content":"     * and any error messages.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yongqqqq"},"content":"     * @return A LoadResults object containing all valid tasks, corrupted lines, and any error messages.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yongqqqq"},"content":"     * @throws RuntimeException If any other errors occurs while reading the file.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yongqqqq"},"content":"    public LoadResults load() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yongqqqq"},"content":"        assert filePath !\u003d null : \"File path should not be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yongqqqq"},"content":"        TaskList validTasks \u003d new TaskList();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yongqqqq"},"content":"        List\u003cString\u003e corruptedLines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"yongqqqq"},"content":"        errorMessages.clear();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yongqqqq"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yongqqqq"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(filePath);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yongqqqq"},"content":"            for (String line : lines) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"yongqqqq"},"content":"                try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yongqqqq"},"content":"                    processLine(line, validTasks);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"yongqqqq"},"content":"                } catch (FishmanException e) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yongqqqq"},"content":"                    errorMessages.add(e.getMessage());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yongqqqq"},"content":"                    corruptedLines.add(line);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"yongqqqq"},"content":"                }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"yongqqqq"},"content":"            }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"yongqqqq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"yongqqqq"},"content":"            throw new RuntimeException(\"Error reading file: \" + e.getMessage(), e);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"yongqqqq"},"content":"        String combinedErrorMessage \u003d errorMessages.isEmpty() ? null","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"yongqqqq"},"content":"                : String.join(\"\\n\", errorMessages) + \"\\nGlub glub! Invalid data lines will be skipped. \"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"yongqqqq"},"content":"                + \"Please check the data file!\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"yongqqqq"},"content":"        return new LoadResults(validTasks, combinedErrorMessage, corruptedLines);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"yongqqqq"},"content":"     * Processes a line from the data file, parsing it to the corresponding Task object","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"yongqqqq"},"content":"     * and adding it to the valid task list.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"yongqqqq"},"content":"     * @param line The line to be processed.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"yongqqqq"},"content":"     * @param validTasks The list of valid tasks which tasks will be added to.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"yongqqqq"},"content":"     * @throws FishmanException If the line cannot be parsed into a task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"yongqqqq"},"content":"    private void processLine(String line, TaskList validTasks) throws FishmanException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"yongqqqq"},"content":"        String[] arguments \u003d line.split(\"\\\\|\", -1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"yongqqqq"},"content":"        if (arguments.length \u003c 3) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"yongqqqq"},"content":"            throw new FishmanException.InvalidArgumentsException(ErrorType.INVALID_ARGUMENTS, line);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"yongqqqq"},"content":"        String type \u003d arguments[0].trim();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"yongqqqq"},"content":"        String isDoneStr \u003d arguments[1].trim();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"yongqqqq"},"content":"        String description \u003d arguments[2].trim();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"yongqqqq"},"content":"        boolean isDone \u003d parseIsTaskDone(isDoneStr, line);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"yongqqqq"},"content":"        switch (type) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"yongqqqq"},"content":"        case \"T\":","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"yongqqqq"},"content":"            validateToDoArguments(arguments, description, line);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"yongqqqq"},"content":"            validTasks.addTask(new ToDo(description, isDone));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"yongqqqq"},"content":"            break;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"yongqqqq"},"content":"        case \"D\":","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"yongqqqq"},"content":"            LocalDateTime deadlineDate \u003d parseDeadlineArguments(arguments, description, line);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"yongqqqq"},"content":"            validTasks.addTask(new Deadline(description, isDone, deadlineDate));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"yongqqqq"},"content":"            break;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"yongqqqq"},"content":"        case \"E\":","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"yongqqqq"},"content":"            LocalDateTime[] eventDates \u003d parseEventArguments(arguments, description, line);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"yongqqqq"},"content":"            validTasks.addTask(new Event(description, isDone, eventDates[0], eventDates[1]));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"yongqqqq"},"content":"            break;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"yongqqqq"},"content":"        default:","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"yongqqqq"},"content":"            throw new FishmanException.InvalidArgumentsException(ErrorType.INVALID_TASK_TYPE, line);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"yongqqqq"},"content":"     * Parses the \"isTaskDone\" status from a string representation in the date file.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"yongqqqq"},"content":"     * @param isTaskDoneStr The string representation of the \"isTaskDone\" status.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"yongqqqq"},"content":"     * @param line The line being processed.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"yongqqqq"},"content":"     * @return A boolean indicating whether the task is done.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"yongqqqq"},"content":"     * @throws FishmanException If the string representation is neither \"true\" nor \"false\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"yongqqqq"},"content":"    private boolean parseIsTaskDone(String isTaskDoneStr, String line) throws FishmanException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"yongqqqq"},"content":"        if (isTaskDoneStr.equalsIgnoreCase(\"true\")) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"yongqqqq"},"content":"            return true;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"yongqqqq"},"content":"        } else if (isTaskDoneStr.equalsIgnoreCase(\"false\")) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"yongqqqq"},"content":"            return false;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"yongqqqq"},"content":"        } else {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"yongqqqq"},"content":"            throw new FishmanException.InvalidArgumentsException(ErrorType.INVALID_IS_DONE, line);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"yongqqqq"},"content":"     * Validates the arguments for a to-do task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"yongqqqq"},"content":"     * @param arguments The arguments of the line being processed.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"yongqqqq"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"yongqqqq"},"content":"     * @param line The line being processed.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"yongqqqq"},"content":"     * @throws FishmanException If the arguments are invalid for a to-do task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"yongqqqq"},"content":"    private void validateToDoArguments(String[] arguments, String description, String line) throws FishmanException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"yongqqqq"},"content":"        if (arguments.length !\u003d 3 || description.isEmpty()) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"yongqqqq"},"content":"            throw new FishmanException.InvalidArgumentsException(ErrorType.INVALID_TODO, line);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"yongqqqq"},"content":"     * Parses the arguments for a Deadline task and returns the deadline date.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"yongqqqq"},"content":"     * @param arguments The arguments of the line being processed.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"yongqqqq"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"yongqqqq"},"content":"     * @param line The original line being processed.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"yongqqqq"},"content":"     * @return The parsed LocalDateTime representing the deadline.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"yongqqqq"},"content":"     * @throws FishmanException If the arguments are invalid for a Deadline task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"yongqqqq"},"content":"    private LocalDateTime parseDeadlineArguments(String[] arguments, String description, String line)","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"yongqqqq"},"content":"            throws FishmanException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"yongqqqq"},"content":"        if (arguments.length !\u003d 4 || description.isEmpty()) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"yongqqqq"},"content":"            throw new FishmanException.InvalidArgumentsException(ErrorType.INVALID_DEADLINE, line);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"yongqqqq"},"content":"        String deadline \u003d arguments[3].trim();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"yongqqqq"},"content":"        return parseDateTime(deadline, line);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"yongqqqq"},"content":"     * Parses the arguments for an Event task and returns the start and end dates.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"yongqqqq"},"content":"     * @param arguments The arguments of the line being processed.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"yongqqqq"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"yongqqqq"},"content":"     * @param line The line being processed.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"yongqqqq"},"content":"     * @return An array of LocalDateTime containing the start and end dates of the event task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"yongqqqq"},"content":"     * @throws FishmanException If the arguments are invalid for an Event task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"yongqqqq"},"content":"    private LocalDateTime[] parseEventArguments(String[] arguments, String description, String line)","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"yongqqqq"},"content":"            throws FishmanException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"yongqqqq"},"content":"        if (arguments.length !\u003d 5 || description.isEmpty()) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"yongqqqq"},"content":"            throw new FishmanException.InvalidArgumentsException(ErrorType.INVALID_EVENT, line);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"yongqqqq"},"content":"        String from \u003d arguments[3].trim();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"yongqqqq"},"content":"        String to \u003d arguments[4].trim();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"yongqqqq"},"content":"        LocalDateTime eventStart \u003d parseDateTime(from, line);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"yongqqqq"},"content":"        LocalDateTime eventEnd \u003d parseDateTime(to, line);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"yongqqqq"},"content":"        return new LocalDateTime[]{eventStart, eventEnd};","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"yongqqqq"},"content":"     * Parses a date-time string into a LocalDateTime object using the specified date-time formatter.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"yongqqqq"},"content":"     * This method attempts to parse the given date-time string using the DATE_TIME_FORMATTER.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"yongqqqq"},"content":"     * If the string does not conform to the expected format, a FishmanException is thrown to indicate parsing error.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"yongqqqq"},"content":"     * @param dateTimeStr The date-time string to parses.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"yongqqqq"},"content":"     * @return A LocalDateTime object representing the parsed date and time.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"yongqqqq"},"content":"     * @throws FishmanException.InvalidArgumentsException If the input string does not match","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"yongqqqq"},"content":"     *      the expected date-time format.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"yongqqqq"},"content":"    private static LocalDateTime parseDateTime(String dateTimeStr, String line) throws FishmanException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"yongqqqq"},"content":"        assert dateTimeStr !\u003d null : \"DateTime string should not be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"yongqqqq"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"yongqqqq"},"content":"            return LocalDateTime.parse(dateTimeStr, DATE_TIME_FORMATTER);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"yongqqqq"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"yongqqqq"},"content":"            throw new FishmanException.InvalidArgumentsException(ErrorType.INVALID_DATE_FORMAT, line);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"yongqqqq"},"content":"     * Represents the results of loading tasks from the save file.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"yongqqqq"},"content":"    public static class LoadResults {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"yongqqqq"},"content":"        private final TaskList validTasks;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"yongqqqq"},"content":"        private final String errorMessage;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"yongqqqq"},"content":"        private final List\u003cString\u003e corruptedLines;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"yongqqqq"},"content":"        /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"yongqqqq"},"content":"         * Constructs a new LoadResult Object with the specified parameters","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"yongqqqq"},"content":"         *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"yongqqqq"},"content":"         * @param validTasks The Task List of valid tasks from the file.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"yongqqqq"},"content":"         * @param errorMessage The combined error messages, containing the error of every corrupted line.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"yongqqqq"},"content":"         * @param corruptedLines The list of corrupted lines from the file.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"yongqqqq"},"content":"         */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"yongqqqq"},"content":"        public LoadResults(TaskList validTasks, String errorMessage, List\u003cString\u003e corruptedLines) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"yongqqqq"},"content":"            this.validTasks \u003d validTasks;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"yongqqqq"},"content":"            this.errorMessage \u003d errorMessage;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"yongqqqq"},"content":"            this.corruptedLines \u003d corruptedLines;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"yongqqqq"},"content":"        public TaskList getValidTasks() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"yongqqqq"},"content":"            return validTasks;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"yongqqqq"},"content":"        public List\u003cString\u003e getCorruptedLines() {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"yongqqqq"},"content":"            return corruptedLines;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"yongqqqq"},"content":"        public String getErrorMessage() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"yongqqqq"},"content":"            return errorMessage;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"yongqqqq":329}},{"path":"src/main/java/fishman/utils/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"package fishman.utils;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"import java.util.List;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.Task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.TaskList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":" * Represents the user interface for fishman bot.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":" * This class handles all the inputs and outputs in relation to the user interface.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"public class Ui {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"    /** Constructs a new Ui object. */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"    public Ui() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"        String response \u003d \"\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"     * Constructs a string with the confirmation message after a task is added.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"     * @param task The task object that is added.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"     * @param size The size of the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"     * @return A string with the confirmation message and the updated task list size.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"    public String getAddedTaskMessage(Task task, int size) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"        return String.format(\"Bloop bloop, I have added the following task:\\n%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"                task, size);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"     * Constructs a string that contains all tasks in the task list.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"     * @param tasks The TaskList object containing all tasks.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"     * @return A string representing all the tasks in the task list.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"    public String getTaskListMessage(TaskList tasks) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"        if (tasks.isTaskListEmpty()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"            return (\"Bloop bloop, no tasks found\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongqqqq"},"content":"        StringBuilder result \u003d new StringBuilder(\"Bloop bloop, here are the tasks in your list:\\n\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongqqqq"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongqqqq"},"content":"            result.append(i + 1).append(\". \").append(tasks.getTask(i)).append(\"\\n\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongqqqq"},"content":"        return result.toString();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongqqqq"},"content":"     * Constructs the confirmation message after the task is marked or unmarked.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongqqqq"},"content":"     * @param task The task object that is marked or unmarked.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongqqqq"},"content":"     * @return A string containing the confirmation message and task details.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongqqqq"},"content":"    public String getTaskStatusMessage(Task task) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongqqqq"},"content":"        String statusMessage;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongqqqq"},"content":"        if (task.getTaskStatus()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongqqqq"},"content":"            statusMessage \u003d \"Bloop bloop, I\u0027ve marked this task as done:\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongqqqq"},"content":"        } else {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongqqqq"},"content":"            statusMessage \u003d \"Bloop bloop, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongqqqq"},"content":"        return (statusMessage + \"\\n\" + task.toString());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongqqqq"},"content":"     * Constructs a string with the confirmation message after a task is deleted.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yongqqqq"},"content":"     * @param task The task object that is deleted.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yongqqqq"},"content":"     * @param size The size of the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yongqqqq"},"content":"     * @return A string with the confirmation message and the updated task list size.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yongqqqq"},"content":"    public String getDeletedTaskMessage(Task task, int size) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yongqqqq"},"content":"        return String.format(\"Bloop bloop, I have removed the following task:\\n%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yongqqqq"},"content":"                task, size);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yongqqqq"},"content":"     * Constructs the results after find command.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yongqqqq"},"content":"     * @param tasks The tasks that have been found.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yongqqqq"},"content":"     * @return A string representing the matching tasks.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yongqqqq"},"content":"    public String getFindResultsMessage(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yongqqqq"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yongqqqq"},"content":"            return (\"Bloop bloop, no matching tasks found\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yongqqqq"},"content":"        StringBuilder result \u003d new StringBuilder(\"Bloop bloop, here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yongqqqq"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yongqqqq"},"content":"            result.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yongqqqq"},"content":"        return result.toString();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yongqqqq"},"content":"     * Constructs a string with the confirmation message after a task is updated.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yongqqqq"},"content":"     * @param task The task that has been updated.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yongqqqq"},"content":"     * @return A string with the confirmation message.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yongqqqq"},"content":"    public String getUpdatedTaskMessage(Task task) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yongqqqq"},"content":"        return String.format(\"Bloop bloop, I have updated the following task:\\n%s.\", task);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":104}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"            \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"yongqqqq":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"fishman.gui.MainWindow\"\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"6.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"326.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"43.0\" prefWidth\u003d\"75.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"2.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"yongqqqq":19}},{"path":"src/test/java/fishman/utils/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"package fishman.utils;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"import fishman.command.Command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":"import fishman.command.DeleteCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"import fishman.command.ExitCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"import fishman.command.ListCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"import fishman.command.MarkCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"import fishman.exception.FishmanException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.Deadline;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.Event;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.ToDo;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"public class ParserTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"    private Ui ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"    void setUp() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"    void parse_byeCommand_returnsExitCommand() throws FishmanException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"        Command command \u003d Parser.parse(\"bye\", tasks);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"        assertInstanceOf(ExitCommand.class, command);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"    void parse_listCommandWithTasks_returnsListCommand() throws FishmanException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"        tasks.addTask(new ToDo(\"Sample Task\", false));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"        Command command \u003d Parser.parse(\"list\", tasks);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"        assertInstanceOf(ListCommand.class, command);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"    void parse_listCommandWithoutTasks_throwsEmptyListException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"        FishmanException e \u003d assertThrows(FishmanException.EmptyListException.class, () -\u003e Parser.parse(\"list\", tasks));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongqqqq"},"content":"        assertEquals(\"The list is empty. Unable to perform operation.\", e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongqqqq"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongqqqq"},"content":"    void parse_markCommandWithValidIndex_returnsMarkedTask() throws FishmanException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongqqqq"},"content":"        tasks.addTask(new ToDo(\"Sample Task\", false));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongqqqq"},"content":"        Command command \u003d Parser.parse(\"mark 1\", tasks);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongqqqq"},"content":"        assertInstanceOf(MarkCommand.class, command);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongqqqq"},"content":"        command.execute(tasks, ui);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongqqqq"},"content":"        assertTrue(tasks.getTask(0).getTaskStatus());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongqqqq"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongqqqq"},"content":"    void parse_markCommandWithInvalidIndex_throwsIndexOutOfBoundsException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongqqqq"},"content":"        tasks.addTask(new ToDo(\"Sample Task\", false));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongqqqq"},"content":"        FishmanException e \u003d assertThrows(FishmanException.IndexOutOfBoundsException.class, () -\u003e { Command command \u003d Parser.parse(\"mark 5\", tasks); command.execute(tasks, ui);});","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongqqqq"},"content":"        assertEquals(\"The index provided is out of bounds for the task list. Index provided: 5\", e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongqqqq"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongqqqq"},"content":"    void parse_unmarkCommandWithValidIndex_returnsUnmarkedTask() throws FishmanException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongqqqq"},"content":"        tasks.addTask(new ToDo(\"Sample Task\", false));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongqqqq"},"content":"        Command command \u003d Parser.parse(\"unmark 1\", tasks);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongqqqq"},"content":"        assertInstanceOf(MarkCommand.class, command);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongqqqq"},"content":"        assertFalse(tasks.getTask(0).getTaskStatus());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yongqqqq"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yongqqqq"},"content":"    void parse_TodoCommand_returnsTodoTask() throws FishmanException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yongqqqq"},"content":"        Command command \u003d Parser.parse(\"todo Sample Task\", tasks);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yongqqqq"},"content":"        command.execute(tasks, ui);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yongqqqq"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yongqqqq"},"content":"        assertEquals(\"Sample Task\", tasks.getTask(0).getTaskDescription());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yongqqqq"},"content":"        assertInstanceOf(ToDo.class, tasks.getTask(0));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yongqqqq"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yongqqqq"},"content":"    void parse_deadlineCommand_returnsDeadlineTask() throws FishmanException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yongqqqq"},"content":"        Command command \u003d Parser.parse(\"deadline Sample Task /by 2024-09-01 2359\", tasks);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yongqqqq"},"content":"        command.execute(tasks, ui);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yongqqqq"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yongqqqq"},"content":"        assertInstanceOf(Deadline.class, tasks.getTask(0));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yongqqqq"},"content":"        assertEquals(\"Sample Task\", tasks.getTask(0).getTaskDescription());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yongqqqq"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yongqqqq"},"content":"    void parse_deadlineCommandMissingByDate_throwsMissingArgumentException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yongqqqq"},"content":"        FishmanException e \u003d assertThrows(FishmanException.MissingArgumentException.class,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yongqqqq"},"content":"                () -\u003e Parser.parse(\"deadline Sample Task\", tasks));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yongqqqq"},"content":"        assertEquals(\"Deadline command requires a description or a /by date\", e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yongqqqq"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yongqqqq"},"content":"    void parse_eventCommand_returnsEventTask() throws FishmanException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yongqqqq"},"content":"        Command command \u003d Parser.parse(\"event Sample Task /from 2024-09-01 1400 /to 2024-09-01 1600\", tasks);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yongqqqq"},"content":"        command.execute(tasks, ui);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yongqqqq"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yongqqqq"},"content":"        assertInstanceOf(Event.class, tasks.getTask(0));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yongqqqq"},"content":"        assertEquals(\"Sample Task\", tasks.getTask(0).getTaskDescription());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yongqqqq"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yongqqqq"},"content":"    void parse_eventCommandMissingFromOrToDate_throwsMissingArgumentException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yongqqqq"},"content":"        FishmanException e \u003d assertThrows(FishmanException.MissingArgumentException.class,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yongqqqq"},"content":"                () -\u003e Parser.parse(\"event Sample Task /from 2024-09-01 1400\", tasks));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yongqqqq"},"content":"        assertEquals(\"Event command requires a description or /from and /to dates\", e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yongqqqq"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yongqqqq"},"content":"    void parse_deleteCommandWithValidIndex_returnsDeletedTask() throws FishmanException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yongqqqq"},"content":"        tasks.addTask(new ToDo(\"Sample Task\", false));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yongqqqq"},"content":"        Command command \u003d Parser.parse(\"delete 1\", tasks);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yongqqqq"},"content":"        assertInstanceOf(DeleteCommand.class, command);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yongqqqq"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yongqqqq"},"content":"    void parse_deleteCommandWithInvalidIndex_throwsIndexOutOfBoundsException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yongqqqq"},"content":"        FishmanException e \u003d assertThrows(FishmanException.IndexOutOfBoundsException.class,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yongqqqq"},"content":"                () -\u003e Parser.parse(\"delete 1\", tasks));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yongqqqq"},"content":"        assertEquals(\"The index provided is out of bounds for the task list. Index provided: 1\", e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yongqqqq"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yongqqqq"},"content":"    void parse_invalidCommand_throwsInvalidCommandException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yongqqqq"},"content":"        FishmanException e \u003d assertThrows(FishmanException.InvalidCommandException.class,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yongqqqq"},"content":"                () -\u003e Parser.parse(\"invalidCommand\", tasks));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yongqqqq"},"content":"        assertEquals(\"Please enter a valid command such as \u0027list\u0027 or \u0027bye\u0027 :(\", e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yongqqqq"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yongqqqq"},"content":"    void parse_emptyInput_throwsInvalidCommandException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yongqqqq"},"content":"        FishmanException e \u003d assertThrows(FishmanException.InvalidCommandException.class,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yongqqqq"},"content":"                () -\u003e Parser.parse(\"\", tasks));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yongqqqq"},"content":"        assertEquals(\"Please enter a valid command such as \u0027list\u0027 or \u0027bye\u0027 :(\", e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yongqqqq"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yongqqqq"},"content":"    void parse_nullInput_throwsInvalidCommandException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yongqqqq"},"content":"        FishmanException e \u003d assertThrows(FishmanException.InvalidCommandException.class,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"yongqqqq"},"content":"                () -\u003e Parser.parse(null, tasks));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"yongqqqq"},"content":"        assertEquals(\"Please enter a valid command such as \u0027list\u0027 or \u0027bye\u0027 :(\", e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yongqqqq"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yongqqqq"},"content":"    void parse_invalidDateFormat_throwsInvalidDateFormatException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"yongqqqq"},"content":"        FishmanException e \u003d assertThrows(FishmanException.InvalidDateFormatException.class,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yongqqqq"},"content":"                () -\u003e Parser.parse(\"deadline Submit assignment /by 01-09-2024 23:59\", tasks));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"yongqqqq"},"content":"        assertEquals(\"Invalid Date format here: 01-09-2024 23:59\", e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"yongqqqq":152}},{"path":"src/test/java/fishman/utils/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"import fishman.command.Command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":"import fishman.exception.FishmanException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.Deadline;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.Event;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"import fishman.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"import fishman.utils.Parser;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"import fishman.utils.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"import fishman.utils.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"class StorageTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"    @TempDir","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"    Path tempDir;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"    private Path filePath;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"    private Ui ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"    private Path tempFile;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"    void setUp() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"        filePath \u003d tempDir.resolve(\"test.txt\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"        storage \u003d new Storage(filePath.toString());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongqqqq"},"content":"    @AfterEach","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongqqqq"},"content":"    void tearDown() throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongqqqq"},"content":"        if (tempFile !\u003d null \u0026\u0026 Files.exists(tempFile)) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongqqqq"},"content":"            Files.delete(tempFile);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongqqqq"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongqqqq"},"content":"    void save_and_load_tasks() throws FishmanException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongqqqq"},"content":"        Command commandTodo \u003d Parser.parse(\"todo Sample Todo Task\", tasks);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongqqqq"},"content":"        commandTodo.execute(tasks, ui);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongqqqq"},"content":"        Command commandDeadline \u003d Parser.parse(\"deadline Sample Deadline Task /by 2024-09-01 2359\", tasks);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongqqqq"},"content":"        commandDeadline.execute(tasks, ui);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongqqqq"},"content":"        Command command \u003d Parser.parse(\"event Sample Event Task /from 2024-09-01 1400 /to 2024-09-01 1600\", tasks);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongqqqq"},"content":"        command.execute(tasks, ui);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongqqqq"},"content":"        storage.save(tasks,new ArrayList\u003c\u003e());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongqqqq"},"content":"        TaskList loadedTasks \u003d storage.load().getValidTasks();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongqqqq"},"content":"        TaskList originalTasks \u003d tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongqqqq"},"content":"        assertEquals(originalTasks.size(), loadedTasks.size());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongqqqq"},"content":"        for (int i \u003d 0; i \u003c originalTasks.size(); i++) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongqqqq"},"content":"            Task originalTask \u003d originalTasks.getTask(i);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongqqqq"},"content":"            Task loadedTask \u003d loadedTasks.getTask(i);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yongqqqq"},"content":"            assertEquals(originalTask.getTaskDescription(), loadedTask.getTaskDescription());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yongqqqq"},"content":"            assertEquals(originalTask.getTaskStatus(), loadedTask.getTaskStatus());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yongqqqq"},"content":"            if (originalTask instanceof Deadline originalDeadline) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yongqqqq"},"content":"                Deadline loadedDeadline \u003d (Deadline) loadedTask;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yongqqqq"},"content":"                assertEquals(originalDeadline.getDeadlineDate(), loadedDeadline.getDeadlineDate());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yongqqqq"},"content":"            } else if (originalTask instanceof Event originalEvent) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yongqqqq"},"content":"                Event loadedEvent \u003d (Event) loadedTask;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yongqqqq"},"content":"                assertEquals(originalEvent.getEventStart(), loadedEvent.getEventStart());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yongqqqq"},"content":"                assertEquals(originalEvent.getEventEnd(), loadedEvent.getEventEnd());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yongqqqq"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yongqqqq"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yongqqqq"},"content":"    void load_missingArguments_throwsInvalidArgumentsException() throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yongqqqq"},"content":"        Path tempFile \u003d Files.createTempFile(\"test-\", \".txt\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yongqqqq"},"content":"        try (BufferedWriter writer \u003d Files.newBufferedWriter(tempFile)) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yongqqqq"},"content":"            writer.write(\"T|true\"); // Missing description","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yongqqqq"},"content":"            writer.newLine();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yongqqqq"},"content":"            writer.write(\"D|false|Finish report\"); // Missing deadline","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yongqqqq"},"content":"            writer.newLine();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yongqqqq"},"content":"            writer.write(\"E|true|Team meeting|2024-08-29 10:00\"); // Missing end date","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yongqqqq"},"content":"            writer.newLine();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yongqqqq"},"content":"        Storage storage \u003d new Storage(tempFile.toString());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yongqqqq"},"content":"        Storage.LoadResults result \u003d storage.load();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yongqqqq"},"content":"        assertNotNull(result.getErrorMessage());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yongqqqq"},"content":"        assertTrue(result.getErrorMessage().contains(\"Missing arguments in line:\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yongqqqq"},"content":"        assertTrue(result.getErrorMessage().contains(\"Invalid Deadline arguments in line:\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yongqqqq"},"content":"        assertTrue(result.getErrorMessage().contains(\"Invalid Event arguments in line:\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yongqqqq"},"content":"        Files.deleteIfExists(tempFile);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"yongqqqq":105}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"todo borrow book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":"todo join sports club","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"todo borrow book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"mark 2","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"mark 6","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"bye","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"java -classpath ..\\bin Fishman \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"yongqqqq":1,"-":20}}]
