[{"path":"src/main/java/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":" * Represent the command to add a new task to the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":" * This command implements the Command interface and is for","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":" * adding a single task to the task list and displaying the confirmation message","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":" * that the task has been successfully added to the user and displaying the number of","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":" * task in the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"public class AddCommand implements Command {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"    /** The task to be added to the task list */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"    private final Task task;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"     * Constructs an AddCommand with the specified task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"     * @param task The task object to be added to the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"     * @inheritDoc","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"     * Adds the task to the task list and displays a confirmation message alongside the","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"     * current number of tasks in the list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"     * @param tasks The TaskList which the new task will be added.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"     * @param ui The Ui object used to display the confirmation message.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"        tasks.addTask(task);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"        ui.displayAddedTask(task, tasks.size());","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":36}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":" * The Command interface represents an executable command in the task operations.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":" * It defines the methods that all command classes must implement, specifying how","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":" * they should be executed or whether the program should exit.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"interface Command {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"     * Executes the command, performing actions on the tasklist and user interface.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"     * @param tasks","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"     * @param ui","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"    void execute(TaskList tasks, Ui ui);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"     * Indicator for whether the program should exit.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"     * @return true if the program should exit after executing","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"     * this command, false otherwise","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"    default boolean isExit() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"        return false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":25}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":" * Represent a Deadline task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":" * This class extends the Task class, adding a deadline attribute to it.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"    /** The deadline in which the task should be completed by. */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"    protected String by;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"     * Constructs a new Deadline task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"     * @param by The deadline in which the task should be completed by.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"    public Deadline(String description, boolean isDone, String by) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"        super(description, isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"    public String getBy() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"        return by;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"        return \"D\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"        return super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":32}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":" * Represent the command to delete a task in the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":" * This command implements the Command interface and is for","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":" * deleting a single task in the task list and displaying the confirmation message","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":" * that the task has been successfully deleted to the user.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"    /** The index of the task in the task list to be deleted. */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"    private final int index;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"     * Constructs an DeleteCommand with the specified task to be deleted.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"     * @param index The index of the task object in the task list to be deleted.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"     * @inheritDoc","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"     * Delete the task in the task list and displays a confirmation message alongside the","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"     * current number of tasks in the list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"     * @param tasks The Task List in which the task is deleted from.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"     * @param ui The Ui object used to display the confirmation message.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"        // A temporary task to store the deleted store such that it can be displayed.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"        Task tempTask \u003d tasks.getTask(index);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"        tasks.delete(index);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"        ui.displayDeletedTask(tempTask, tasks.size());","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":35}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":" * Represents an event task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":" * This class extends the Task class, adding the from and to attributes to it.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"    /** The start time of the event. */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"    protected String from;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"    /** The end time of the event. */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"    protected String to;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"     * Constructs a new Event task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"    public Event(String description, boolean isDone, String from, String to) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"        super(description, isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"    public String getFrom() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"        return from;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"    public String getTo() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"        return to;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"        return \"E\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"        return super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":41}},{"path":"src/main/java/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":" * Represents a command to exit the program.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":" * This command implements the Command interface and exits the program when","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":" * the specified keyword is entered and displays the termination message to","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":" * the user.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"     * @inheritDoc","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"     * Constructs a ExitCommand, which executes the exit command by displaying","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"     * the termination message to the user.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"     * @param tasks The TaskList, which is not used in this command but required by","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"     *              the interface.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"     * @param ui The Ui object used to display the termination message.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"        ui.displayGoodbye();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"     * @inheritDoc","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"     * @return true to indicate that the program should terminate","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"     * after this command.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"        return true;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":34}},{"path":"src/main/java/Fishman.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":" * The main class for the Fishman bot.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":" * This class initializes the user interface, task list and parser,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":" * and manages the main program.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"public class Fishman {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"    /** The user interface object for handling input and output operations. */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"    private final Ui ui;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"    /** The task list object to store and manage tasks. */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"    /** The parser object to interpret user inputs. */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"    private final Parser parser;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"    /** The storage object used to handle file operations. */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"    private final Storage storage;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"     * Constructs a new instance of Fishman","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"     * Initializes the UI, task list and parser.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"    public Fishman() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"        storage \u003d new Storage(\"./data/fishman.csv\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"     * Starts the Fishman bot.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"     * Displays the logo and welcome message, before entering the main loop.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"     * The loop will continue until the exit command is received.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"     * The method will handle exceptions that may occur during execution.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"     * Any unchecked exception is caught and reported as well.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"    public void start() throws FishmanException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"        ui.displayLogo();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"        ui.displayWelcome();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"        } catch (FishmanException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongqqqq"},"content":"            ui.displayError(e.getMessage());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongqqqq"},"content":"        while (!isExit) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongqqqq"},"content":"            try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongqqqq"},"content":"                String userInput \u003d ui.readCommands();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongqqqq"},"content":"                Command command \u003d Parser.parse(userInput, tasks);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongqqqq"},"content":"                command.execute(tasks, ui);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongqqqq"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongqqqq"},"content":"            } catch (FishmanException e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongqqqq"},"content":"                ui.displayError(e.getMessage());","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongqqqq"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongqqqq"},"content":"                ui.displayError(\"Uh oh, an unexpected error has occured: \" + e.getMessage());","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongqqqq"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongqqqq"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongqqqq"},"content":"     * The main entry point for Fishman bot.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongqqqq"},"content":"     * Creates a new Fishman instance and starts the bot.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongqqqq"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongqqqq"},"content":"    public static void main(String[] args) throws FishmanException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongqqqq"},"content":"        new Fishman().start();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":69}},{"path":"src/main/java/FishmanException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":" * Base exception class for Fishman bot custom exception","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":"public class FishmanException extends Exception {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"     * Constructs a new FishmanException with no message.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"    public FishmanException() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"     * Constructs a new FishmanException with the specified message","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"     * @param message The detail message.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"    public FishmanException(String message) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"        super(message);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"     * The exception thrown when an invalid command is entered.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"    public static class InvalidCommandException extends FishmanException {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"        private static final String MESSAGE \u003d \"Please enter a valid command such as \u0027list\u0027 or \u0027bye\u0027 :(\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"        /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"         * Constructs a new InvalidCommandException with the invalid command.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"         *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"         * @param command The invalid command entered.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"         */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"        public InvalidCommandException(String command) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"            super(MESSAGE + command);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"     * The exception thrown when a command is missing arguments.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"    public static class MissingArgumentException extends FishmanException {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"        private static final String MESSAGE_MARK \u003d \"Mark command requires an index\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongqqqq"},"content":"        private static final String MESSAGE_UNMARK \u003d \"Unmark command requires an index\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongqqqq"},"content":"        private static final String MESSAGE_TODO \u003d \"Todo command requires a description\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongqqqq"},"content":"        private static final String MESSAGE_DEADLINE \u003d \"Deadline command requires a description and a /by date\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongqqqq"},"content":"        private static final String MESSAGE_EVENT \u003d \"Event command requires a description, /from, and /to dates\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongqqqq"},"content":"        private static final String MESSAGE_DELETE \u003d \"Delete command requires an index\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongqqqq"},"content":"        /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongqqqq"},"content":"         * Constructs a new InvalidCommandException with a message specific to the command type.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongqqqq"},"content":"         *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongqqqq"},"content":"         * @param commandType The type of command that is missing arguments.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongqqqq"},"content":"         */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongqqqq"},"content":"        public MissingArgumentException(String commandType) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongqqqq"},"content":"            super(getMessageForCommandType(commandType));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongqqqq"},"content":"        /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongqqqq"},"content":"         * The method to return the corresponding message for the command type.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongqqqq"},"content":"         *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongqqqq"},"content":"         * @param commandType The type of command that is missing arguments.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongqqqq"},"content":"         * @return The error message of the command type.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongqqqq"},"content":"         */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongqqqq"},"content":"        private static String getMessageForCommandType(String commandType) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongqqqq"},"content":"            return switch (commandType) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongqqqq"},"content":"                case \"mark\" -\u003e MESSAGE_MARK;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongqqqq"},"content":"                case \"unmark\" -\u003e MESSAGE_UNMARK;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongqqqq"},"content":"                case \"todo\" -\u003e MESSAGE_TODO;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yongqqqq"},"content":"                case \"deadline\" -\u003e MESSAGE_DEADLINE;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yongqqqq"},"content":"                case \"event\" -\u003e MESSAGE_EVENT;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yongqqqq"},"content":"                case \"delete\" -\u003e MESSAGE_DELETE;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yongqqqq"},"content":"                default -\u003e \"Missing argument for command\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yongqqqq"},"content":"            };","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yongqqqq"},"content":"     * The exception thrown when a string cannot be parsed as number.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yongqqqq"},"content":"    public static class NumberFormatException extends FishmanException {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yongqqqq"},"content":"        private static final String MESSAGE \u003d \"Invalid number format: \";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yongqqqq"},"content":"        /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yongqqqq"},"content":"         * Constructs a new NumberFormatException with the invalid input.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yongqqqq"},"content":"         *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yongqqqq"},"content":"         * @param message The invalid input that could not be parsed.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yongqqqq"},"content":"         */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yongqqqq"},"content":"        public NumberFormatException(String message) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yongqqqq"},"content":"            super(MESSAGE + message);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yongqqqq"},"content":"     * The exception thrown when trying to perform command on an empty Task List.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yongqqqq"},"content":"    public static class EmptyListException extends FishmanException {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yongqqqq"},"content":"        private static final String MESSAGE \u003d \"The list is empty. Unable to perform operation.\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yongqqqq"},"content":"        /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yongqqqq"},"content":"         * Constructs a new EmptyListException with message.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yongqqqq"},"content":"         */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yongqqqq"},"content":"        public EmptyListException() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yongqqqq"},"content":"            super(MESSAGE);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yongqqqq"},"content":"     * The exception thrown when an index is out of bounds for a given Task List.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yongqqqq"},"content":"    public static class IndexOutOfBoundsException extends FishmanException {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yongqqqq"},"content":"        private static final String MESSAGE \u003d \"The index provided is out of bounds for the task list.\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yongqqqq"},"content":"        /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yongqqqq"},"content":"         * Constructs a new IndexOutOfBoundsException with message.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yongqqqq"},"content":"         *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yongqqqq"},"content":"         * @param index The index provided by the user that is out of bounds.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yongqqqq"},"content":"         */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yongqqqq"},"content":"        public IndexOutOfBoundsException(int index) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yongqqqq"},"content":"            super(MESSAGE + \" Index provided: \" + index);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yongqqqq"},"content":"    public static class InvalidArgumentsException extends FishmanException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yongqqqq"},"content":"        private static final String MESSAGE \u003d \"Insufficient/Extra information retrieved from line: \";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yongqqqq"},"content":"        public InvalidArgumentsException(String line) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yongqqqq"},"content":"            super(MESSAGE + line + \" Skipping.....\\n\" );","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":131}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":" * Represent the command to display the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":" * This command implements the Command interface and is for","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":" * displaying the tasks currently in the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"     * @inheritDoc","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"     * Displays the tasks in the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"     * @param tasks The TaskList which the tasks will be retrieved from.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"     * @param ui The Ui object used to display the tasks in the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"        ui.displayTaskList(tasks);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":19}},{"path":"src/main/java/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":" * Represent the command to mark a task in the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":" * This command implements the Command interface and is for","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":" * marking a single task to the task list and displaying the confirmation message","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":" * that the task has been successfully marked or unmarked to the user.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"    /** The index of the task in the task list to be marked. */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"    private final int index;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"    /** The boolean to determine whether to mark or unmark the task. */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"    private final boolean isMark;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"     * Constructs an MarkCommand with the specified task and mark operation to be done.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"     * @param index The index of the task object in the task list to be marked.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"     * @param isMark The indicator of the mark operation to be done.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"    public MarkCommand(int index, boolean isMark) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"        this.isMark \u003d isMark;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"     * @inheritDoc","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"     * Marks or unmarks the specified task in the task list and display a confirmation message.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"     * @param tasks The TaskList which the specified task will be added.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"     * @param ui The Ui object used to display the confirmation message.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"        if (isMark) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"            tasks.markAsDone(index);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"            ui.displayTaskStatus(tasks.getTask(index));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"        } else {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"            tasks.markAsNotDone(index);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"            ui.displayTaskStatus(tasks.getTask(index));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":43}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":" * The Parser class is used to interpret user input and create the appropriate","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":" * Command objects.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"public class Parser {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"     * Parses the user input and returns the appropriate Command object.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"     * This method interprets the user input, splitting the input to determine the command","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"     * and respective index and creates the appropriate","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"     * Command object. It can identify the following:","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"     * - \"bye\": Creates an ExitCommand which terminates the program.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"     * - \"list\": Creates an ListCommand to display all tasks in the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"     * - \"mark\": Creates an MarkCommand flagged as mark to mark the task as done.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"     * - \"unmark\": Creates an MarkCommand flagged as unmark to mark the task as not done.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"     * - \"todo\": Creates an AddCommand which creates a new ToDo task with the information provided by the user.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"     * - \"deadline\": Creates an AddCommand which creates a new Deadline task with the information provided by the user.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"     * - \"event\": Creates an AddCommand which creates a new Event task with the information provided by the user.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"     * - \"delete\": Creates an DeleteCommand which deletes the task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"     * - Any other input: Creates a Command which will terminate the program.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"     * @param userInput The string input by the user.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"     * @return A Command object with respect to the user\u0027s input.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"     * @throws FishmanException.InvalidCommandException if input does not match any command.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"     * @throws FishmanException.MissingArgumentException if command is missing arguments.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"     * @throws FishmanException.NumberFormatException if a numeric argument is not a valid number.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"     * @throws FishmanException.EmptyListException if trying to mark/unmark a task in an empty task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"     * @throws FishmanException.IndexOutOfBoundsException if trying to choose a nonexistent item from the list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"     * @throws FishmanException for unexpected errors during parsing.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"    public static Command parse(String userInput, TaskList tasks) throws FishmanException {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"        if (userInput \u003d\u003d null || userInput.trim().isEmpty()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"            throw new FishmanException.InvalidCommandException(\"\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"        String[] inputs \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"        String commandPhrase \u003d inputs[0].toLowerCase();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"        try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"            switch (commandPhrase) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"            case \"bye\":","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"                return new ExitCommand();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"            case \"list\":","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongqqqq"},"content":"                if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongqqqq"},"content":"                    throw new FishmanException.EmptyListException();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongqqqq"},"content":"                }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongqqqq"},"content":"                return new ListCommand();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongqqqq"},"content":"            case \"mark\":","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongqqqq"},"content":"                if (inputs.length \u003c 2) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongqqqq"},"content":"                    throw new FishmanException.MissingArgumentException(\"mark\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongqqqq"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongqqqq"},"content":"                if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongqqqq"},"content":"                    throw new FishmanException.EmptyListException();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongqqqq"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongqqqq"},"content":"                int markIndex \u003d Integer.parseInt(inputs[1]) - 1;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongqqqq"},"content":"                if (markIndex \u003c 0 || markIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongqqqq"},"content":"                    throw new FishmanException.IndexOutOfBoundsException(markIndex + 1);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongqqqq"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongqqqq"},"content":"                return new MarkCommand(markIndex, true);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongqqqq"},"content":"            case \"unmark\":","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongqqqq"},"content":"                if (inputs.length \u003c 2) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongqqqq"},"content":"                    throw new FishmanException.MissingArgumentException(\"unmark\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongqqqq"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongqqqq"},"content":"                if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongqqqq"},"content":"                    throw new FishmanException.EmptyListException();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongqqqq"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongqqqq"},"content":"                int unmarkIndex \u003d Integer.parseInt(inputs[1]) - 1;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongqqqq"},"content":"                if (unmarkIndex \u003c 0 || unmarkIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongqqqq"},"content":"                    throw new FishmanException.IndexOutOfBoundsException(unmarkIndex + 1);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yongqqqq"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yongqqqq"},"content":"                return new MarkCommand(unmarkIndex, false);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yongqqqq"},"content":"            case \"todo\":","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yongqqqq"},"content":"                if (inputs.length \u003c 2) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yongqqqq"},"content":"                    throw new FishmanException.MissingArgumentException(\"todo\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yongqqqq"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yongqqqq"},"content":"                return new AddCommand(new ToDo(inputs[1], false));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yongqqqq"},"content":"            case \"deadline\":","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yongqqqq"},"content":"                if (inputs.length \u003c 2 || !inputs[1].contains(\"/by\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yongqqqq"},"content":"                    throw new FishmanException.MissingArgumentException(\"deadline\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yongqqqq"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yongqqqq"},"content":"                String[] deadlineString \u003d inputs[1].split(\"/by\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yongqqqq"},"content":"                return new AddCommand(new Deadline(deadlineString[0].trim(), false, deadlineString[1].trim()));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yongqqqq"},"content":"            case \"event\":","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yongqqqq"},"content":"                if (inputs.length \u003c 2 || !inputs[1].contains(\"/from\") || !inputs[1].contains(\"/to\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yongqqqq"},"content":"                    throw new FishmanException.MissingArgumentException(\"event\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yongqqqq"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yongqqqq"},"content":"                String[] eventString \u003d inputs[1].split(\"/from|/to\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yongqqqq"},"content":"                return new AddCommand(new Event(eventString[0].trim(), false, eventString[1].trim(), eventString[2].trim()));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yongqqqq"},"content":"            case \"delete\":","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yongqqqq"},"content":"                if (inputs.length \u003c 2) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yongqqqq"},"content":"                    throw new FishmanException.MissingArgumentException(\"delete\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yongqqqq"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yongqqqq"},"content":"                int deleteIndex \u003d Integer.parseInt(inputs[1]) - 1;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yongqqqq"},"content":"                if (deleteIndex \u003c 0 || deleteIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yongqqqq"},"content":"                    throw new FishmanException.IndexOutOfBoundsException(deleteIndex + 1);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yongqqqq"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yongqqqq"},"content":"                return new DeleteCommand(deleteIndex);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yongqqqq"},"content":"            default:","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yongqqqq"},"content":"                throw new FishmanException.InvalidCommandException(commandPhrase);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yongqqqq"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yongqqqq"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yongqqqq"},"content":"            throw new FishmanException.NumberFormatException(e.getMessage());","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":103}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"import java.util.List;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"public class Storage {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"    private final Path filePath;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"        this.filePath \u003d Paths.get(filePath);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"        createFileIfDoesNotExist();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"    private void createFileIfDoesNotExist() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"            Files.createDirectories(filePath.getParent());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"            if (Files.notExists(filePath)) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"            System.out.println(\"Error creating file: \" + e.getMessage());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"        try (BufferedWriter writer \u003d Files.newBufferedWriter(filePath)) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"                writer.write(toCsv(task));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"                writer.newLine();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"            throw new RuntimeException(\"Error saving tasks to file: \" + e.getMessage(), e);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"    private String toCsv(Task task) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"        if(task instanceof ToDo) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"            sb.append(\"T\").append(task.getStatus() ? \"|1\" : \"|0\").append(\"|\").append(task.getDescription());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongqqqq"},"content":"        } else if(task instanceof Deadline) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongqqqq"},"content":"            sb.append(\"D\").append(task.getStatus() ? \"|1\" : \"|0\").append(\"|\").append(task.getDescription()).append(\"|\").append(((Deadline) task).getBy());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongqqqq"},"content":"        } else if(task instanceof Event) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongqqqq"},"content":"            sb.append(\"E\").append(task.getStatus() ? \"|1\" : \"|0\").append(\"|\").append(task.getDescription()).append(\"|\").append(((Event) task).getFrom()).append(\"|\").append(((Event) task).getTo());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongqqqq"},"content":"        return sb.toString();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongqqqq"},"content":"    public TaskList load() throws FishmanException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongqqqq"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongqqqq"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongqqqq"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(filePath);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongqqqq"},"content":"            for (String line : lines) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongqqqq"},"content":"                try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongqqqq"},"content":"                    String[] arguments \u003d line.split(\"\\\\|\", -1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongqqqq"},"content":"                    String type \u003d arguments[0];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongqqqq"},"content":"                    boolean isDone \u003d arguments[1].equals(\"1\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongqqqq"},"content":"                    String description \u003d arguments[2];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongqqqq"},"content":"                    switch (type) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongqqqq"},"content":"                    case \"T\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongqqqq"},"content":"                        if (arguments.length !\u003d 3) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongqqqq"},"content":"                            throw new FishmanException.InvalidArgumentsException(line);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongqqqq"},"content":"                        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongqqqq"},"content":"                        tasks.addTask(new ToDo(description, isDone));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongqqqq"},"content":"                        break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yongqqqq"},"content":"                    case \"D\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yongqqqq"},"content":"                        if (arguments.length !\u003d 4) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yongqqqq"},"content":"                            throw new FishmanException.InvalidArgumentsException(line);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yongqqqq"},"content":"                        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yongqqqq"},"content":"                        String deadline \u003d arguments[3];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yongqqqq"},"content":"                        tasks.addTask(new Deadline(description, isDone, deadline));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yongqqqq"},"content":"                        break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yongqqqq"},"content":"                    case \"E\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yongqqqq"},"content":"                        if (arguments.length !\u003d 5) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yongqqqq"},"content":"                            throw new FishmanException.InvalidArgumentsException(line);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yongqqqq"},"content":"                        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yongqqqq"},"content":"                        String from \u003d arguments[3];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yongqqqq"},"content":"                        String to \u003d arguments[4];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yongqqqq"},"content":"                        tasks.addTask(new Event(description, isDone, from, to));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yongqqqq"},"content":"                        break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yongqqqq"},"content":"                    default:","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yongqqqq"},"content":"                        throw new FishmanException.InvalidArgumentsException(\"Empty line or unknown task type in line: \" + \"\u003c\" + line + \"\u003e\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yongqqqq"},"content":"                    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yongqqqq"},"content":"                } catch (FishmanException.InvalidArgumentsException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yongqqqq"},"content":"                    System.out.print(e.getMessage());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yongqqqq"},"content":"                }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yongqqqq"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yongqqqq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yongqqqq"},"content":"            throw new RuntimeException(\"Error reading file: \" + e.getMessage(), e);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yongqqqq"},"content":"        return tasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"yongqqqq":97}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":" * Represents a task for the fishman bot.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":" * This class contains the details of a task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"abstract class Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"    /** The details of the task. */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"    protected String description;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"    /** The indicator for whether the task is completed. */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"     * Constructs a new Task object with the given detail and completion indicator.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"     * @param detail The details of the task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"    public Task(String detail, boolean isDone) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"        this.description \u003d detail;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"     * Determines the completion status of the task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"     * @return true or false depending on the task completion .","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"    public boolean getStatus() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"        return isDone;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"        return description;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"     * This method sets the \u0027isDone\u0027 status of the task to true.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongqqqq"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongqqqq"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongqqqq"},"content":"     * Marks the task as not done","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongqqqq"},"content":"     * This method sets the \u0027isDone\u0027 status of the task to false.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongqqqq"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongqqqq"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongqqqq"},"content":"    public abstract String getTaskType();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongqqqq"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongqqqq"},"content":"        return \"[\" + getTaskType() + \"][\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":62}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":" * The list of tasks for fishman bot.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":" * This class provides the methods to add, retrieve, and get the","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":" * size of the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"    /** The list of tasks stored as an ArrayList. */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"    /** Constructs a new TaskList with an empty list of tasks. */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"    public TaskList() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"     * @param task The Task object to be added to the list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"        tasks.add(task);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"     * Retrieves a task object from the task list at the specified index.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"     * @return The Task object found at the specified index.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"     * Marks a task at the specified index in the task list as done.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"    public void markAsDone(int index) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongqqqq"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongqqqq"},"content":"     * Marks a task at the specified index in the task list as not done.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongqqqq"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongqqqq"},"content":"    public void markAsNotDone(int index) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongqqqq"},"content":"        tasks.get(index).markAsNotDone();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongqqqq"},"content":"     * Deletes a task at the specified index in the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongqqqq"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongqqqq"},"content":"    public void delete(int index) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongqqqq"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongqqqq"},"content":"     * Returns the number of tasks currently in the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongqqqq"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongqqqq"},"content":"    public int size() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yongqqqq"},"content":"        return tasks.size();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yongqqqq"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yongqqqq"},"content":"        return tasks.iterator();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":75}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":" * Represents the ToDo task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":" * This class extends the Task class, without adding any additional attributes.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"     * Constructs a new ToDo task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"        super(description, isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"        return \"T\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":19}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":" * Represents the user interface for fishman bot.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":" * This class handles all the inputs and outputs operations.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"public class Ui {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"    /** Scanner object to read user input. */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"    /** Constructs a new Ui object and initializes the Scanner for user input. */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"    public Ui() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongqqqq"},"content":"     * Reads inputs of the user.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongqqqq"},"content":"     * @return The user\u0027s input as String.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongqqqq"},"content":"    public String readCommands() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongqqqq"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongqqqq"},"content":"     * Displays the logo","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongqqqq"},"content":"    public void displayLogo() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongqqqq"},"content":"        String logo \u003d","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongqqqq"},"content":"                \"\"\"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongqqqq"},"content":"                          _____ _     _                          \\s","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongqqqq"},"content":"                         |  ___(_)___| |__  _ __ ___   __ _ _ __ \\s","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongqqqq"},"content":"                         | |_  | / __| \u0027_ \\\\| \u0027_ ` _ \\\\ / _` | \u0027_ \\\\\\s","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongqqqq"},"content":"                         |  _| | \\\\__ \\\\ | | | | | | | | (_| | | | |","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongqqqq"},"content":"                         |_|   |_|___/_| |_|_| |_| |_|\\\\__,_|_| |_|","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongqqqq"},"content":"                        \"\"\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongqqqq"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongqqqq"},"content":"     * Displays the welcome message.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongqqqq"},"content":"    public void displayWelcome() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongqqqq"},"content":"        System.out.println(\"Hello! I\u0027m Fishman\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongqqqq"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongqqqq"},"content":"     * Displays the goodbye message.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongqqqq"},"content":"    public void displayGoodbye() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongqqqq"},"content":"        System.out.println(\"Bloop bloop. Hope to see you again soon!\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongqqqq"},"content":"     * Displays the confirmation message after task addition.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongqqqq"},"content":"     * @param task The Task object that is added.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongqqqq"},"content":"     * @param size The size of the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongqqqq"},"content":"    public void displayAddedTask(Task task, int size) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongqqqq"},"content":"        System.out.println(\"Bloop bloop, I have added the following task:\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongqqqq"},"content":"        System.out.println(task);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongqqqq"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yongqqqq"},"content":"     * Displays all tasks in the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yongqqqq"},"content":"     * @param tasks The TaskList object containing all tasks.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yongqqqq"},"content":"    public void displayTaskList(TaskList tasks) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yongqqqq"},"content":"        System.out.println(\"Bloop bloop, here are the tasks in your list:\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yongqqqq"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yongqqqq"},"content":"            System.out.println((i + 1) + \". \" + tasks.getTask(i));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yongqqqq"},"content":"     * Display the confirmation message after the task is marked or unmarked.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yongqqqq"},"content":"     * @param task The task object that is marked or unmarked.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yongqqqq"},"content":"    public void displayTaskStatus(Task task) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yongqqqq"},"content":"        if (task.isDone) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yongqqqq"},"content":"            System.out.println(\"Bloop bloop, I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yongqqqq"},"content":"        } else {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yongqqqq"},"content":"            System.out.println(\"Bloop bloop, I\u0027ve marked this task as not done yet: \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yongqqqq"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yongqqqq"},"content":"        System.out.println(task);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yongqqqq"},"content":"     * Displays the confirmation message after task deletion.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yongqqqq"},"content":"     * @param task The task that is deleted.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yongqqqq"},"content":"     * @param size The size of the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yongqqqq"},"content":"    public void displayDeletedTask(Task task, int size) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yongqqqq"},"content":"        System.out.println(\"Bloop bloop, I have removed the following task:\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yongqqqq"},"content":"        System.out.println(task);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yongqqqq"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yongqqqq"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yongqqqq"},"content":"     * Display the header to the error message.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yongqqqq"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yongqqqq"},"content":"     * @param message The message header for the error.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yongqqqq"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yongqqqq"},"content":"    public void displayError(String message) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yongqqqq"},"content":"        System.out.println(\"Glub glub! \" + message);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yongqqqq"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yongqqqq"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yongqqqq"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":113}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yongqqqq"},"content":"todo borrow book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongqqqq"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongqqqq"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongqqqq"},"content":"todo join sports club","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongqqqq"},"content":"todo borrow book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongqqqq"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongqqqq"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongqqqq"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongqqqq"},"content":"mark 2","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongqqqq"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongqqqq"},"content":"mark 6","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongqqqq"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongqqqq"},"content":"bye","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongqqqq":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongqqqq"},"content":"java -classpath ..\\bin Fishman \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"yongqqqq":1,"-":20}}]
