[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jevan13"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jevan13"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jevan13"},"content":"    archiveBaseName \u003d \"Yapper\"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jevan13"},"content":"run {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jevan13"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jevan13"},"content":"checkstyle {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jevan13"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jevan13"},"content":"repositories {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jevan13"},"content":"    mavenCentral()","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jevan13"},"content":"dependencies {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jevan13"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jevan13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jevan13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jevan13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jevan13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jevan13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jevan13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jevan13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jevan13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jevan13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jevan13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jevan13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jevan13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"jevan13":32,"-":39}},{"path":"src/main/java/yapper/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"content":"","isFullCredit":false},{"lineNumber":3,"content":"import java.time.LocalDateTime;","isFullCredit":false},{"lineNumber":4,"content":"import java.time.format.DateTimeFormatter;","isFullCredit":false},{"lineNumber":5,"content":"","isFullCredit":false},{"lineNumber":6,"content":"/**","isFullCredit":false},{"lineNumber":7,"content":" * Represents a Deadline Task, which is a task with a LocalDateTime byDateTime to finish by.","isFullCredit":false},{"lineNumber":8,"content":" */","isFullCredit":false},{"lineNumber":9,"content":"public class Deadline extends Task {","isFullCredit":false},{"lineNumber":10,"content":"    private final LocalDateTime byDateTime;","isFullCredit":false},{"lineNumber":11,"content":"","isFullCredit":false},{"lineNumber":12,"content":"    /**","isFullCredit":false},{"lineNumber":13,"content":"     * Creates an instance of Deadline.","isFullCredit":false},{"lineNumber":14,"content":"     *","isFullCredit":false},{"lineNumber":15,"content":"     * @param taskName   Name of the task.","isFullCredit":false},{"lineNumber":16,"content":"     * @param byDateTime Date and Time of ending time of Deadline.","isFullCredit":false},{"lineNumber":17,"content":"     */","isFullCredit":false},{"lineNumber":18,"content":"    public Deadline(String taskName, LocalDateTime byDateTime) {","isFullCredit":false},{"lineNumber":19,"content":"        super(taskName);","isFullCredit":false},{"lineNumber":20,"content":"        this.byDateTime \u003d byDateTime;","isFullCredit":false},{"lineNumber":21,"content":"    }","isFullCredit":false},{"lineNumber":22,"content":"","isFullCredit":false},{"lineNumber":23,"content":"    /**","isFullCredit":false},{"lineNumber":24,"content":"     * Returns a string representation of the Deadline object.","isFullCredit":false},{"lineNumber":25,"content":"     *","isFullCredit":false},{"lineNumber":26,"content":"     * @return String representation of the Deadline object.","isFullCredit":false},{"lineNumber":27,"content":"     */","isFullCredit":false},{"lineNumber":28,"content":"    public String toString() {","isFullCredit":false},{"lineNumber":29,"content":"        String byDateTimeToString \u003d this.byDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));","isFullCredit":false},{"lineNumber":30,"content":"        String doneSymbol \u003d super.hasDone() ? \"[X]\" : \"[ ]\";","isFullCredit":false},{"lineNumber":31,"content":"        return String.format(\"[T]%s %s (BY: %s)\", doneSymbol, super.getName(), byDateTimeToString);","isFullCredit":false},{"lineNumber":32,"content":"    }","isFullCredit":false},{"lineNumber":33,"content":"","isFullCredit":false},{"lineNumber":34,"content":"    /**","isFullCredit":false},{"lineNumber":35,"content":"     * Returns the string representation of the Deadline object to be recorded into a file.","isFullCredit":false},{"lineNumber":36,"content":"     * String to be decoded when loading history from the file.","isFullCredit":false},{"lineNumber":37,"content":"     *","isFullCredit":false},{"lineNumber":38,"content":"     * @return String representation of the Deadline object.","isFullCredit":false},{"lineNumber":39,"content":"     */","isFullCredit":false},{"lineNumber":40,"content":"    public String toFile() {","isFullCredit":false},{"lineNumber":41,"content":"        String fileDoneSymbol \u003d super.hasDone() ? \"D\" : \"N\";","isFullCredit":false},{"lineNumber":42,"content":"        return String.format(\"D %s--%s--%s\", fileDoneSymbol, super.getName(), this.byDateTime);","isFullCredit":false},{"lineNumber":43,"content":"    }","isFullCredit":false},{"lineNumber":44,"content":"}","isFullCredit":false}],"authorContributionMap":{"jevan13":1,"null":43}},{"path":"src/main/java/yapper/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"content":"","isFullCredit":false},{"lineNumber":3,"content":"import java.time.LocalDateTime;","isFullCredit":false},{"lineNumber":4,"content":"import java.time.format.DateTimeFormatter;","isFullCredit":false},{"lineNumber":5,"content":"","isFullCredit":false},{"lineNumber":6,"content":"/**","isFullCredit":false},{"lineNumber":7,"content":" * Represents an Event Task, which is a task with a LocalDateTime fromDateTime in which the event starts, and another","isFullCredit":false},{"lineNumber":8,"content":" * LocalDateTime toDateTime in which the event ends.","isFullCredit":false},{"lineNumber":9,"content":" */","isFullCredit":false},{"lineNumber":10,"content":"public class Event extends Task {","isFullCredit":false},{"lineNumber":11,"content":"    private final LocalDateTime fromDateTime;","isFullCredit":false},{"lineNumber":12,"content":"    private final LocalDateTime toDateTime;","isFullCredit":false},{"lineNumber":13,"content":"","isFullCredit":false},{"lineNumber":14,"content":"    /**","isFullCredit":false},{"lineNumber":15,"content":"     * Creates an instance of Event.","isFullCredit":false},{"lineNumber":16,"content":"     *","isFullCredit":false},{"lineNumber":17,"content":"     * @param taskName     Name of the task.","isFullCredit":false},{"lineNumber":18,"content":"     * @param fromDateTime Date and Time of the starting time of event.","isFullCredit":false},{"lineNumber":19,"content":"     * @param toDateTime   Date and Time of the ending time of event.","isFullCredit":false},{"lineNumber":20,"content":"     */","isFullCredit":false},{"lineNumber":21,"content":"    public Event(String taskName, LocalDateTime fromDateTime, LocalDateTime toDateTime) {","isFullCredit":false},{"lineNumber":22,"content":"        super(taskName);","isFullCredit":false},{"lineNumber":23,"content":"        this.fromDateTime \u003d fromDateTime;","isFullCredit":false},{"lineNumber":24,"content":"        this.toDateTime \u003d toDateTime;","isFullCredit":false},{"lineNumber":25,"content":"    }","isFullCredit":false},{"lineNumber":26,"content":"","isFullCredit":false},{"lineNumber":27,"content":"    /**","isFullCredit":false},{"lineNumber":28,"content":"     * Returns a string representation of the Event object.","isFullCredit":false},{"lineNumber":29,"content":"     *","isFullCredit":false},{"lineNumber":30,"content":"     * @return String representation of the Event object.","isFullCredit":false},{"lineNumber":31,"content":"     */","isFullCredit":false},{"lineNumber":32,"content":"    public String toString() {","isFullCredit":false},{"lineNumber":33,"content":"        String fromDateTimeToString \u003d this.fromDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","isFullCredit":false},{"lineNumber":34,"content":"        String toDateTimeToString \u003d this.toDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","isFullCredit":false},{"lineNumber":35,"content":"        String doneSymbol \u003d super.hasDone() ? \"[X]\" : \"[ ]\";","isFullCredit":false},{"lineNumber":36,"content":"        return String.format(\"[E]%s %s (FROM: %s TO: %s)\", doneSymbol, super.getName(),","isFullCredit":false},{"lineNumber":37,"content":"                fromDateTimeToString, toDateTimeToString);","isFullCredit":false},{"lineNumber":38,"content":"    }","isFullCredit":false},{"lineNumber":39,"content":"","isFullCredit":false},{"lineNumber":40,"content":"    /**","isFullCredit":false},{"lineNumber":41,"content":"     * Returns the string representation of the Event object to be recorded into a file.","isFullCredit":false},{"lineNumber":42,"content":"     * String to be decoded when loading history from the file.","isFullCredit":false},{"lineNumber":43,"content":"     *","isFullCredit":false},{"lineNumber":44,"content":"     * @return String representation of the Event object.","isFullCredit":false},{"lineNumber":45,"content":"     */","isFullCredit":false},{"lineNumber":46,"content":"    public String toFile() {","isFullCredit":false},{"lineNumber":47,"content":"        String fileDoneSymbol \u003d super.hasDone() ? \"D\" : \"N\";","isFullCredit":false},{"lineNumber":48,"content":"        return String.format(\"E %s--%s--%s--%s\", fileDoneSymbol, super.getName(), this.fromDateTime, this.toDateTime);","isFullCredit":false},{"lineNumber":49,"content":"    }","isFullCredit":false},{"lineNumber":50,"content":"}","isFullCredit":false}],"authorContributionMap":{"jevan13":1,"null":49}},{"path":"src/main/java/yapper/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"content":"","isFullCredit":false},{"lineNumber":3,"content":"import java.time.format.DateTimeParseException;","isFullCredit":false},{"lineNumber":4,"content":"","isFullCredit":false},{"lineNumber":5,"content":"/**","isFullCredit":false},{"lineNumber":6,"content":" * Represents a Parser, which takes in a command in String, parses it, and calls the respective command.","isFullCredit":false},{"lineNumber":7,"content":" */","isFullCredit":false},{"lineNumber":8,"content":"public class Parser {","isFullCredit":false},{"lineNumber":9,"content":"    private final TaskList taskList;","isFullCredit":false},{"lineNumber":10,"content":"","isFullCredit":false},{"lineNumber":11,"content":"    /**","isFullCredit":false},{"lineNumber":12,"content":"     * Creates an instance of Parser.","isFullCredit":false},{"lineNumber":13,"content":"     *","isFullCredit":false},{"lineNumber":14,"content":"     * @param taskList Tasklist to call after parsing commands.","isFullCredit":false},{"lineNumber":15,"content":"     */","isFullCredit":false},{"lineNumber":16,"content":"    public Parser(TaskList taskList) {","isFullCredit":false},{"lineNumber":17,"content":"        this.taskList \u003d taskList;","isFullCredit":false},{"lineNumber":18,"content":"    }","isFullCredit":false},{"lineNumber":19,"content":"","isFullCredit":false},{"lineNumber":20,"content":"    /**","isFullCredit":false},{"lineNumber":21,"content":"     * Reads the command given by user.","isFullCredit":false},{"lineNumber":22,"content":"     *","isFullCredit":false},{"lineNumber":23,"content":"     * @param command Command given by user.","isFullCredit":false},{"lineNumber":24,"content":"     */","isFullCredit":false},{"lineNumber":25,"content":"    public String readCommand(String command) {","isFullCredit":false},{"lineNumber":26,"content":"        try {","isFullCredit":false},{"lineNumber":27,"content":"            if (command.equals(\"bye\")) {","isFullCredit":false},{"lineNumber":28,"content":"                return this.taskList.exit();","isFullCredit":false},{"lineNumber":29,"content":"            } else if (command.equals(\"list\")) {","isFullCredit":false},{"lineNumber":30,"content":"                return this.taskList.returnList();","isFullCredit":false},{"lineNumber":31,"content":"            } else if (command.startsWith(\"mark\")) {","isFullCredit":false},{"lineNumber":32,"content":"                return this.taskList.mark(command);","isFullCredit":false},{"lineNumber":33,"content":"            } else if (command.startsWith(\"unmark\")) {","isFullCredit":false},{"lineNumber":34,"content":"                return this.taskList.unmark(command);","isFullCredit":false},{"lineNumber":35,"content":"            } else if (command.startsWith(\"todo\")) {","isFullCredit":false},{"lineNumber":36,"content":"                return this.taskList.addToDo(command);","isFullCredit":false},{"lineNumber":37,"content":"            } else if (command.startsWith(\"deadline\")) {","isFullCredit":false},{"lineNumber":38,"content":"                return this.taskList.addDeadline(command);","isFullCredit":false},{"lineNumber":39,"content":"            } else if (command.startsWith(\"event\")) {","isFullCredit":false},{"lineNumber":40,"content":"                return this.taskList.addEvent(command);","isFullCredit":false},{"lineNumber":41,"content":"            } else if (command.startsWith(\"delete\")) {","isFullCredit":false},{"lineNumber":42,"content":"                return this.taskList.deleteTask(command);","isFullCredit":false},{"lineNumber":43,"content":"            } else if (command.startsWith(\"find\")) {","isFullCredit":false},{"lineNumber":44,"content":"                return this.taskList.findTask(command);","isFullCredit":false},{"lineNumber":45,"content":"            } else {","isFullCredit":false},{"lineNumber":46,"content":"                throw new YapperException(\"Yapper don\u0027t know this command :(\");","isFullCredit":false},{"lineNumber":47,"content":"            }","isFullCredit":false},{"lineNumber":48,"content":"        } catch (YapperException e) {","isFullCredit":false},{"lineNumber":49,"content":"            System.out.println(e.getMessage());","isFullCredit":false},{"lineNumber":50,"content":"            return e.getMessage();","isFullCredit":false},{"lineNumber":51,"content":"        } catch (NumberFormatException | DateTimeParseException e) {","isFullCredit":false},{"lineNumber":52,"content":"            String toReturn \u003d \"Invalid Date Time Format!\" + \"\\n\" + \"Correct Format is YYYY/MM/DD (HHMM)\";","isFullCredit":false},{"lineNumber":53,"content":"            System.out.println(toReturn);","isFullCredit":false},{"lineNumber":54,"content":"            return toReturn;","isFullCredit":false},{"lineNumber":55,"content":"        }","isFullCredit":false},{"lineNumber":56,"content":"","isFullCredit":false},{"lineNumber":57,"content":"    }","isFullCredit":false},{"lineNumber":58,"content":"}","isFullCredit":false}],"authorContributionMap":{"jevan13":1,"null":57}},{"path":"src/main/java/yapper/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"content":"","isFullCredit":false},{"lineNumber":3,"content":"import java.io.File;","isFullCredit":false},{"lineNumber":4,"content":"import java.io.FileWriter;","isFullCredit":false},{"lineNumber":5,"content":"import java.io.IOException;","isFullCredit":false},{"lineNumber":6,"content":"import java.time.LocalDateTime;","isFullCredit":false},{"lineNumber":7,"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":8,"content":"import java.util.Scanner;","isFullCredit":false},{"lineNumber":9,"content":"","isFullCredit":false},{"lineNumber":10,"content":"/**","isFullCredit":false},{"lineNumber":11,"content":" * Represents a Storage, which reads and write from a file to load or save the history of Tasks in the list.","isFullCredit":false},{"lineNumber":12,"content":" */","isFullCredit":false},{"lineNumber":13,"content":"public class Storage {","isFullCredit":false},{"lineNumber":14,"content":"    private File file;","isFullCredit":false},{"lineNumber":15,"content":"","isFullCredit":false},{"lineNumber":16,"content":"    /**","isFullCredit":false},{"lineNumber":17,"content":"     * Creates an instance of Storage.","isFullCredit":false},{"lineNumber":18,"content":"     *","isFullCredit":false},{"lineNumber":19,"content":"     * @param file The file object that Storage will read and write to.","isFullCredit":false},{"lineNumber":20,"content":"     */","isFullCredit":false},{"lineNumber":21,"content":"    public Storage(File file) {","isFullCredit":false},{"lineNumber":22,"content":"        this.file \u003d file;","isFullCredit":false},{"lineNumber":23,"content":"    }","isFullCredit":false},{"lineNumber":24,"content":"","isFullCredit":false},{"lineNumber":25,"content":"    /**","isFullCredit":false},{"lineNumber":26,"content":"     * Writes the current list of tasks into the file.","isFullCredit":false},{"lineNumber":27,"content":"     *","isFullCredit":false},{"lineNumber":28,"content":"     * @param listOfTasks List of task to write into the file.","isFullCredit":false},{"lineNumber":29,"content":"     */","isFullCredit":false},{"lineNumber":30,"content":"    public void writeHistory(ArrayList\u003cTask\u003e listOfTasks) {","isFullCredit":false},{"lineNumber":31,"content":"        try {","isFullCredit":false},{"lineNumber":32,"content":"            FileWriter filewriter \u003d new FileWriter(file);","isFullCredit":false},{"lineNumber":33,"content":"            for (Task task : listOfTasks) {","isFullCredit":false},{"lineNumber":34,"content":"                filewriter.write(task.toFile() + \"\\n\");","isFullCredit":false},{"lineNumber":35,"content":"            }","isFullCredit":false},{"lineNumber":36,"content":"            filewriter.close();","isFullCredit":false},{"lineNumber":37,"content":"        } catch (IOException e) {","isFullCredit":false},{"lineNumber":38,"content":"            System.out.println(\"Unable to write history\");","isFullCredit":false},{"lineNumber":39,"content":"        }","isFullCredit":false},{"lineNumber":40,"content":"    }","isFullCredit":false},{"lineNumber":41,"content":"","isFullCredit":false},{"lineNumber":42,"content":"    /**","isFullCredit":false},{"lineNumber":43,"content":"     * Loads the history of Tasks into the current list of task.","isFullCredit":false},{"lineNumber":44,"content":"     *","isFullCredit":false},{"lineNumber":45,"content":"     * @return TaskList with the loaded list of tasks.","isFullCredit":false},{"lineNumber":46,"content":"     */","isFullCredit":false},{"lineNumber":47,"content":"    public TaskList loadHistory() {","isFullCredit":false},{"lineNumber":48,"content":"        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":49,"content":"","isFullCredit":false},{"lineNumber":50,"content":"        try {","isFullCredit":false},{"lineNumber":51,"content":"            if (!this.file.exists()) {","isFullCredit":false},{"lineNumber":52,"content":"                file.getParentFile().mkdirs();","isFullCredit":false},{"lineNumber":53,"content":"                file.createNewFile();","isFullCredit":false},{"lineNumber":54,"content":"            }","isFullCredit":false},{"lineNumber":55,"content":"            if (this.file.canRead()) {","isFullCredit":false},{"lineNumber":56,"content":"                Scanner sc \u003d new Scanner(this.file);","isFullCredit":false},{"lineNumber":57,"content":"                while (sc.hasNextLine()) {","isFullCredit":false},{"lineNumber":58,"content":"                    String nextline \u003d sc.nextLine();","isFullCredit":false},{"lineNumber":59,"content":"                    this.loadTask(listOfTasks, nextline);","isFullCredit":false},{"lineNumber":60,"content":"                }","isFullCredit":false},{"lineNumber":61,"content":"            } else {","isFullCredit":false},{"lineNumber":62,"content":"                throw new YapperException(\"Unable to read file\");","isFullCredit":false},{"lineNumber":63,"content":"            }","isFullCredit":false},{"lineNumber":64,"content":"        } catch (IOException var4) {","isFullCredit":false},{"lineNumber":65,"content":"            System.out.println(\"Unable to load history\");","isFullCredit":false},{"lineNumber":66,"content":"        } catch (YapperException e) {","isFullCredit":false},{"lineNumber":67,"content":"            System.out.println(e.getMessage());","isFullCredit":false},{"lineNumber":68,"content":"        }","isFullCredit":false},{"lineNumber":69,"content":"","isFullCredit":false},{"lineNumber":70,"content":"        return new TaskList(listOfTasks, this);","isFullCredit":false},{"lineNumber":71,"content":"    }","isFullCredit":false},{"lineNumber":72,"content":"","isFullCredit":false},{"lineNumber":73,"content":"    /**","isFullCredit":false},{"lineNumber":74,"content":"     * Loads a task into the current list of tasks.","isFullCredit":false},{"lineNumber":75,"content":"     *","isFullCredit":false},{"lineNumber":76,"content":"     * @param listOfTasks List of tasks for task to be added into.","isFullCredit":false},{"lineNumber":77,"content":"     * @param input       String to be decoded into a Task","isFullCredit":false},{"lineNumber":78,"content":"     * @throws YapperException If String has the wrong format and is unable to be decoded.","isFullCredit":false},{"lineNumber":79,"content":"     */","isFullCredit":false},{"lineNumber":80,"content":"    public void loadTask(ArrayList\u003cTask\u003e listOfTasks, String input) throws YapperException {","isFullCredit":false},{"lineNumber":81,"content":"        String typeOfTask \u003d input.substring(0, 1);","isFullCredit":false},{"lineNumber":82,"content":"        String[] taskParameter \u003d input.substring(2).split(\"--\");","isFullCredit":false},{"lineNumber":83,"content":"        String fileDoneSymbol;","isFullCredit":false},{"lineNumber":84,"content":"        String taskName;","isFullCredit":false},{"lineNumber":85,"content":"        if (typeOfTask.equals(\"T\")) {","isFullCredit":false},{"lineNumber":86,"content":"            if (taskParameter.length !\u003d 2) {","isFullCredit":false},{"lineNumber":87,"content":"                throw new YapperException(\"Unable to read file: Invalid ToDo Parameters\");","isFullCredit":false},{"lineNumber":88,"content":"            }","isFullCredit":false},{"lineNumber":89,"content":"","isFullCredit":false},{"lineNumber":90,"content":"            fileDoneSymbol \u003d taskParameter[0];","isFullCredit":false},{"lineNumber":91,"content":"            taskName \u003d taskParameter[1];","isFullCredit":false},{"lineNumber":92,"content":"            boolean isDone \u003d fileDoneSymbol.equals(\"D\");","isFullCredit":false},{"lineNumber":93,"content":"            ToDo toDo \u003d new ToDo(taskName);","isFullCredit":false},{"lineNumber":94,"content":"            toDo.setDone(isDone);","isFullCredit":false},{"lineNumber":95,"content":"            listOfTasks.add(toDo);","isFullCredit":false},{"lineNumber":96,"content":"        } else {","isFullCredit":false},{"lineNumber":97,"content":"            String fromString;","isFullCredit":false},{"lineNumber":98,"content":"            if (typeOfTask.equals(\"D\")) {","isFullCredit":false},{"lineNumber":99,"content":"                if (taskParameter.length !\u003d 3) {","isFullCredit":false},{"lineNumber":100,"content":"                    throw new YapperException(\"Unable to read file: Invalid Deadline Parameters\");","isFullCredit":false},{"lineNumber":101,"content":"                }","isFullCredit":false},{"lineNumber":102,"content":"","isFullCredit":false},{"lineNumber":103,"content":"                fileDoneSymbol \u003d taskParameter[0];","isFullCredit":false},{"lineNumber":104,"content":"                taskName \u003d taskParameter[1];","isFullCredit":false},{"lineNumber":105,"content":"                fromString \u003d taskParameter[2];","isFullCredit":false},{"lineNumber":106,"content":"                boolean isDone \u003d fileDoneSymbol.equals(\"D\");","isFullCredit":false},{"lineNumber":107,"content":"                LocalDateTime byDateTime \u003d LocalDateTime.parse(fromString);","isFullCredit":false},{"lineNumber":108,"content":"                Deadline deadline \u003d new Deadline(taskName, byDateTime);","isFullCredit":false},{"lineNumber":109,"content":"                deadline.setDone(isDone);","isFullCredit":false},{"lineNumber":110,"content":"                listOfTasks.add(deadline);","isFullCredit":false},{"lineNumber":111,"content":"            } else {","isFullCredit":false},{"lineNumber":112,"content":"                if (!typeOfTask.equals(\"E\")) {","isFullCredit":false},{"lineNumber":113,"content":"                    throw new YapperException(\"Unable to read file: Invalid Task type\");","isFullCredit":false},{"lineNumber":114,"content":"                }","isFullCredit":false},{"lineNumber":115,"content":"","isFullCredit":false},{"lineNumber":116,"content":"                if (taskParameter.length !\u003d 4) {","isFullCredit":false},{"lineNumber":117,"content":"                    throw new YapperException(\"Unable to read file: Invalid Event Parameters\");","isFullCredit":false},{"lineNumber":118,"content":"                }","isFullCredit":false},{"lineNumber":119,"content":"","isFullCredit":false},{"lineNumber":120,"content":"                fileDoneSymbol \u003d taskParameter[0];","isFullCredit":false},{"lineNumber":121,"content":"                taskName \u003d taskParameter[1];","isFullCredit":false},{"lineNumber":122,"content":"                fromString \u003d taskParameter[2];","isFullCredit":false},{"lineNumber":123,"content":"                String toString \u003d taskParameter[3];","isFullCredit":false},{"lineNumber":124,"content":"                boolean isDone \u003d fileDoneSymbol.equals(\"D\");","isFullCredit":false},{"lineNumber":125,"content":"                LocalDateTime fromDateTime \u003d LocalDateTime.parse(fromString);","isFullCredit":false},{"lineNumber":126,"content":"                LocalDateTime toDateTime \u003d LocalDateTime.parse(toString);","isFullCredit":false},{"lineNumber":127,"content":"                Event event \u003d new Event(taskName, fromDateTime, toDateTime);","isFullCredit":false},{"lineNumber":128,"content":"                event.setDone(isDone);","isFullCredit":false},{"lineNumber":129,"content":"                listOfTasks.add(event);","isFullCredit":false},{"lineNumber":130,"content":"            }","isFullCredit":false},{"lineNumber":131,"content":"        }","isFullCredit":false},{"lineNumber":132,"content":"    }","isFullCredit":false},{"lineNumber":133,"content":"}","isFullCredit":false}],"authorContributionMap":{"jevan13":1,"null":132}},{"path":"src/main/java/yapper/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"content":"","isFullCredit":false},{"lineNumber":3,"content":"/**","isFullCredit":false},{"lineNumber":4,"content":" * Represents a Task.","isFullCredit":false},{"lineNumber":5,"content":" */","isFullCredit":false},{"lineNumber":6,"content":"public abstract class Task {","isFullCredit":false},{"lineNumber":7,"content":"    public static final String DONE_SYMBOL \u003d \"[X]\";","isFullCredit":false},{"lineNumber":8,"content":"    public static final String UNDONE_SYMBOL \u003d \"[ ]\";","isFullCredit":false},{"lineNumber":9,"content":"    public static final String FILE_DONE_SYMBOL \u003d \"D\";","isFullCredit":false},{"lineNumber":10,"content":"    public static final String FILE_UNDONE_SYMBOL \u003d \"N\";","isFullCredit":false},{"lineNumber":11,"content":"    private final String name;","isFullCredit":false},{"lineNumber":12,"content":"    private boolean isDone;","isFullCredit":false},{"lineNumber":13,"content":"","isFullCredit":false},{"lineNumber":14,"content":"    /**","isFullCredit":false},{"lineNumber":15,"content":"     * Creates an instance of a Task.","isFullCredit":false},{"lineNumber":16,"content":"     *","isFullCredit":false},{"lineNumber":17,"content":"     * @param taskName Name of the task.","isFullCredit":false},{"lineNumber":18,"content":"     */","isFullCredit":false},{"lineNumber":19,"content":"    public Task(String taskName) {","isFullCredit":false},{"lineNumber":20,"content":"        this.name \u003d taskName;","isFullCredit":false},{"lineNumber":21,"content":"    }","isFullCredit":false},{"lineNumber":22,"content":"","isFullCredit":false},{"lineNumber":23,"content":"    public void setDone(boolean bool) {","isFullCredit":false},{"lineNumber":24,"content":"        this.isDone \u003d bool;","isFullCredit":false},{"lineNumber":25,"content":"    }","isFullCredit":false},{"lineNumber":26,"content":"","isFullCredit":false},{"lineNumber":27,"content":"    public boolean hasDone() {","isFullCredit":false},{"lineNumber":28,"content":"        return this.isDone;","isFullCredit":false},{"lineNumber":29,"content":"    }","isFullCredit":false},{"lineNumber":30,"content":"","isFullCredit":false},{"lineNumber":31,"content":"    public String getName() {","isFullCredit":false},{"lineNumber":32,"content":"        return this.name;","isFullCredit":false},{"lineNumber":33,"content":"    }","isFullCredit":false},{"lineNumber":34,"content":"","isFullCredit":false},{"lineNumber":35,"content":"    /**","isFullCredit":false},{"lineNumber":36,"content":"     * Returns the string representation of the Task object to be recorded into a file.","isFullCredit":false},{"lineNumber":37,"content":"     * String to be decoded when loading history from the file.","isFullCredit":false},{"lineNumber":38,"content":"     *","isFullCredit":false},{"lineNumber":39,"content":"     * @return String representation of the Task object.","isFullCredit":false},{"lineNumber":40,"content":"     */","isFullCredit":false},{"lineNumber":41,"content":"    public abstract String toFile();","isFullCredit":false},{"lineNumber":42,"content":"","isFullCredit":false},{"lineNumber":43,"content":"    public boolean contains(String word) {","isFullCredit":false},{"lineNumber":44,"content":"        return this.name.contains(word);","isFullCredit":false},{"lineNumber":45,"content":"    }","isFullCredit":false},{"lineNumber":46,"content":"}","isFullCredit":false}],"authorContributionMap":{"jevan13":1,"null":45}},{"path":"src/main/java/yapper/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"content":"","isFullCredit":false},{"lineNumber":3,"content":"import java.time.LocalDateTime;","isFullCredit":false},{"lineNumber":4,"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":5,"content":"","isFullCredit":false},{"lineNumber":6,"content":"/**","isFullCredit":false},{"lineNumber":7,"content":" * Represents a TaskList, which contains the ArrayList of Tasks. It also has a reference to a Storage object to","isFullCredit":false},{"lineNumber":8,"content":" * read and write the history of Tasks whenever it is updated.","isFullCredit":false},{"lineNumber":9,"content":" */","isFullCredit":false},{"lineNumber":10,"content":"public class TaskList {","isFullCredit":false},{"lineNumber":11,"content":"    public final Storage storage;","isFullCredit":false},{"lineNumber":12,"content":"    private final ArrayList\u003cTask\u003e listOfTask;","isFullCredit":false},{"lineNumber":13,"content":"","isFullCredit":false},{"lineNumber":14,"content":"    /**","isFullCredit":false},{"lineNumber":15,"content":"     * Creates an instance of TaskList.","isFullCredit":false},{"lineNumber":16,"content":"     *","isFullCredit":false},{"lineNumber":17,"content":"     * @param listOfTask List of tasks to be accessed.","isFullCredit":false},{"lineNumber":18,"content":"     * @param storage    Storage object to read and write tasks into.","isFullCredit":false},{"lineNumber":19,"content":"     */","isFullCredit":false},{"lineNumber":20,"content":"    public TaskList(ArrayList\u003cTask\u003e listOfTask, Storage storage) {","isFullCredit":false},{"lineNumber":21,"content":"        this.listOfTask \u003d listOfTask;","isFullCredit":false},{"lineNumber":22,"content":"        this.storage \u003d storage;","isFullCredit":false},{"lineNumber":23,"content":"    }","isFullCredit":false},{"lineNumber":24,"content":"","isFullCredit":false},{"lineNumber":25,"content":"    /**","isFullCredit":false},{"lineNumber":26,"content":"     * Finds the Task in the ArrayList of Tasks that matches the String.","isFullCredit":false},{"lineNumber":27,"content":"     *","isFullCredit":false},{"lineNumber":28,"content":"     * @param command \"find\" followed by the String to search in the ArrayList of Tasks.","isFullCredit":false},{"lineNumber":29,"content":"     * @throws YapperException If the String following \"find\" is empty.","isFullCredit":false},{"lineNumber":30,"content":"     */","isFullCredit":false},{"lineNumber":31,"content":"    public String findTask(String command) throws YapperException {","isFullCredit":false},{"lineNumber":32,"content":"        if (command.equals(\"find\") || command.equals(\"find \")) {","isFullCredit":false},{"lineNumber":33,"content":"            throw new YapperException(\"String to find cannot be empty!\");","isFullCredit":false},{"lineNumber":34,"content":"        } else {","isFullCredit":false},{"lineNumber":35,"content":"            String wordToFind \u003d command.substring(5);","isFullCredit":false},{"lineNumber":36,"content":"            ArrayList\u003cTask\u003e listOfTaskWithWord \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":37,"content":"            TaskList taskList \u003d new TaskList(listOfTaskWithWord, null);","isFullCredit":false},{"lineNumber":38,"content":"            for (Task task : listOfTask) {","isFullCredit":false},{"lineNumber":39,"content":"                if (task.contains(wordToFind)) {","isFullCredit":false},{"lineNumber":40,"content":"                    listOfTaskWithWord.add(task);","isFullCredit":false},{"lineNumber":41,"content":"                }","isFullCredit":false},{"lineNumber":42,"content":"            }","isFullCredit":false},{"lineNumber":43,"content":"            return taskList.returnList();","isFullCredit":false},{"lineNumber":44,"content":"        }","isFullCredit":false},{"lineNumber":45,"content":"    }","isFullCredit":false},{"lineNumber":46,"content":"","isFullCredit":false},{"lineNumber":47,"content":"    /**","isFullCredit":false},{"lineNumber":48,"content":"     * Converts a String into a LocalDateTime object.","isFullCredit":false},{"lineNumber":49,"content":"     * If Time is unspecified, the default time for a starting time is 00:00,","isFullCredit":false},{"lineNumber":50,"content":"     * and the default time for an ending time is 23:59.","isFullCredit":false},{"lineNumber":51,"content":"     *","isFullCredit":false},{"lineNumber":52,"content":"     * @param dateTime Date and/or Time to be converted.","isFullCredit":false},{"lineNumber":53,"content":"     * @param type     0 or 1: 0 for starting time, 1 for ending time.","isFullCredit":false},{"lineNumber":54,"content":"     * @return LocalDateTime objected created with the given date and time.","isFullCredit":false},{"lineNumber":55,"content":"     */","isFullCredit":false},{"lineNumber":56,"content":"    public static LocalDateTime convertStringToDateTime(String dateTime, int type) {","isFullCredit":false},{"lineNumber":57,"content":"        try {","isFullCredit":false},{"lineNumber":58,"content":"            String[] splitDateTime \u003d dateTime.split(\" \");","isFullCredit":false},{"lineNumber":59,"content":"            String date \u003d splitDateTime[0];","isFullCredit":false},{"lineNumber":60,"content":"            String[] splitYearMonthDay \u003d date.split(\"/\");","isFullCredit":false},{"lineNumber":61,"content":"            String year \u003d splitYearMonthDay[0];","isFullCredit":false},{"lineNumber":62,"content":"            String month \u003d splitYearMonthDay[1];","isFullCredit":false},{"lineNumber":63,"content":"            String day \u003d splitYearMonthDay[2];","isFullCredit":false},{"lineNumber":64,"content":"            LocalDateTime toReturn;","isFullCredit":false},{"lineNumber":65,"content":"","isFullCredit":false},{"lineNumber":66,"content":"            if (splitDateTime.length \u003d\u003d 2) {","isFullCredit":false},{"lineNumber":67,"content":"                String time \u003d splitDateTime[1];","isFullCredit":false},{"lineNumber":68,"content":"                String hour \u003d time.substring(0, 2);","isFullCredit":false},{"lineNumber":69,"content":"                String minute \u003d time.substring(2);","isFullCredit":false},{"lineNumber":70,"content":"                String toParse \u003d String.format(\"%s-%s-%sT%s:%s\", year, month, day, hour, minute);","isFullCredit":false},{"lineNumber":71,"content":"                toReturn \u003d LocalDateTime.parse(toParse);","isFullCredit":false},{"lineNumber":72,"content":"            } else if (type \u003d\u003d 0) {","isFullCredit":false},{"lineNumber":73,"content":"                String toParse \u003d String.format(\"%s-%s-%sT00:00\", year, month, day);","isFullCredit":false},{"lineNumber":74,"content":"                toReturn \u003d LocalDateTime.parse(toParse);","isFullCredit":false},{"lineNumber":75,"content":"            } else if (type \u003d\u003d 1) {","isFullCredit":false},{"lineNumber":76,"content":"                String toParse \u003d String.format(\"%s-%s-%sT23:59\", year, month, day);","isFullCredit":false},{"lineNumber":77,"content":"                toReturn \u003d LocalDateTime.parse(toParse);","isFullCredit":false},{"lineNumber":78,"content":"            } else {","isFullCredit":false},{"lineNumber":79,"content":"                throw new YapperException(\"Error in stringToDateTime: Wrong Type\");","isFullCredit":false},{"lineNumber":80,"content":"            }","isFullCredit":false},{"lineNumber":81,"content":"","isFullCredit":false},{"lineNumber":82,"content":"            return toReturn;","isFullCredit":false},{"lineNumber":83,"content":"        } catch (YapperException e) {","isFullCredit":false},{"lineNumber":84,"content":"            System.out.println(e.getMessage());","isFullCredit":false},{"lineNumber":85,"content":"        }","isFullCredit":false},{"lineNumber":86,"content":"","isFullCredit":false},{"lineNumber":87,"content":"        return null;","isFullCredit":false},{"lineNumber":88,"content":"    }","isFullCredit":false},{"lineNumber":89,"content":"","isFullCredit":false},{"lineNumber":90,"content":"    /**","isFullCredit":false},{"lineNumber":91,"content":"     * Deletes a task off the list of tasks.","isFullCredit":false},{"lineNumber":92,"content":"     *","isFullCredit":false},{"lineNumber":93,"content":"     * @param command Word \"delete\" followed by a number corresponding to the task number to be deleted.","isFullCredit":false},{"lineNumber":94,"content":"     * @throws YapperException If the string following \"delete\" cannot be treated as a valid task number.","isFullCredit":false},{"lineNumber":95,"content":"     */","isFullCredit":false},{"lineNumber":96,"content":"    public String deleteTask(String command) throws YapperException {","isFullCredit":false},{"lineNumber":97,"content":"        if (command.length() \u003d\u003d 6) {","isFullCredit":false},{"lineNumber":98,"content":"            throw new YapperException(\"Task Number cannot be empty!\");","isFullCredit":false},{"lineNumber":99,"content":"        } else {","isFullCredit":false},{"lineNumber":100,"content":"            String input \u003d command.substring(7);","isFullCredit":false},{"lineNumber":101,"content":"            int order \u003d Integer.parseInt(input);","isFullCredit":false},{"lineNumber":102,"content":"            if (order \u003c\u003d 0) {","isFullCredit":false},{"lineNumber":103,"content":"                throw new YapperException(\"Task Number cannot be less than 1!\");","isFullCredit":false},{"lineNumber":104,"content":"            } else if (order \u003e this.listOfTask.size()) {","isFullCredit":false},{"lineNumber":105,"content":"                throw new YapperException(\"Task Number cannot be more than size of list!\");","isFullCredit":false},{"lineNumber":106,"content":"            } else {","isFullCredit":false},{"lineNumber":107,"content":"                Task task \u003d this.listOfTask.get(order - 1);","isFullCredit":false},{"lineNumber":108,"content":"                this.listOfTask.remove(order - 1);","isFullCredit":false},{"lineNumber":109,"content":"                String toReturn \u003d \"Noted. I\u0027ve removed this task: \\n\"","isFullCredit":false},{"lineNumber":110,"content":"                        + task + \"\\n\" + \"Now you have \" + this.listOfTask.size() + \" tasks in the list\";","isFullCredit":false},{"lineNumber":111,"content":"                System.out.println(toReturn);","isFullCredit":false},{"lineNumber":112,"content":"                this.storage.writeHistory(this.listOfTask);","isFullCredit":false},{"lineNumber":113,"content":"                return toReturn;","isFullCredit":false},{"lineNumber":114,"content":"            }","isFullCredit":false},{"lineNumber":115,"content":"        }","isFullCredit":false},{"lineNumber":116,"content":"    }","isFullCredit":false},{"lineNumber":117,"content":"","isFullCredit":false},{"lineNumber":118,"content":"    /**","isFullCredit":false},{"lineNumber":119,"content":"     * Add a ToDo object into the list of tasks.","isFullCredit":false},{"lineNumber":120,"content":"     *","isFullCredit":false},{"lineNumber":121,"content":"     * @param command Word \"todo\" followed by the name of the task.","isFullCredit":false},{"lineNumber":122,"content":"     * @throws YapperException If the string following \"todo\" is empty.","isFullCredit":false},{"lineNumber":123,"content":"     */","isFullCredit":false},{"lineNumber":124,"content":"    public String addToDo(String command) throws YapperException {","isFullCredit":false},{"lineNumber":125,"content":"        if (command.equals(\"todo\") || command.equals(\"todo \")) {","isFullCredit":false},{"lineNumber":126,"content":"            throw new YapperException(\"Description for ToDo cannot be empty!\");","isFullCredit":false},{"lineNumber":127,"content":"        } else {","isFullCredit":false},{"lineNumber":128,"content":"            String input \u003d command.substring(5);","isFullCredit":false},{"lineNumber":129,"content":"            ToDo todo \u003d new ToDo(input);","isFullCredit":false},{"lineNumber":130,"content":"            return this.addTask(todo);","isFullCredit":false},{"lineNumber":131,"content":"        }","isFullCredit":false},{"lineNumber":132,"content":"    }","isFullCredit":false},{"lineNumber":133,"content":"","isFullCredit":false},{"lineNumber":134,"content":"    /**","isFullCredit":false},{"lineNumber":135,"content":"     * Add a Deadline object into the list of tasks.","isFullCredit":false},{"lineNumber":136,"content":"     *","isFullCredit":false},{"lineNumber":137,"content":"     * @param command Word \"deadline\" followed by the name of the task, \" /by \", followed by the ending time.","isFullCredit":false},{"lineNumber":138,"content":"     * @throws YapperException If the name of the task is empty.","isFullCredit":false},{"lineNumber":139,"content":"     * @throws YapperException If \"/by\" command does not exist","isFullCredit":false},{"lineNumber":140,"content":"     * @throws YapperException If the ending time is empty.","isFullCredit":false},{"lineNumber":141,"content":"     */","isFullCredit":false},{"lineNumber":142,"content":"    public String addDeadline(String command) throws YapperException {","isFullCredit":false},{"lineNumber":143,"content":"        if (command.startsWith(\"deadline /by \")) {","isFullCredit":false},{"lineNumber":144,"content":"            throw new YapperException(\"Name for Deadline cannot be empty!\");","isFullCredit":false},{"lineNumber":145,"content":"        } else {","isFullCredit":false},{"lineNumber":146,"content":"            String input \u003d command.substring(9);","isFullCredit":false},{"lineNumber":147,"content":"            String[] split \u003d input.split(\" /by \");","isFullCredit":false},{"lineNumber":148,"content":"            if (!input.contains(\" /by \")) {","isFullCredit":false},{"lineNumber":149,"content":"                throw new YapperException(\"Deadline require /by command with Deadline Time\");","isFullCredit":false},{"lineNumber":150,"content":"            } else if (split.length \u003d\u003d 1) {","isFullCredit":false},{"lineNumber":151,"content":"                throw new YapperException(\"Deadline Time is empty!\");","isFullCredit":false},{"lineNumber":152,"content":"            } else {","isFullCredit":false},{"lineNumber":153,"content":"                LocalDateTime byDateTime \u003d convertStringToDateTime(split[1], 1);","isFullCredit":false},{"lineNumber":154,"content":"                Deadline deadline \u003d new Deadline(split[0], byDateTime);","isFullCredit":false},{"lineNumber":155,"content":"                return this.addTask(deadline);","isFullCredit":false},{"lineNumber":156,"content":"            }","isFullCredit":false},{"lineNumber":157,"content":"        }","isFullCredit":false},{"lineNumber":158,"content":"    }","isFullCredit":false},{"lineNumber":159,"content":"","isFullCredit":false},{"lineNumber":160,"content":"    /**","isFullCredit":false},{"lineNumber":161,"content":"     * Add a Event object into the list of tasks.","isFullCredit":false},{"lineNumber":162,"content":"     *","isFullCredit":false},{"lineNumber":163,"content":"     * @param command Word \"event\" followed by the name of the task, \" /from \", followed by the starting time,","isFullCredit":false},{"lineNumber":164,"content":"     *                \" /to \", followed by the ending time.","isFullCredit":false},{"lineNumber":165,"content":"     * @throws YapperException If name of event is empty.","isFullCredit":false},{"lineNumber":166,"content":"     * @throws YapperException If \"/from\" command does not exist.","isFullCredit":false},{"lineNumber":167,"content":"     * @throws YapperException If \"/to\" command does not exist","isFullCredit":false},{"lineNumber":168,"content":"     * @throws YapperException If starting time is empty.","isFullCredit":false},{"lineNumber":169,"content":"     * @throws YapperException If ending time is empty.","isFullCredit":false},{"lineNumber":170,"content":"     */","isFullCredit":false},{"lineNumber":171,"content":"    public String addEvent(String command) throws YapperException {","isFullCredit":false},{"lineNumber":172,"content":"        if (command.equals(\"event /from \")) {","isFullCredit":false},{"lineNumber":173,"content":"            throw new YapperException(\"Name for Event cannot be empty!\");","isFullCredit":false},{"lineNumber":174,"content":"        } else {","isFullCredit":false},{"lineNumber":175,"content":"            String input \u003d command.substring(6);","isFullCredit":false},{"lineNumber":176,"content":"            String[] split \u003d input.split(\" /from \");","isFullCredit":false},{"lineNumber":177,"content":"            String[] split2 \u003d split[1].split(\" /to \");","isFullCredit":false},{"lineNumber":178,"content":"            if (!input.contains(\" /from \")) {","isFullCredit":false},{"lineNumber":179,"content":"                throw new YapperException(\"Event require /from command with Start Time\");","isFullCredit":false},{"lineNumber":180,"content":"            } else if (!input.contains(\" /to \")) {","isFullCredit":false},{"lineNumber":181,"content":"                throw new YapperException(\"Event require /to command with End Time\");","isFullCredit":false},{"lineNumber":182,"content":"            } else if (split2[0].isEmpty()) {","isFullCredit":false},{"lineNumber":183,"content":"                throw new YapperException(\"Event Start Time is empty!\");","isFullCredit":false},{"lineNumber":184,"content":"            } else if (split2[1].isEmpty()) {","isFullCredit":false},{"lineNumber":185,"content":"                throw new YapperException(\"Event End Time is empty!\");","isFullCredit":false},{"lineNumber":186,"content":"            } else {","isFullCredit":false},{"lineNumber":187,"content":"                LocalDateTime fromDateTime \u003d convertStringToDateTime(split2[0], 0);","isFullCredit":false},{"lineNumber":188,"content":"                LocalDateTime toDateTime \u003d convertStringToDateTime(split2[1], 1);","isFullCredit":false},{"lineNumber":189,"content":"                Event event \u003d new Event(split[0], fromDateTime, toDateTime);","isFullCredit":false},{"lineNumber":190,"content":"                return this.addTask(event);","isFullCredit":false},{"lineNumber":191,"content":"            }","isFullCredit":false},{"lineNumber":192,"content":"        }","isFullCredit":false},{"lineNumber":193,"content":"    }","isFullCredit":false},{"lineNumber":194,"content":"","isFullCredit":false},{"lineNumber":195,"content":"    /**","isFullCredit":false},{"lineNumber":196,"content":"     * Add a Task object into the list of tasks.","isFullCredit":false},{"lineNumber":197,"content":"     *","isFullCredit":false},{"lineNumber":198,"content":"     * @param task Task to be added into the list.","isFullCredit":false},{"lineNumber":199,"content":"     */","isFullCredit":false},{"lineNumber":200,"content":"    public String addTask(Task task) {","isFullCredit":false},{"lineNumber":201,"content":"        this.listOfTask.add(task);","isFullCredit":false},{"lineNumber":202,"content":"        String toReturn \u003d \"Got it. I\u0027ve added this task:\\n\" + task","isFullCredit":false},{"lineNumber":203,"content":"                + \"\\nNow you have \" + this.listOfTask.size() + \" tasks in the list\";","isFullCredit":false},{"lineNumber":204,"content":"        System.out.println(toReturn);","isFullCredit":false},{"lineNumber":205,"content":"        this.storage.writeHistory(this.listOfTask);","isFullCredit":false},{"lineNumber":206,"content":"        return toReturn;","isFullCredit":false},{"lineNumber":207,"content":"    }","isFullCredit":false},{"lineNumber":208,"content":"","isFullCredit":false},{"lineNumber":209,"content":"    /**","isFullCredit":false},{"lineNumber":210,"content":"     * Marks a task in the list as done.","isFullCredit":false},{"lineNumber":211,"content":"     *","isFullCredit":false},{"lineNumber":212,"content":"     * @param command \"mark\" followed by the task number to be marked as done.","isFullCredit":false},{"lineNumber":213,"content":"     * @throws YapperException If the string following \"mark\" cannot be treated as a valid task number.","isFullCredit":false},{"lineNumber":214,"content":"     */","isFullCredit":false},{"lineNumber":215,"content":"    public String mark(String command) throws YapperException {","isFullCredit":false},{"lineNumber":216,"content":"        if (command.length() \u003d\u003d 4) {","isFullCredit":false},{"lineNumber":217,"content":"            throw new YapperException(\"Task Number cannot be empty!\");","isFullCredit":false},{"lineNumber":218,"content":"        } else {","isFullCredit":false},{"lineNumber":219,"content":"            String input \u003d command.substring(5);","isFullCredit":false},{"lineNumber":220,"content":"            int order \u003d Integer.parseInt(input);","isFullCredit":false},{"lineNumber":221,"content":"            if (order \u003c\u003d 0) {","isFullCredit":false},{"lineNumber":222,"content":"                throw new YapperException(\"Task Number cannot be less than 1!\");","isFullCredit":false},{"lineNumber":223,"content":"            } else if (order \u003e this.listOfTask.size()) {","isFullCredit":false},{"lineNumber":224,"content":"                throw new YapperException(\"Task Number cannot be more than size of list!\");","isFullCredit":false},{"lineNumber":225,"content":"            } else {","isFullCredit":false},{"lineNumber":226,"content":"                Task taskToMark \u003d this.listOfTask.get(order - 1);","isFullCredit":false},{"lineNumber":227,"content":"                taskToMark.setDone(true);","isFullCredit":false},{"lineNumber":228,"content":"                String toReturn \u003d \"Nice! I\u0027ve marked this task as done: \\n\" + taskToMark;","isFullCredit":false},{"lineNumber":229,"content":"                System.out.println(toReturn);","isFullCredit":false},{"lineNumber":230,"content":"                this.storage.writeHistory(this.listOfTask);","isFullCredit":false},{"lineNumber":231,"content":"                return toReturn;","isFullCredit":false},{"lineNumber":232,"content":"            }","isFullCredit":false},{"lineNumber":233,"content":"        }","isFullCredit":false},{"lineNumber":234,"content":"    }","isFullCredit":false},{"lineNumber":235,"content":"","isFullCredit":false},{"lineNumber":236,"content":"    /**","isFullCredit":false},{"lineNumber":237,"content":"     * Marks a task in the list as undone.","isFullCredit":false},{"lineNumber":238,"content":"     *","isFullCredit":false},{"lineNumber":239,"content":"     * @param command \"unmark\" followed by the task number to be marked as undone.","isFullCredit":false},{"lineNumber":240,"content":"     * @throws YapperException If the string following \"unmark\" cannot be treated as a valid task number.","isFullCredit":false},{"lineNumber":241,"content":"     */","isFullCredit":false},{"lineNumber":242,"content":"    public String unmark(String command) throws YapperException {","isFullCredit":false},{"lineNumber":243,"content":"        if (command.length() \u003d\u003d 6) {","isFullCredit":false},{"lineNumber":244,"content":"            throw new YapperException(\"Task Number cannot be empty!\");","isFullCredit":false},{"lineNumber":245,"content":"        } else {","isFullCredit":false},{"lineNumber":246,"content":"            String input \u003d command.substring(7);","isFullCredit":false},{"lineNumber":247,"content":"            int order \u003d Integer.parseInt(input);","isFullCredit":false},{"lineNumber":248,"content":"            if (order \u003c\u003d 0) {","isFullCredit":false},{"lineNumber":249,"content":"                throw new YapperException(\"Task Number cannot be less than 1!\");","isFullCredit":false},{"lineNumber":250,"content":"            } else if (order \u003e this.listOfTask.size()) {","isFullCredit":false},{"lineNumber":251,"content":"                throw new YapperException(\"Task Number cannot be more than size of list!\");","isFullCredit":false},{"lineNumber":252,"content":"            } else {","isFullCredit":false},{"lineNumber":253,"content":"                Task taskToUnmark \u003d this.listOfTask.get(order - 1);","isFullCredit":false},{"lineNumber":254,"content":"                taskToUnmark.setDone(false);","isFullCredit":false},{"lineNumber":255,"content":"                String toReturn \u003d \"OK, I\u0027ve marked this task as not done yet: \\n\" + taskToUnmark;","isFullCredit":false},{"lineNumber":256,"content":"                System.out.println(toReturn);","isFullCredit":false},{"lineNumber":257,"content":"                this.storage.writeHistory(this.listOfTask);","isFullCredit":false},{"lineNumber":258,"content":"                return toReturn;","isFullCredit":false},{"lineNumber":259,"content":"            }","isFullCredit":false},{"lineNumber":260,"content":"        }","isFullCredit":false},{"lineNumber":261,"content":"    }","isFullCredit":false},{"lineNumber":262,"content":"","isFullCredit":false},{"lineNumber":263,"content":"    /**","isFullCredit":false},{"lineNumber":264,"content":"     * Prints the list of tasks out in System out","isFullCredit":false},{"lineNumber":265,"content":"     */","isFullCredit":false},{"lineNumber":266,"content":"    public String returnList() {","isFullCredit":false},{"lineNumber":267,"content":"        String toReturn \u003d \"Here are the tasks in your list: \";","isFullCredit":false},{"lineNumber":268,"content":"        System.out.println(toReturn);","isFullCredit":false},{"lineNumber":269,"content":"        int order \u003d 1;","isFullCredit":false},{"lineNumber":270,"content":"","isFullCredit":false},{"lineNumber":271,"content":"        for (Task task : listOfTask) {","isFullCredit":false},{"lineNumber":272,"content":"            String toAdd \u003d order + \".\" + task;","isFullCredit":false},{"lineNumber":273,"content":"            System.out.println(toAdd);","isFullCredit":false},{"lineNumber":274,"content":"            order++;","isFullCredit":false},{"lineNumber":275,"content":"            toReturn +\u003d \"\\n\" + toAdd;","isFullCredit":false},{"lineNumber":276,"content":"        }","isFullCredit":false},{"lineNumber":277,"content":"        return toReturn;","isFullCredit":false},{"lineNumber":278,"content":"    }","isFullCredit":false},{"lineNumber":279,"content":"","isFullCredit":false},{"lineNumber":280,"content":"    /**","isFullCredit":false},{"lineNumber":281,"content":"     * Exits the program.","isFullCredit":false},{"lineNumber":282,"content":"     */","isFullCredit":false},{"lineNumber":283,"content":"    public String exit() {","isFullCredit":false},{"lineNumber":284,"content":"        String toReturn \u003d \"Yapper shall yap next time!\";","isFullCredit":false},{"lineNumber":285,"content":"        System.out.println(toReturn);","isFullCredit":false},{"lineNumber":286,"content":"        return toReturn;","isFullCredit":false},{"lineNumber":287,"content":"    }","isFullCredit":false},{"lineNumber":288,"content":"}","isFullCredit":false}],"authorContributionMap":{"jevan13":1,"null":287}},{"path":"src/main/java/yapper/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"content":"","isFullCredit":false},{"lineNumber":3,"content":"/**","isFullCredit":false},{"lineNumber":4,"content":" * Represents a ToDo Task.","isFullCredit":false},{"lineNumber":5,"content":" */","isFullCredit":false},{"lineNumber":6,"content":"public class ToDo extends Task {","isFullCredit":false},{"lineNumber":7,"content":"    /**","isFullCredit":false},{"lineNumber":8,"content":"     * Creates an instance of ToDo.","isFullCredit":false},{"lineNumber":9,"content":"     *","isFullCredit":false},{"lineNumber":10,"content":"     * @param taskName Name of the task.","isFullCredit":false},{"lineNumber":11,"content":"     */","isFullCredit":false},{"lineNumber":12,"content":"    public ToDo(String taskName) {","isFullCredit":false},{"lineNumber":13,"content":"        super(taskName);","isFullCredit":false},{"lineNumber":14,"content":"    }","isFullCredit":false},{"lineNumber":15,"content":"","isFullCredit":false},{"lineNumber":16,"content":"    /**","isFullCredit":false},{"lineNumber":17,"content":"     * Returns a string representation of the ToDo object.","isFullCredit":false},{"lineNumber":18,"content":"     *","isFullCredit":false},{"lineNumber":19,"content":"     * @return String representation of the ToDo object.","isFullCredit":false},{"lineNumber":20,"content":"     */","isFullCredit":false},{"lineNumber":21,"content":"    public String toString() {","isFullCredit":false},{"lineNumber":22,"content":"        String doneSymbol \u003d super.hasDone() ? \"[X]\" : \"[ ]\";","isFullCredit":false},{"lineNumber":23,"content":"        return String.format(\"[T]%s %s\", doneSymbol, super.getName());","isFullCredit":false},{"lineNumber":24,"content":"    }","isFullCredit":false},{"lineNumber":25,"content":"","isFullCredit":false},{"lineNumber":26,"content":"    /**","isFullCredit":false},{"lineNumber":27,"content":"     * Returns the string representation of the ToDo object to be recorded into a file.","isFullCredit":false},{"lineNumber":28,"content":"     * String to be decoded when loading history from the file.","isFullCredit":false},{"lineNumber":29,"content":"     *","isFullCredit":false},{"lineNumber":30,"content":"     * @return String representation of the ToDo object.","isFullCredit":false},{"lineNumber":31,"content":"     */","isFullCredit":false},{"lineNumber":32,"content":"    public String toFile() {","isFullCredit":false},{"lineNumber":33,"content":"        String fileDoneSymbol \u003d super.hasDone() ? \"D\" : \"N\";","isFullCredit":false},{"lineNumber":34,"content":"        return String.format(\"T %s--%s\", fileDoneSymbol, super.getName());","isFullCredit":false},{"lineNumber":35,"content":"    }","isFullCredit":false},{"lineNumber":36,"content":"}","isFullCredit":false}],"authorContributionMap":{"jevan13":1,"null":35}},{"path":"src/main/java/yapper/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"content":"","isFullCredit":false},{"lineNumber":3,"content":"import java.util.Scanner;","isFullCredit":false},{"lineNumber":4,"content":"","isFullCredit":false},{"lineNumber":5,"content":"/**","isFullCredit":false},{"lineNumber":6,"content":" * Represents a Ui, which takes in the user input and sends it to the parser to parse.","isFullCredit":false},{"lineNumber":7,"content":" */","isFullCredit":false},{"lineNumber":8,"content":"public class Ui {","isFullCredit":false},{"lineNumber":9,"content":"    private final Scanner sc;","isFullCredit":false},{"lineNumber":10,"content":"    private final Parser parser;","isFullCredit":false},{"lineNumber":11,"content":"","isFullCredit":false},{"lineNumber":12,"content":"    /**","isFullCredit":false},{"lineNumber":13,"content":"     * Creates an instance of UI","isFullCredit":false},{"lineNumber":14,"content":"     *","isFullCredit":false},{"lineNumber":15,"content":"     * @param parser Parser object for UI to send user inputs to be parsed.","isFullCredit":false},{"lineNumber":16,"content":"     */","isFullCredit":false},{"lineNumber":17,"content":"    public Ui(Parser parser) {","isFullCredit":false},{"lineNumber":18,"content":"        this.sc \u003d new Scanner(System.in);","isFullCredit":false},{"lineNumber":19,"content":"        this.parser \u003d parser;","isFullCredit":false},{"lineNumber":20,"content":"    }","isFullCredit":false},{"lineNumber":21,"content":"","isFullCredit":false},{"lineNumber":22,"content":"    /**","isFullCredit":false},{"lineNumber":23,"content":"     * Reads user inputs and sends it to the parser to parse.","isFullCredit":false},{"lineNumber":24,"content":"     */","isFullCredit":false},{"lineNumber":25,"content":"    public void readInput() {","isFullCredit":false},{"lineNumber":26,"content":"        while (true) {","isFullCredit":false},{"lineNumber":27,"content":"            if (sc.hasNextLine()) {","isFullCredit":false},{"lineNumber":28,"content":"                String text \u003d sc.nextLine();","isFullCredit":false},{"lineNumber":29,"content":"                this.parser.readCommand(text);","isFullCredit":false},{"lineNumber":30,"content":"            }","isFullCredit":false},{"lineNumber":31,"content":"        }","isFullCredit":false},{"lineNumber":32,"content":"    }","isFullCredit":false},{"lineNumber":33,"content":"","isFullCredit":false},{"lineNumber":34,"content":"    public String readGuiInput(String string) {","isFullCredit":false},{"lineNumber":35,"content":"        return this.parser.readCommand(string);","isFullCredit":false},{"lineNumber":36,"content":"    }","isFullCredit":false},{"lineNumber":37,"content":"}","isFullCredit":false}],"authorContributionMap":{"jevan13":1,"null":36}},{"path":"src/main/java/yapper/Yapper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jevan13"},"content":"import java.io.File;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jevan13"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jevan13"},"content":" * Represent a Yapper","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jevan13"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jevan13"},"content":"public class Yapper {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jevan13"},"content":"    private static Ui ui;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jevan13"},"content":"    private static Parser parser;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jevan13"},"content":"    private static Storage storage;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jevan13"},"content":"    private static TaskList taskList;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jevan13"},"content":"     * Creates an instance of Yapper.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jevan13"},"content":"     * @param fileName String of file path to load and write the history of tasks to.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jevan13"},"content":"    public Yapper(String fileName) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jevan13"},"content":"        File file \u003d new File(fileName);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jevan13"},"content":"        storage \u003d new Storage(file);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jevan13"},"content":"        taskList \u003d storage.loadHistory();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jevan13"},"content":"        parser \u003d new Parser(taskList);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jevan13"},"content":"        ui \u003d new Ui(parser);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jevan13"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jevan13"},"content":"        String fileName \u003d \"./src/main/java/Yapper/YapperHistoryFile\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jevan13"},"content":"        new Yapper(fileName).run();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jevan13"},"content":"     * Runs the program.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jevan13"},"content":"    @SuppressWarnings(\"checkstyle:JavadocContentLocation\")","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jevan13"},"content":"    public void run() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jevan13"},"content":"        System.out.println(\"Hello! I\u0027m Yapper\\nWhat can I do for you?\\n\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jevan13"},"content":"        taskList.returnList();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jevan13"},"content":"        ui.readInput();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jevan13"},"content":"    public String guiRun(String input) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jevan13"},"content":"        return ui.readGuiInput(input);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"jevan13":46}},{"path":"src/main/java/yapper/YapperException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"content":"","isFullCredit":false},{"lineNumber":3,"content":"/**","isFullCredit":false},{"lineNumber":4,"content":" * Represents YapperException.","isFullCredit":false},{"lineNumber":5,"content":" */","isFullCredit":false},{"lineNumber":6,"content":"public class YapperException extends Exception {","isFullCredit":false},{"lineNumber":7,"content":"    public YapperException(String message) {","isFullCredit":false},{"lineNumber":8,"content":"        super(message);","isFullCredit":false},{"lineNumber":9,"content":"    }","isFullCredit":false},{"lineNumber":10,"content":"}","isFullCredit":false}],"authorContributionMap":{"jevan13":1,"null":9}},{"path":"src/main/java/yapper/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper.gui;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jevan13"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jevan13"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jevan13"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jevan13"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jevan13"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jevan13"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jevan13"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jevan13"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jevan13"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jevan13"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jevan13"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jevan13"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jevan13"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jevan13"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jevan13"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jevan13"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jevan13"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jevan13"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jevan13"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jevan13"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jevan13"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jevan13"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jevan13"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jevan13"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jevan13"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jevan13"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jevan13"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jevan13"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jevan13"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jevan13"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jevan13"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jevan13"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jevan13"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jevan13"},"content":"    private void flip() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jevan13"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jevan13"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jevan13"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jevan13"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jevan13"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jevan13"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jevan13"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jevan13"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jevan13"},"content":"        db.flip();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jevan13"},"content":"        return db;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"jevan13":60}},{"path":"src/main/java/yapper/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper.gui;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jevan13"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jevan13"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jevan13"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jevan13"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jevan13"},"content":"public class Launcher {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jevan13"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jevan13"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"jevan13":12}},{"path":"src/main/java/yapper/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper.gui;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jevan13"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jevan13"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jevan13"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jevan13"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jevan13"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jevan13"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jevan13"},"content":"import yapper.Yapper;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jevan13"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jevan13"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jevan13"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jevan13"},"content":"public class Main extends Application {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jevan13"},"content":"    private Yapper yapper \u003d new Yapper(\"./src/main/java/Yapper/YapperHistoryFile\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jevan13"},"content":"    @Override","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jevan13"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jevan13"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jevan13"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jevan13"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jevan13"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jevan13"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jevan13"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(yapper); // inject the Duke instance","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jevan13"},"content":"            stage.show();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jevan13"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jevan13"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jevan13"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"jevan13":32}},{"path":"src/main/java/yapper/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper.gui;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jevan13"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jevan13"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jevan13"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jevan13"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jevan13"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jevan13"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jevan13"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jevan13"},"content":"import yapper.Yapper;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jevan13"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jevan13"},"content":" * Controller for the main GUI.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jevan13"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jevan13"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jevan13"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jevan13"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jevan13"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jevan13"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jevan13"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jevan13"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jevan13"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jevan13"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jevan13"},"content":"    private Yapper yapper;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jevan13"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jevan13"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jevan13"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jevan13"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jevan13"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jevan13"},"content":"     * Injects the Duke instance","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jevan13"},"content":"    public void setDuke(Yapper yapper1) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jevan13"},"content":"        yapper \u003d yapper1;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jevan13"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jevan13"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jevan13"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jevan13"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jevan13"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jevan13"},"content":"        String response \u003d yapper.guiRun(input);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jevan13"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jevan13"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jevan13"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jevan13"},"content":"        );","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jevan13"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"jevan13":56}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jevan13"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jevan13"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jevan13"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jevan13"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jevan13"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jevan13"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jevan13"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jevan13"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jevan13"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jevan13"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jevan13"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jevan13"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jevan13"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jevan13"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jevan13"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jevan13"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jevan13"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jevan13"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jevan13"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"jevan13":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jevan13"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jevan13"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jevan13"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jevan13"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jevan13"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jevan13"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jevan13"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jevan13"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jevan13"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jevan13"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jevan13"},"content":"            fx:controller\u003d\"yapper.gui.MainWindow\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jevan13"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jevan13"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jevan13"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jevan13"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jevan13"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jevan13"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jevan13"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jevan13"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jevan13"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jevan13"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jevan13"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jevan13"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jevan13"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jevan13"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jevan13"},"content":"                text\u003d\"Send\"/\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jevan13"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jevan13"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jevan13"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jevan13"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jevan13"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jevan13"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jevan13"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jevan13"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jevan13"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jevan13"},"content":"                      prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jevan13"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jevan13"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jevan13"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jevan13"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"jevan13":43}},{"path":"src/test/java/yapper/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"content":"","isFullCredit":false},{"lineNumber":3,"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"content":"","isFullCredit":false},{"lineNumber":5,"content":"import java.time.LocalDateTime;","isFullCredit":false},{"lineNumber":6,"content":"","isFullCredit":false},{"lineNumber":7,"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":8,"content":"","isFullCredit":false},{"lineNumber":9,"content":"public class TaskListTest {","isFullCredit":false},{"lineNumber":10,"content":"","isFullCredit":false},{"lineNumber":11,"content":"    @Test","isFullCredit":false},{"lineNumber":12,"content":"    public void stringToDateTimeTest0() {","isFullCredit":false},{"lineNumber":13,"content":"        String dateTime \u003d \"2024/12/31\";","isFullCredit":false},{"lineNumber":14,"content":"        LocalDateTime actual \u003d TaskList.convertStringToDateTime(dateTime, 0);","isFullCredit":false},{"lineNumber":15,"content":"        LocalDateTime expected \u003d LocalDateTime.of(2024, 12, 31, 00, 00);","isFullCredit":false},{"lineNumber":16,"content":"        assertEquals(expected, actual);","isFullCredit":false},{"lineNumber":17,"content":"    }","isFullCredit":false},{"lineNumber":18,"content":"","isFullCredit":false},{"lineNumber":19,"content":"    @Test","isFullCredit":false},{"lineNumber":20,"content":"    public void stringToDateTimeTest1() {","isFullCredit":false},{"lineNumber":21,"content":"        String dateTime \u003d \"2024/12/31\";","isFullCredit":false},{"lineNumber":22,"content":"        LocalDateTime actual \u003d TaskList.convertStringToDateTime(dateTime, 1);","isFullCredit":false},{"lineNumber":23,"content":"        LocalDateTime expected \u003d LocalDateTime.of(2024, 12, 31, 23, 59);","isFullCredit":false},{"lineNumber":24,"content":"        assertEquals(expected, actual);","isFullCredit":false},{"lineNumber":25,"content":"    }","isFullCredit":false},{"lineNumber":26,"content":"","isFullCredit":false},{"lineNumber":27,"content":"    @Test","isFullCredit":false},{"lineNumber":28,"content":"    public void stringToDateTimeTestWithTime() {","isFullCredit":false},{"lineNumber":29,"content":"        String dateTime \u003d \"2024/12/31 1800\";","isFullCredit":false},{"lineNumber":30,"content":"        LocalDateTime actual \u003d TaskList.convertStringToDateTime(dateTime, 0);","isFullCredit":false},{"lineNumber":31,"content":"        LocalDateTime expected \u003d LocalDateTime.of(2024, 12, 31, 18, 00);","isFullCredit":false},{"lineNumber":32,"content":"        assertEquals(expected, actual);","isFullCredit":false},{"lineNumber":33,"content":"    }","isFullCredit":false},{"lineNumber":34,"content":"}","isFullCredit":false}],"authorContributionMap":{"jevan13":1,"null":33}},{"path":"src/test/java/yapper/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"content":"","isFullCredit":false},{"lineNumber":3,"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"content":"","isFullCredit":false},{"lineNumber":5,"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":6,"content":"","isFullCredit":false},{"lineNumber":7,"content":"public class ToDoTest {","isFullCredit":false},{"lineNumber":8,"content":"    @Test","isFullCredit":false},{"lineNumber":9,"content":"    public void toStringTest() {","isFullCredit":false},{"lineNumber":10,"content":"        ToDo todo \u003d new ToDo(\"buy bread\");","isFullCredit":false},{"lineNumber":11,"content":"        todo.setDone(true);","isFullCredit":false},{"lineNumber":12,"content":"        String expected \u003d \"[T][X] buy bread\";","isFullCredit":false},{"lineNumber":13,"content":"        String actual \u003d todo.toString();","isFullCredit":false},{"lineNumber":14,"content":"        assertEquals(expected, actual);","isFullCredit":false},{"lineNumber":15,"content":"    }","isFullCredit":false},{"lineNumber":16,"content":"","isFullCredit":false},{"lineNumber":17,"content":"    @Test","isFullCredit":false},{"lineNumber":18,"content":"    public void toFileTest() {","isFullCredit":false},{"lineNumber":19,"content":"        ToDo todo \u003d new ToDo(\"buy bread\");","isFullCredit":false},{"lineNumber":20,"content":"        todo.setDone(true);","isFullCredit":false},{"lineNumber":21,"content":"        String expected \u003d \"T D--buy bread\";","isFullCredit":false},{"lineNumber":22,"content":"        String actual \u003d todo.toFile();","isFullCredit":false},{"lineNumber":23,"content":"        assertEquals(expected, actual);","isFullCredit":false},{"lineNumber":24,"content":"    }","isFullCredit":false},{"lineNumber":25,"content":"}","isFullCredit":false}],"authorContributionMap":{"jevan13":1,"null":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"todo borrow book","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"jevan13":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jevan13"},"content":"java -classpath ..\\bin yapper \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"jevan13":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jevan13"},"content":"java -classpath ../bin Yapper \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"jevan13":1,"-":37}}]
