[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jevan13"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jevan13"},"content":"    mainClass.set(\"yapper.Launcher\")","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jevan13"},"content":"    archiveBaseName \u003d \"Yapper\"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jevan13"},"content":"run {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jevan13"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jevan13"},"content":"checkstyle {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jevan13"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jevan13"},"content":"repositories {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jevan13"},"content":"    mavenCentral()","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jevan13"},"content":"dependencies {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jevan13"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jevan13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jevan13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jevan13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jevan13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jevan13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jevan13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jevan13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jevan13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jevan13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jevan13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jevan13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jevan13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"jevan13":32,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"# Yapper User Guide","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jevan13"},"content":"![Screenshot 2024-09-18 at 12 55 21 AM](https://github.com/user-attachments/assets/1361b92c-bfdb-47d6-8e17-672f8de1175d)","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jevan13"},"content":"**Yapper is a task manager, to keep track of all your tasks, and even their time of occurrence!**","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jevan13"},"content":"## Adding todos","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jevan13"},"content":"Add a todo task into your list of tasks.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jevan13"},"content":"Enter \"todo \" followed by the name of the todo.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jevan13"},"content":"Example: todo buy bread","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jevan13"},"content":"Yapper will give the following response:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jevan13"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jevan13"},"content":"\" Got it. I\u0027ve added this task:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jevan13"},"content":"  [T][ ] buy bread","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jevan13"},"content":"  Now you have 1 tasks in the list \"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jevan13"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jevan13"},"content":"Add a deadline task into your list of tasks.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jevan13"},"content":"Enter \"deadline \" followed by the name of the deadline, followed by the ending time.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jevan13"},"content":"Format for time: YYYY/MM/DD HHMM","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jevan13"},"content":"If no deadline time is specified, default is set to 23:59.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jevan13"},"content":"Example: deadline make bread /by 2024/12/31 1800","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jevan13"},"content":"Yapper will give the following response:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jevan13"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jevan13"},"content":"\" Got it. I\u0027ve added this task:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jevan13"},"content":"  [D][ ] make bread (BY: Dec 31 2024 18:00)","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jevan13"},"content":"  Now you have 1 tasks in the list \"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jevan13"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jevan13"},"content":"## Adding events","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jevan13"},"content":"Add a event task into your list of tasks.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jevan13"},"content":"Enter \"event \" followed by the name of the deadline, followed by the starting time, followed by the ending time.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jevan13"},"content":"Format for time: YYYY/MM/DD HHMM","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jevan13"},"content":"If no event start time is specified, default is set to 00:00.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jevan13"},"content":"If no event end time is specified, default is set to 23:59.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jevan13"},"content":"Example: event sell bread /from 2024/12/30 1800 /to 2024/12/31 2100","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jevan13"},"content":"Yapper will give the following response:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jevan13"},"content":"\" Got it. I\u0027ve added this task:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jevan13"},"content":"  [E][ ] sell bread (FROM: Dec 30 2024 18:00 TO: DEC 31 2024 21:00)","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jevan13"},"content":"  Now you have 1 tasks in the list \"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jevan13"},"content":"## Returning the list of tasks","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jevan13"},"content":"Returns the current list of tasks.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jevan13"},"content":"Enter \"list\".","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jevan13"},"content":"Example: list","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jevan13"},"content":"Yapper will give the following response:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jevan13"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jevan13"},"content":"\" Here are the tasks in your list:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jevan13"},"content":"  1. [T][ ] buy bread","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jevan13"},"content":"  2. [D][ ] make bread (BY: Dec 31 2024 18:00)","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jevan13"},"content":"  3. [E][ ] sell bread (FROM: Dec 30 2024 18:00 TO: DEC 31 2024 21:00) \"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jevan13"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jevan13"},"content":"## Marking a task as Done","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jevan13"},"content":"Marks the specified task as done.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jevan13"},"content":"Enter \"mark \" followed by the task number you wish to mark.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jevan13"},"content":"Example: mark 1","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jevan13"},"content":"Yapper will give the following response:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jevan13"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jevan13"},"content":"\" Nice ! I\u0027ve marked this task as done:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jevan13"},"content":"  1. [T][X] buy bread \"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jevan13"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jevan13"},"content":"## Marking a task as Undone","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jevan13"},"content":"Marks the specified task as undone.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jevan13"},"content":"Enter \"unmark \" followed by the task number you wish to unmark.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jevan13"},"content":"Example: unmark 1","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jevan13"},"content":"Yapper will give the following response:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jevan13"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jevan13"},"content":"\" OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jevan13"},"content":"  1. [T][ ] buy bread \"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jevan13"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jevan13"},"content":"## Delete a task","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jevan13"},"content":"Deletes the specified task from the list of tasks.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jevan13"},"content":"Enter \"delete \" followed by the task number you wish to delete.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jevan13"},"content":"Example: delete 1","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jevan13"},"content":"Yapper will give the following response:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jevan13"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jevan13"},"content":"\" Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jevan13"},"content":"  [T][ ] buy bread","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jevan13"},"content":"  Now you have 2 task in the list \"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jevan13"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jevan13"},"content":"## Find a task","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jevan13"},"content":"Finds a task containing the specified String.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jevan13"},"content":"Enter \"find \" followed by the string you wish to search for.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jevan13"},"content":"Example: find sell","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jevan13"},"content":"Yapper will give the following response:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jevan13"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jevan13"},"content":"\" Here are the tasks in your list:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jevan13"},"content":"  1. [E][ ] sell bread (FROM: Dec 30 2024 18:00 TO: DEC 31 2024 21:00) \"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jevan13"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jevan13"},"content":"## Postponing a task","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jevan13"},"content":"Postpone a task to the specified time","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jevan13"},"content":"Enter \"postpone \" followed by the task number you wish to postpone, followed by 0 for start time, and 1 for end time.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jevan13"},"content":"Entering 0 required the task to have a start time, ie. an event.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jevan13"},"content":"Entering 1 required the task to have an end time, ie. a deadline or an event.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jevan13"},"content":"Example: postpone 1 1 2024/12/31 2100","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jevan13"},"content":"Yapper will give the following response:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jevan13"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jevan13"},"content":"\" Changed make bread end time to Dec 31 2024 21:00 \"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jevan13"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false}],"authorContributionMap":{"jevan13":126,"-":17}},{"path":"src/main/java/yapper/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jevan13"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jevan13"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jevan13"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jevan13"},"content":" * Represents a Deadline Task, which is a task with a LocalDateTime byDateTime to finish by.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jevan13"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jevan13"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jevan13"},"content":"    private LocalDateTime byDateTime;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jevan13"},"content":"     * Creates an instance of Deadline.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jevan13"},"content":"     * @param taskName   Name of the task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jevan13"},"content":"     * @param byDateTime Date and Time of ending time of Deadline.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jevan13"},"content":"    public Deadline(String taskName, LocalDateTime byDateTime) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jevan13"},"content":"        super(taskName);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jevan13"},"content":"        this.byDateTime \u003d byDateTime;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jevan13"},"content":"        super.setTaskTag(\"deadline\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jevan13"},"content":"     * Returns a string representation of the Deadline object.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jevan13"},"content":"     * @return String representation of the Deadline object.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jevan13"},"content":"    public String toString() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jevan13"},"content":"        String byDateTimeToString \u003d this.byDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jevan13"},"content":"        String doneSymbol \u003d super.getIsDone() ? Task.DONE_SYMBOL : Task.UNDONE_SYMBOL;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jevan13"},"content":"        return String.format(\"[D]%s %s (BY: %s)\", doneSymbol, super.getName(), byDateTimeToString);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jevan13"},"content":"     * Returns the string representation of the Deadline object to be recorded into a file.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jevan13"},"content":"     * String to be decoded when loading history from the file.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jevan13"},"content":"     * @return String representation of the Deadline object.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jevan13"},"content":"    public String toFile() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jevan13"},"content":"        String fileDoneSymbol \u003d super.getIsDone() ? Task.FILE_DONE_SYMBOL : Task.FILE_UNDONE_SYMBOL;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jevan13"},"content":"        return String.format(\"D %s--%s--%s\", fileDoneSymbol, super.getName(), this.byDateTime);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jevan13"},"content":"    public void setByDateTime(LocalDateTime localDateTime) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jevan13"},"content":"        this.byDateTime \u003d localDateTime;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"jevan13":49}},{"path":"src/main/java/yapper/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jevan13"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jevan13"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jevan13"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jevan13"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jevan13"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jevan13"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jevan13"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jevan13"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jevan13"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jevan13"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jevan13"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jevan13"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jevan13"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jevan13"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jevan13"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jevan13"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jevan13"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jevan13"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jevan13"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jevan13"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jevan13"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jevan13"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jevan13"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jevan13"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jevan13"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jevan13"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jevan13"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jevan13"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jevan13"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jevan13"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jevan13"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jevan13"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jevan13"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jevan13"},"content":"    private void flip() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jevan13"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jevan13"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jevan13"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jevan13"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jevan13"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jevan13"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jevan13"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jevan13"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jevan13"},"content":"        db.flip();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jevan13"},"content":"        return db;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"jevan13":60}},{"path":"src/main/java/yapper/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jevan13"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jevan13"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jevan13"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jevan13"},"content":" * Represents an Event Task, which is a task with a LocalDateTime fromDateTime in which the event starts, and another","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jevan13"},"content":" * LocalDateTime toDateTime in which the event ends.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jevan13"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jevan13"},"content":"public class Event extends Task {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jevan13"},"content":"    private LocalDateTime fromDateTime;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jevan13"},"content":"    private LocalDateTime toDateTime;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jevan13"},"content":"     * Creates an instance of Event.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jevan13"},"content":"     * @param taskName     Name of the task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jevan13"},"content":"     * @param fromDateTime Date and Time of the starting time of event.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jevan13"},"content":"     * @param toDateTime   Date and Time of the ending time of event.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jevan13"},"content":"    public Event(String taskName, LocalDateTime fromDateTime, LocalDateTime toDateTime) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jevan13"},"content":"        super(taskName);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jevan13"},"content":"        this.fromDateTime \u003d fromDateTime;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jevan13"},"content":"        this.toDateTime \u003d toDateTime;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jevan13"},"content":"        super.setTaskTag(\"event\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jevan13"},"content":"    public void setFromDateTime(LocalDateTime localDateTime) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jevan13"},"content":"        this.fromDateTime \u003d localDateTime;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jevan13"},"content":"    public void setToDateTime(LocalDateTime localDateTime) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jevan13"},"content":"        this.toDateTime \u003d localDateTime;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jevan13"},"content":"     * Returns a string representation of the Event object.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jevan13"},"content":"     * @return String representation of the Event object.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jevan13"},"content":"    public String toString() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jevan13"},"content":"        String fromDateTimeToString \u003d this.fromDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jevan13"},"content":"        String toDateTimeToString \u003d this.toDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jevan13"},"content":"        String doneSymbol \u003d super.getIsDone() ? Task.DONE_SYMBOL : Task.UNDONE_SYMBOL;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jevan13"},"content":"        return String.format(\"[E]%s %s (FROM: %s TO: %s)\", doneSymbol, super.getName(),","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jevan13"},"content":"                fromDateTimeToString, toDateTimeToString);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jevan13"},"content":"     * Returns the string representation of the Event object to be recorded into a file.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jevan13"},"content":"     * String to be decoded when loading history from the file.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jevan13"},"content":"     * @return String representation of the Event object.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jevan13"},"content":"    public String toFile() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jevan13"},"content":"        String fileDoneSymbol \u003d super.getIsDone() ? Task.FILE_DONE_SYMBOL : Task.FILE_UNDONE_SYMBOL;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jevan13"},"content":"        return String.format(\"E %s--%s--%s--%s\", fileDoneSymbol, super.getName(), this.fromDateTime, this.toDateTime);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"jevan13":59}},{"path":"src/main/java/yapper/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jevan13"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jevan13"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jevan13"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jevan13"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jevan13"},"content":"public class Launcher {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jevan13"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jevan13"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"jevan13":12}},{"path":"src/main/java/yapper/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jevan13"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jevan13"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jevan13"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jevan13"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jevan13"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jevan13"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jevan13"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jevan13"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jevan13"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jevan13"},"content":"public class Main extends Application {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jevan13"},"content":"    private Yapper yapper \u003d new Yapper(\"./src/main/java/Yapper/YapperHistoryFile\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jevan13"},"content":"    @Override","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jevan13"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jevan13"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jevan13"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jevan13"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jevan13"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jevan13"},"content":"            stage.setTitle(\"Yapper\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jevan13"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jevan13"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(yapper); // inject the Duke instance","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jevan13"},"content":"            stage.show();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jevan13"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jevan13"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jevan13"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"jevan13":32}},{"path":"src/main/java/yapper/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jevan13"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jevan13"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jevan13"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jevan13"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jevan13"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jevan13"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jevan13"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jevan13"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jevan13"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jevan13"},"content":" * Controller for the main GUI.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jevan13"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jevan13"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jevan13"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jevan13"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jevan13"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jevan13"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jevan13"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jevan13"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jevan13"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jevan13"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jevan13"},"content":"    private Yapper yapper;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jevan13"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jevan13"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jevan13"},"content":"     * Initialize the Main Window.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jevan13"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jevan13"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jevan13"},"content":"        String welcome \u003d \"Hello. My name is Yapper. What can I do for you?\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jevan13"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(welcome, dukeImage));","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jevan13"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jevan13"},"content":"     * Injects the Duke instance","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jevan13"},"content":"    public void setDuke(Yapper yapper1) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jevan13"},"content":"        yapper \u003d yapper1;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jevan13"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jevan13"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jevan13"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jevan13"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jevan13"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jevan13"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jevan13"},"content":"            Stage stage \u003d (Stage) dialogContainer.getScene().getWindow();","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jevan13"},"content":"            stage.close();","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jevan13"},"content":"        } else {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jevan13"},"content":"            String response \u003d yapper.guiRun(input);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jevan13"},"content":"            dialogContainer.getChildren().addAll(DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jevan13"},"content":"                    DialogBox.getDukeDialog(response, dukeImage));","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jevan13"},"content":"            userInput.clear();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jevan13"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-09-20","isFullCredit":false}],"authorContributionMap":{"jevan13":64}},{"path":"src/main/java/yapper/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jevan13"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jevan13"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jevan13"},"content":" * Represents a Parser, which takes in a command in String, parses it, and calls the respective command.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jevan13"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jevan13"},"content":"public class Parser {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jevan13"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jevan13"},"content":"     * Creates an instance of Parser.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jevan13"},"content":"     * @param taskList Tasklist to call after parsing commands.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jevan13"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jevan13"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jevan13"},"content":"     * Reads the command given by user.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jevan13"},"content":"     * @param command Command given by user.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jevan13"},"content":"    public String readCommand(String command) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jevan13"},"content":"        try {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jevan13"},"content":"            if (command.equals(\"list\")) {","lastModifiedDate":"2024-09-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jevan13"},"content":"                return this.taskList.returnList();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jevan13"},"content":"            } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jevan13"},"content":"                return this.taskList.mark(command);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jevan13"},"content":"            } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jevan13"},"content":"                return this.taskList.unmark(command);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jevan13"},"content":"            } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jevan13"},"content":"                return this.taskList.addToDo(command);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jevan13"},"content":"            } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jevan13"},"content":"                return this.taskList.addDeadline(command);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jevan13"},"content":"            } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jevan13"},"content":"                return this.taskList.addEvent(command);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jevan13"},"content":"            } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jevan13"},"content":"                return this.taskList.deleteTask(command);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jevan13"},"content":"            } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jevan13"},"content":"                return this.taskList.findTask(command);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jevan13"},"content":"            } else if (command.startsWith(\"postpone\")) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jevan13"},"content":"                return this.taskList.postpone(command);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jevan13"},"content":"            } else {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jevan13"},"content":"                throw new YapperException(\"Yapper don\u0027t know this command :(\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jevan13"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jevan13"},"content":"        } catch (YapperException e) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jevan13"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jevan13"},"content":"            return e.getMessage();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jevan13"},"content":"        } catch (NumberFormatException | DateTimeParseException e) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jevan13"},"content":"            String toReturn \u003d \"Invalid Date Time Format!\" + \"\\n\" + \"Correct Format is YYYY/MM/DD (HHMM)\";","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jevan13"},"content":"            System.out.println(toReturn);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jevan13"},"content":"            return toReturn;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jevan13"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"jevan13":58}},{"path":"src/main/java/yapper/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jevan13"},"content":"import java.io.File;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jevan13"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jevan13"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jevan13"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jevan13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jevan13"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jevan13"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jevan13"},"content":" * Represents a Storage, which reads and write from a file to load or save the history of Tasks in the list.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jevan13"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jevan13"},"content":"public class Storage {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jevan13"},"content":"    private File file;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jevan13"},"content":"     * Creates an instance of Storage.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jevan13"},"content":"     * @param file The file object that Storage will read and write to.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jevan13"},"content":"    public Storage(File file) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jevan13"},"content":"        this.file \u003d file;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jevan13"},"content":"     * Writes the current list of tasks into the file.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jevan13"},"content":"     * @param listOfTasks List of task to write into the file.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jevan13"},"content":"    public void writeHistory(ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jevan13"},"content":"        try {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jevan13"},"content":"            FileWriter filewriter \u003d new FileWriter(file);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jevan13"},"content":"            for (Task task : listOfTasks) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jevan13"},"content":"                filewriter.write(task.toFile() + \"\\n\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jevan13"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jevan13"},"content":"            filewriter.close();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jevan13"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jevan13"},"content":"            System.out.println(\"Unable to write history\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jevan13"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jevan13"},"content":"     * Loads the history of Tasks into the current list of task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jevan13"},"content":"     * @return TaskList with the loaded list of tasks.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jevan13"},"content":"    public TaskList loadHistory() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jevan13"},"content":"        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jevan13"},"content":"        try {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jevan13"},"content":"            if (!this.file.exists()) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jevan13"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jevan13"},"content":"                file.createNewFile();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jevan13"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jevan13"},"content":"            if (this.file.canRead()) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jevan13"},"content":"                Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jevan13"},"content":"                while (sc.hasNextLine()) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jevan13"},"content":"                    String nextline \u003d sc.nextLine();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jevan13"},"content":"                    this.loadTask(listOfTasks, nextline);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jevan13"},"content":"                }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jevan13"},"content":"            } else {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jevan13"},"content":"                throw new YapperException(\"Unable to read file\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jevan13"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jevan13"},"content":"        } catch (IOException var4) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jevan13"},"content":"            System.out.println(\"Unable to load history\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jevan13"},"content":"        } catch (YapperException e) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jevan13"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jevan13"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jevan13"},"content":"        return new TaskList(listOfTasks, this);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jevan13"},"content":"     * Loads a task into the current list of tasks.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jevan13"},"content":"     * @param listOfTasks List of tasks for task to be added into.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jevan13"},"content":"     * @param input       String to be decoded into a Task","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jevan13"},"content":"     * @throws YapperException If String has the wrong format and is unable to be decoded.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jevan13"},"content":"    public void loadTask(ArrayList\u003cTask\u003e listOfTasks, String input) throws YapperException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jevan13"},"content":"        String typeOfTask \u003d input.substring(0, 1);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jevan13"},"content":"        String[] taskParameter \u003d input.substring(2).split(\"--\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jevan13"},"content":"        String fileDoneSymbol;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jevan13"},"content":"        String taskName;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jevan13"},"content":"        if (typeOfTask.equals(\"T\")) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jevan13"},"content":"            if (taskParameter.length !\u003d 2) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jevan13"},"content":"                throw new YapperException(\"Unable to read file: Invalid ToDo Parameters\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jevan13"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jevan13"},"content":"            fileDoneSymbol \u003d taskParameter[0];","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jevan13"},"content":"            taskName \u003d taskParameter[1];","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jevan13"},"content":"            boolean isDone \u003d fileDoneSymbol.equals(\"D\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jevan13"},"content":"            ToDo toDo \u003d new ToDo(taskName);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jevan13"},"content":"            toDo.setIsDone(isDone);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jevan13"},"content":"            listOfTasks.add(toDo);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jevan13"},"content":"        } else {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jevan13"},"content":"            String fromString;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jevan13"},"content":"            if (typeOfTask.equals(\"D\")) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jevan13"},"content":"                if (taskParameter.length !\u003d 3) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jevan13"},"content":"                    throw new YapperException(\"Unable to read file: Invalid Deadline Parameters\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jevan13"},"content":"                }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jevan13"},"content":"                fileDoneSymbol \u003d taskParameter[0];","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jevan13"},"content":"                taskName \u003d taskParameter[1];","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jevan13"},"content":"                fromString \u003d taskParameter[2];","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jevan13"},"content":"                boolean isDone \u003d fileDoneSymbol.equals(\"D\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jevan13"},"content":"                LocalDateTime byDateTime \u003d LocalDateTime.parse(fromString);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jevan13"},"content":"                Deadline deadline \u003d new Deadline(taskName, byDateTime);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jevan13"},"content":"                deadline.setIsDone(isDone);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jevan13"},"content":"                listOfTasks.add(deadline);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jevan13"},"content":"            } else {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jevan13"},"content":"                if (!typeOfTask.equals(\"E\")) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jevan13"},"content":"                    throw new YapperException(\"Unable to read file: Invalid Task type\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jevan13"},"content":"                }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jevan13"},"content":"                if (taskParameter.length !\u003d 4) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jevan13"},"content":"                    throw new YapperException(\"Unable to read file: Invalid Event Parameters\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jevan13"},"content":"                }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jevan13"},"content":"                fileDoneSymbol \u003d taskParameter[0];","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jevan13"},"content":"                taskName \u003d taskParameter[1];","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jevan13"},"content":"                fromString \u003d taskParameter[2];","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jevan13"},"content":"                String toString \u003d taskParameter[3];","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jevan13"},"content":"                boolean isDone \u003d fileDoneSymbol.equals(\"D\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jevan13"},"content":"                LocalDateTime fromDateTime \u003d LocalDateTime.parse(fromString);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jevan13"},"content":"                LocalDateTime toDateTime \u003d LocalDateTime.parse(toString);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jevan13"},"content":"                Event event \u003d new Event(taskName, fromDateTime, toDateTime);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jevan13"},"content":"                event.setIsDone(isDone);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jevan13"},"content":"                listOfTasks.add(event);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jevan13"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jevan13"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"jevan13":133}},{"path":"src/main/java/yapper/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jevan13"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jevan13"},"content":" * Represents a Task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jevan13"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jevan13"},"content":"public abstract class Task {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jevan13"},"content":"    public static final String DONE_SYMBOL \u003d \"[X]\";","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jevan13"},"content":"    public static final String UNDONE_SYMBOL \u003d \"[ ]\";","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jevan13"},"content":"    public static final String FILE_DONE_SYMBOL \u003d \"D\";","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jevan13"},"content":"    public static final String FILE_UNDONE_SYMBOL \u003d \"N\";","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jevan13"},"content":"    private final String name;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jevan13"},"content":"    private boolean isDone;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jevan13"},"content":"    private String taskTag;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jevan13"},"content":"     * Creates an instance of a Task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jevan13"},"content":"     * @param taskName Name of the task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jevan13"},"content":"    public Task(String taskName) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jevan13"},"content":"        this.name \u003d taskName;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jevan13"},"content":"    public String getTaskTag() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jevan13"},"content":"        return this.taskTag;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jevan13"},"content":"    public void setTaskTag(String taskTag) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jevan13"},"content":"        this.taskTag \u003d taskTag;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jevan13"},"content":"    public void setIsDone(boolean bool) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jevan13"},"content":"        this.isDone \u003d bool;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jevan13"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jevan13"},"content":"        return this.isDone;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jevan13"},"content":"    public boolean hasDone() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jevan13"},"content":"        return this.isDone;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jevan13"},"content":"    public String getName() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jevan13"},"content":"        return this.name;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jevan13"},"content":"     * Returns the string representation of the Task object to be recorded into a file.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jevan13"},"content":"     * String to be decoded when loading history from the file.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jevan13"},"content":"     * @return String representation of the Task object.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jevan13"},"content":"    public abstract String toFile();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jevan13"},"content":"    public boolean contains(String word) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jevan13"},"content":"        return this.name.contains(word);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"jevan13":56}},{"path":"src/main/java/yapper/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jevan13"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jevan13"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jevan13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jevan13"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jevan13"},"content":" * Represents a TaskList, which contains the ArrayList of Tasks. It also has a reference to a Storage object to","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jevan13"},"content":" * read and write the history of Tasks whenever it is updated.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jevan13"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jevan13"},"content":"public class TaskList {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jevan13"},"content":"    public final Storage storage;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jevan13"},"content":"    private final ArrayList\u003cTask\u003e listOfTask;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jevan13"},"content":"     * Creates an instance of TaskList.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jevan13"},"content":"     * @param listOfTask List of tasks to be accessed.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jevan13"},"content":"     * @param storage    Storage object to read and write tasks into.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jevan13"},"content":"    public TaskList(ArrayList\u003cTask\u003e listOfTask, Storage storage) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jevan13"},"content":"        this.listOfTask \u003d listOfTask;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jevan13"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jevan13"},"content":"     * Postpones a Task to the given Date and Time","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jevan13"},"content":"     * @param command \"postpone\" followed by the String a number corresponding to the task number to be deleted,","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jevan13"},"content":"     *                followed by the String representing the date and time to postpone to.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jevan13"},"content":"     * @throws YapperException If the Task Number is not within the limits of the Arraylist of Tasks.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jevan13"},"content":"    public String postpone(String command) throws YapperException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jevan13"},"content":"        if (command.length() \u003d\u003d 8) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jevan13"},"content":"            throw new YapperException(\"Task Number cannot be empty!\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jevan13"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jevan13"},"content":"        String split \u003d command.substring(9); // split \u003d 1 1 date time","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jevan13"},"content":"        String taskNumberStr \u003d split.substring(0, 1);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jevan13"},"content":"        String startOrEndTime \u003d split.substring(2, 3);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jevan13"},"content":"        String dateTime \u003d split.substring(4);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jevan13"},"content":"        int taskNumber \u003d Integer.parseInt(taskNumberStr);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jevan13"},"content":"        LocalDateTime localDateTime \u003d convertStringToDateTime(dateTime, 1);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jevan13"},"content":"        if (taskNumber \u003c\u003d 0) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jevan13"},"content":"            throw new YapperException(\"Task Number should be more than 0\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jevan13"},"content":"        } else if (taskNumber \u003e this.listOfTask.size()) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jevan13"},"content":"            throw new YapperException(\"Task Number should be less than the size of list\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jevan13"},"content":"        } else if (!startOrEndTime.equals(\"0\") \u0026\u0026 !startOrEndTime.equals(\"1\")) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jevan13"},"content":"            throw new YapperException(\"Start or End field should be 0 for Start or 1 for end!\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jevan13"},"content":"        } else {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jevan13"},"content":"            Task task \u003d listOfTask.get(taskNumber - 1);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jevan13"},"content":"            assert localDateTime !\u003d null : \"Date Time is null\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jevan13"},"content":"            String dateTimeToString \u003d localDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jevan13"},"content":"            if (startOrEndTime.equals(\"0\") \u0026\u0026 task.getTaskTag().equals(\"todo\")) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jevan13"},"content":"                throw new YapperException(\"ToDo Task does not have a start time\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jevan13"},"content":"            } else if (startOrEndTime.equals(\"1\") \u0026\u0026 task.getTaskTag().equals(\"todo\")) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jevan13"},"content":"                throw new YapperException(\"ToDo Task does not have a end time\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jevan13"},"content":"            } else if (startOrEndTime.equals(\"0\") \u0026\u0026 task.getTaskTag().equals(\"deadline\")) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jevan13"},"content":"                throw new YapperException(\"Deadline Task does not have a start time\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jevan13"},"content":"            } else if (startOrEndTime.equals(\"1\") \u0026\u0026 task.getTaskTag().equals(\"deadline\")) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jevan13"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jevan13"},"content":"                deadline.setByDateTime(localDateTime);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jevan13"},"content":"                return String.format(\"Changed %s end time to %s\", deadline.getName() , dateTimeToString);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jevan13"},"content":"            } else if (startOrEndTime.equals(\"0\") \u0026\u0026 task.getTaskTag().equals(\"event\")) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jevan13"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jevan13"},"content":"                event.setFromDateTime(localDateTime);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jevan13"},"content":"                return String.format(\"Changed %s start time to %s\", event.getName() , dateTimeToString);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jevan13"},"content":"            } else if (startOrEndTime.equals(\"1\") \u0026\u0026 task.getTaskTag().equals(\"event\")) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jevan13"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jevan13"},"content":"                event.setToDateTime(localDateTime);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jevan13"},"content":"                return String.format(\"Changed %s end time to %s\", event.getName() , dateTimeToString);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jevan13"},"content":"            } else {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jevan13"},"content":"                throw new YapperException(\"Sorry, unable to execute postpone command\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jevan13"},"content":"            }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jevan13"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jevan13"},"content":"     * Finds the Task in the ArrayList of Tasks that matches the String.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jevan13"},"content":"     * @param command \"find\" followed by the String to search in the ArrayList of Tasks.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jevan13"},"content":"     * @throws YapperException If the String following \"find\" is empty.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jevan13"},"content":"    public String findTask(String command) throws YapperException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jevan13"},"content":"        if (command.equals(\"find\") || command.equals(\"find \")) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jevan13"},"content":"            throw new YapperException(\"String to find cannot be empty!\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jevan13"},"content":"        } else {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jevan13"},"content":"            String wordToFind \u003d command.substring(5);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jevan13"},"content":"            ArrayList\u003cTask\u003e listOfTaskWithWord \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jevan13"},"content":"            TaskList taskList \u003d new TaskList(listOfTaskWithWord, null);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jevan13"},"content":"            for (Task task : listOfTask) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jevan13"},"content":"                if (task.contains(wordToFind)) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jevan13"},"content":"                    listOfTaskWithWord.add(task);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jevan13"},"content":"                }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jevan13"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jevan13"},"content":"            return taskList.returnList();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jevan13"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jevan13"},"content":"     * Converts a String into a LocalDateTime object.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jevan13"},"content":"     * If Time is unspecified, the default time for a starting time is 00:00,","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jevan13"},"content":"     * and the default time for an ending time is 23:59.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jevan13"},"content":"     * @param dateTime Date and/or Time to be converted.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jevan13"},"content":"     * @param type     0 or 1: 0 for starting time, 1 for ending time.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jevan13"},"content":"     * @return LocalDateTime objected created with the given date and time.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jevan13"},"content":"    public static LocalDateTime convertStringToDateTime(String dateTime, int type) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jevan13"},"content":"        try {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jevan13"},"content":"            assert type \u003d\u003d 0 || type \u003d\u003d 1 : \"Type can only be 0 or 1\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jevan13"},"content":"            String[] splitDateTime \u003d dateTime.split(\" \");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jevan13"},"content":"            String date \u003d splitDateTime[0];","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jevan13"},"content":"            String[] splitYearMonthDay \u003d date.split(\"/\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jevan13"},"content":"            String year \u003d splitYearMonthDay[0];","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jevan13"},"content":"            String month \u003d splitYearMonthDay[1];","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jevan13"},"content":"            String day \u003d splitYearMonthDay[2];","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jevan13"},"content":"            LocalDateTime toReturn;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jevan13"},"content":"            if (splitDateTime.length \u003d\u003d 2) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jevan13"},"content":"                String time \u003d splitDateTime[1];","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jevan13"},"content":"                String hour \u003d time.substring(0, 2);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jevan13"},"content":"                String minute \u003d time.substring(2);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jevan13"},"content":"                String toParse \u003d String.format(\"%s-%s-%sT%s:%s\", year, month, day, hour, minute);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jevan13"},"content":"                toReturn \u003d LocalDateTime.parse(toParse);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jevan13"},"content":"            } else if (type \u003d\u003d 0) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jevan13"},"content":"                String toParse \u003d String.format(\"%s-%s-%sT00:00\", year, month, day);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jevan13"},"content":"                toReturn \u003d LocalDateTime.parse(toParse);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jevan13"},"content":"            } else if (type \u003d\u003d 1) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jevan13"},"content":"                String toParse \u003d String.format(\"%s-%s-%sT23:59\", year, month, day);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jevan13"},"content":"                toReturn \u003d LocalDateTime.parse(toParse);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jevan13"},"content":"            } else {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jevan13"},"content":"                throw new YapperException(\"Error in stringToDateTime: Wrong Type\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jevan13"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jevan13"},"content":"            return toReturn;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jevan13"},"content":"        } catch (YapperException e) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jevan13"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jevan13"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jevan13"},"content":"        return null;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jevan13"},"content":"     * Deletes a task off the list of tasks.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jevan13"},"content":"     * @param command Word \"delete\" followed by a number corresponding to the task number to be deleted.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jevan13"},"content":"     * @throws YapperException If the string following \"delete\" cannot be treated as a valid task number.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jevan13"},"content":"    public String deleteTask(String command) throws YapperException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"jevan13"},"content":"        if (command.length() \u003d\u003d 6) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jevan13"},"content":"            throw new YapperException(\"Task Number cannot be empty!\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jevan13"},"content":"        } else {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jevan13"},"content":"            String input \u003d command.substring(7);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"jevan13"},"content":"            int order \u003d Integer.parseInt(input);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"jevan13"},"content":"            assert order \u003e\u003d 0 \u0026\u0026 order \u003c this.listOfTask.size() : \"Task Number should be between 0 and size of list\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"jevan13"},"content":"            if (order \u003c\u003d 0) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"jevan13"},"content":"                throw new YapperException(\"Task Number cannot be less than 1!\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"jevan13"},"content":"            } else if (order \u003e this.listOfTask.size()) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"jevan13"},"content":"                throw new YapperException(\"Task Number cannot be more than size of list!\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"jevan13"},"content":"            } else {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"jevan13"},"content":"                Task task \u003d this.listOfTask.get(order - 1);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"jevan13"},"content":"                this.listOfTask.remove(order - 1);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"jevan13"},"content":"                String toReturn \u003d \"Noted. I\u0027ve removed this task: \\n\" + task + \"\\n\" + \"Now you have \"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"jevan13"},"content":"                        + this.listOfTask.size() + \" tasks in the list\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"jevan13"},"content":"                System.out.println(toReturn);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"jevan13"},"content":"                this.storage.writeHistory(this.listOfTask);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"jevan13"},"content":"                return toReturn;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"jevan13"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"jevan13"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"jevan13"},"content":"     * Adds a ToDo object into the list of tasks.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"jevan13"},"content":"     * @param command Word \"todo\" followed by the name of the task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"jevan13"},"content":"     * @throws YapperException If the string following \"todo\" is empty.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"jevan13"},"content":"    public String addToDo(String command) throws YapperException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"jevan13"},"content":"        assert command.startsWith(\"todo\") : \"Command should start with todo\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"jevan13"},"content":"        if (command.equals(\"todo\") || command.equals(\"todo \")) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"jevan13"},"content":"            throw new YapperException(\"Description for ToDo cannot be empty!\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"jevan13"},"content":"        } else {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"jevan13"},"content":"            String input \u003d command.substring(5);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"jevan13"},"content":"            ToDo todo \u003d new ToDo(input);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"jevan13"},"content":"            return this.addTask(todo);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"jevan13"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"jevan13"},"content":"     * Adds a Deadline object into the list of tasks.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"jevan13"},"content":"     * @param command Word \"deadline\" followed by the name of the task, \" /by \", followed by the ending time.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"jevan13"},"content":"     * @throws YapperException If the name of the task is empty.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"jevan13"},"content":"     * @throws YapperException If \"/by\" command does not exist","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"jevan13"},"content":"     * @throws YapperException If the ending time is empty.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"jevan13"},"content":"    public String addDeadline(String command) throws YapperException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"jevan13"},"content":"        assert command.startsWith(\"deadline\") : \"Command should start with deadline\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"jevan13"},"content":"        if (command.startsWith(\"deadline /by \")) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"jevan13"},"content":"            throw new YapperException(\"Name for Deadline cannot be empty!\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"jevan13"},"content":"        } else {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"jevan13"},"content":"            String input \u003d command.substring(9);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"jevan13"},"content":"            String[] split \u003d input.split(\" /by \");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"jevan13"},"content":"            if (!input.contains(\" /by \")) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"jevan13"},"content":"                throw new YapperException(\"Deadline require /by command with Deadline Time\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"jevan13"},"content":"            } else if (split.length \u003d\u003d 1) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"jevan13"},"content":"                throw new YapperException(\"Deadline Time is empty!\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"jevan13"},"content":"            } else {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"jevan13"},"content":"                LocalDateTime byDateTime \u003d convertStringToDateTime(split[1], 1);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"jevan13"},"content":"                Deadline deadline \u003d new Deadline(split[0], byDateTime);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"jevan13"},"content":"                return this.addTask(deadline);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"jevan13"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"jevan13"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"jevan13"},"content":"     * Adds an Event object into the list of tasks.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"jevan13"},"content":"     * @param command Word \"event\" followed by the name of the task, \" /from \", followed by the starting time,","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"jevan13"},"content":"     *                \" /to \", followed by the ending time.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"jevan13"},"content":"     * @throws YapperException If name of event is empty.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"jevan13"},"content":"     * @throws YapperException If \"/from\" command does not exist.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"jevan13"},"content":"     * @throws YapperException If \"/to\" command does not exist","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"jevan13"},"content":"     * @throws YapperException If starting time is empty.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"jevan13"},"content":"     * @throws YapperException If ending time is empty.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"jevan13"},"content":"    public String addEvent(String command) throws YapperException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"jevan13"},"content":"        assert command.startsWith(\"event\") : \"Command should start with event\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"jevan13"},"content":"        if (command.equals(\"event /from \")) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"jevan13"},"content":"            throw new YapperException(\"Name for Event cannot be empty!\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"jevan13"},"content":"        } else {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"jevan13"},"content":"            String input \u003d command.substring(6);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"jevan13"},"content":"            String[] split \u003d input.split(\" /from \");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"jevan13"},"content":"            String[] split2 \u003d split[1].split(\" /to \");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"jevan13"},"content":"            if (!input.contains(\" /from \")) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"jevan13"},"content":"                throw new YapperException(\"Event require /from command with Start Time\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"jevan13"},"content":"            } else if (!input.contains(\" /to \")) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"jevan13"},"content":"                throw new YapperException(\"Event require /to command with End Time\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"jevan13"},"content":"            } else if (split2[0].isEmpty()) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"jevan13"},"content":"                throw new YapperException(\"Event Start Time is empty!\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"jevan13"},"content":"            } else if (split2[1].isEmpty()) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"jevan13"},"content":"                throw new YapperException(\"Event End Time is empty!\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"jevan13"},"content":"            } else {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"jevan13"},"content":"                LocalDateTime fromDateTime \u003d convertStringToDateTime(split2[0], 0);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"jevan13"},"content":"                LocalDateTime toDateTime \u003d convertStringToDateTime(split2[1], 1);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"jevan13"},"content":"                Event event \u003d new Event(split[0], fromDateTime, toDateTime);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"jevan13"},"content":"                return this.addTask(event);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"jevan13"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"jevan13"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"jevan13"},"content":"     * Add a Task object into the list of tasks.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"jevan13"},"content":"     * @param task Task to be added into the list.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"jevan13"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"jevan13"},"content":"        this.listOfTask.add(task);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"jevan13"},"content":"        String toReturn \u003d \"Got it. I\u0027ve added this task:\\n\" + task + \"\\nNow you have \" + this.listOfTask.size()","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"jevan13"},"content":"                + \" tasks in the list\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"jevan13"},"content":"        System.out.println(toReturn);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"jevan13"},"content":"        this.storage.writeHistory(this.listOfTask);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"jevan13"},"content":"        return toReturn;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"jevan13"},"content":"     * Marks a task in the list as done.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"jevan13"},"content":"     * @param command \"mark\" followed by the task number to be marked as done.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"jevan13"},"content":"     * @throws YapperException If the string following \"mark\" cannot be treated as a valid task number.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"jevan13"},"content":"    public String mark(String command) throws YapperException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"jevan13"},"content":"        if (command.length() \u003d\u003d 4) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"jevan13"},"content":"            throw new YapperException(\"Task Number cannot be empty!\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"jevan13"},"content":"        } else {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"jevan13"},"content":"            String input \u003d command.substring(5);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"jevan13"},"content":"            int order \u003d Integer.parseInt(input);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"jevan13"},"content":"            assert order \u003e\u003d 0 \u0026\u0026 order \u003c this.listOfTask.size() : \"Order should be between 0 and size of list\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"jevan13"},"content":"            if (order \u003c\u003d 0) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"jevan13"},"content":"                throw new YapperException(\"Task Number cannot be less than 1!\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"jevan13"},"content":"            } else if (order \u003e this.listOfTask.size()) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"jevan13"},"content":"                throw new YapperException(\"Task Number cannot be more than size of list!\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"jevan13"},"content":"            } else {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"jevan13"},"content":"                Task taskToMark \u003d this.listOfTask.get(order - 1);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"jevan13"},"content":"                taskToMark.setIsDone(true);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"jevan13"},"content":"                String toReturn \u003d \"Nice! I\u0027ve marked this task as done: \\n\" + taskToMark;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"jevan13"},"content":"                System.out.println(toReturn);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"jevan13"},"content":"                this.storage.writeHistory(this.listOfTask);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"jevan13"},"content":"                return toReturn;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"jevan13"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"jevan13"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"jevan13"},"content":"     * Marks a task in the list as undone.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"jevan13"},"content":"     * @param command \"unmark\" followed by the task number to be marked as undone.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"jevan13"},"content":"     * @throws YapperException If the string following \"unmark\" cannot be treated as a valid task number.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"jevan13"},"content":"    public String unmark(String command) throws YapperException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"jevan13"},"content":"        if (command.length() \u003d\u003d 6) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"jevan13"},"content":"            throw new YapperException(\"Task Number cannot be empty!\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"jevan13"},"content":"        } else {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"jevan13"},"content":"            String input \u003d command.substring(7);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"jevan13"},"content":"            int order \u003d Integer.parseInt(input);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"jevan13"},"content":"            assert order \u003e\u003d 0 \u0026\u0026 order \u003c this.listOfTask.size() : \"Order should be between 0 and size of list\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"jevan13"},"content":"            if (order \u003c\u003d 0) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"jevan13"},"content":"                throw new YapperException(\"Task Number cannot be less than 1!\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"jevan13"},"content":"            } else if (order \u003e this.listOfTask.size()) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"jevan13"},"content":"                throw new YapperException(\"Task Number cannot be more than size of list!\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"jevan13"},"content":"            } else {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"jevan13"},"content":"                Task taskToUnmark \u003d this.listOfTask.get(order - 1);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"jevan13"},"content":"                taskToUnmark.setIsDone(false);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"jevan13"},"content":"                String toReturn \u003d \"OK, I\u0027ve marked this task as not done yet: \\n\" + taskToUnmark;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"jevan13"},"content":"                System.out.println(toReturn);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"jevan13"},"content":"                this.storage.writeHistory(this.listOfTask);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"jevan13"},"content":"                return toReturn;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"jevan13"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"jevan13"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"jevan13"},"content":"     * Prints the list of tasks out in System out","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"jevan13"},"content":"    public String returnList() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"jevan13"},"content":"        String toReturn \u003d \"Here are the tasks in your list: \";","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"jevan13"},"content":"        System.out.println(toReturn);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"jevan13"},"content":"        int order \u003d 1;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"jevan13"},"content":"        for (Task task : listOfTask) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"jevan13"},"content":"            String toAdd \u003d order + \".\" + task;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"jevan13"},"content":"            System.out.println(toAdd);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"jevan13"},"content":"            order++;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"jevan13"},"content":"            toReturn +\u003d \"\\n\" + toAdd;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"jevan13"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"jevan13"},"content":"        return toReturn;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"jevan13":338}},{"path":"src/main/java/yapper/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jevan13"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jevan13"},"content":" * Represents a ToDo Task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jevan13"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jevan13"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jevan13"},"content":"     * Creates an instance of ToDo.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jevan13"},"content":"     * @param taskName Name of the task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jevan13"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jevan13"},"content":"        super(taskName);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jevan13"},"content":"        super.setTaskTag(\"todo\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jevan13"},"content":"     * Returns a string representation of the ToDo object.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jevan13"},"content":"     * @return String representation of the ToDo object.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jevan13"},"content":"    public String toString() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jevan13"},"content":"        String doneSymbol \u003d super.getIsDone() ? Task.DONE_SYMBOL : Task.UNDONE_SYMBOL;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jevan13"},"content":"        return String.format(\"[T]%s %s\", doneSymbol, super.getName());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jevan13"},"content":"     * Returns the string representation of the ToDo object to be recorded into a file.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jevan13"},"content":"     * String to be decoded when loading history from the file.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jevan13"},"content":"     * @return String representation of the ToDo object.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jevan13"},"content":"    public String toFile() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jevan13"},"content":"        String fileDoneSymbol \u003d super.getIsDone() ? Task.FILE_DONE_SYMBOL : Task.FILE_UNDONE_SYMBOL;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jevan13"},"content":"        return String.format(\"T %s--%s\", fileDoneSymbol, super.getName());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"jevan13":37}},{"path":"src/main/java/yapper/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jevan13"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jevan13"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jevan13"},"content":" * Represents a Ui, which takes in the user input and sends it to the parser to parse.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jevan13"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jevan13"},"content":"public class Ui {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jevan13"},"content":"    private final Scanner sc;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jevan13"},"content":"    private final Parser parser;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jevan13"},"content":"     * Creates an instance of UI","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jevan13"},"content":"     * @param parser Parser object for UI to send user inputs to be parsed.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jevan13"},"content":"    public Ui(Parser parser) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jevan13"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jevan13"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jevan13"},"content":"     * Reads user inputs and sends it to the parser to parse.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jevan13"},"content":"    public void readInput() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jevan13"},"content":"        while (true) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jevan13"},"content":"            if (sc.hasNextLine()) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jevan13"},"content":"                String text \u003d sc.nextLine();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jevan13"},"content":"                this.parser.readCommand(text);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jevan13"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jevan13"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jevan13"},"content":"    public String readGuiInput(String string) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jevan13"},"content":"        return this.parser.readCommand(string);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"jevan13":37}},{"path":"src/main/java/yapper/Yapper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jevan13"},"content":"import java.io.File;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jevan13"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jevan13"},"content":" * Represent a Yapper","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jevan13"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jevan13"},"content":"public class Yapper {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jevan13"},"content":"    private static Ui ui;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jevan13"},"content":"    private static Parser parser;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jevan13"},"content":"    private static Storage storage;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jevan13"},"content":"    private static TaskList taskList;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jevan13"},"content":"     * Creates an instance of Yapper.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jevan13"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jevan13"},"content":"     * @param fileName String of file path to load and write the history of tasks to.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jevan13"},"content":"    public Yapper(String fileName) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jevan13"},"content":"        File file \u003d new File(fileName);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jevan13"},"content":"        storage \u003d new Storage(file);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jevan13"},"content":"        taskList \u003d storage.loadHistory();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jevan13"},"content":"        parser \u003d new Parser(taskList);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jevan13"},"content":"        ui \u003d new Ui(parser);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jevan13"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jevan13"},"content":"        String fileName \u003d \"./src/main/java/Yapper/YapperHistoryFile\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jevan13"},"content":"        new Yapper(fileName).run();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jevan13"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jevan13"},"content":"     * Runs the program.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jevan13"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jevan13"},"content":"    @SuppressWarnings(\"checkstyle:JavadocContentLocation\")","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jevan13"},"content":"    public void run() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jevan13"},"content":"        System.out.println(\"Hello! I\u0027m Yapper\\nWhat can I do for you?\\n\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jevan13"},"content":"        taskList.returnList();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jevan13"},"content":"        ui.readInput();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jevan13"},"content":"    public String guiRun(String input) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jevan13"},"content":"        return ui.readGuiInput(input);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"jevan13":46}},{"path":"src/main/java/yapper/YapperException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jevan13"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jevan13"},"content":" * Represents YapperException.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jevan13"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jevan13"},"content":"public class YapperException extends Exception {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jevan13"},"content":"    public YapperException(String message) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jevan13"},"content":"        super(message);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"jevan13":10}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jevan13"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jevan13"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jevan13"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jevan13"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jevan13"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jevan13"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jevan13"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jevan13"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jevan13"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jevan13"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jevan13"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jevan13"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jevan13"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jevan13"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jevan13"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jevan13"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jevan13"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jevan13"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jevan13"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"jevan13":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jevan13"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jevan13"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jevan13"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jevan13"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jevan13"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jevan13"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jevan13"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jevan13"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jevan13"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jevan13"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jevan13"},"content":"            fx:controller\u003d\"yapper.MainWindow\"\u003e","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jevan13"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jevan13"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jevan13"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jevan13"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jevan13"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jevan13"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jevan13"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jevan13"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jevan13"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jevan13"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jevan13"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jevan13"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jevan13"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jevan13"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jevan13"},"content":"                text\u003d\"Send\"/\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jevan13"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jevan13"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jevan13"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jevan13"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jevan13"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jevan13"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jevan13"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jevan13"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jevan13"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jevan13"},"content":"                      prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jevan13"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jevan13"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jevan13"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jevan13"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"jevan13":43}},{"path":"src/test/java/yapper/StringTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jevan13"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jevan13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jevan13"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jevan13"},"content":"public class StringTest {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jevan13"},"content":"    @Test","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jevan13"},"content":"    public void toDoToStringTest() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jevan13"},"content":"        ToDo todo \u003d new ToDo(\"buy bread\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jevan13"},"content":"        todo.setIsDone(true);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jevan13"},"content":"        String expected \u003d \"[T][X] buy bread\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jevan13"},"content":"        String actual \u003d todo.toString();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jevan13"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jevan13"},"content":"    @Test","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jevan13"},"content":"    public void toDoToFileTest() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jevan13"},"content":"        ToDo todo \u003d new ToDo(\"buy bread\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jevan13"},"content":"        todo.setIsDone(true);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jevan13"},"content":"        String expected \u003d \"T D--buy bread\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jevan13"},"content":"        String actual \u003d todo.toFile();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jevan13"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jevan13"},"content":"    @Test","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jevan13"},"content":"    public void deadlineToStringTest() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jevan13"},"content":"        Deadline deadline \u003d new Deadline(\"buy bread\", LocalDateTime.of(2024, 12, 31, 18, 0));","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jevan13"},"content":"        deadline.setIsDone(true);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jevan13"},"content":"        String expected \u003d \"[D][X] buy bread (BY: Dec 31 2024 18:00)\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jevan13"},"content":"        String actual \u003d deadline.toString();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jevan13"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jevan13"},"content":"    @Test","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jevan13"},"content":"    public void deadlineToFileTest() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jevan13"},"content":"        Deadline deadline \u003d new Deadline(\"buy bread\", LocalDateTime.of(2024, 12, 31, 18, 0));","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jevan13"},"content":"        deadline.setIsDone(true);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jevan13"},"content":"        String expected \u003d \"D D--buy bread--2024-12-31T18:00\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jevan13"},"content":"        String actual \u003d deadline.toFile();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jevan13"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jevan13"},"content":"    @Test","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jevan13"},"content":"    public void eventToStringTest() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jevan13"},"content":"        Event event \u003d new Event(\"buy bread\", LocalDateTime.of(2024, 12, 31, 18, 0),","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jevan13"},"content":"                LocalDateTime.of(2024, 12, 31, 21, 0));","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jevan13"},"content":"        event.setIsDone(true);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jevan13"},"content":"        String expected \u003d \"[E][X] buy bread (FROM: Dec 31 2024 18:00 TO: Dec 31 2024 21:00)\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jevan13"},"content":"        String actual \u003d event.toString();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jevan13"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jevan13"},"content":"    @Test","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jevan13"},"content":"    public void eventToFileTest() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jevan13"},"content":"        Event event \u003d new Event(\"buy bread\", LocalDateTime.of(2024, 12, 31, 18, 0),","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jevan13"},"content":"                LocalDateTime.of(2024, 12, 31, 21, 0));","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jevan13"},"content":"        event.setIsDone(true);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jevan13"},"content":"        String expected \u003d \"E D--buy bread--2024-12-31T18:00--2024-12-31T21:00\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jevan13"},"content":"        String actual \u003d event.toFile();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jevan13"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-09-18","isFullCredit":false}],"authorContributionMap":{"jevan13":64}},{"path":"src/test/java/yapper/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"package yapper;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jevan13"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jevan13"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jevan13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jevan13"},"content":"public class TaskListTest {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jevan13"},"content":"    @Test","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jevan13"},"content":"    public void stringToDateTimeTest0() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jevan13"},"content":"        String dateTime \u003d \"2024/12/31\";","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jevan13"},"content":"        LocalDateTime actual \u003d TaskList.convertStringToDateTime(dateTime, 0);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jevan13"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2024, 12, 31, 00, 00);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jevan13"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jevan13"},"content":"    @Test","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jevan13"},"content":"    public void stringToDateTimeTest1() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jevan13"},"content":"        String dateTime \u003d \"2024/12/31\";","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jevan13"},"content":"        LocalDateTime actual \u003d TaskList.convertStringToDateTime(dateTime, 1);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jevan13"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2024, 12, 31, 23, 59);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jevan13"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jevan13"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jevan13"},"content":"    @Test","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jevan13"},"content":"    public void stringToDateTimeTestWithTime() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jevan13"},"content":"        String dateTime \u003d \"2024/12/31 1800\";","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jevan13"},"content":"        LocalDateTime actual \u003d TaskList.convertStringToDateTime(dateTime, 0);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jevan13"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2024, 12, 31, 18, 00);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jevan13"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jevan13"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jevan13"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"jevan13":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jevan13"},"content":"todo borrow book","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"jevan13":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jevan13"},"content":"java -classpath ..\\bin yapper \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"jevan13":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jevan13"},"content":"java -classpath ../bin Yapper \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"jevan13":1,"-":37}}]
