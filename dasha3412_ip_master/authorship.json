[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"# victor Project","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"This develops a chatbot from a project template for a greenfield Java project. Originally named after the Java mascot _Duke_, it is named victor here! Given below are instructions on how to use it.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"3. After that, locate the `src/main/java/victor.java` file, right-click it, and choose `Run victor.main()` (if the code editor is showing compile errors, try restarting the IDE).","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"If the setup is correct, victor will introduce himself to you and you can get started with creating, updating, and managing your tasks!","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"dasha3412":6,"-":13}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"3","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dasha3412"},"content":"    mainClass.set(\"victor.Main\")","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dasha3412"},"content":"checkstyle {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dasha3412"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dasha3412"},"content":"    archiveBaseName \u003d \"victor\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dasha3412"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"dasha3412":9,"-":38}},{"path":"src/main/java/victor/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"package victor;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"import victor.commands.Command;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"import victor.messages.ReturnMessage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":"import victor.parser.Parser;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":"import victor.storage.Storage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":"import victor.tasklist.TaskList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":"import victor.ui.UI;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":"public class Main {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"    private final Path filePath \u003d Paths.get(\"data\", \"data.txt\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"    private Parser parser;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"    private UI ui;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dasha3412"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dasha3412"},"content":"        new Main().run();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dasha3412"},"content":"     * Starts program loop and calls initialising and ending functions.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dasha3412"},"content":"    private void run() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dasha3412"},"content":"        start();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dasha3412"},"content":"        runUntilExit();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dasha3412"},"content":"        exit();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dasha3412"},"content":"     * Initialises parser, UI, storage, and task list elements for the whole program.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dasha3412"},"content":"    private void start() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dasha3412"},"content":"        // On start, need to create parser, load data from storage to make Task List","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dasha3412"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dasha3412"},"content":"        ui \u003d new UI();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dasha3412"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dasha3412"},"content":"        taskList \u003d storage.load();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dasha3412"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dasha3412"},"content":"     * Runs a program loop that continually received user input until the UI receives a \"bye\" command.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dasha3412"},"content":"    private void runUntilExit() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dasha3412"},"content":"        Command nextCommand;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dasha3412"},"content":"        do {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dasha3412"},"content":"            nextCommand \u003d parser.parseInput(ui.getUserInput());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dasha3412"},"content":"            nextCommand.setData(taskList);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dasha3412"},"content":"            ReturnMessage returnMessage \u003d nextCommand.execute();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dasha3412"},"content":"            ui.showUserMessage(returnMessage);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dasha3412"},"content":"            nextCommand.write(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dasha3412"},"content":"        } while (!nextCommand.isExit());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dasha3412"},"content":"     * Calls the UI to generate a parting message and terminates the program.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dasha3412"},"content":"    private void exit() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dasha3412"},"content":"        ui.showByeMessage();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dasha3412"},"content":"        System.exit(0);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"dasha3412":67}},{"path":"src/main/java/victor/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"package victor.commands;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"import victor.messages.ReturnMessage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"import victor.tasklist.TaskList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":"public class Command {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":"    protected TaskList taskList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":"    protected String[] additionalInput;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":"    public Command(String[] additionalInput) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":"        this.additionalInput \u003d additionalInput;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"    public void setData(TaskList taskList) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dasha3412"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dasha3412"},"content":"        return false;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dasha3412"},"content":"    public void write(Path filePath) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dasha3412"},"content":"     * Generic return method that returns a message responding to blank input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dasha3412"},"content":"     * @return A return message with a prompt to the user to enter the correct input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dasha3412"},"content":"    public ReturnMessage execute() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dasha3412"},"content":"        return new ReturnMessage(\"  ~  Sorry, that\u0027s not something I know how to do :(\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dasha3412"},"content":"                \"  ~  Please specify either a To Do, a Deadline or an Event!\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dasha3412"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dasha3412"},"content":"        return this.taskList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dasha3412"},"content":"    public String[] getAdditionalInput() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dasha3412"},"content":"        return this.additionalInput;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"dasha3412":43}},{"path":"src/main/java/victor/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"package victor.commands;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"import victor.messages.ReturnMessage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":"import victor.tasklist.TaskList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":"import victor.tasks.Deadline;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":"    private Deadline deadline;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":"    public DeadlineCommand(String[] additionalInput) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"        super(additionalInput);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"     * Overrides the execute method from the Command class. Processes user input and handles","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"     * inputs with incorrect date formats by returning user prompt messages that state the correct","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dasha3412"},"content":"     * input format. Calls the addTask method of task list to add the task to the program-wide task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dasha3412"},"content":"     * @return A return message with the deadline action summary (successful) or a prompt to the user (unsuccessful).","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dasha3412"},"content":"    public ReturnMessage execute() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dasha3412"},"content":"        String taskNameString \u003d \"\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dasha3412"},"content":"        String deadlineString \u003d \"\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dasha3412"},"content":"        boolean isDeadline \u003d false;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dasha3412"},"content":"        for (int i \u003d 1; i \u003c additionalInput.length; i++) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dasha3412"},"content":"            if (additionalInput[i].startsWith(\"/\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dasha3412"},"content":"                isDeadline \u003d true;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dasha3412"},"content":"                continue;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dasha3412"},"content":"            if (!isDeadline) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dasha3412"},"content":"                taskNameString +\u003d \" \" + additionalInput[i];","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dasha3412"},"content":"            } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dasha3412"},"content":"                deadlineString +\u003d \" \" + additionalInput[i];","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dasha3412"},"content":"        // Trim so that blank space cannot be counted as name for task or deadlines","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dasha3412"},"content":"        taskNameString \u003d taskNameString.trim();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dasha3412"},"content":"        deadlineString \u003d deadlineString.trim();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dasha3412"},"content":"            if (taskNameString.isBlank()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dasha3412"},"content":"                return new ReturnMessage(\"  ~  Please give a name for the deadline.\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dasha3412"},"content":"                        \"  ~  The format should be \\\"deadline\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dasha3412"},"content":"                            + \" (description) /by (deadline, in format yyyy-mm-dd or dd-mm-yyyy)\\\"\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dasha3412"},"content":"            } else if (deadlineString.isBlank()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dasha3412"},"content":"                return new ReturnMessage(\"  ~  Please give a deadline for the deadline.\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dasha3412"},"content":"                        \"  ~  The format should be \\\"deadline\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dasha3412"},"content":"                            + \" (description) /by (deadline, in format yyyy-mm-dd or dd-mm-yyyy)\\\"\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dasha3412"},"content":"            } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dasha3412"},"content":"                this.deadline \u003d new Deadline(taskNameString, deadlineString);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dasha3412"},"content":"                return new ReturnMessage(super.taskList.addTask(deadline));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dasha3412"},"content":"        } catch (DateTimeParseException parseException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dasha3412"},"content":"            return new ReturnMessage(\"  ~  Please format deadline as \" + \"\\\"deadline\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dasha3412"},"content":"                + \" (description) /by (deadline, in format yyyy-mm-dd or dd-mm-yyyy)\\\"\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dasha3412"},"content":"     * Overrides the generic write method in the parent Command class. Handles the case where the deadline is null","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dasha3412"},"content":"     * (has not been set or incorrectly generated) by not writing anything. Otherwise, calls the writeToFile method","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dasha3412"},"content":"     * from the TaskList class with the given file path. Appends to file instead of overwriting.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dasha3412"},"content":"     * @param filePath The file path, relative to the project root directory, where to write the changes.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dasha3412"},"content":"    public void write(Path filePath) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dasha3412"},"content":"            if (this.deadline !\u003d null) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dasha3412"},"content":"                this.deadline.writeToFile(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dasha3412"},"content":"        } catch (IOException writeException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dasha3412"},"content":"            throw new RuntimeException(\"Problem writing to file.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dasha3412"},"content":"    public Deadline getDeadline() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dasha3412"},"content":"        return this.deadline;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dasha3412"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dasha3412"},"content":"        return this.taskList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dasha3412"},"content":"    public String[] getAdditionalInput() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dasha3412"},"content":"        return this.additionalInput;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"dasha3412":92}},{"path":"src/main/java/victor/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"package victor.commands;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"import victor.messages.ReturnMessage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":"    private String taskNumber;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":"    public DeleteCommand(String[] additionalInput) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":"        super(additionalInput);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":"        if (additionalInput.length \u003d\u003d 1) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":"            this.taskNumber \u003d \"-1\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"        } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"            this.taskNumber \u003d additionalInput[1];","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dasha3412"},"content":"     * Overrides the execute method from the Command class. Processes user input and handles","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dasha3412"},"content":"     * inputs with invalid task number to delete by prompting the user to enter a valid number.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dasha3412"},"content":"     * @return A return message with the delete action summary (successful) or a prompt to the user (unsuccessful).","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dasha3412"},"content":"    public ReturnMessage execute() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dasha3412"},"content":"            return new ReturnMessage(super.taskList.deleteTask(Integer.parseInt(taskNumber)));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dasha3412"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dasha3412"},"content":"            return new ReturnMessage(\"  ~  Sorry, I don\u0027t think you entered a number for which\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dasha3412"},"content":"                + \" task to delete!\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dasha3412"},"content":"     * Re-writes the task list to the output file at the file path specified by calling the writeToFile method","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dasha3412"},"content":"     * from the TaskList class.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dasha3412"},"content":"     * @param filePath The file path, relative to the project root directory, where to write the changes.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dasha3412"},"content":"    public void write(Path filePath) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dasha3412"},"content":"        if (!taskNumber.trim().equals(\"-1\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dasha3412"},"content":"            super.taskList.writeToFile(filePath, true);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"dasha3412":45}},{"path":"src/main/java/victor/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"package victor.commands;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":"import victor.messages.ReturnMessage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":"import victor.tasks.Event;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":"    private Event event;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":"    public EventCommand(String[] additionalInput) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"        super(additionalInput);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"     * Overrides the execute method from the Command class. Processes user input and handles","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"     * inputs with invalid date formats by prompting the user to enter a valid range and format of dates.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dasha3412"},"content":"     * Calls the addTask method of task list to add the task to the program-wide task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dasha3412"},"content":"     * @return A return message with the event action summary (successful) or a prompt to the user (unsuccessful).","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dasha3412"},"content":"    public ReturnMessage execute() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dasha3412"},"content":"        String taskNameString \u003d \"\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dasha3412"},"content":"        String startString \u003d \"\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dasha3412"},"content":"        String endString \u003d \"\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dasha3412"},"content":"        boolean isStart \u003d false;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dasha3412"},"content":"        boolean isEnd \u003d false;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dasha3412"},"content":"        for (int i \u003d 1; i \u003c additionalInput.length; i++) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dasha3412"},"content":"            if (additionalInput[i].startsWith(\"/\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dasha3412"},"content":"                if (isStart) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dasha3412"},"content":"                    isEnd \u003d true;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dasha3412"},"content":"                } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dasha3412"},"content":"                    isStart \u003d true;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dasha3412"},"content":"                }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dasha3412"},"content":"                continue;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dasha3412"},"content":"            if (!isStart) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dasha3412"},"content":"                taskNameString +\u003d \" \" + additionalInput[i];","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dasha3412"},"content":"            } else if (!isEnd) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dasha3412"},"content":"                startString +\u003d \" \" + additionalInput[i];","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dasha3412"},"content":"            } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dasha3412"},"content":"                endString +\u003d \"\" + additionalInput[i];","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dasha3412"},"content":"        // Trim so that blank space cannot be counted as name for task, start or end","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dasha3412"},"content":"        taskNameString \u003d taskNameString.trim();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dasha3412"},"content":"        startString \u003d startString.trim();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dasha3412"},"content":"        endString \u003d endString.trim();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dasha3412"},"content":"            if (taskNameString.isBlank()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dasha3412"},"content":"                return new ReturnMessage(\"  ~  Please give a name for the event.\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dasha3412"},"content":"                        \"  ~  The format should be \\\"event\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dasha3412"},"content":"                        + \" (description) /from (start, in format yyyy-mm-dd or dd-mm-yyyy) /to\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dasha3412"},"content":"                        + \" (end, in format yyyy-mm-dd or dd-mm-yyyy)\\\"\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dasha3412"},"content":"            } else if (startString.isBlank()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dasha3412"},"content":"                return new ReturnMessage(\"  ~  Please give a start time for the event.\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dasha3412"},"content":"                        \"  ~  The format should be \\\"event\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dasha3412"},"content":"                        + \" (description) /from (start, in format yyyy-mm-dd or dd-mm-yyyy) /to\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dasha3412"},"content":"                        + \" (end, in format yyyy-mm-dd or dd-mm-yyyy)\\\"\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dasha3412"},"content":"            } else if (endString.isBlank()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dasha3412"},"content":"                return new ReturnMessage(\"  ~  Please give an end time for the event.\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dasha3412"},"content":"                        \"  ~  The format should be \\\"event\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dasha3412"},"content":"                        + \" (description) /from (start, in format yyyy-mm-dd or dd-mm-yyyy) /to\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dasha3412"},"content":"                        + \" (end, in format yyyy-mm-dd or dd-mm-yyyy)\\\"\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dasha3412"},"content":"            } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dasha3412"},"content":"                this.event \u003d new Event(taskNameString, startString, endString);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dasha3412"},"content":"                return new ReturnMessage(super.taskList.addTask(event));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dasha3412"},"content":"        } catch (DateTimeParseException parseException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dasha3412"},"content":"            return new ReturnMessage(\"  ~  Please format the event as \\\"event\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dasha3412"},"content":"                + \" (description) /from (start, in format yyyy-mm-dd or dd-mm-yyyy) /to\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dasha3412"},"content":"                + \" (end, in format yyyy-mm-dd or dd-mm-yyyy)\\\"\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dasha3412"},"content":"        } catch (DateTimeException dateException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dasha3412"},"content":"            return new ReturnMessage(\"  ~  Please ensure end time is later than start time!\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dasha3412"},"content":"                    \"  ~  Format the event as \\\"event (description) /from\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dasha3412"},"content":"                        + \" (start, in format yyyy-mm-dd or dd-mm-yyyy) /to\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dasha3412"},"content":"                        + \" (end, in format yyyy-mm-dd or dd-mm-yyyy)\\\"\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dasha3412"},"content":"     * Overrides the generic write method in the parent Command class. Handles the case where the event is null","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dasha3412"},"content":"     * (has not been set or incorrectly generated) by not writing anything. Otherwise, calls the writeToFile method","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dasha3412"},"content":"     * from the TaskList class with the given file path. Appends to file instead of overwriting.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dasha3412"},"content":"     * @param filePath The file path, relative to the project root directory, where to write the changes.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dasha3412"},"content":"    public void write(Path filePath) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dasha3412"},"content":"            if (this.event !\u003d null) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dasha3412"},"content":"                this.event.writeToFile(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dasha3412"},"content":"        } catch (IOException writeException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dasha3412"},"content":"            throw new RuntimeException(\"Problem writing to file.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"dasha3412":102}},{"path":"src/main/java/victor/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"package victor.commands;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"import victor.messages.ReturnMessage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"    public ExitCommand(String[] additionalInput) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"        super(additionalInput);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":"        return true;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"    public ReturnMessage execute() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"        return new ReturnMessage();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"dasha3412":18}},{"path":"src/main/java/victor/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"package victor.commands;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"import victor.messages.ReturnMessage;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"    public FindCommand(String[] additionalInput) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"        super(additionalInput);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":"    public ReturnMessage execute() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":"            return new ReturnMessage(\"  ~  No tasks in the list to find a match, add some To Dos, Events,\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"                    + \" and Deadlines first :)\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"        } else {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"            if (additionalInput.length \u003d\u003d 1) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"                return new ReturnMessage(\"  ~  Enter a word or phrase to find in your tasks!\",","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"                    \"  ~  Use the format find phrase, replacing phrase with what you want to find.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"            } else {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dasha3412"},"content":"                String toMatch \u003d \"\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dasha3412"},"content":"                for (int i \u003d 1; i \u003c additionalInput.length; i++) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"                    toMatch +\u003d additionalInput[i] + \" \";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dasha3412"},"content":"                }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dasha3412"},"content":"                toMatch \u003d toMatch.trim();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dasha3412"},"content":"                String[] matches \u003d taskList.findMatches(toMatch);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dasha3412"},"content":"                if (matches.length \u003d\u003d 0) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dasha3412"},"content":"                    return new ReturnMessage(\"  ~  Sorry, there were no tasks matching your phrase!\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dasha3412"},"content":"                } else {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dasha3412"},"content":"                    String[] outputMessages \u003d new String[matches.length + 1];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dasha3412"},"content":"                    outputMessages[0] \u003d \"  ~  I found these matches for you!\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dasha3412"},"content":"                    for (int i \u003d 1; i \u003c outputMessages.length; i++) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dasha3412"},"content":"                        outputMessages[i] \u003d matches[i - 1];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dasha3412"},"content":"                    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dasha3412"},"content":"                    return new ReturnMessage(outputMessages);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dasha3412"},"content":"                }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"dasha3412":42}},{"path":"src/main/java/victor/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"package victor.commands;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"import victor.messages.ReturnMessage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"    public ListCommand(String[] additionalInput) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"        super(additionalInput);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":"     * Overrides the execute method from the Command class. Processes user input and either returns","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":"     * the list of tasks currently stored or a response telling the user there are no tasks in the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":"     * @return A return message with the delete action summary (successful) or a prompt to the user (unsuccessful).","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"    public ReturnMessage execute() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"            return new ReturnMessage(\"  ~  No tasks in the list, add some To Dos, Events,\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"                + \" and Deadlines first :)\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dasha3412"},"content":"        } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dasha3412"},"content":"            return new ReturnMessage(super.taskList.enumerateTasks());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"dasha3412":24}},{"path":"src/main/java/victor/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"package victor.commands;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"import victor.messages.ReturnMessage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":"    private String taskNumber;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":"    public MarkCommand(String[] additionalInput) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":"        super(additionalInput);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":"        if (additionalInput.length \u003d\u003d 1) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":"            this.taskNumber \u003d \"-1\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"        } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"            this.taskNumber \u003d additionalInput[1];","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"    public MarkCommand(int task) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dasha3412"},"content":"        super(new String[] {});","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dasha3412"},"content":"        this.taskNumber \u003d String.valueOf(task);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dasha3412"},"content":"     * Overrides the execute method from the Command class. Processes user input and handles","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dasha3412"},"content":"     * inputs with invalid task number to mark by prompting the user to enter a valid number.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dasha3412"},"content":"     * @return A return message with the mark action summary (successful) or a prompt to the user (unsuccessful).","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dasha3412"},"content":"    public ReturnMessage execute() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dasha3412"},"content":"            return new ReturnMessage(super.taskList.markDone(Integer.parseInt(taskNumber)));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dasha3412"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dasha3412"},"content":"            return new ReturnMessage(\"  ~  I don\u0027t think there\u0027s a task with that number!\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dasha3412"},"content":"     * Re-writes the task list to the output file at the file path specified by calling the writeToFile method","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dasha3412"},"content":"     * from the TaskList class.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dasha3412"},"content":"     * @param filePath The file path, relative to the project root directory, where to write the changes.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dasha3412"},"content":"    public void write(Path filePath) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dasha3412"},"content":"        if (!taskNumber.trim().equals(\"-1\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dasha3412"},"content":"            super.taskList.writeToFile(filePath, true);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"dasha3412":49}},{"path":"src/main/java/victor/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"package victor.commands;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"import victor.messages.ReturnMessage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"import victor.tasklist.TaskList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":"import victor.tasks.ToDo;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":"    private ToDo toDo;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":"    public ToDoCommand(String[] additionalInput) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":"        super(additionalInput);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"     * Overrides the execute method from the Command class. Processes user input and handles","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"     * inputs with blank names by prompting the user to enter a valid range and format of dates.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"     * Calls the addTask method of task list to add the task to the program-wide task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dasha3412"},"content":"     * @return A return message with the event action summary (successful) or a prompt to the user (unsuccessful).","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"    public ReturnMessage execute() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dasha3412"},"content":"        String todoMessage \u003d \"\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dasha3412"},"content":"        for (int i \u003d 1; i \u003c additionalInput.length; i++) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dasha3412"},"content":"            todoMessage +\u003d additionalInput[i] + \" \";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dasha3412"},"content":"        todoMessage \u003d todoMessage.trim();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dasha3412"},"content":"        if (todoMessage.isBlank()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dasha3412"},"content":"            return new ReturnMessage(\"  ~  Please give a name for the To Do.\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dasha3412"},"content":"                    \"  ~  The format should be \\\"todo (description)\\\"\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dasha3412"},"content":"        } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dasha3412"},"content":"            this.toDo \u003d new ToDo(todoMessage);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dasha3412"},"content":"            return new ReturnMessage(super.taskList.addTask(toDo));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dasha3412"},"content":"     * Overrides the generic write method in the parent Command class. Handles the case where the event is null","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dasha3412"},"content":"     * (has not been set or incorrectly generated) by not writing anything. Otherwise, calls the writeToFile method","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dasha3412"},"content":"     * from the TaskList class with the given file path. Appends to file instead of overwriting.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dasha3412"},"content":"     * @param filePath The file path, relative to the project root directory, where to write the changes.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dasha3412"},"content":"    public void write(Path filePath) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dasha3412"},"content":"            if (this.toDo !\u003d null) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dasha3412"},"content":"                this.toDo.writeToFile(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dasha3412"},"content":"        } catch (IOException writeException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dasha3412"},"content":"            throw new RuntimeException(\"Problem writing to file.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dasha3412"},"content":"    public ToDo getToDo() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dasha3412"},"content":"        return this.toDo;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dasha3412"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dasha3412"},"content":"        return this.taskList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dasha3412"},"content":"    public String[] getAdditionalInput() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dasha3412"},"content":"        return this.additionalInput;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"dasha3412":66}},{"path":"src/main/java/victor/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"package victor.commands;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"import victor.messages.ReturnMessage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":"    private String taskNumber;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":"    public UnmarkCommand(String[] additionalInput) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":"        super(additionalInput);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":"        if (additionalInput.length \u003d\u003d 1) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":"            this.taskNumber \u003d \"-1\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"        } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"            this.taskNumber \u003d additionalInput[1];","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dasha3412"},"content":"     * Overrides the execute method from the Command class. Processes user input and handles","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dasha3412"},"content":"     * inputs with invalid task number to mark by prompting the user to enter a valid number.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"     * @return A return message with the unmark action summary (successful) or a prompt to the user (unsuccessful).","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dasha3412"},"content":"    public ReturnMessage execute() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dasha3412"},"content":"            return new ReturnMessage(super.taskList.unmarkDone(Integer.parseInt(taskNumber)));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dasha3412"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dasha3412"},"content":"            return new ReturnMessage(\"  ~  I don\u0027t think there\u0027s a task with that number!\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dasha3412"},"content":"     * Re-writes the task list to the output file at the file path specified by calling the writeToFile method","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dasha3412"},"content":"     * from the TaskList class.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dasha3412"},"content":"     * @param filePath The file path, relative to the project root directory, where to write the changes.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dasha3412"},"content":"    public void write(Path filePath) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dasha3412"},"content":"        if (!taskNumber.trim().equals(\"-1\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dasha3412"},"content":"            super.taskList.writeToFile(filePath, true);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"dasha3412":45}},{"path":"src/main/java/victor/messages/ReturnMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"package victor.messages;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":" * A ReturnMessage class that contains an array of the strings returned from the Command executions.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"public class ReturnMessage {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"    private String[] message;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":"    private boolean isEmpty;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":"     * Constructor for the ReturnMessage class, sets the isEmpty boolean to","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":"     * true if no messages were input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":"     * @param messages A variable number of String argu1ments for the return message","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"     *     of the commands.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"    public ReturnMessage(String... messages) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"        this.message \u003d messages;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"        if (messages.length !\u003d 0) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"            isEmpty \u003d false;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dasha3412"},"content":"        } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dasha3412"},"content":"            isEmpty \u003d true;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dasha3412"},"content":"    public String[] getMessages() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dasha3412"},"content":"        return this.message;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dasha3412"},"content":"    public boolean checkIsEmpty() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dasha3412"},"content":"        return this.isEmpty;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"dasha3412":32}},{"path":"src/main/java/victor/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"package victor.parser;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"import victor.commands.Command;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"import victor.commands.DeadlineCommand;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"import victor.commands.DeleteCommand;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"import victor.commands.EventCommand;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"import victor.commands.ExitCommand;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":"import victor.commands.FindCommand;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":"import victor.commands.ListCommand;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":"import victor.commands.MarkCommand;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":"import victor.commands.ToDoCommand;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":"import victor.commands.UnmarkCommand;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"public class Parser {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"     * Parses user input string and classifies input by type of command done. Parsing depends","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"     * on first word of user input. If no word is matched, a blank command is returned.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"     * @param input The string of user input from the input stream.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"     * @return Command with details of user input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dasha3412"},"content":"    public Command parseInput(String input) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dasha3412"},"content":"        Command command;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"        String[] inputWords \u003d input.trim().split(\" \");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dasha3412"},"content":"        command \u003d switch (inputWords[0]) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dasha3412"},"content":"        case \"todo\" -\u003e new ToDoCommand(inputWords);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dasha3412"},"content":"        case \"deadline\" -\u003e new DeadlineCommand(inputWords);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dasha3412"},"content":"        case \"event\" -\u003e new EventCommand(inputWords);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dasha3412"},"content":"        case \"delete\" -\u003e new DeleteCommand(inputWords);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dasha3412"},"content":"        case \"mark\" -\u003e new MarkCommand(inputWords);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dasha3412"},"content":"        case \"unmark\" -\u003e new UnmarkCommand(inputWords);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dasha3412"},"content":"        case \"list\" -\u003e new ListCommand(inputWords);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dasha3412"},"content":"        case \"bye\" -\u003e new ExitCommand(inputWords);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dasha3412"},"content":"        case \"find\" -\u003e new FindCommand(inputWords);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dasha3412"},"content":"        default -\u003e new Command(inputWords);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dasha3412"},"content":"        };","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dasha3412"},"content":"        return command;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"dasha3412":38}},{"path":"src/main/java/victor/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"package victor.storage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"import java.io.File;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":"import victor.commands.Command;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":"import victor.commands.DeadlineCommand;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":"import victor.commands.EventCommand;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":"import victor.commands.MarkCommand;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":"import victor.commands.ToDoCommand;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"import victor.tasklist.TaskList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"public class Storage {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"    private Path filePath;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dasha3412"},"content":"    public Storage(Path filePath) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dasha3412"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dasha3412"},"content":"     * Checks and creates, if necessary, necessary directories and files to save and load","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dasha3412"},"content":"     * tasks from. Creates a TaskList object to use for the entire program\u0027s tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dasha3412"},"content":"     * @return A TaskList object that is either blank, if no previous file existed or","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dasha3412"},"content":"     *     there were no saved tasks, or is populated with data loaded from the save file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dasha3412"},"content":"    public TaskList load() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dasha3412"},"content":"        Path dataPath \u003d filePath.getParent();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dasha3412"},"content":"        // Check if directory for txt file exists","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dasha3412"},"content":"        if (Files.exists(dataPath)) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dasha3412"},"content":"            // Check if file exists","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dasha3412"},"content":"            if (Files.exists(filePath)) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dasha3412"},"content":"                // Load from storage","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dasha3412"},"content":"                this.taskList \u003d new TaskList(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dasha3412"},"content":"                this.taskList \u003d readFileContents(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dasha3412"},"content":"            } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dasha3412"},"content":"                try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dasha3412"},"content":"                    // Create new empty task list","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dasha3412"},"content":"                    this.taskList \u003d new TaskList(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dasha3412"},"content":"                    // Create new file","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dasha3412"},"content":"                    File data \u003d new File(String.valueOf(filePath));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dasha3412"},"content":"                    data.createNewFile();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dasha3412"},"content":"                } catch (IOException makeFileException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dasha3412"},"content":"                    throw new RuntimeException(makeFileException);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dasha3412"},"content":"                }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dasha3412"},"content":"        } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dasha3412"},"content":"            try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dasha3412"},"content":"                // Create new empty task list","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dasha3412"},"content":"                this.taskList \u003d new TaskList(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dasha3412"},"content":"                // Create data directory","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dasha3412"},"content":"                Files.createDirectories(dataPath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dasha3412"},"content":"                // Create new file","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dasha3412"},"content":"                File data \u003d new File(String.valueOf(filePath));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dasha3412"},"content":"                data.createNewFile();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dasha3412"},"content":"            } catch (IOException makeFileException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dasha3412"},"content":"                throw new RuntimeException(makeFileException);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dasha3412"},"content":"        return taskList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dasha3412"},"content":"     * Decodes the text from the save file and re-formats it into a String array that matches","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dasha3412"},"content":"     * format required by Command and Task constructors.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dasha3412"},"content":"     * @param taskLine An array of strings from splitting each line of the save file by spaces.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dasha3412"},"content":"     * @return A Command object with the details of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dasha3412"},"content":"    public Command decodeTaskFromFile(String[] taskLine) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dasha3412"},"content":"        String[] commandInput;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dasha3412"},"content":"        if (taskLine[0].equals(\"T\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dasha3412"},"content":"            commandInput \u003d new String[] {\"todo\", taskLine[2]};","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dasha3412"},"content":"            return new ToDoCommand(commandInput);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dasha3412"},"content":"        } else if (taskLine[0].equals(\"D\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dasha3412"},"content":"            commandInput \u003d new String[] {\"deadline\", taskLine[2], \"/\", taskLine[3]};","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dasha3412"},"content":"            return new DeadlineCommand(commandInput);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dasha3412"},"content":"        } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dasha3412"},"content":"            commandInput \u003d new String[] {\"event\", taskLine[2], \"/\", taskLine[3], \"/\", taskLine[4]};","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dasha3412"},"content":"            return new EventCommand(commandInput);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dasha3412"},"content":"     * Reads an individual line from the input file, splits it, and calls the decodeTaskFromFile","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dasha3412"},"content":"     * function to create a Command object from the String input. Constructs the task list used","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dasha3412"},"content":"     * by the program from the lines saved in the data save file. Checks if each of the tasks saved","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dasha3412"},"content":"     * are completed and marks as completed if so.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dasha3412"},"content":"     * @param taskFileLine A string read from the data save file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dasha3412"},"content":"     * @param taskList The task list object used to keep track of objects for the whole program.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dasha3412"},"content":"     * @param taskNumber The task number of the line being read, as decided by its order in the data save file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dasha3412"},"content":"    public void readTask(String taskFileLine, TaskList taskList, int taskNumber) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dasha3412"},"content":"        String[] lineContent \u003d taskFileLine.split(\" \\\\| \");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dasha3412"},"content":"        Command command \u003d decodeTaskFromFile(lineContent);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dasha3412"},"content":"        command.setData(taskList);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dasha3412"},"content":"        // Do not need to show return messages from executing these tasks","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dasha3412"},"content":"        command.execute();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dasha3412"},"content":"        // Check if task was marked done","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dasha3412"},"content":"        if (Integer.parseInt(lineContent[1]) \u003d\u003d 1) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dasha3412"},"content":"            Command markCommand \u003d new MarkCommand(taskNumber);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dasha3412"},"content":"            markCommand.setData(taskList);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dasha3412"},"content":"            markCommand.execute();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dasha3412"},"content":"     * Reads all the task lines with the data save file as input and calls the readTask function","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dasha3412"},"content":"     * to process and construct the TaskList for the entire program.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"dasha3412"},"content":"     * @param filePath The relative file path (relative to project root directory) where data is saved.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"dasha3412"},"content":"     * @return The populated TaskList preloaded with tasks that were saved at the given file path.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"dasha3412"},"content":"    public TaskList readFileContents(Path filePath) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"dasha3412"},"content":"            int count \u003d 1;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"dasha3412"},"content":"            Scanner fileScanner \u003d new Scanner(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"dasha3412"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"dasha3412"},"content":"                readTask(fileScanner.nextLine(), taskList, count);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"dasha3412"},"content":"                count +\u003d 1;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"dasha3412"},"content":"            fileScanner.close();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"dasha3412"},"content":"            return taskList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"dasha3412"},"content":"        } catch (IOException scannerException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"dasha3412"},"content":"            throw new RuntimeException(scannerException);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"dasha3412":130}},{"path":"src/main/java/victor/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"package victor.tasklist;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":"import victor.tasks.Task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":"public class TaskList {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":"    private Path filePath;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"    public TaskList(Path filePath) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dasha3412"},"content":"     * Adds a task to the internal ArrayList of tasks keeping track of all tasks in the program.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dasha3412"},"content":"     * Returns a string array of the output to be shown by the UI component to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"     * @param task A Task object to be added to the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dasha3412"},"content":"     * @return A string array with output to be shown to the user following adding the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dasha3412"},"content":"    public String[] addTask(Task task) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dasha3412"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dasha3412"},"content":"        return new String[] {\"  ~  Cool! I added this task:\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dasha3412"},"content":"            \"  ~  \" + task,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dasha3412"},"content":"            \"  ~  You now have \" + this.getSize() + ((this.getSize() \u003d\u003d 1) ? \" task\" : \" tasks\") + \" in your list.\"};","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dasha3412"},"content":"     * Deletes a task from the internal ArrayList of tasks keeping track of all tasks in the program.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dasha3412"},"content":"     * Returns a string array of the output to be shown by the UI component to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dasha3412"},"content":"     * @param taskNumber An integer representing the number of the task meant to be deleted.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dasha3412"},"content":"     * @return A string array with output to be shown to the user following deleting the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dasha3412"},"content":"     *     Indicates success status of the deletion task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dasha3412"},"content":"    public String[] deleteTask(int taskNumber) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dasha3412"},"content":"            Task removed \u003d tasks.remove(taskNumber - 1);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dasha3412"},"content":"            return new String[] {\"  ~  Deleting the task below now!\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dasha3412"},"content":"                \"  ~  \" + removed, \"  ~  You now have \" + this.getSize() + ((this.getSize() \u003d\u003d 1) ? \" task\" : \" tasks\")","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dasha3412"},"content":"                    + \" in your list.\"};","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dasha3412"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dasha3412"},"content":"            return new String[] {\"  ~  Sorry, I don\u0027t think you entered a number for which task to delete!\"};","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dasha3412"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dasha3412"},"content":"            return new String[] {\"  ~  I don\u0027t think there\u0027s a task with that number!\"};","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dasha3412"},"content":"     * Marks a task as done in the internal ArrayList of tasks keeping track of all tasks in the program.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dasha3412"},"content":"     * Returns a string array of the output to be shown by the UI component to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dasha3412"},"content":"     * @param taskNumber An integer representing the number of the task meant to be marked as done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dasha3412"},"content":"     * @return A string array with output to be shown to the user following marking the task as done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dasha3412"},"content":"     *     Indicates success status of the marking as done task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dasha3412"},"content":"    public String[] markDone(int taskNumber) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dasha3412"},"content":"            Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dasha3412"},"content":"            task.markDone();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dasha3412"},"content":"            return new String[] {\"  ~  You finished a task! Well done! I marked this task as done:\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dasha3412"},"content":"                \"  ~  \" + task};","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dasha3412"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dasha3412"},"content":"            return new String[] {\"  ~  I don\u0027t think there\u0027s a task with that number!\"};","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dasha3412"},"content":"     * Unmarks a task as done in the internal ArrayList of tasks keeping track of all tasks in the program.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dasha3412"},"content":"     * Returns a string array of the output to be shown by the UI component to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dasha3412"},"content":"     * @param taskNumber An integer representing the number of the task meant to be unmarked as done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dasha3412"},"content":"     * @return A string array with output to be shown to the user following unmarking the task as done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dasha3412"},"content":"     *     Indicates success status of the unmarking as done task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dasha3412"},"content":"    public String[] unmarkDone(int taskNumber) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dasha3412"},"content":"            Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dasha3412"},"content":"            task.markUndone();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dasha3412"},"content":"            return new String[] {\"  ~  Oops, I guess you didn\u0027t finish the task! I marked this task as undone:\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dasha3412"},"content":"                \"  ~  \" + task};","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dasha3412"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dasha3412"},"content":"            return new String[] {\"  ~  I don\u0027t think there\u0027s a task with that number!\"};","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dasha3412"},"content":"     * Writes the entire task list to the file at the file path provided.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dasha3412"},"content":"     * @param filePath A Path object - a relative file path (relative to project root directory)","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dasha3412"},"content":"     *                 where data should be saved.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dasha3412"},"content":"     * @param shouldOverwrite A boolean specifying whether the current data in the file at the file","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dasha3412"},"content":"     *                        path should be overwritten.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dasha3412"},"content":"    public void writeToFile(Path filePath, boolean shouldOverwrite) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dasha3412"},"content":"            // Clear output file if overwriting","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dasha3412"},"content":"            if (shouldOverwrite) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dasha3412"},"content":"                PrintWriter writer \u003d new PrintWriter(String.valueOf(filePath));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dasha3412"},"content":"                writer.print(\"\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dasha3412"},"content":"                writer.close();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dasha3412"},"content":"            FileWriter fw \u003d new FileWriter(String.valueOf(filePath), shouldOverwrite);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dasha3412"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dasha3412"},"content":"                task.writeToFile(fw);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dasha3412"},"content":"            fw.close();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dasha3412"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dasha3412"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"dasha3412"},"content":"     * Returns a string array listing the String versions of all the tasks currently in the","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"dasha3412"},"content":"     * task list, along with their number and order.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"dasha3412"},"content":"     * @return A string array of all current tasks in the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"dasha3412"},"content":"    public String[] enumerateTasks() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"dasha3412"},"content":"        String[] outputList \u003d new String[tasks.size() + 1];","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"dasha3412"},"content":"        outputList[0] \u003d \"  ~  Sure! Here are all of your tasks:\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"dasha3412"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"dasha3412"},"content":"            outputList[i + 1] \u003d \"     \" + (i + 1) + \". \" + tasks.get(i);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"dasha3412"},"content":"        return outputList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"dasha3412"},"content":"    public int getSize() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"dasha3412"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"dasha3412"},"content":"    public String[] findMatches(String toMatch) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"dasha3412"},"content":"        ArrayList\u003cString\u003e matches \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"dasha3412"},"content":"        int count \u003d 1;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"dasha3412"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"dasha3412"},"content":"            if (task.toString().contains(toMatch)) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"dasha3412"},"content":"                matches.add(\"     \" + count + \". \" + task);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"dasha3412"},"content":"                count +\u003d 1;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"dasha3412"},"content":"        if (count \u003e 1) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"dasha3412"},"content":"            String[] matchesArray \u003d new String[matches.size()];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"dasha3412"},"content":"            for (int i \u003d 0; i \u003c matches.size(); i++) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"dasha3412"},"content":"                matchesArray[i] \u003d matches.get(i);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"dasha3412"},"content":"            return matchesArray;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"dasha3412"},"content":"        } else {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"dasha3412"},"content":"            return new String[] {};","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"dasha3412"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"dasha3412"},"content":"        return this.tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"dasha3412":155}},{"path":"src/main/java/victor/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"package victor.tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":" * Deadline class that handles task with a deadline.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"    protected String deadline;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"    protected LocalDate deadlineDate;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"     * Constructor for the deadline class that assigns the deadline a name and a deadline. Parses","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"     * input and saves the deadline as a LocalDate object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dasha3412"},"content":"     * @param name A string with the name of the deadline to be stored.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dasha3412"},"content":"     * @param deadline A string with the deadline of the deadline, should be either in format yyyy-mm-dd or dd-mm-yyyy.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dasha3412"},"content":"     * @throws DateTimeParseException Thrown if the start or end time cannot be parsed as a LocalDate object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dasha3412"},"content":"    public Deadline(String name, String deadline) throws DateTimeParseException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dasha3412"},"content":"        super(name);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dasha3412"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dasha3412"},"content":"            this.deadlineDate \u003d LocalDate.parse(deadline);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dasha3412"},"content":"        } catch (DateTimeParseException parseException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dasha3412"},"content":"            this.deadlineDate \u003d LocalDate.parse(deadline,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dasha3412"},"content":"                    DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dasha3412"},"content":"            this.deadlineDate \u003d LocalDate.parse(this.deadlineDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dasha3412"},"content":"    public String getDeadline() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dasha3412"},"content":"        return this.deadline;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dasha3412"},"content":"    public void writeToFile(FileWriter fileWriter) throws IOException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dasha3412"},"content":"        // Write event to file","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dasha3412"},"content":"            String toWrite \u003d \"D | \";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dasha3412"},"content":"            if (this.isDone) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dasha3412"},"content":"                toWrite +\u003d \"1 | \";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dasha3412"},"content":"            } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dasha3412"},"content":"                toWrite +\u003d \"0 | \";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dasha3412"},"content":"            toWrite +\u003d this.name + \" | \" + this.deadline + \"\\n\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dasha3412"},"content":"            fileWriter.write(toWrite);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dasha3412"},"content":"        } catch (IOException writeException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dasha3412"},"content":"            throw new RuntimeException(writeException);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dasha3412"},"content":"    public void writeToFile(Path filePath) throws IOException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dasha3412"},"content":"            FileWriter fileWriter \u003d new FileWriter(String.valueOf(filePath), true);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dasha3412"},"content":"            String toWrite \u003d \"D | \";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dasha3412"},"content":"            if (this.isDone) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dasha3412"},"content":"                toWrite +\u003d \"1 | \";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dasha3412"},"content":"            } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dasha3412"},"content":"                toWrite +\u003d \"0 | \";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dasha3412"},"content":"            toWrite +\u003d this.name + \" | \" + this.deadline + \"\\n\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dasha3412"},"content":"            fileWriter.write(toWrite);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dasha3412"},"content":"            fileWriter.close();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dasha3412"},"content":"        } catch (IOException writeException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dasha3412"},"content":"            throw new RuntimeException(writeException);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dasha3412"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dasha3412"},"content":"        return \"{D}\" + super.toString() + \" (by: \"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dasha3412"},"content":"                + this.deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"dasha3412":80}},{"path":"src/main/java/victor/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"package victor.tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":" * Event class that handles tasks with a start time and an end time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"    protected String endTime;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"    protected String startTime;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"    protected LocalDate endTimeDate;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"    protected LocalDate startTimeDate;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dasha3412"},"content":"     * Constructor for the Event class that takes in strings for the event name, the start time,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dasha3412"},"content":"     * and the end time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"     * @param name A string with the name of the event to be stored","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dasha3412"},"content":"     * @param startTime A string with the start date of the event, should be either in format yyyy-mm-dd or dd-mm-yyyy.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dasha3412"},"content":"     * @param endTime A string with the end date of the event, should be either in format yyyy-mm-dd or dd-mm-yyyy.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dasha3412"},"content":"     * @throws DateTimeParseException Thrown if the start or end time cannot be parsed as a LocalDate object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dasha3412"},"content":"     * @throws DateTimeException Thrown if the start time is after the end time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dasha3412"},"content":"    public Event(String name, String startTime, String endTime) throws DateTimeParseException, DateTimeException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dasha3412"},"content":"        super(name);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dasha3412"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dasha3412"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dasha3412"},"content":"            this.startTimeDate \u003d LocalDate.parse(startTime);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dasha3412"},"content":"        } catch (DateTimeParseException parseException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dasha3412"},"content":"            this.startTimeDate \u003d LocalDate.parse(startTime,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dasha3412"},"content":"                    DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dasha3412"},"content":"            this.startTimeDate \u003d LocalDate.parse(this.startTimeDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dasha3412"},"content":"            this.endTimeDate \u003d LocalDate.parse(endTime);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dasha3412"},"content":"        } catch (DateTimeParseException parseException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dasha3412"},"content":"            this.endTimeDate \u003d LocalDate.parse(endTime,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dasha3412"},"content":"                    DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dasha3412"},"content":"            this.endTimeDate \u003d LocalDate.parse(this.endTimeDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dasha3412"},"content":"        if (endTimeDate.isBefore(startTimeDate)) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dasha3412"},"content":"            throw new DateTimeException(\"End time cannot be before start time\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dasha3412"},"content":"    public String getDeadline() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dasha3412"},"content":"        return this.endTime;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dasha3412"},"content":"    public String getStartTime() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dasha3412"},"content":"        return this.startTime;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dasha3412"},"content":"    public void writeToFile(FileWriter fileWriter) throws IOException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dasha3412"},"content":"        // Write event to file","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dasha3412"},"content":"            String toWrite \u003d \"E | \";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dasha3412"},"content":"            if (this.isDone) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dasha3412"},"content":"                toWrite +\u003d \"1 | \";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dasha3412"},"content":"            } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dasha3412"},"content":"                toWrite +\u003d \"0 | \";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dasha3412"},"content":"            toWrite +\u003d this.name + \" | \" + this.startTime + \" | \" + this.endTime + \"\\n\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dasha3412"},"content":"            fileWriter.write(toWrite);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dasha3412"},"content":"        } catch (IOException writeException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dasha3412"},"content":"            throw new RuntimeException(writeException);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dasha3412"},"content":"    public void writeToFile(Path filePath) throws IOException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dasha3412"},"content":"            FileWriter fileWriter \u003d new FileWriter(String.valueOf(filePath), true);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dasha3412"},"content":"            String toWrite \u003d \"E | \";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dasha3412"},"content":"            if (this.isDone) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dasha3412"},"content":"                toWrite +\u003d \"1 | \";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dasha3412"},"content":"            } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dasha3412"},"content":"                toWrite +\u003d \"0 | \";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dasha3412"},"content":"            toWrite +\u003d this.name + \" | \" + this.startTime + \" | \" + this.endTime + \"\\n\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dasha3412"},"content":"            fileWriter.write(toWrite);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dasha3412"},"content":"            fileWriter.close();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dasha3412"},"content":"        } catch (IOException writeException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dasha3412"},"content":"            throw new RuntimeException(writeException);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dasha3412"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dasha3412"},"content":"        return \"{E}\" + super.toString() + \" (from: \"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dasha3412"},"content":"                + this.startTimeDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dasha3412"},"content":"                + \" to: \" + this.endTimeDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"dasha3412":101}},{"path":"src/main/java/victor/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"package victor.tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":" * Parent task class that Event, Deadline, and ToDo inherit from. Contains","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":" * the name of the event and the status of the task as completed or not.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":"public class Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":"    protected final String name;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"     * Constructs the task given a string with the task name, and sets the done","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"     * status to false.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"     * @param name A string with the name of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dasha3412"},"content":"    public Task(String name) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dasha3412"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dasha3412"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dasha3412"},"content":"    public String getName() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dasha3412"},"content":"        return this.name;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dasha3412"},"content":"    public void markDone() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dasha3412"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dasha3412"},"content":"    public void markUndone() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dasha3412"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dasha3412"},"content":"    public void writeToFile(FileWriter fileWriter) throws IOException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dasha3412"},"content":"        return;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dasha3412"},"content":"    public void writeToFile(Path filePath) throws IOException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dasha3412"},"content":"        return;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dasha3412"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dasha3412"},"content":"        String out;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dasha3412"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dasha3412"},"content":"            out \u003d \"{X} \" + this.name;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dasha3412"},"content":"        } else {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dasha3412"},"content":"            out \u003d \"{ } \" + this.name;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dasha3412"},"content":"        return out;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"dasha3412":54}},{"path":"src/main/java/victor/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"package victor.tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":" * ToDo class that handles tasks without no associated times and only a name.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":"    public ToDo(String name) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":"        super(name);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"    public void writeToFile(FileWriter fileWriter) throws IOException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"        // Write event to file","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"            String toWrite \u003d \"T | \";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dasha3412"},"content":"            if (this.isDone) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dasha3412"},"content":"                toWrite +\u003d \"1 | \";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dasha3412"},"content":"            } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"                toWrite +\u003d \"0 | \";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dasha3412"},"content":"            toWrite +\u003d this.name + \"\\n\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dasha3412"},"content":"            fileWriter.write(toWrite);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dasha3412"},"content":"        } catch (IOException writeException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dasha3412"},"content":"            throw new RuntimeException(writeException);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dasha3412"},"content":"    public void writeToFile(Path filePath) throws IOException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dasha3412"},"content":"            FileWriter fileWriter \u003d new FileWriter(String.valueOf(filePath), true);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dasha3412"},"content":"            String toWrite \u003d \"T | \";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dasha3412"},"content":"            if (this.isDone) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dasha3412"},"content":"                toWrite +\u003d \"1 | \";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dasha3412"},"content":"            } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dasha3412"},"content":"                toWrite +\u003d \"0 | \";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dasha3412"},"content":"            toWrite +\u003d this.name + \"\\n\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dasha3412"},"content":"            fileWriter.write(toWrite);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dasha3412"},"content":"            fileWriter.close();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dasha3412"},"content":"        } catch (IOException writeException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dasha3412"},"content":"            throw new RuntimeException(writeException);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dasha3412"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dasha3412"},"content":"        return \"{T}\" + super.toString();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"dasha3412":55}},{"path":"src/main/java/victor/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"package victor.ui;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"import victor.messages.ReturnMessage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":" * Public UI class that handles input and output operations.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":"public class UI {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":"    private static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":"    private static final String LOGO \u003d \"\"\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"            ,---.  ,---..-./`)     _______ ,---------.    ,-----.    .-------.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"            |   /  |   |\\\\ .-.\u0027)   /   __  \\\\\\\\          \\\\ .\u0027  .-,  \u0027.  |  _ _   \\\\   \\s","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"            |  |   |  .\u0027/ `-\u0027 \\\\  | ,_/  \\\\__)`--.  ,---\u0027/ ,-.|  \\\\ _ \\\\ | ( \u0027 )  |","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"            |  | _ |  |  `-\u0027`\"`,-./  )         |   \\\\  ;  \\\\  \u0027_ /  | :|(_ o _) /","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"            |  _( )_  |  .---. \\\\  \u0027_ \u0027`)       :_ _:  |  _`,/ \\\\ _/  || (_,_).\u0027 __","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"            \\\\ (_ o._) /  |   |  \u003e (_)  )  __   (_I_)  : (  \u0027\\\\_/ \\\\   ;|  |\\\\ \\\\  |  |","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dasha3412"},"content":"             \\\\ (_,_) /   |   | (  .  .-\u0027_/  ) (_(\u003d)_)  \\\\ `\"/  \\\\  ) / |  | \\\\ `\u0027   /","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dasha3412"},"content":"              \\\\     /    |   |  `-\u0027`-\u0027     /   (_I_)    \u0027. \\\\_/``\".\u0027  |  |  \\\\    /","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dasha3412"},"content":"               `---`     \u0027---\u0027    `._____.\u0027    \u0027---\u0027      \u0027-----\u0027    \u0027\u0027-\u0027   `\u0027-\u0027","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"            \"\"\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dasha3412"},"content":"    private final Scanner in;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dasha3412"},"content":"    private final PrintStream out;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dasha3412"},"content":"     * UI Constructor method that sets standard keyboard scanner as input and standard","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dasha3412"},"content":"     * output as output for all user prompts.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dasha3412"},"content":"    public UI() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dasha3412"},"content":"        this.in \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dasha3412"},"content":"        this.out \u003d System.out;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dasha3412"},"content":"     * Displays the program welcome message to the user in the Standard Output.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dasha3412"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dasha3412"},"content":"        out.println(LOGO);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dasha3412"},"content":"        out.println(\"Hello! My name is Victor!\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dasha3412"},"content":"        out.println(\"What can I do for you?\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dasha3412"},"content":"        out.println(DIVIDER);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dasha3412"},"content":"     * Reads and returns the user input from the Standard Input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dasha3412"},"content":"     * @return A string of the user input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dasha3412"},"content":"    public String getUserInput() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dasha3412"},"content":"        String userInput \u003d in.nextLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dasha3412"},"content":"        while (userInput.trim().isEmpty()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dasha3412"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dasha3412"},"content":"        out.println(DIVIDER);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dasha3412"},"content":"        return userInput;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dasha3412"},"content":"     * Displays the contents of the return message to the user in the Standard Output.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dasha3412"},"content":"     * @param returnMessage A ReturnMessage item containing details of the lines to","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dasha3412"},"content":"     *                      be printed and shown to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dasha3412"},"content":"    public void showUserMessage(ReturnMessage returnMessage) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dasha3412"},"content":"        if (!returnMessage.checkIsEmpty()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dasha3412"},"content":"            for (String message : returnMessage.getMessages()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dasha3412"},"content":"                out.println(message);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dasha3412"},"content":"            out.println(DIVIDER);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dasha3412"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dasha3412"},"content":"     * Displays the parting message of the program to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dasha3412"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dasha3412"},"content":"    public void showByeMessage() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dasha3412"},"content":"        out.println(\"  ~  Goodbye! Hope to see you again soon!\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dasha3412"},"content":"        out.println(DIVIDER);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"dasha3412":80}},{"path":"src/test/java/src/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"public class Main {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"        System.out.println(\"Hello world!\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"dasha3412":5}},{"path":"src/test/java/victor/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"package victor.parser;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":"import victor.commands.Command;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":"import victor.commands.DeadlineCommand;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":"import victor.commands.ToDoCommand;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":"public class ParserTest {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"    public void parseBasicTest() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"        ToDoCommand comm \u003d (ToDoCommand) parser.parseInput(\"todo test event\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"        ToDoCommand newComm \u003d new ToDoCommand(new String[] {\"todo\", \"test\", \"event\"});","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"        assertAll(\"Verify parsed to-do is the same\", () -\u003e assertEquals(comm.getToDo(), newComm.getToDo()), ()","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dasha3412"},"content":"                -\u003e assertEquals(comm.getTaskList(), newComm.getTaskList()), ()","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dasha3412"},"content":"                -\u003e assertArrayEquals(comm.getAdditionalInput(), newComm.getAdditionalInput()));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dasha3412"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dasha3412"},"content":"    public void parseNoNameDeadlineTest() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dasha3412"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dasha3412"},"content":"        DeadlineCommand comm \u003d (DeadlineCommand) parser.parseInput(\"deadline\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dasha3412"},"content":"        DeadlineCommand newComm \u003d new DeadlineCommand(new String[] {\"deadline\"});","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dasha3412"},"content":"        assertAll(\"Verify that empty input for deadline is same\", ()","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dasha3412"},"content":"                -\u003e assertEquals(comm.getDeadline(), newComm.getDeadline()), ()","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dasha3412"},"content":"                -\u003e assertArrayEquals(comm.getAdditionalInput(), newComm.getAdditionalInput()), ()","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dasha3412"},"content":"                -\u003e assertEquals(comm.getTaskList(), newComm.getTaskList()));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dasha3412"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dasha3412"},"content":"    public void parseNoInputTest() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dasha3412"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dasha3412"},"content":"        Command comm \u003d parser.parseInput(\"\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dasha3412"},"content":"        Command newComm \u003d new DeadlineCommand(new String[] {\"\"});","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dasha3412"},"content":"        assertAll(\"Verify that empty input to parser gives blank output\", ()","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dasha3412"},"content":"                -\u003e assertArrayEquals(comm.getAdditionalInput(), newComm.getAdditionalInput()), ()","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dasha3412"},"content":"                -\u003e assertEquals(comm.getTaskList(), newComm.getTaskList()));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"dasha3412":44}},{"path":"src/test/java/victor/tasklist/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"package victor.tasklist;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":"import victor.tasks.Deadline;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"import victor.tasks.Event;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"import victor.tasks.Task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"public class TaskListTest {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"    public void testInit() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dasha3412"},"content":"        Path dataPath \u003d Paths.get(\"data\", \"data.txt\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dasha3412"},"content":"        TaskList taskList \u003d new TaskList(dataPath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dasha3412"},"content":"        assertEquals(taskList.getTaskList(), new ArrayList\u003cTask\u003e());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dasha3412"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dasha3412"},"content":"    public void testAdd() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dasha3412"},"content":"        Path dataPath \u003d Paths.get(\"data\", \"data.txt\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dasha3412"},"content":"        Task deadline \u003d new Deadline(\"test deadline\", \"2020-01-01\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dasha3412"},"content":"        TaskList taskList \u003d new TaskList(dataPath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dasha3412"},"content":"        String[] response \u003d taskList.addTask(deadline);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dasha3412"},"content":"        String[] expectedResponse \u003d new String[] {\"  ~  Cool! I added this task:\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dasha3412"},"content":"            \"  ~  {D}{ } test deadline (by: Jan 01 2020)\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dasha3412"},"content":"            \"  ~  You now have 1 task in your list.\"};","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dasha3412"},"content":"        assertAll(\"Verifying task list adding tasks works\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dasha3412"},"content":"                () -\u003e assertArrayEquals(response, expectedResponse),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dasha3412"},"content":"                () -\u003e assertEquals(taskList.getSize(), 1));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dasha3412"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dasha3412"},"content":"    public void testMarkDone() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dasha3412"},"content":"        Path dataPath \u003d Paths.get(\"data\", \"data.txt\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dasha3412"},"content":"        Task deadline \u003d new Deadline(\"test deadline\", \"2020-01-01\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dasha3412"},"content":"        TaskList taskList \u003d new TaskList(dataPath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dasha3412"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dasha3412"},"content":"        String[] response \u003d taskList.markDone(1);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dasha3412"},"content":"        String[] expectedResponse \u003d new String[] {\"  ~  You finished a task! Well done! I marked this task as done:\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dasha3412"},"content":"                \"  ~  {D}{X} test deadline (by: Jan 01 2020)\"};","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dasha3412"},"content":"        assertAll(\"Verifying task list marking tasks as done works\", ()","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dasha3412"},"content":"                -\u003e assertArrayEquals(response, expectedResponse), ()","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dasha3412"},"content":"                -\u003e assertEquals(taskList.getSize(), 1));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dasha3412"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dasha3412"},"content":"    public void testMarkUndone() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dasha3412"},"content":"        Path dataPath \u003d Paths.get(\"data\", \"data.txt\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dasha3412"},"content":"        Task deadline \u003d new Deadline(\"test deadline\", \"2020-01-01\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dasha3412"},"content":"        Task event \u003d new Event(\"test event\", \"2024-02-02\", \"2024-02-03\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dasha3412"},"content":"        TaskList taskList \u003d new TaskList(dataPath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dasha3412"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dasha3412"},"content":"        taskList.addTask(event);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dasha3412"},"content":"        taskList.markDone(1);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dasha3412"},"content":"        String[] response \u003d taskList.unmarkDone(2);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dasha3412"},"content":"        String[] expectedResponse \u003d new String[] {\"  ~  Oops, I guess you didn\u0027t finish the task! I marked this\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dasha3412"},"content":"                + \" task as undone:\", \"  ~  {E}{ } test event (from: Feb 02 2024 to: Feb 03 2024)\"};","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dasha3412"},"content":"        assertAll(\"Verifying task list unmarking tasks as done works\", ()","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dasha3412"},"content":"                -\u003e assertArrayEquals(response, expectedResponse), ()","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dasha3412"},"content":"                -\u003e assertEquals(taskList.getSize(), 2));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dasha3412"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dasha3412"},"content":"    public void testDelete() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dasha3412"},"content":"        Path dataPath \u003d Paths.get(\"data\", \"data.txt\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dasha3412"},"content":"        Task deadline \u003d new Deadline(\"test deadline\", \"2020-01-01\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dasha3412"},"content":"        Task event \u003d new Event(\"test event\", \"2024-02-02\", \"2024-02-03\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dasha3412"},"content":"        TaskList taskList \u003d new TaskList(dataPath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dasha3412"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dasha3412"},"content":"        taskList.addTask(event);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dasha3412"},"content":"        taskList.markDone(1);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dasha3412"},"content":"        String[] response \u003d taskList.deleteTask(1);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dasha3412"},"content":"        String[] expectedResponse \u003d new String[] {\"  ~  Deleting the task below now!\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dasha3412"},"content":"            \"  ~  {D}{X} test deadline (by: Jan 01 2020)\", \"  ~  You now have 1 task in your list.\"};","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dasha3412"},"content":"        assertAll(\"Verifying task list deleting tasks works\", ()","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dasha3412"},"content":"                -\u003e assertArrayEquals(response, expectedResponse), ()","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dasha3412"},"content":"                -\u003e assertEquals(taskList.getSize(), 1));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dasha3412"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dasha3412"},"content":"    public void testInvalidNumberDelete() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dasha3412"},"content":"        Path dataPath \u003d Paths.get(\"data\", \"data.txt\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dasha3412"},"content":"        Task deadline \u003d new Deadline(\"test deadline\", \"2020-01-01\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dasha3412"},"content":"        Task event \u003d new Event(\"test event\", \"2024-02-02\", \"2024-02-03\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dasha3412"},"content":"        TaskList taskList \u003d new TaskList(dataPath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dasha3412"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dasha3412"},"content":"        taskList.addTask(event);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dasha3412"},"content":"        taskList.markDone(1);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dasha3412"},"content":"        String[] response \u003d taskList.deleteTask(99);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dasha3412"},"content":"        String[] expectedResponse \u003d new String[] {\"  ~  I don\u0027t think there\u0027s a task with that number!\"};","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dasha3412"},"content":"        assertAll(\"Verifying task list deleting tasks works\", ()","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dasha3412"},"content":"                -\u003e assertArrayEquals(response, expectedResponse), ()","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dasha3412"},"content":"                -\u003e assertEquals(taskList.getSize(), 2));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"dasha3412":102}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"todo borrow book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"deadline return library book /by 9th August","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"deadline call family /by Sunday","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"event business conference /from 2 PM /to 5 PM","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"mark 1","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"todo write script for conference","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":"mark 3","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":"mark 19","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":"todo make presentation slides","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":"event business presentation /from 8 AM /to 12 PM","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":"unmark 13","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"mark 5","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"mark 6","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"unmark 5","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"todo bake peach cobbler","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dasha3412"},"content":"mark","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dasha3412"},"content":"unmark bye","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dasha3412"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"bye","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"dasha3412":23}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"java -classpath ../bin Victor \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dasha3412"},"content":"dos2unix -n EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dasha3412"},"content":"dos2unix ACTUAL.TXT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"dasha3412":3,"-":33}}]
