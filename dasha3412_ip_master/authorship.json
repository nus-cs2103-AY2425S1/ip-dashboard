[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"# Victor Project","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"This develops a chatbot from a project template for a greenfield Java project. Originally named after the Java mascot _Duke_, it is named Victor here! Given below are instructions on how to use it.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"3. After that, locate the `src/main/java/Victor.java` file, right-click it, and choose `Run Victor.main()` (if the code editor is showing compile errors, try restarting the IDE).","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"If the setup is correct, Victor will introduce himself to you and you can get started with creating, updating, and managing your tasks!","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"dasha3412":6,"-":13}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"import java.sql.Date;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":"    protected String deadline;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":"    protected LocalDate deadlineDate;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":"    public Deadline(String name, String deadline) throws DateTimeParseException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":"        super(name);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"            this.deadlineDate \u003d LocalDate.parse(deadline);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"        } catch (DateTimeParseException parseException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"            this.deadlineDate \u003d LocalDate.parse(deadline,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"                    DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"            this.deadlineDate \u003d LocalDate.parse(this.deadlineDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"    public String getDeadline() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dasha3412"},"content":"        return this.deadline;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dasha3412"},"content":"    public void writeToFile(FileWriter fileWriter) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dasha3412"},"content":"        // Write event to file","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dasha3412"},"content":"            String toWrite \u003d \"D | \";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dasha3412"},"content":"            if (this.isDone) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dasha3412"},"content":"                toWrite +\u003d \"1 | \";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dasha3412"},"content":"            } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dasha3412"},"content":"                toWrite +\u003d \"0 | \";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dasha3412"},"content":"            toWrite +\u003d this.name + \" | \" + this.deadline + \"\\n\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dasha3412"},"content":"            fileWriter.write(toWrite);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dasha3412"},"content":"        } catch (IOException writeException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dasha3412"},"content":"            throw new RuntimeException(writeException);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dasha3412"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dasha3412"},"content":"        return \"{D}\" + super.toString() + \" (by: \" +","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dasha3412"},"content":"                this.deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"dasha3412":49}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":"    protected String endTime;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":"    protected String startTime;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":"    protected LocalDate endTimeDate;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":"    protected LocalDate startTimeDate;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"    public Event(String name, String startTime, String endTime) throws DateTimeParseException, DateTimeException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"        super(name);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"            this.startTimeDate \u003d LocalDate.parse(startTime);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dasha3412"},"content":"        } catch (DateTimeParseException parseException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dasha3412"},"content":"            this.startTimeDate \u003d LocalDate.parse(startTime,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dasha3412"},"content":"                    DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"            this.startTimeDate \u003d LocalDate.parse(this.startTimeDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dasha3412"},"content":"            this.endTimeDate \u003d LocalDate.parse(endTime);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dasha3412"},"content":"        } catch (DateTimeParseException parseException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dasha3412"},"content":"            this.endTimeDate \u003d LocalDate.parse(endTime,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dasha3412"},"content":"                    DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dasha3412"},"content":"            this.endTimeDate \u003d LocalDate.parse(this.endTimeDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dasha3412"},"content":"        if (endTimeDate.isBefore(startTimeDate)) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dasha3412"},"content":"            throw new DateTimeException(\"End time cannot be before start time\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dasha3412"},"content":"    public String getDeadline() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dasha3412"},"content":"        return this.endTime;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dasha3412"},"content":"    public String getStartTime() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dasha3412"},"content":"        return this.startTime;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dasha3412"},"content":"    public void writeToFile(FileWriter fileWriter) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dasha3412"},"content":"        // Write event to file","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dasha3412"},"content":"            String toWrite \u003d \"E | \";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dasha3412"},"content":"            if (this.isDone) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dasha3412"},"content":"                toWrite +\u003d \"1 | \";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dasha3412"},"content":"            } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dasha3412"},"content":"                toWrite +\u003d \"0 | \";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dasha3412"},"content":"            toWrite +\u003d this.name + \" | \" + this.startTime + \" | \" + this.endTime + \"\\n\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dasha3412"},"content":"            fileWriter.write(toWrite);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dasha3412"},"content":"        } catch (IOException writeException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dasha3412"},"content":"            throw new RuntimeException(writeException);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dasha3412"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dasha3412"},"content":"        return \"{E}\" + super.toString() + \" (from: \" +","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dasha3412"},"content":"                this.startTimeDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) +","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dasha3412"},"content":"                \" to: \" + this.endTimeDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"dasha3412":68}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"public class Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"    protected final String name;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"    public Task(String name) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":"    public String getName() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":"        return this.name;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"    public void markDone() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"    public void markUndone() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dasha3412"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"    public void writeToFile(FileWriter fileWriter) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dasha3412"},"content":"        return;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dasha3412"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dasha3412"},"content":"        String out;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dasha3412"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dasha3412"},"content":"            out \u003d \"{X} \" + this.name;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dasha3412"},"content":"        } else {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dasha3412"},"content":"            out \u003d \"{ } \" + this.name;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dasha3412"},"content":"        return out;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"dasha3412":37}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"    public ToDo(String name) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"        super(name);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":"    public void writeToFile(FileWriter fileWriter) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":"        // Write event to file","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":"            String toWrite \u003d \"T | \";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"            if (this.isDone) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"                toWrite +\u003d \"1 | \";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"            } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"                toWrite +\u003d \"0 | \";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"            toWrite +\u003d this.name + \"\\n\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dasha3412"},"content":"            fileWriter.write(toWrite);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dasha3412"},"content":"        } catch (IOException writeException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dasha3412"},"content":"            throw new RuntimeException(writeException);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dasha3412"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dasha3412"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dasha3412"},"content":"        return \"{T}\" + super.toString();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"dasha3412":31}},{"path":"src/main/java/Victor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"import java.io.File;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"public class Victor {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"    public static Task readTask(String taskFileLine) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"        Task lineTask;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"        String[] lineContent \u003d taskFileLine.split(\" \\\\| \");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"        if (lineContent[0].equals(\"T\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dasha3412"},"content":"            lineTask \u003d new ToDo(lineContent[2]);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dasha3412"},"content":"        } else if (lineContent[0].equals(\"D\")) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dasha3412"},"content":"            lineTask \u003d new Deadline(lineContent[2], lineContent[3]);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"        } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dasha3412"},"content":"            lineTask \u003d new Event(lineContent[2], lineContent[3], lineContent[4]);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dasha3412"},"content":"        // Check if task was marked done","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dasha3412"},"content":"        if (Integer.parseInt(lineContent[1]) \u003d\u003d 1) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dasha3412"},"content":"            lineTask.markDone();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dasha3412"},"content":"        return lineTask;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dasha3412"},"content":"    public static ArrayList\u003cTask\u003e readFileContents(Path filePath) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dasha3412"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dasha3412"},"content":"            Scanner fileScanner \u003d new Scanner(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dasha3412"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dasha3412"},"content":"                Task nextTask \u003d readTask(fileScanner.nextLine());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dasha3412"},"content":"                tasks.add(nextTask);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dasha3412"},"content":"            return tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dasha3412"},"content":"        } catch (IOException scannerIOException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dasha3412"},"content":"            throw new RuntimeException(scannerIOException);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dasha3412"},"content":"    public static void writeToFile(Path filePath, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dasha3412"},"content":"        // Make new file writer to overwrite current contents","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dasha3412"},"content":"            FileWriter fw \u003d new FileWriter(String.valueOf(filePath));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dasha3412"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dasha3412"},"content":"                task.writeToFile(fw);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dasha3412"},"content":"            fw.close();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dasha3412"},"content":"        } catch (IOException fileWriterIOException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dasha3412"},"content":"            throw new RuntimeException(fileWriterIOException);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dasha3412"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dasha3412"},"content":"        String logo \u003d \",---.  ,---..-./`)     _______ ,---------.    ,-----.    .-------.\\n\"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dasha3412"},"content":"+ \"|   /  |   |\\\\ .-.\u0027)   /   __  \\\\\\\\          \\\\ .\u0027  .-,  \u0027.  |  _ _   \\\\    \\n\"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dasha3412"},"content":"+ \"|  |   |  .\u0027/ `-\u0027 \\\\  | ,_/  \\\\__)`--.  ,---\u0027/ ,-.|  \\\\ _ \\\\ | ( \u0027 )  |\\n\"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dasha3412"},"content":"+ \"|  | _ |  |  `-\u0027`\\\"`,-./  )         |   \\\\  ;  \\\\  \u0027_ /  | :|(_ o _) /\\n\"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dasha3412"},"content":"+ \"|  _( )_  |  .---. \\\\  \u0027_ \u0027`)       :_ _:  |  _`,/ \\\\ _/  || (_,_).\u0027 __\\n\"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dasha3412"},"content":"+ \"\\\\ (_ o._) /  |   |  \u003e (_)  )  __   (_I_)  : (  \u0027\\\\_/ \\\\   ;|  |\\\\ \\\\  |  |\\n\"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dasha3412"},"content":"+ \" \\\\ (_,_) /   |   | (  .  .-\u0027_/  ) (_(\u003d)_)  \\\\ `\\\"/  \\\\  ) / |  | \\\\ `\u0027   /\\n\"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dasha3412"},"content":"+ \"  \\\\     /    |   |  `-\u0027`-\u0027     /   (_I_)    \u0027. \\\\_/``\\\".\u0027  |  |  \\\\    /\\n\"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dasha3412"},"content":"+ \"   `---`     \u0027---\u0027    `._____.\u0027    \u0027---\u0027      \u0027-----\u0027    \u0027\u0027-\u0027   `\u0027-\u0027\\n\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dasha3412"},"content":"        Scanner inp \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dasha3412"},"content":"        // Declare array, reassign if data file exists","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dasha3412"},"content":"        ArrayList\u003cTask\u003e inputs \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dasha3412"},"content":"        // Declare file writer, initialise differently if exists","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dasha3412"},"content":"        FileWriter fw;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dasha3412"},"content":"        Path dataPath \u003d Paths.get(\"data\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dasha3412"},"content":"        Path filePath \u003d Paths.get(\"data\", \"data.txt\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dasha3412"},"content":"        // Check if data directory exists in file structure","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dasha3412"},"content":"        if (Files.exists(dataPath)) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dasha3412"},"content":"            // Check if data file exists","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dasha3412"},"content":"            if (Files.exists(filePath)) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dasha3412"},"content":"                inputs \u003d readFileContents(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dasha3412"},"content":"                try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dasha3412"},"content":"                    // Make file writer append to file instead of overwriting","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dasha3412"},"content":"                    fw \u003d new FileWriter(String.valueOf(filePath), true);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dasha3412"},"content":"                } catch (IOException ioException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dasha3412"},"content":"                    // Handle IO Exception if file is corrupted","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dasha3412"},"content":"                    // Delete file and create new one","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dasha3412"},"content":"                    try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dasha3412"},"content":"                        Files.delete(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dasha3412"},"content":"                        File dataFile \u003d new File(String.valueOf(filePath));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dasha3412"},"content":"                        fw \u003d new FileWriter(String.valueOf(filePath));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dasha3412"},"content":"                    } catch (IOException deleteIOException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dasha3412"},"content":"                        throw new RuntimeException(deleteIOException);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dasha3412"},"content":"                    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dasha3412"},"content":"                }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dasha3412"},"content":"            } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dasha3412"},"content":"                // File does not exist -\u003e Create data file","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dasha3412"},"content":"                try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dasha3412"},"content":"                    File dataFile \u003d new File(String.valueOf(filePath));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dasha3412"},"content":"                    fw \u003d new FileWriter(String.valueOf(filePath));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dasha3412"},"content":"                } catch (IOException ioException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dasha3412"},"content":"                    throw new RuntimeException(ioException);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dasha3412"},"content":"                }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dasha3412"},"content":"        } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dasha3412"},"content":"            // Directory does not exist","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dasha3412"},"content":"            try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"dasha3412"},"content":"                // Create directory","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"dasha3412"},"content":"                Files.createDirectories(dataPath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"dasha3412"},"content":"                // Create new file","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"dasha3412"},"content":"                File dataFile \u003d new File(String.valueOf(filePath));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"dasha3412"},"content":"                // Make new file writer to the file","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"dasha3412"},"content":"                fw \u003d new FileWriter(String.valueOf(filePath));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"dasha3412"},"content":"            } catch (IOException makeDirIOException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"dasha3412"},"content":"                throw new RuntimeException(makeDirIOException);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"dasha3412"},"content":"        System.out.println(logo);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"dasha3412"},"content":"        System.out.println(\"Hello! My name is Victor!\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"dasha3412"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"dasha3412"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"dasha3412"},"content":"        String userInput \u003d inp.nextLine();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"dasha3412"},"content":"        // Continues asking for input until user input is \"bye\"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"dasha3412"},"content":"        while (!userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"dasha3412"},"content":"            System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"dasha3412"},"content":"            // Parse user input into separate words","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"dasha3412"},"content":"            String[] inputWords \u003d userInput.trim().split(\" \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"dasha3412"},"content":"            // Handles case of empty user input","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"dasha3412"},"content":"            if (userInput.trim().isEmpty()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"dasha3412"},"content":"                // User input is empty - ask again for input","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"dasha3412"},"content":"                System.out.println(\"  ~  What can I do for you?\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"dasha3412"},"content":"            } else if (inputWords[0].equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"dasha3412"},"content":"                if (inputs.isEmpty()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"dasha3412"},"content":"                    // No tasks were added to the list yet","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"dasha3412"},"content":"                    System.out.println(\"  ~  No tasks in the list, add some To Dos, Events, and Deadlines first!\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"dasha3412"},"content":"                } else {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"dasha3412"},"content":"                    System.out.println(\"  ~  Sure! Here are all of your tasks:\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"dasha3412"},"content":"                    for (int i \u003d 0; i \u003c inputs.size(); i++) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"dasha3412"},"content":"                        System.out.println(\"  ~  \" + (i + 1) + \". \" + inputs.get(i));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"dasha3412"},"content":"                    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"dasha3412"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"dasha3412"},"content":"            } else if (inputWords[0].equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"dasha3412"},"content":"                try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"dasha3412"},"content":"                    String[] parsed \u003d userInput.trim().split(\" \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"dasha3412"},"content":"                    int num \u003d Integer.parseInt(parsed[parsed.length - 1]) - 1;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"dasha3412"},"content":"                    // Retrieve and remove deleted task to reference later","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"dasha3412"},"content":"                    Task removed \u003d inputs.get(num);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"dasha3412"},"content":"                    inputs.remove(num);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"dasha3412"},"content":"                    // Overwrite file contents with updated list","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"dasha3412"},"content":"                    writeToFile(filePath, inputs);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"dasha3412"},"content":"                    System.out.println(\"  ~  Deleting the task below now!\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"dasha3412"},"content":"                    System.out.println(\"  ~  \" + removed);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"dasha3412"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"dasha3412"},"content":"                    System.out.println(\"  ~  Sorry, I don\u0027t think you entered a number for which task to delete!\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"dasha3412"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"dasha3412"},"content":"                    System.out.println(\"  ~  I don\u0027t think there\u0027s a task with that number!\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"dasha3412"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"dasha3412"},"content":"            } else if (inputWords[0].equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"dasha3412"},"content":"                try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"dasha3412"},"content":"                    String[] parsed \u003d userInput.trim().split(\" \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"dasha3412"},"content":"                    int num \u003d Integer.parseInt(parsed[parsed.length - 1]) - 1;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"dasha3412"},"content":"                    inputs.get(num).markDone();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"dasha3412"},"content":"                    // Overwrite file contents with updated list","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"dasha3412"},"content":"                    writeToFile(filePath, inputs);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"dasha3412"},"content":"                    System.out.println(\"  ~  You finished a task! Well done! I marked this task as done:\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"dasha3412"},"content":"                    System.out.println(\"  ~  \" + inputs.get(num));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"dasha3412"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"dasha3412"},"content":"                    System.out.println(\"  ~  Sorry, I don\u0027t think you entered a number for which task to mark\" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"dasha3412"},"content":"                            \" as done!\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"dasha3412"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"dasha3412"},"content":"                    System.out.println(\"  ~  I don\u0027t think there\u0027s a task with that number!\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"dasha3412"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"dasha3412"},"content":"            } else if (inputWords[0].equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"dasha3412"},"content":"                try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"dasha3412"},"content":"                    String[] parsed \u003d userInput.trim().split(\" \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"dasha3412"},"content":"                    int num \u003d Integer.parseInt(parsed[parsed.length - 1]) - 1;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"dasha3412"},"content":"                    inputs.get(num).markUndone();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"dasha3412"},"content":"                    // Overwrite file contents with updated list","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"dasha3412"},"content":"                    writeToFile(filePath, inputs);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"dasha3412"},"content":"                    System.out.println(\"  ~  Oops, I guess you didn\u0027t finish the task! I marked this task as undone:\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"dasha3412"},"content":"                    System.out.println(\"  ~  \" + inputs.get(num));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"dasha3412"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"dasha3412"},"content":"                    System.out.println(\"  ~  Sorry, I don\u0027t think you entered a number for which task to \" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"dasha3412"},"content":"                            \"mark as not done!\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"dasha3412"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"dasha3412"},"content":"                    System.out.println(\"  ~  I don\u0027t think there\u0027s a task with that number!\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"dasha3412"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"dasha3412"},"content":"            } else if (inputWords[0].equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"dasha3412"},"content":"                String[] parsed \u003d userInput.trim().split(\" \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"dasha3412"},"content":"                String taskName \u003d \"\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"dasha3412"},"content":"                for (int i \u003d 1; i \u003c parsed.length; i++) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"dasha3412"},"content":"                    taskName +\u003d \" \" + parsed[i];","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"dasha3412"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"dasha3412"},"content":"                // Trim so that blank space cannot be counted as name for task","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"dasha3412"},"content":"                taskName \u003d taskName.trim();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"dasha3412"},"content":"                if (taskName.isEmpty()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"dasha3412"},"content":"                    System.out.println(\"  ~  Please give a name for the To Do. The format should be \\\"todo \" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"dasha3412"},"content":"                            \"(description)\\\"\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"dasha3412"},"content":"                } else {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"dasha3412"},"content":"                    ToDo task \u003d new ToDo(taskName);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"dasha3412"},"content":"                    inputs.add(task);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"dasha3412"},"content":"                    // Write todo to file","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"dasha3412"},"content":"                    try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"dasha3412"},"content":"                        FileWriter addWriter \u003d new FileWriter(String.valueOf(filePath), true);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"dasha3412"},"content":"                        task.writeToFile(addWriter);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"dasha3412"},"content":"                        addWriter.close();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"dasha3412"},"content":"                    } catch (IOException writeIOException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"dasha3412"},"content":"                        throw new RuntimeException(writeIOException);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"dasha3412"},"content":"                    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"dasha3412"},"content":"                    System.out.println(\"  ~  Cool! I added this To Do:\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"dasha3412"},"content":"                    System.out.println(\"  ~    \" + task);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"dasha3412"},"content":"                    System.out.println(\"  ~  You now have \" + inputs.size() +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"dasha3412"},"content":"                            ((inputs.size() \u003d\u003d 1) ? \" task\" : \" tasks\") + \" in your list.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"dasha3412"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"dasha3412"},"content":"            } else if (inputWords[0].equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"dasha3412"},"content":"                String[] parsed \u003d userInput.trim().split(\" \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"dasha3412"},"content":"                String taskName \u003d \"\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"dasha3412"},"content":"                String deadline \u003d \"\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"dasha3412"},"content":"                boolean isDeadline \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"dasha3412"},"content":"                for (int i \u003d 1; i \u003c parsed.length; i++) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"dasha3412"},"content":"                    if (parsed[i].startsWith(\"/\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"dasha3412"},"content":"                        isDeadline \u003d true;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"dasha3412"},"content":"                        continue;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"dasha3412"},"content":"                    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"dasha3412"},"content":"                    if (!isDeadline) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"dasha3412"},"content":"                        taskName +\u003d \" \" + parsed[i];","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"dasha3412"},"content":"                    } else {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"dasha3412"},"content":"                        deadline +\u003d \" \" + parsed[i];","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"dasha3412"},"content":"                    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"dasha3412"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"dasha3412"},"content":"                // Trim so that blank space cannot be counted as name for task or deadlines","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"dasha3412"},"content":"                taskName \u003d taskName.trim();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"dasha3412"},"content":"                deadline \u003d deadline.trim();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"dasha3412"},"content":"                if (taskName.isEmpty()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"dasha3412"},"content":"                    System.out.println(\"  ~  Please give a name for the Deadline. The format should be \\\"deadline\" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"dasha3412"},"content":"                            \" (description) /by (deadline, in format yyyy-mm-dd or dd-mm-yyyy)\\\"\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"dasha3412"},"content":"                } else if (deadline.isEmpty()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"dasha3412"},"content":"                    System.out.println(\"  ~  Please give a deadline for the Deadline. The format should be \\\"deadline\" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"dasha3412"},"content":"                            \" (description) /by (deadline, in format yyyy-mm-dd or dd-mm-yyyy)\\\"\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"dasha3412"},"content":"                } else {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"dasha3412"},"content":"                    try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"dasha3412"},"content":"                        Deadline task \u003d new Deadline(taskName, deadline);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"dasha3412"},"content":"                        inputs.add(task);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"dasha3412"},"content":"                        // Write deadline to file","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"dasha3412"},"content":"                        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"dasha3412"},"content":"                            FileWriter addWriter \u003d new FileWriter(String.valueOf(filePath), true);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"dasha3412"},"content":"                            task.writeToFile(addWriter);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"dasha3412"},"content":"                            addWriter.close();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"dasha3412"},"content":"                        } catch (IOException writeIOException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"dasha3412"},"content":"                            throw new RuntimeException(writeIOException);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"dasha3412"},"content":"                        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"dasha3412"},"content":"                        System.out.println(\"  ~  Splendid! I added this Deadline:\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"dasha3412"},"content":"                        System.out.println(\"  ~    \" + task);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"dasha3412"},"content":"                        System.out.println(\"  ~  You now have \" + inputs.size() +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"dasha3412"},"content":"                                ((inputs.size() \u003d\u003d 1) ? \" task\" : \" tasks\") + \" in your list.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"dasha3412"},"content":"                    } catch (DateTimeParseException parseException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"dasha3412"},"content":"                        System.out.println(\"  ~  Please format deadline as \" + \"\\\"deadline\" +","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"dasha3412"},"content":"                                \" (description) /by (deadline, in format yyyy-mm-dd or dd-mm-yyyy)\\\"\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"dasha3412"},"content":"                    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"dasha3412"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"dasha3412"},"content":"            } else if (inputWords[0].equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"dasha3412"},"content":"                String[] parsed \u003d userInput.trim().split(\" \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"dasha3412"},"content":"                String taskName \u003d \"\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"dasha3412"},"content":"                String start \u003d \"\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"dasha3412"},"content":"                String end \u003d \"\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"dasha3412"},"content":"                boolean isStart \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"dasha3412"},"content":"                boolean isEnd \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"dasha3412"},"content":"                for (int i \u003d 1; i \u003c parsed.length; i++) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"dasha3412"},"content":"                    if (parsed[i].startsWith(\"/\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"dasha3412"},"content":"                        if (isStart) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"dasha3412"},"content":"                            isEnd \u003d true;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"dasha3412"},"content":"                        } else {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"dasha3412"},"content":"                            isStart \u003d true;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"dasha3412"},"content":"                        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"dasha3412"},"content":"                        continue;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"dasha3412"},"content":"                    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"dasha3412"},"content":"                    if (!isStart) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"dasha3412"},"content":"                        taskName +\u003d \" \" + parsed[i];","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"dasha3412"},"content":"                    } else if (!isEnd) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"dasha3412"},"content":"                        start +\u003d \" \" + parsed[i];","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"dasha3412"},"content":"                    } else {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"dasha3412"},"content":"                        end +\u003d \"\" + parsed[i];","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"dasha3412"},"content":"                    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"dasha3412"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"dasha3412"},"content":"                // Trim so that blank space cannot be counted as name for task, start or end","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"dasha3412"},"content":"                taskName \u003d taskName.trim();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"dasha3412"},"content":"                start \u003d start.trim();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"dasha3412"},"content":"                end \u003d end.trim();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"dasha3412"},"content":"                if (taskName.isEmpty()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"dasha3412"},"content":"                    System.out.println(\"  ~  Please give a name for the Event. The format should be \\\"event\" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"dasha3412"},"content":"                            \" (description) /from (start, in format yyyy-mm-dd or dd-mm-yyyy) /to\" +","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"dasha3412"},"content":"                            \" (end, in format yyyy-mm-dd or dd-mm-yyyy)\\\"\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"dasha3412"},"content":"                } else if (start.isEmpty()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"dasha3412"},"content":"                    System.out.println(\"  ~  Please give a start time for the Event. The format should be \\\"event\" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"dasha3412"},"content":"                            \" (description) /from (start, in format yyyy-mm-dd or dd-mm-yyyy) /to\" +","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"dasha3412"},"content":"                            \" (end, in format yyyy-mm-dd or dd-mm-yyyy)\\\"\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"dasha3412"},"content":"                } else if (end.isEmpty()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"dasha3412"},"content":"                    System.out.println(\"  ~  Please give an end time for the Event. The format should be \\\"event\" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"dasha3412"},"content":"                            \" (description) /from (start, in format yyyy-mm-dd or dd-mm-yyyy) /to\" +","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"dasha3412"},"content":"                            \" (end, in format yyyy-mm-dd or dd-mm-yyyy)\\\"\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"dasha3412"},"content":"                } else {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"dasha3412"},"content":"                    try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"dasha3412"},"content":"                        Event task \u003d new Event(taskName, start, end);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"dasha3412"},"content":"                        inputs.add(task);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"dasha3412"},"content":"                        // Write event to file","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"dasha3412"},"content":"                        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"dasha3412"},"content":"                            FileWriter addWriter \u003d new FileWriter(String.valueOf(filePath), true);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"dasha3412"},"content":"                            task.writeToFile(addWriter);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"dasha3412"},"content":"                            addWriter.close();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"dasha3412"},"content":"                        } catch (IOException writeIOException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"dasha3412"},"content":"                            throw new RuntimeException(writeIOException);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"dasha3412"},"content":"                        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"dasha3412"},"content":"                        System.out.println(\"  ~  Wonderful! I added this Event:\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"dasha3412"},"content":"                        System.out.println(\"  ~    \" + task);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"dasha3412"},"content":"                        System.out.println(\"  ~  You now have \" + inputs.size() +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"dasha3412"},"content":"                                ((inputs.size() \u003d\u003d 1) ? \" task\" : \" tasks\") + \" in your list.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"dasha3412"},"content":"                    } catch (DateTimeParseException parseException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"dasha3412"},"content":"                        System.out.println(\"  ~  Please format the event as \\\"event\" +","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"dasha3412"},"content":"                                \" (description) /from (start, in format yyyy-mm-dd or dd-mm-yyyy) /to\" +","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"dasha3412"},"content":"                                \" (end, in format yyyy-mm-dd or dd-mm-yyyy)\\\"\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"dasha3412"},"content":"                    } catch (DateTimeException dateException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"dasha3412"},"content":"                        System.out.println(\"  ~  Please ensure end time is later than start time!\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"dasha3412"},"content":"                        System.out.println(\"  ~  Format the event as \\\"event (description) /from\" +","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"dasha3412"},"content":"                                \" (start, in format yyyy-mm-dd or dd-mm-yyyy) /to\" +","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"dasha3412"},"content":"                                \" (end, in format yyyy-mm-dd or dd-mm-yyyy)\\\"\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"dasha3412"},"content":"                    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"dasha3412"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"dasha3412"},"content":"            } else {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"dasha3412"},"content":"                // User input does not match any specified command","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"dasha3412"},"content":"                System.out.println(\"  ~  Sorry, that\u0027s not something I know how to do :( Please specify either a \" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"dasha3412"},"content":"                        \"To Do, a Deadline or an Event!\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"dasha3412"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"dasha3412"},"content":"            System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"dasha3412"},"content":"            userInput \u003d inp.nextLine();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"dasha3412"},"content":"        // Write final list of tasks to file","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"dasha3412"},"content":"        writeToFile(filePath, inputs);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"dasha3412"},"content":"        // Closing file writer","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"dasha3412"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"dasha3412"},"content":"            fw.close();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"dasha3412"},"content":"        } catch (IOException closeException) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"dasha3412"},"content":"            throw new RuntimeException(closeException);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"dasha3412"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"dasha3412"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"dasha3412"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"dasha3412"},"content":"        System.out.println(\"Goodbye! Hope to see you again soon!\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"dasha3412"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"dasha3412"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"dasha3412"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"dasha3412":382}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dasha3412"},"content":"todo borrow book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dasha3412"},"content":"deadline return library book /by 9th August","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dasha3412"},"content":"deadline call family /by Sunday","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dasha3412"},"content":"event business conference /from 2 PM /to 5 PM","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dasha3412"},"content":"mark 1","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dasha3412"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dasha3412"},"content":"todo write script for conference","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dasha3412"},"content":"mark 3","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dasha3412"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dasha3412"},"content":"mark 19","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dasha3412"},"content":"todo make presentation slides","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dasha3412"},"content":"event business presentation /from 8 AM /to 12 PM","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dasha3412"},"content":"unmark 13","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dasha3412"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dasha3412"},"content":"mark 5","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dasha3412"},"content":"mark 6","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dasha3412"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dasha3412"},"content":"unmark 5","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dasha3412"},"content":"todo bake peach cobbler","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dasha3412"},"content":"mark","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dasha3412"},"content":"unmark bye","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dasha3412"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"bye","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"dasha3412":23}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dasha3412"},"content":"java -classpath ../bin Victor \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dasha3412"},"content":"dos2unix -n EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dasha3412"},"content":"dos2unix ACTUAL.TXT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"dasha3412":3,"-":33}}]
