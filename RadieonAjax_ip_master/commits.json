{"authorDailyContributionsMap":{"RadieonAjax":[{"date":"2024-08-22","commitResults":[{"hash":"49091a877b57d45876eba9b732d85e790c7256c0","isMergeCommit":false,"messageTitle":"Rename chatbot and implement initial greeting and exit functionality","messageBody":"- Renamed the chatbot to shrimp.\n- Implemented a basic skeleton of the chatbot that greets the user upon start and exits after displaying a goodbye message.\n- Replaced the source file name from Duke.java to Shrimp.java to reflect the new name.\n","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":10}}},{"hash":"69895ed4114d565ac91e9c4cf8c2a40502d97b29","isMergeCommit":false,"messageTitle":"Add echo and exit functionality","messageBody":"- The chatbot now echo back any commands entered by the user.\n- The loop terminates and the chatbot exits when the user types \"bye\".\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":0}}},{"hash":"0819dd49fc5de2706698a94fe599be81e7ae8cca","isMergeCommit":false,"messageTitle":"Add Task class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"488e59d49c9ddf1b01c311342cd9bf5ced4cd123","isMergeCommit":false,"messageTitle":"Add TaskList class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":0}}},{"hash":"0864e0f1e244cec9f4b7a33800752a77950c4423","isMergeCommit":false,"messageTitle":"Add feature to store and list user commands","messageBody":"- Implemented the ability for the chatbot to store user-entered commands.\n- Added a feature to display all stored commands in a numbered list when the user types \"list\".\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":6}}}]},{"date":"2024-08-23","commitResults":[{"hash":"3880be24328937f32cfbb19c907f7f998e04e54b","isMergeCommit":false,"messageTitle":"Add CommandParser class for enum usage","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":0}}},{"hash":"45f3d911a72c97e26780aa9e9e2423ade02c31f6","isMergeCommit":false,"messageTitle":"Add support for completion check","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":2}}},{"hash":"8a6975cbbe657699f09bf53412ae05a1c4cc0286","isMergeCommit":false,"messageTitle":"Add ability to mark and unmark tasks as done","messageBody":"- Implemented the ability to mark tasks as done and not done.\n- Updated the task listing to reflect the current status of each task.\n- Used an enum to handle the commands for better code structure and readability.\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":23}}},{"hash":"e573277b1740b5c8b9dadbf6beb9fc83b381fc1a","isMergeCommit":false,"messageTitle":"Add Todo, Event and Deadline class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":96,"deletions":0}}},{"hash":"e6cf9288279d33e163bc832aa8980423e54bcaa4","isMergeCommit":false,"messageTitle":"Add support for new commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":2}}},{"hash":"1300ed6fb18ba8cd377a5c5d65f431491cae3cf6","isMergeCommit":false,"messageTitle":"Add support for subclass polymorphism","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":11}}},{"hash":"658048f7d891096bbb656264484a1de87ffd6ec2","isMergeCommit":false,"messageTitle":"Add support for ToDos, Events, Deadlines","messageBody":"-Implemented support for ToDo, Deadline, and Event.\n-Implemented polymorphism using an abstract Task class, with Todo, Deadline, and Event as subclasses.\n-Enhanced task handling with inheritance and immutability by using a copy constructor to create new instances when marking tasks as done or not done.\n-Refactored the list, mark, and unmark commands to work with the new task types and maintain immutability.\n-Added a base case for commands to catch any errors.\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":68,"deletions":33}}},{"hash":"296355e4e063b6e852d8deec013a6b3e5dfff737","isMergeCommit":false,"messageTitle":"Add support for semi-automated testing","messageBody":"-Updated the test suite to compare Duke\u0027s actual output with expected results.\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"bat":{"insertions":1,"deletions":1}}},{"hash":"3b63d422027485b3f3aededf0f9530589e6545f5","isMergeCommit":false,"messageTitle":"Add support for ANSI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"bca0afdf987bba46ce2d029921fa3befc2af3f82","isMergeCommit":false,"messageTitle":"Add ShrimpException for Exception Handling","messageBody":"-InvalidCommandException checks if the command is in the enum class.\n-MissingArgumentException checks if the argument is present in the command given.\n-InvalidArgumentException checks if the format which the argument given is valid.\n-EmptyArrayException checks if the array is empty if the user issues a \"list\" command.\n","fileTypesAndContributionMap":{"java":{"insertions":61,"deletions":0}}},{"hash":"4965d526c8deaf0ed27e12f2a06ebc3f57c9202f","isMergeCommit":false,"messageTitle":"Add support for array indexing issues","messageBody":"-Added ArrayIndexOutOfBoundException to check for indexing issues with the array.\n-Renamed InvalidArgumentException to NumberFormatException in accordance with Java documentations.\n","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":9}}},{"hash":"0b34834ad73f803c56e166bc4e8032f790baa26e","isMergeCommit":false,"messageTitle":"Add support for exception handling","messageBody":"-Implemented error handling for incorrect user inputs by introducing a custom exception class.\n-Added specific error messages for cases such as missing task descriptions and unrecognized commands.\n-Used exceptions to manage and throw errors, ensuring better code organization and improved user interaction.\n-This update enhances the chatbot\u0027s robustness by providing informative feedback on errors and guiding the user to valid inputs.\n","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":110,"deletions":91}}},{"hash":"db9b371403afc694281f1bf26bd3cd7b66f1134d","isMergeCommit":false,"messageTitle":"Add support for task deletion","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"b1ec342ec14cc601a4173407572e5d1b951f1480","isMergeCommit":false,"messageTitle":"Add support for deletion exception handling","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"10d4246f8b5369617ad1e4ca5434272793fe3de2","isMergeCommit":false,"messageTitle":"Add support for command delete","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"0a09b7289d7ff530eeb83ed5ecb5b4586454ae56","isMergeCommit":false,"messageTitle":"Add task deletion functionality to chatbot","messageBody":"-Implemented the delete command to allow users to remove tasks from their list.\n-Updated TaskList class with a deleteTask method to handle task removal by index.\n-Enhanced error handling for the delete command to manage invalid or out-of-range task numbers.\n-Ensured that the deletion feature works across all task types (ToDo, Deadline, Event).\n","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":1}}}]},{"date":"2024-08-29","commitResults":[{"hash":"4c51d59a5ef3179797074bbf106faee636a09cc0","isMergeCommit":false,"messageTitle":"Change program\u0027s file structure","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":66,"deletions":32}}},{"hash":"661ed7aff59b2af4598b06f5fc60931141c3410c","isMergeCommit":false,"messageTitle":"Update event types","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":1}}},{"hash":"63b3efc3efe5fe73c07fa27447f417dd97fc541a","isMergeCommit":false,"messageTitle":"Update constructors and getters","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":29}}},{"hash":"51d775d16c88396c09f783f42d012c932f59beb0","isMergeCommit":false,"messageTitle":"Add Storage class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":81,"deletions":0}}},{"hash":"21151419eb56e0ccad72fcaf52cfe2f9fa317137","isMergeCommit":false,"messageTitle":"Implement task saving and loading functionality","messageBody":"- Introduced a Storage class to handle saving tasks to and loading tasks\n from a file.\n- Tasks are automatically saved to ./data/shrimp.txt whenever the task\nlist changes.\n- Tasks are loaded from the file when the chatbot starts up.\n- Added error handling to manage cases where the file or directory does\nnot exist.\n- Ensured that the file paths are specified in an OS-independent manner.\n","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":4}}},{"hash":"f46ced55422e7e5bfee9b21575d535475276d8c5","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"8249e2c644d70b220cfac3cf9d1f0f35dc0465d3","isMergeCommit":false,"messageTitle":"Add a constant PATTERN for datetime parsing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":0}}},{"hash":"b5a72e9dc7f1a9ead8120c011c1af6c401847e73","isMergeCommit":false,"messageTitle":"Add InvalidDateTimeException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":0}}},{"hash":"01671e5b5d3e9b5492e506f1475c4a399ec89e0e","isMergeCommit":false,"messageTitle":"Change output to fit the datetime datatype","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":10}}},{"hash":"9fbe39ef96b0be2301b7b671bb0c26deb950e53e","isMergeCommit":false,"messageTitle":"Add support for datetime datatype","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":5}}},{"hash":"b2a9df2884c294c69768fb3fafaeb32213e161c6","isMergeCommit":false,"messageTitle":"Add support for date and time parsing in tasks","messageBody":"- Implemented functionality to parse and handle dates and times for\ntasks using `LocalDateTime`.\n- Enhanced the parser to accept various date formats, including\nsingle-digit days and months.\n- Updated the `Deadline` and `Event` classes to store dates as\n`LocalDateTime` objects instead of strings.\n- Improved error handling to provide feedback when invalid date formats\nare provided by the user.\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":4}}},{"hash":"b133dc65bedfc737d9769ecb26c2ba70f01810d3","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"RadieonAjax":{"java":628,"md":0,"fxml":0,"sh":0,"bat":1,"gradle":0,"txt":0}},"authorContributionVariance":{"RadieonAjax":37146.39},"authorDisplayNameMap":{"RadieonAjax":"CS2103T-W10-4 TEE ..HONG"}}
