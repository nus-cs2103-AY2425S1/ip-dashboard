[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rayray39"},"content":"    mainClass.set(\"janet.Janet\")","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rayray39"},"content":"    archiveBaseName \u003d \"janet\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"rayray39":2,"-":39}},{"path":"src/main/java/janet/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"public enum CommandType {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"    TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, BYE, LIST","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-24","isFullCredit":false}],"authorContributionMap":{"rayray39":5}},{"path":"src/main/java/janet/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"    private final LocalDateTime dueDate;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"    Deadline(String inputLine) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"        // inside the program this will be called","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"        super(createDeadlineCommand(inputLine).getDescription(), createDeadlineCommand(inputLine).getSymbol());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"        this.dueDate \u003d createDeadlineCommand(inputLine).dueDate;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"    Deadline(String description, String symbol, LocalDateTime dueDate) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"        // this is used inside the static method: createDeadlineCommand","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"        super(description, symbol);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"     * Returns a String array based on user\u0027s commands.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"     * First element \u003d a String of janet.Deadline\u0027s description.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"     * Second element \u003d a String of janet.Deadline\u0027s dueDate (MMM dd yyyy hh:mm a).","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rayray39"},"content":"     * input date and time format must be \"yyyy-mm-dd HH:MM\"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rayray39"},"content":"     * @param commandDetails a String[], where each element corresponds to a word of the user input.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rayray39"},"content":"     * @return a String[], where first elem \u003d janet.Deadline.description, second elem \u003d janet.Deadline.dueDate.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rayray39"},"content":"    public static String[] findDeadlineDetails(String[] commandDetails) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rayray39"},"content":"        int indexOfBy \u003d 0;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rayray39"},"content":"        // first word in commandDetails must be deadline, so start from the i\u003d1 word","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rayray39"},"content":"        for (int i \u003d 1; i \u003c commandDetails.length; i++) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rayray39"},"content":"            if (commandDetails[i].equals(\"/by\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rayray39"},"content":"                indexOfBy \u003d i;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rayray39"},"content":"        // get description of janet.Deadline","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rayray39"},"content":"        String[] descriptionArray \u003d Arrays.copyOfRange(commandDetails, 1, indexOfBy);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rayray39"},"content":"        String description \u003d String.join(\" \", descriptionArray);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rayray39"},"content":"        // get due date","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rayray39"},"content":"        String inputDate  \u003d commandDetails[commandDetails.length - 2];    // yyyy-mm-dd","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rayray39"},"content":"        LocalDate date \u003d LocalDate.parse(inputDate);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rayray39"},"content":"        String outputDate \u003d date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rayray39"},"content":"        // get time","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rayray39"},"content":"        String inputTime \u003d commandDetails[commandDetails.length - 1];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rayray39"},"content":"        LocalTime time \u003d LocalTime.parse(inputTime);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rayray39"},"content":"        String outputTime \u003d time.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rayray39"},"content":"        String dueDate \u003d outputDate + \" \" + outputTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rayray39"},"content":"        return new String[]{description, dueDate};","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rayray39"},"content":"    public static Deadline createDeadlineCommand(String inputLine) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rayray39"},"content":"        String[] commandDetails \u003d inputLine.split(\" \");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rayray39"},"content":"        String[] deadlineDetails \u003d findDeadlineDetails(commandDetails);     // (description, MMM dd yyyy hh:mm a)","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rayray39"},"content":"        String dateAndTimeString \u003d deadlineDetails[1];    // MMM dd yyyy hh:mm a","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rayray39"},"content":"        DateTimeFormatter stringToDateTime \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rayray39"},"content":"        LocalDateTime dateAndTime \u003d LocalDateTime.parse(dateAndTimeString, stringToDateTime);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rayray39"},"content":"        return new Deadline(deadlineDetails[0], \"D\", dateAndTime);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rayray39"},"content":"     * @return task\u0027s dueDate (deadline)","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rayray39"},"content":"    public String getDueDate() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rayray39"},"content":"        String time \u003d this.dueDate.format(DateTimeFormatter.ofPattern(\"HH:mm a\"));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rayray39"},"content":"        String date \u003d this.dueDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rayray39"},"content":"        return date + \" \" + time;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rayray39"},"content":"    @Override","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rayray39"},"content":"    public String toString() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rayray39"},"content":"        return super.toString() + \" \" + String.format(\"(by: %s)\", this.getDueDate());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"rayray39":82}},{"path":"src/main/java/janet/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"    private final LocalDateTime startDate;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"    private final LocalDateTime endDate;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"    Event(String inputLine) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"        // inside the program this will be called","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"        super(createEventCommand(inputLine).getDescription(), createEventCommand(inputLine).getSymbol());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"        this.startDate \u003d createEventCommand(inputLine).startDate;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"        this.endDate \u003d createEventCommand(inputLine).endDate;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"    Event(String description, String symbol, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"        // this is used inside the static method: createEventCommand","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"        super(description, symbol);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rayray39"},"content":"     * Returns a String array based on user\u0027s commands.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rayray39"},"content":"     * First element \u003d a String of janet.Event\u0027s description.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rayray39"},"content":"     * Second element \u003d a String of janet.Event\u0027s startDate (MMM dd yyyy hh:mm a).","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rayray39"},"content":"     * Third element \u003d a String of janet.Event\u0027s endDate (MMM dd yyyy hh:mm a).","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rayray39"},"content":"     * input date and time format must be \"yyyy-mm-dd HH:MM\"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rayray39"},"content":"     * @param commandDetails a String[], where each element corresponds to a word of the user input.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rayray39"},"content":"     * @return a String[], where first elem \u003d janet.Event.description, second elem \u003d janet.Event.startDate, third elem \u003d janet.Event.endDate.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rayray39"},"content":"    public static String[] findEventDetails(String[] commandDetails) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rayray39"},"content":"        int indexOfFrom \u003d 0;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rayray39"},"content":"        int indexOfTo \u003d 0;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rayray39"},"content":"        // first word in commandDetails must be event, so start from i\u003d1 word","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rayray39"},"content":"        for (int i \u003d 1; i \u003c commandDetails.length; i++) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rayray39"},"content":"            if (commandDetails[i].equals(\"/from\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rayray39"},"content":"                indexOfFrom \u003d i;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rayray39"},"content":"            if (commandDetails[i].equals(\"/to\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rayray39"},"content":"                indexOfTo \u003d i;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rayray39"},"content":"        // get the description","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rayray39"},"content":"        String[] descriptionArray \u003d Arrays.copyOfRange(commandDetails, 1, indexOfFrom);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rayray39"},"content":"        String description \u003d String.join(\" \", descriptionArray);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rayray39"},"content":"        // get the start date (yyyy-mm-dd)","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rayray39"},"content":"        LocalDate startDate \u003d LocalDate.parse(commandDetails[indexOfFrom + 1]);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rayray39"},"content":"        String outputStartDate \u003d startDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rayray39"},"content":"        // get the start time (hh:mm, 24hr format)","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rayray39"},"content":"        LocalTime inputStartTime \u003d LocalTime.parse(commandDetails[indexOfFrom + 2]);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rayray39"},"content":"        String outputStartTime \u003d inputStartTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rayray39"},"content":"        String startDateAndTime \u003d outputStartDate + \" \" + outputStartTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rayray39"},"content":"        // get the end date (yyyy-mm-dd)","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rayray39"},"content":"        LocalDate endDate \u003d LocalDate.parse(commandDetails[indexOfTo + 1]);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rayray39"},"content":"        String outputEndDate \u003d endDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rayray39"},"content":"        // get the end time","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rayray39"},"content":"        LocalTime inputEndTime \u003d LocalTime.parse(commandDetails[indexOfTo + 2]);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rayray39"},"content":"        String outputEndTime \u003d inputEndTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rayray39"},"content":"        String endDateAndTime \u003d outputEndDate + \" \" + outputEndTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rayray39"},"content":"        return new String[]{description, startDateAndTime, endDateAndTime};","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rayray39"},"content":"    public static Event createEventCommand(String inputLine) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rayray39"},"content":"        String[] commandDetails \u003d inputLine.split(\" \");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rayray39"},"content":"        String[] eventDetails \u003d findEventDetails(commandDetails);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rayray39"},"content":"        DateTimeFormatter stringToDateTime \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rayray39"},"content":"        String startDateAndTimeString \u003d eventDetails[1];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rayray39"},"content":"        LocalDateTime startDateAndTime \u003d LocalDateTime.parse(startDateAndTimeString, stringToDateTime);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rayray39"},"content":"        String endDateAndTimeString \u003d eventDetails[2];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rayray39"},"content":"        LocalDateTime endDateAndTime \u003d LocalDateTime.parse(endDateAndTimeString, stringToDateTime);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rayray39"},"content":"        return new Event(eventDetails[0], \"E\", startDateAndTime, endDateAndTime);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rayray39"},"content":"     * @return task\u0027s startDate","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rayray39"},"content":"    public String getStartDate() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rayray39"},"content":"        String time \u003d this.startDate.format(DateTimeFormatter.ofPattern(\"HH:mm a\"));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rayray39"},"content":"        String date \u003d this.startDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rayray39"},"content":"        return date + \" \" + time;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rayray39"},"content":"     * @return task\u0027s endDate","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rayray39"},"content":"    public String getEndDate() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rayray39"},"content":"        String time \u003d this.endDate.format(DateTimeFormatter.ofPattern(\"HH:mm a\"));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rayray39"},"content":"        String date \u003d this.endDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rayray39"},"content":"        return date + \" \" + time;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rayray39"},"content":"    @Override","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rayray39"},"content":"    public String toString() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rayray39"},"content":"        return super.toString() + \" \" + String.format(\"(from: %s to: %s)\", this.getStartDate(), this.getEndDate());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"rayray39":110}},{"path":"src/main/java/janet/Janet.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"public class Janet {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"    private final Ui ui;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"    private final Storage storage;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"    Janet(String filePath) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"            tasks \u003d new TaskList(storage.textFileToArrayList());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"        } catch (JanetException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"    public void run() throws IOException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"        boolean hasTypedBye \u003d false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"        while (input.hasNext()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"            String userCommand \u003d input.nextLine();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rayray39"},"content":"            String[] commandDetails \u003d Parser.getCommandDetails(userCommand);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rayray39"},"content":"            try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rayray39"},"content":"                // validateCommand and checkInaccurateCommand will throw out a janet.JanetException","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rayray39"},"content":"                Parser.validateCommand(commandDetails, tasks.getNumberOfTasks());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rayray39"},"content":"                Parser.checkInaccurateCommand(commandDetails);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rayray39"},"content":"                CommandType commandType \u003d Parser.getCommand(commandDetails);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rayray39"},"content":"                switch (commandType) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rayray39"},"content":"                case BYE:","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rayray39"},"content":"                    ui.exitMessage();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rayray39"},"content":"                    hasTypedBye \u003d true;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rayray39"},"content":"                    break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rayray39"},"content":"                case LIST:","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rayray39"},"content":"                    ui.showTasks(tasks);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rayray39"},"content":"                    break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rayray39"},"content":"                case MARK:","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rayray39"},"content":"                    String markedResult \u003d tasks.markAsDone(Integer.parseInt(commandDetails[1]));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rayray39"},"content":"                    ui.showMarkedMessage(markedResult, tasks.getTask(Integer.parseInt(commandDetails[1]) - 1));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rayray39"},"content":"                    break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rayray39"},"content":"                case UNMARK:","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rayray39"},"content":"                    String unmarkResult \u003d tasks.unmark(Integer.parseInt(commandDetails[1]));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rayray39"},"content":"                    ui.showUnmarkedMessage(unmarkResult, tasks.getTask(Integer.parseInt(commandDetails[1]) - 1));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rayray39"},"content":"                    break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rayray39"},"content":"                case DELETE:","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rayray39"},"content":"                    ui.showDeleteTaskMessage(tasks.getTask(Integer.parseInt(commandDetails[1]) - 1),","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rayray39"},"content":"                            tasks.getNumberOfTasks() - 1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rayray39"},"content":"                    tasks.deleteTask(Integer.parseInt(commandDetails[1]));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rayray39"},"content":"                    break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rayray39"},"content":"                case TODO:","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rayray39"},"content":"                    Task todo \u003d new ToDo(userCommand);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rayray39"},"content":"                    tasks.addTaskToList(todo);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rayray39"},"content":"                    ui.showSuccessfulTaskAddition(todo, tasks.getNumberOfTasks());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rayray39"},"content":"                    break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rayray39"},"content":"                case DEADLINE:","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rayray39"},"content":"                    Task deadline \u003d new Deadline(userCommand);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rayray39"},"content":"                    tasks.addTaskToList(deadline);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rayray39"},"content":"                    ui.showSuccessfulTaskAddition(deadline, tasks.getNumberOfTasks());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rayray39"},"content":"                    break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rayray39"},"content":"                case EVENT:","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rayray39"},"content":"                    Task event \u003d new Event(userCommand);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rayray39"},"content":"                    tasks.addTaskToList(event);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rayray39"},"content":"                    ui.showSuccessfulTaskAddition(event, tasks.getNumberOfTasks());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rayray39"},"content":"                    break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rayray39"},"content":"                }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rayray39"},"content":"                if (hasTypedBye) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rayray39"},"content":"                    break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rayray39"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rayray39"},"content":"            } catch (JanetException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rayray39"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rayray39"},"content":"        storage.saveToJanetTextFile(tasks.getListOfTasks());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rayray39"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rayray39"},"content":"        new Janet(\"janet.txt\").run();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"rayray39":87}},{"path":"src/main/java/janet/JanetException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"public class JanetException extends Exception {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"    public JanetException(String errorMessage) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"        super(errorMessage);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"rayray39":8}},{"path":"src/main/java/janet/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"public class Parser {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"    public static CommandType getCommand(String[] commandDetails) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"        return CommandType.valueOf(commandDetails[0].toUpperCase());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"    public static String[] getCommandDetails(String inputLine) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"        return inputLine.split(\" \");   // an array containing each word of the command","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"     * Throws janet.JanetException when,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"     * 1. mark/unmark/delete X, where X cannot be parsed into an Integer.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"     * 2. mark/unmark/delete X, where X can be parsed into an Integer but, is \u003c\u003d 0 or \u003e number of tasks in list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"     * @param commandDetails a String[], where each element corresponds to a word of the user input.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"     * @throws JanetException a custom exception class specific to Janet","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"    public static void validateCommand(String[] commandDetails, int numOfTasksInList) throws JanetException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"        // when mark/unmark/delete X, where X is too big (out or bounds) OR \u003c\u003d 0 OR when the list is empty.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"        if (commandDetails.length \u003d\u003d 0) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"            throw new JanetException(\"Please do not leave any empty lines!\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"        if ((commandDetails[0].equals(\"mark\") || commandDetails[0].equals(\"unmark\") ||","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"                commandDetails[0].equals(\"delete\")) \u0026\u0026 commandDetails.length \u003e 1) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rayray39"},"content":"            // when the command is mark/unmark X OR delete, where X is an invalid num (too big or \u003c\u003d 0)","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rayray39"},"content":"            int taskNumber;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rayray39"},"content":"            try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rayray39"},"content":"                taskNumber \u003d Integer.parseInt(commandDetails[1]);   // commandDetails[1] could be a string","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rayray39"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rayray39"},"content":"                throw new JanetException(\"WHOOPS! Please provide an integer value task number!\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rayray39"},"content":"            if (taskNumber \u003c\u003d 0) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rayray39"},"content":"                // still need to handle case when taskNumber \u003e\u003d taskIndex + 1 (unable to access janet.getTaskIndex())","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rayray39"},"content":"                throw new JanetException(\"WHOOPS! Your task number cannot be negative or 0!\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rayray39"},"content":"            } else if (taskNumber \u003e numOfTasksInList) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rayray39"},"content":"                throw new JanetException(\"WHOOPS! You don\u0027t have a task of this number!\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rayray39"},"content":"     * Throws janet.JanetException when,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rayray39"},"content":"     * 1. first word in command is not todo/event/deadline/mark/unmark/delete.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rayray39"},"content":"     * 2. mark/unmark/delete and the task number is not specified.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rayray39"},"content":"     * 3. todo/event/deadline and the description is not stated.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rayray39"},"content":"     * @param commandDetails a String[], where each element corresponds to a word of the user input.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rayray39"},"content":"     * @throws JanetException a custom exception class specific to Janet","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rayray39"},"content":"    public static void checkInaccurateCommand(String[] commandDetails) throws JanetException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rayray39"},"content":"        // checks for inaccurate commands 1. rubbish, 2. without any task description, 3. no number for mark/unmark/delete.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rayray39"},"content":"        if (!(commandDetails[0].equals(\"todo\") || commandDetails[0].equals(\"deadline\") || commandDetails[0].equals(\"event\")","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rayray39"},"content":"                || commandDetails[0].equals(\"mark\") || commandDetails[0].equals(\"unmark\") || commandDetails[0].equals(\"delete\") ||","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rayray39"},"content":"                commandDetails[0].equals(\"bye\") || commandDetails[0].equals(\"list\"))) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rayray39"},"content":"            // when the command is gibberish and NOT one of the commands (todo, deadline, event, mark, unmark, delete)","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rayray39"},"content":"            throw new JanetException(\"WHOOPS! I\u0027m only a chatbot, so I don\u0027t know what that means...\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rayray39"},"content":"        } else if (commandDetails.length \u003d\u003d 1 \u0026\u0026 !(commandDetails[0].equals(\"bye\") || commandDetails[0].equals(\"list\"))) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rayray39"},"content":"            if (commandDetails[0].equals(\"mark\") || commandDetails[0].equals(\"unmark\") || commandDetails[0].equals(\"delete\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rayray39"},"content":"                // when the command is either (mark, unmark, delete), BUT there is no task specified","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rayray39"},"content":"                throw new JanetException(\"WHOOPS! I don\u0027t know which task you are referring to...\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rayray39"},"content":"            } else {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rayray39"},"content":"                // when the command is either (todo, deadline, todo), BUT there is no task description","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rayray39"},"content":"                throw new JanetException(\"WHOOPS! You can\u0027t leave out the task\u0027s description!\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"rayray39":73}},{"path":"src/main/java/janet/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"public class Storage {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"    private final String filePath;  // \"./janet.txt\"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"    Storage(String filePath) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"     * Saves the elements in Janet\u0027s listOfTasks into a text file (janet.txt).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"     * Each janet.Task object is saved in the format,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"     * symbol | isDone | description | startDate (if deadline/event)-endDate (if event)","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"     * @param listOfTasks the list of tasks (ArrayList\u003cjanet.Task\u003e) that Janet has.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"     * @throws IOException","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"    public void saveToJanetTextFile(ArrayList\u003cTask\u003e listOfTasks) throws IOException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"        // using FileWriter to write text into a text file (janet.txt).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"        FileWriter fileWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rayray39"},"content":"        for (Task task : listOfTasks) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rayray39"},"content":"            String marked \u003d (task.isDone()) ? \"1\" : \"0\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rayray39"},"content":"            String entry \u003d task.getSymbol() + \" | \" + marked + \" | \" + task.getDescription();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rayray39"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rayray39"},"content":"                entry \u003d entry + \" | \" + ((Deadline) task).getDueDate();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rayray39"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rayray39"},"content":"                entry \u003d entry + \" | \" + ((Event) task).getStartDate() + \"-\" + ((Event) task).getEndDate();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rayray39"},"content":"            fileWriter.write(entry + \"\\n\");     // write the entry into the text file and save it","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rayray39"},"content":"        fileWriter.close();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rayray39"},"content":"     * Returns an ArrayList\u003cjanet.Task\u003e listOfTasks,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rayray39"},"content":"     * each janet.Task object is created based on each line read from janet.txt.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rayray39"},"content":"     * reads the content in janet.txt and loads them into an ArrayList\u003cjanet.Task\u003e, returns this ArrayList\u003cjanet.Task\u003e","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rayray39"},"content":"     * @return an ArrayList\u003cjanet.Task\u003e listOfTasks, that contains janet.Task objects","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rayray39"},"content":"    public ArrayList\u003cTask\u003e textFileToArrayList() throws JanetException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rayray39"},"content":"        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rayray39"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rayray39"},"content":"            FileReader fileReader \u003d new FileReader(this.filePath);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rayray39"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rayray39"},"content":"            String line;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rayray39"},"content":"            while ((line \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rayray39"},"content":"                Task task \u003d null;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rayray39"},"content":"                char taskSymbol \u003d line.charAt(0);   // get task symbol","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rayray39"},"content":"                String done \u003d String.valueOf(line.charAt(4));   // get mark/unmark value","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rayray39"},"content":"                boolean isDone \u003d (done.equals(\"1\"));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rayray39"},"content":"                switch (taskSymbol) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rayray39"},"content":"                case \u0027T\u0027 :","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rayray39"},"content":"                    // todo object","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rayray39"},"content":"                    task \u003d createToDoFromJanetTextFile(line, isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rayray39"},"content":"                    break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rayray39"},"content":"                case \u0027D\u0027 :","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rayray39"},"content":"                    // deadline object","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rayray39"},"content":"                    task \u003d createDeadlineFromJanetTextFile(line, isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rayray39"},"content":"                    break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rayray39"},"content":"                case \u0027E\u0027 :","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rayray39"},"content":"                    // event object","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rayray39"},"content":"                    task \u003d createEventFromJanetTextFile(line, isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rayray39"},"content":"                    break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rayray39"},"content":"                }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rayray39"},"content":"                listOfTasks.add(task);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rayray39"},"content":"            fileReader.close();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rayray39"},"content":"            bufferedReader.close();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rayray39"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rayray39"},"content":"            throw new JanetException(\"\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rayray39"},"content":"            // System.out.println(\"Error reading file\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rayray39"},"content":"        return listOfTasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rayray39"},"content":"     * Returns a janet.ToDo object,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rayray39"},"content":"     * based on a line, containing information about a janet.ToDo, read from janet.txt.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rayray39"},"content":"     * @param line a line of text from the janet.txt file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rayray39"},"content":"     * @param isDone isDone \u003d true if task has been marked else false.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rayray39"},"content":"     * @return a new janet.ToDo object created using the parameters.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rayray39"},"content":"    public ToDo createToDoFromJanetTextFile(String line, boolean isDone) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rayray39"},"content":"        // get description from text file","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rayray39"},"content":"        String toDoDescription \u003d line.substring(8);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rayray39"},"content":"        ToDo task \u003d new ToDo(toDoDescription, \"T\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rayray39"},"content":"        task.setDone(isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rayray39"},"content":"        return task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rayray39"},"content":"     * Returns a janet.Deadline object,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rayray39"},"content":"     * based on a line, containing information about a janet.Deadline, read from janet.txt.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rayray39"},"content":"     * @param line a line of text from the janet.txt file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rayray39"},"content":"     * @param isDone isDone \u003d true if task has been marked else false.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rayray39"},"content":"     * @return a new janet.Deadline object created using the parameters.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rayray39"},"content":"    public Deadline createDeadlineFromJanetTextFile(String line, boolean isDone) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rayray39"},"content":"        // get description from text file","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rayray39"},"content":"        String deadlineDescription \u003d line.substring(8, line.indexOf(\"|\", 8) - 1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rayray39"},"content":"        // get the due date and convert into LocalDateTime","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rayray39"},"content":"        String dueDateAndTime \u003d line.substring(line.indexOf(\"|\", 8) + 2);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"rayray39"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm a\");   // format String dueDateAndTime is in","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"rayray39"},"content":"        LocalDateTime dueDate \u003d LocalDateTime.parse(dueDateAndTime, formatter);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"rayray39"},"content":"        Deadline deadline \u003d new Deadline(deadlineDescription, \"D\", dueDate);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"rayray39"},"content":"        deadline.setDone(isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"rayray39"},"content":"        return deadline;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"rayray39"},"content":"     * Returns an janet.Event object,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"rayray39"},"content":"     * based on a line, containing information about an janet.Event, read from janet.txt.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"rayray39"},"content":"     * @param line a line of text from the janet.txt file","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"rayray39"},"content":"     * @param isDone isDone \u003d true if task has been marked else false.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"rayray39"},"content":"     * @return a new janet.Event object created using the parameters.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"rayray39"},"content":"    public Event createEventFromJanetTextFile(String line, boolean isDone) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"rayray39"},"content":"        // get description from text file","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"rayray39"},"content":"        String eventDescription \u003d line.substring(8, line.indexOf(\"|\", 8) - 1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"rayray39"},"content":"        // get startDate and convert into LocalDateTime","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"rayray39"},"content":"        String startDateAndTime \u003d line.substring(line.indexOf(\"|\", 8) + 2, line.indexOf(\"-\", line.indexOf(\"|\", 8)));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"rayray39"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm a\");   // format String dueDateAndTime is in","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"rayray39"},"content":"        LocalDateTime startDate \u003d LocalDateTime.parse(startDateAndTime, formatter);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"rayray39"},"content":"        // get the endDate and convert into LocalDateTime","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"rayray39"},"content":"        String endDateAndTime \u003d line.substring(line.indexOf(\"-\", line.indexOf(\"|\", 8)) + 1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"rayray39"},"content":"        LocalDateTime endDate \u003d LocalDateTime.parse(endDateAndTime, formatter);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"rayray39"},"content":"        Event event \u003d new Event(eventDescription, \"E\", startDate, endDate);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"rayray39"},"content":"        event.setDone(isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"rayray39"},"content":"        return event;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"rayray39":155}},{"path":"src/main/java/janet/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"public class Task {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"    private final String description;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"    private final String symbol;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"    private boolean done;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"    public Task(String description, String symbol) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"        this.done \u003d false;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"        this.symbol \u003d symbol;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"     * @return task\u0027s description","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"        return this.description;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"     * @return task\u0027s symbol","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"    public String getSymbol() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"        return this.symbol;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rayray39"},"content":"     * @return the value of this.done, indicating whether the task is done (marked) or not done (unmarked)","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rayray39"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rayray39"},"content":"        return this.done;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rayray39"},"content":"     * @param newStatus assign newStatus (true/false) to this.done","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rayray39"},"content":"    public void setDone(boolean newStatus) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rayray39"},"content":"        this.done \u003d newStatus;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rayray39"},"content":"    @Override","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rayray39"},"content":"    public String toString() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rayray39"},"content":"        if (this.done) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rayray39"},"content":"            return String.format(\"[%s][X] %s\", this.symbol, this.description);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rayray39"},"content":"        return String.format(\"[%s][ ] %s\", this.symbol, this.description);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"rayray39":49}},{"path":"src/main/java/janet/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"public class TaskList {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"    // replaces the ArrayList\u003cjanet.Task\u003e listOfTasks inside Janet","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"    private final ArrayList\u003cTask\u003e listOfTasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"    TaskList() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"        listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"    TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"        // overloaded constructor to load the tasks created from janet.txt","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"        this.listOfTasks \u003d tasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"        return this.listOfTasks.size();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"        return this.listOfTasks.isEmpty();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rayray39"},"content":"    public ArrayList\u003cTask\u003e getListOfTasks() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rayray39"},"content":"        return this.listOfTasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rayray39"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rayray39"},"content":"        return this.listOfTasks.get(index);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rayray39"},"content":"     * @param task a janet.Task object that is to be added into the listOfTasks","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rayray39"},"content":"    public void addTaskToList(Task task) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rayray39"},"content":"        this.listOfTasks.add(task);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rayray39"},"content":"     * Level 3 - mark as done","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rayray39"},"content":"     * marks the desired task as done, by setting the boolean value of janet.Task.done \u003d true.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rayray39"},"content":"     * @param desiredTaskNum specifies the index of the task, inside listOfTasks, + 1.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rayray39"},"content":"     * @return a String message to indicate successful marking of desired task as done (done \u003d true).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rayray39"},"content":"    public String markAsDone(int desiredTaskNum) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rayray39"},"content":"        // (desiredTaskNum - 1) is the index of the task, inside listOfTasks, that needs to be marked as done","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rayray39"},"content":"        Task desiredTask \u003d listOfTasks.get(desiredTaskNum - 1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rayray39"},"content":"        if (desiredTask.isDone()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rayray39"},"content":"            // the desired task is already marked as done","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rayray39"},"content":"            return \"already marked\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rayray39"},"content":"        desiredTask.setDone(true);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rayray39"},"content":"        return \"marked\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rayray39"},"content":"     * Level 3 - mark as done (unmark)","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rayray39"},"content":"     * marks the desired task as NOT done, by setting the boolean value of janet.Task.done \u003d false.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rayray39"},"content":"     * @param desiredTaskNum specifies the index of the task, inside listOfTasks, + 1.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rayray39"},"content":"     * @return a String message to indicate successful unmarking of desired task (done \u003d false).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rayray39"},"content":"    public String unmark(int desiredTaskNum) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rayray39"},"content":"        // (desiredTaskNum - 1) is the index of the task, inside listOfTasks, that needs to be unmarked","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rayray39"},"content":"        Task desiredTask \u003d listOfTasks.get(desiredTaskNum - 1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rayray39"},"content":"        if (!desiredTask.isDone()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rayray39"},"content":"            // desired task is already marked as NOT done (unmarked)","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rayray39"},"content":"            return \"already unmarked\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rayray39"},"content":"        desiredTask.setDone(false);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rayray39"},"content":"        return \"unmarked\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rayray39"},"content":"     * Level 6 - delete task","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rayray39"},"content":"     * @param desiredTaskNum specifies the index of the task, inside listOfTasks, + 1.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rayray39"},"content":"     * @return a String message to indicate successful deletion of the desired task from listOfTasks.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rayray39"},"content":"    public void deleteTask(int desiredTaskNum) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rayray39"},"content":"        Task desiredTask \u003d listOfTasks.get(desiredTaskNum - 1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rayray39"},"content":"        listOfTasks.remove(desiredTask);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rayray39"},"content":"        // return \"task deleted\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"rayray39":94}},{"path":"src/main/java/janet/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"    ToDo(String inputLine) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"        // inside the program this will be called","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"        super(createToDo(inputLine).getDescription(), createToDo(inputLine).getSymbol());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"    ToDo(String description, String symbol) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"        // this is used inside the static method: createToDo","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"        super(description, symbol);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"    public static ToDo createToDo(String inputLine) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"        // get the todo description and create a new Todo object","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"        String[] commandDetails \u003d inputLine.split(\" \");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"        String[] todoItem \u003d Arrays.copyOfRange(commandDetails, 1, commandDetails.length);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"        String todoDescription \u003d String.join(\" \", todoItem);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"        return new ToDo(todoDescription, \"T\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"rayray39":24}},{"path":"src/main/java/janet/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"public class Ui {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"    // handles the interaction with the user","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"    // receives inputs (readline) and printing outputs to the command line","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"    private static final String horizontalLine \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"    public void showLine() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"        System.out.println(horizontalLine + \"\\nHello! I\u0027m Janet\\n\" + \"What can I do for you?\\n\" + horizontalLine);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"    public void exitMessage() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\\n\" + horizontalLine);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"        System.out.println(\"janet.txt not found! Creating janet.txt for you...\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"    public void showSuccessfulTaskAddition(Task task, int numberOfTasks) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"        // when janet.TaskList.addTaskToList is called (addition of task into listOfTasks)","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"        // task \u003d newly added janet.Task object","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"        System.out.println(horizontalLine + \"\\nGot it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rayray39"},"content":"                \"  \" + task + \"\\n\" + String.format(\"Now you have %d tasks in the list\\n\", numberOfTasks) + horizontalLine);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rayray39"},"content":"    public void showTasks(TaskList taskList) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rayray39"},"content":"        // show all tasks inside the list (when user types in \u0027list\u0027)","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rayray39"},"content":"        String currentList \u003d horizontalLine + \"\\nHere are the tasks in your list:\\n\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rayray39"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rayray39"},"content":"            // empty listOfTasks","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rayray39"},"content":"            System.out.println(currentList + \"*** Current list is empty ***\\n\" + horizontalLine);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rayray39"},"content":"        } else {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rayray39"},"content":"            for (int i \u003d 0; i \u003c taskList.getNumberOfTasks(); i++) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rayray39"},"content":"                if (i \u003d\u003d taskList.getNumberOfTasks() - 1) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rayray39"},"content":"                    currentList +\u003d (i+1) + \". \" + taskList.getListOfTasks().get(i) + \"\\n\" + horizontalLine;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rayray39"},"content":"                    break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rayray39"},"content":"                }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rayray39"},"content":"                currentList +\u003d (i+1) + \". \" + taskList.getListOfTasks().get(i) + \"\\n\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rayray39"},"content":"            System.out.println(currentList);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rayray39"},"content":"    public void showMarkedMessage(String markResult, Task task) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rayray39"},"content":"        // (desiredTaskNum - 1) is the index of the task, inside listOfTasks, that needs to be marked as done","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rayray39"},"content":"        // task \u003d newly marked janet.Task object","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rayray39"},"content":"        if (markResult.equals(\"already marked\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rayray39"},"content":"            // the desired task is already marked as done","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rayray39"},"content":"            System.out.println(horizontalLine + \"\\nThis task is already done!\\n\" + horizontalLine);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rayray39"},"content":"        } else {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rayray39"},"content":"            System.out.println(horizontalLine + \"\\nNice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rayray39"},"content":"                    String.format(\"  %s\", task + \"\\n\" + horizontalLine));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rayray39"},"content":"    public void showUnmarkedMessage(String markResult, Task task) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rayray39"},"content":"        // (desiredTaskNum - 1) is the index of the task, inside listOfTasks, that needs to be unmarked","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rayray39"},"content":"        // task \u003d newly unmarked janet.Task object","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rayray39"},"content":"        if (markResult.equals(\"already unmarked\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rayray39"},"content":"            // the desired task is already marked as done","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rayray39"},"content":"            System.out.println(horizontalLine + \"\\nThis task is not already done!\\n\" + horizontalLine);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rayray39"},"content":"        } else {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rayray39"},"content":"            System.out.println(horizontalLine + \"\\nOK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rayray39"},"content":"                    String.format(\"  %s\", task + \"\\n\" + horizontalLine));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rayray39"},"content":"    public void showDeleteTaskMessage(Task deletedTask, int numberOfTasks) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rayray39"},"content":"        System.out.println(horizontalLine + \"\\nNoted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rayray39"},"content":"                String.format(\"    %s\\nNow you have %d tasks in your list\\n\",","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rayray39"},"content":"                        deletedTask, numberOfTasks) + horizontalLine);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"rayray39":79}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"list","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"todo go for a run","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"list","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"mark 1","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"mark 2","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"list","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"blah blah","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"mark 7","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"delete 0","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"bye","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"rayray39":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"rayray39":1,"-":20}}]
